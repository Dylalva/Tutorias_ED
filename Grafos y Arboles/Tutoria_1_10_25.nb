(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 14.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1124543,      22576]
NotebookOptionsPosition[   1106997,      22315]
NotebookOutlinePosition[   1107468,      22333]
CellTagsIndexPosition[   1107425,      22330]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"<<", "VilCretas`"}]], "Input",
 CellChangeTimes->{{3.96832416181769*^9, 3.9683241662814837`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"02bb9491-b566-9549-ac09-4baeef3c3fd5"],

Cell[BoxData[
 StyleBox["\<\"VilCretas est\[AAcute] disponible.\"\>",
  StripOnInput->False,
  LineColor->RGBColor[0, 0, 1],
  FrontFaceColor->RGBColor[0, 0, 1],
  BackFaceColor->RGBColor[0, 0, 1],
  GraphicsColor->RGBColor[0, 0, 1],
  FontWeight->Bold,
  FontColor->RGBColor[0, 0, 1]]], "Print",
 CellChangeTimes->{3.968324167820673*^9, 3.9683527867505417`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[1]:=",ExpressionUUID->"225376ba-816d-b248-be7d-310e05647093"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GrafoString", "[", "\"\<Bienvenido\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.968324170826872*^9, 3.9683241832335434`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"ecbdc175-545e-ac49-9a98-4597f3b37292"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[CompressedData["
1:eJxNnHncV2P6x+9zTpGJsUT4yTqLmYwtikralYpSkqVSQnbKlkqKVEplCYPI
/GxjjYw9pHj8hMKUkV32JVtMZPvd7+d6P6/HH+d1+n6fc+7luj7X5/pc931/
2/6oU/ueUqaUnlovJe6D83VZvlrkDwPy/acqpZPzfVW+Oufr7/nqnq8X8jUm
X0fm6/F8vZOvnvk6LD8/I9/HFSmdku9N8uep+b5h/jwp37vme5983yLfJ+b7
tPz3B2z3QvrP/Z6T74fme498vzJfF+Rr//x8t3xflL8fku8/pmjnzXxdk6+t
8/fT831Kbm9Wvh9QxfNz8vdH5/uD+f0r8v0629uBtvJ1Vv5+uOO+Id83qGJu
H+fvp+X79Pz+Afk+NF8352tl/n58vm+Zr4PoP//9/BR9YI9V+f1LeS8/d1K+
Ty7Cbp3yc6fSRhX97V/F3HZ13Mxhv3y11o4XVWHX3vk6O1975XYuyfd7ypgf
/eKXl1LYo2f++xH5/o8U86Dt4/K1ILdzfb7/u4zvlpQx/xsc7/7Or2u+nnD+
zKtJ/v50/X9Mvlf5viDf2+Xr7nydnj/Pz/d18/2EfF+jvYZVMf5fnecY5wme
Tsz3tlXMZ06+HqW9/N7sfF+cop9JZdi3VX7uYPHBc5/YLjhh3h+kwMdfU+Bo
bX5vXL5/UwSOmN9R+XpY/z4hHk4RA9vka2C+Zqbw0/HO98cixntjvibka3wV
43m+jPamVzHeA/M1Nl+/r6Id4gYc97Sds3M7p+X79vrikyLiincZ55/F7wNF
xMvIfO+f79eWMe9d9evkMuzVJf/9+HzfBRvn639S4Ll97v/MfH+mDDtckD9P
wc5l+L9Zvk8GW1XY7vXczqB8b5Q/P5vvF5fht9H5+375/mKK8YDL9trp2BTY
v8j3wCu2JJ5PLMKG+Pti/FaE7c5Igfde+fvz8v0N26UP8DWgCgyAi175vlO+
HgED+fvLU8QRdu2bAmddysDeD0X49pUU7S7Mn/fP96n5+cfopwhcXJ0C9y87
bz4/nK8tyrDfjCq+u9f+GOf/Yk/jqoefl1fR79/KiBHijHZ31v/ExQj9ynzP
Ny420U5Nq/B7yxQ8cIw8sFkV8fCD/u+Sr7n56l4FDham8OseRTw/33kfX0U7
S8Tnrdqtu/ZaUES/xBN+b1kEj+9kfHQRu+fk55/M9385juZl+Bn+wB6LjRfi
ET7rpL+fyu2dlYIXDgV3RbS7UB67VLzRHv7FhvApcTkq3xsY/y/I738Up0eK
o/f0+dL83FX5/m2+H5KCG7DTzj7fuIgxnVNEvHxh3llexPuP61fePTdfTxvH
DRvEeIeWgWfsCj5aa/9r9H878cyc4Mul+To8xZzh3zPye4fxN+OOPIL9tk2R
H79LYbcDxS/vjxE/+GNLbbOdvLKwCn8eJ1/+IV//FHc8Tz4a6zyI329S4K5p
vu7P1yvy5ijz9cQyxvp0EZ9vN3/QJ/ZbUkTc3Z4CV/eV4XviDIysrCL+O5TB
Y6v1+yh547kU8ya/zHTeYLaxOJwqjk8twl6XlGHn/cqIO/gSfMB/jGlF/n7f
fN+zCv7El0N9D7yQd7HfvuqJ9uqLcfnz0/i5jLiA7+l/RBH59E79yLjIC3Or
wOFB2hm74iNyQk2K+B+d77PL4Bcw2sf7A86XdnqoY1pXYZ9+ZfDuekX4cS/t
SZzCN085vseM4wXqiCPlobG228h8y7zJ5y9rF7DG3/uXka9Wp4jPC40b8sG9
+WqSgg+fNn6WlYHbTeWlJ4273mXYB36Dr+Ej3vu4Cp6Df9E15FXy++Ii8u8B
Zdhvff001nyIzuG9s+TNofbfXv+Sp+EPfIMdXqpCd0x1vvAl+HrfcZDP6O95
+7+riPGAWeLx0yL4kffw3Zoq8uWrKfyK/Yn/19V1HVPYe0oRcdNRPfKVeo1n
wek6DULL9VZ/rFbXoAPIac+ZB+YW4e/FYnWGfICdb2L8+RoJrlPwwmVlfA8f
EdfwC3H4foo4Sw0C77R1bYq8hl36FPHOF45vQhHj3Vaeeta/35YiD+xYRhuP
yYfoFfLHd1XMi/hFv40vgqexBfg4XZ6Y57jaydNvlYGz2lyaQr9jyx7yO++i
XUdWMb4pxtMF4v1F/QfeicM9y+Bn/AvuRouX18rg6UetE86owh5lFT4/WR8d
JG7JyQ+mGCt8flX+vgP+995ffv88RbwQn+ilGuuLc5wvsQcOdzB/rSsvthff
78kjg51f33xvm+8DivDTnsZFa/PovmXYaot8/SuFHrhBn6Lnh1svYL99Uugq
cPJOijjaPcX4yKvkhXvVETxbp2/A0772+58UuAcrvWwLnN4nD1/sex3kmw2M
t++th0Y436JB+Il+wcm34n1ZFXmDPAMv3laE39daR6AfeQ6+hJ/gI/LHRPP2
tyme72zefiuFXYkteJK8iy67v4p5t5PvGlbRPmOEP3cXx1zw7jx1DnzGfPZQ
v16orulgXfFTinzcDJuIH3gZn4LrhdrrxSpw00n+P9d6anPjbA/1e2ftuaXt
Dff9X6yjyD+8f4j5gFwJPxO/t6Sov4g5cjp2PbsKHIPDGfbDvKh3eotj4uNF
7btWfG1WRL9fa5OHirDXe2JgC+08Tz/Dq8TqSeq6NlXEx0LrQmKbPDbD+PlJ
/psgD3xnu/RHHHR0XEUV2F7H/PVIFXyJ/S7Xf+iEVUXw35XmtVfVbcdrxwXq
gz2qwPcOxit1Jnl+mDxxtHgj/sl3F8uH+ANeukven6iue8Z4X6weIe6x9V7G
weZJnIgL6oB++gfcvJ7C7+dW4c+/6PNWKdptYb3WIgVv8Rw5/xPruUXimPH2
FI+Mn/xL3nqhinw80XgHA+Pz9aP+aiFWX5GHGTf4oS6mP9ZBbnYcxMUV2u1c
+WlJFfOgXfo7r4o1GzCDnaeVwd+slwzQhuDifP3+iv6mXiC/fWoeme66xsoU
/VLfUKd30A7M/Z4U+Z3+l/lcc/XIM+KrpggtCO+Cr53UseRxdO4x4mhjdcoN
KeKJHIpeeLcInK9SH6DLyRtTxQl6/lr98qj+oJ9lxtOj4m0n+Wm2fiHGiMPl
4unXFFwKz6PDPxPv+Bqd/QfzzaAy9Av+QRs8KZ+1qIIX/mw+3DEFL56oHb5M
0f8g7TakijH8Q3y2laeJM/A4WF18p7iEN8g/F8mHt1YRW3c636bOE7/fJK6x
X1vnS74nXhrp1zuKmA/rM+Tl3cUb+u5kMVcjroiHGfJPd/NqowbRPnU9Om2J
uuSXFLz2YRF4ph7E/8R/rY4s6/Uw41lbxPgeKMPv8Do2geeJp6vLyCNw710p
8jz+Rm/W6ig/b6pO3reOJ6vQKe3No9RT4AWfkW9+LiOvMje01Wr1CPGIP9ED
4IJ1OHCxQB1Pvcx8WUchTlkfez7ff3A8u+qHw9WVrB+NEZ/Ml3VB8I/GuFts
kR/IFej3u6rg6V7qkovUY9+rYxuKE9Yn0BtfyAPgGBy8rL1WFBGH5zn/jdUZ
z5p30K09bI9xPaxe/1D/DVEvrUmB59HakzqE7x81PzQr69cXmU9fdTd5EX3A
+iXjuNL5feR4Zzpe1tHoj7qEeqynF7mUuGedDHuMNO8TEyf5zHRxQv4hr6B3
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
nvw+kz4fl3/+H5mycmE=
      "], {Null, 
       SparseArray[Automatic, {2500, 2500}, 0, {1, {CompressedData["
1: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
T1nFBvZxlGSuco9nZKnqDChEaapQj2a0pgv9iGYCMcSxgq/Zw/ecIoWbPCJz
NTPGG5SmOiGE04HeDGc8M1jEKjawi8Oc5CJ3SCNjdXkgFyWpTENa0pFeDGUC
M5jPEtayhQMc4xxXuc8fZK7hbicPRSlHTRrSks70ZghjiSGOlWxmD0mc5zqP
SCdHTXNAAUpRjRBa0J5IhvA+05nPYr5iGwc5zlV+5wU5atkHBFOW6rzFO7xL
X6KZxFwWsZrt7OckV7hNGhlqq8mr5KckValPGB2JZAjvEcMCVrCFffzIea5z
j2dkquNbkYcivEkNQginE70YzBgm8zFf8CU7OUgSF0jld9LJXte5UoCy1KQR
rehEX0bwIbNYyGo2cYCTXCSVBzznpXpqUoCSVKUxrXiXvoxmMh+xiC/Zyff8
xFXu8YxM9eWKfBSnArVoRFu6M5DRTONjPmctW9jD95zmErd5TNYGckVeilGe
mjQkgs70I5oJzOZTvmQzezjCKS7zK8/I/pa5oiiVqEMT3qYzvRnGRGL4hOVs
YCeHOM55rnGX5wSFuG8pzJtUJ4RwOtGLoYxjCnNYxGq2s59j/MRVHvIXLzW0
CwmmDFV5ixa0ow/RTCGWZcSzjX0c5QyXuMcfZG3km5GHYlSgLs1pR3cGMYbJ
fMQy1rGDBE6Swk0ek6GxHPA6hSlPTRrSio70I5oJzGA+X/Alm9nLEU7zC3dI
I3Oo2uSjBJWpSxht6Eo/RjCeGXzGWrayj2NcJJUHPCdLE/uQXARTluqEEEFX
ohjHTGJZQjw7SSCJZK7ygBcENfWe5Q3KUp0QwulAb4bxHjHEsoyN7CKBU1wk
ld8JNDML/I8ClKIK9QmjDd3ozwg+ZBZxrGQjuzjEcc5zjbs8I2uYvJGHIlSi
Lk1oTRcGMJIP+IiFrGQDu/meM1zmNk/I3Fxd8lOCStQhlAi6MoixTGYOi4ln
J4c5QQq/kkbmFr4buShKZd6iOR2JZCRTmMNyNrKHRM5wjXs8I1NL9chFMGWo
SkNa0p4eDGYsU5jDQlawiW85wk9c4TaP//5nV3gg8DI5KUJ5atOYCDrRi6G8
zzTmsZg1bGc/iZzhCrd5QtZW5oE3KE5l6tKM1nQnitFM5WMWs5btHOQ0KfzK
M4Ii7AbyUIyK1KYZ7ejNMN5nGvP4jNVsZBffc4or/EYamd72biYnhalALcJo
TyTDGM8M4ljBenZymFNcJJXH/PV3zXfsHIpQkdo0phWd6Ec0E4jhU1axhYP8
SDLXeMifBLWWX/JTksrUpyXv0pfhvM805rOEtWxjP8c5zy0ek6mNXslNYcpT
k1Ai6MJARvIBs4hjKV+xlb0c4yxXuMczgtrql3yUpDqNiKAzfRnORGYRxzLW
8w0JJJFMKk/J2s5sUZBSVKExrelCf0YwgRnEspSv2MEBkrjITZ6Qob0skJNC
lKcWTXibrgxkLFOZyyJWs4ndHOYEF7jOA9J5qYO3HQUoRWXq0oT29GIw7zGT
T1jJVvaSSDKpPCCdlzo6AwpSmqo0JJwORDKIcUxhDp+xhs3sJ5GzXOY2Twnq
JGPkoTgVqEMobejGIEYziXl8wZds5luOcpar3CGNrJ3tWnJTmAo0oAXt6cVQ
xjGNBSwlnm0c4DjnuUEamd41t+QimDepTiNa04XBjGESc1hCPN9wkCSSucF9
XpC1i17JQwkqUYdQ2tKdAYxkIjHEsox1fMMhTpHCrzwhY1d1yUcxKlCLMNrT
kyGMZSpzWcQaNrOPRM5yhXs8I0s3dwS5KU4F6tCUtkQyiNFMYjZf8CVb2csR
fuIX7vGMrN1ll3yUoSr1CaMtPYliDJOYz2K+YgcJHOcCN3jAc4J6mDHyUpRy
1KAR4XSiN8OZwAwWsJR4trOfY5zlGnf5g6CeskYBSlKNEFrRkd4MYzwziWUJ
8WznICe4yC0eEYiUN16lIKWoQgOa04H+jGQSH/Epy/maHRzgBy5wnXu8IKiX
MyYvRalEHUJ5m64MYBRTmcdnrGYTuznMWS7zK4/I3NuskZdiVKIOTXiHbvQn
mgnE8Akr+JpvOMiPJHOD33lB1j56Ji+lqEYI4XSiL9FMYAbzWcxatrOfHzjH
DR6QTva+gcB/yU8JKlKbMNrSg4GMYjIfsZAVrGcnBznBRW7yiHSy9bPbCaYs
NQghnK4MYBSTmcdi1rCVvRzhNCn8xhMy9Pf2Jw8lqEJ9wmhPJIMYxww+ZRWb
2MMP/Ewqj8gwQI7JTXEqUYdmtKYLAxnFB8wijuWsZzeHOctlbvOETAPtSXIS
TDlq0oTWdCOKUXzAbBaxmk3s5hhnucyvPCUoyvciHyWoxls0py3d6E80E5jB
fJYSzzcc5iTXuMdzsgwKBF6jACWpRkPCeZe+jGAiM4llFRvZxVHO8gu/kUbm
wXolHyWpSgNa0I5eDGEsMcSxlHh2cogT/EwqD/mTbEP0SkFKUZm6tKQDPYli
DJOYzUJWs5lvOcxJUrjFYzIO9R7hNQpSluqEEkFPBjGGqcxnBevZzSFOcpFb
POIv/jVMbilJFRoQxv8BBsgLcw==
          "], CompressedData["
1:eJysvQeUbFW1/X0qdhUiIDnnKAiKAoKCBEmCAgIKoigZRFByEslJQAEBEUHJ
oBIkiQTJ2SxGkoCgYkCMqAj+5+/uPT2rdp/qe983vjFYw/du73O6uqrO3mvN
Nedci+348ffu3a6qatP9qqql//2x4jnFC/p/Tu5U1TPdqvq74qFeVa06UVW3
Ks4aVNUjivcMq+qvWnuq1i6jm7xV8W7F2X2tU+yutV9XbK2162nduxR3au0s
uu/Hdc/P654/UCykNX9WvE3rDldcpdhJ915Vaz9OaP2Zip9q7Ua67z8UK2n9
Jor9FbNp7ccUb9T9v6z1m2htT/d/r2J7xXGKX+navyn21fpTFV9QfFHxnGIO
/b436PojFJcoztZ9rlN8Q/EHRV/3/Kjil4qv6u+7VPe/VPea0Os4RbEj99I9
dtfazymu15qnFO/Uuu/yuhUf1Gv4ntY+pnif1vxQsaHW3K24T/ER/fw2xdK6
7/mKbym20NqTFP9WvFP3f0xxiV7DZVrf1z1XUdyqOEA/f0Qxt17HhoonFXPq
7/iofseXtP5PWj+r1v1Ncbx+x48UP1b8RrGKfs9RWr+S7v1GxR8UX9V1X+Oz
0nVPK67Uda/X2s219mrFfxS/1e87QNf9QPETxSxav5x+13la/z6t30Yxk675
pGJN/XwH3fcnivX1unZTXKn4o65ZWtfsp/iG4su6djE+M93/fbr/9rrub4qZ
dN3nFQvrmpmr9Du4/1cU/8y/Z+fe6O9ZWeu2VJyj+IriF7r/J7X2CcUJWncL
ofvNoZ8tpNhL8aLWvEb3PkxrDtU9t+a7qddxgdaeoHueqvVXad1VWjeX1h2o
2FlrP6bYWev3VLyka96sax5W9HTNLoq9FQ8r9tX18+ratRRnKfbQ9XPp2s/r
uicV8+naZRWv17WfV3xN8QH97i/r2m8qZguv9VdVeq1vyq/3jvyaH1L8tJte
92oTo6+d9/o43uv8Pm+teFbxD8UavfS+v5Lf9511/59p7Vb62VmKR/gs+ez1
83l0r00VJyse05pT+f7q96+tNUfx3Gndk1o3od+7oWILrdtW676uWEJr12Of
0Po1tHY/9hWt/ani3fq9X1Osrmv+qThMr+EQXXOBYnZds7tiaV33vGIOXdfR
NZcrnuB95ruuWIH3QT/7FN9rxZcVv1TMw/uhdSfqtVyq+/1W9/q+1v5MMdTr
uEMxp9ZcrdhPr2Ee1iruUnxO12ygdftrzZcV6+p+M2vd6xTb8BkpPqxYU2s/
rtdws+KXipd53Vq/sGIHxauKJ3TtL7T2D/odb9V9Dximz5Xv4VqKHfPnu0c3
fZ6Ph+/hr/Jn+XZdc5rWDHT/W/R3vEav7SeKs7X241p3o+LtWneF4rdad2Qr
7QPbtuu9YPtO2gMW5L6Kz2jdSlozp36+r2JT/c57FY/qZ7Po926l2Fy/9wTF
p9gftOaHusejis/qPotq7bsU1yrer2tuUOyha45QXKX4lV5Lh31a1+6k37ON
rn+brvuq1r+qeK3Wb6jYTfGK1n5aa87h9ej+2yquVTyo+LdiVV13oNZ1tW4b
xTWKbymeVVyr3zGLrrtY93+SZ5TnkzOM761ex1KKnyt+r3if1j+n+LPidF33
N722OfNrOy+/rj217jTFzRPpdV2qdc9r3epa93etW0v330z3v0FxttafqHWr
aN2Wil8qttX6f2r9aVq/vdZfrviW4ju67na9puW05jbFDlr3ea35jeJf+vmC
ut9pirfrnptwH8VFWnOT4ue634e1bg7d4wjFOlq3oeIgxXZaf6fih4pdOVO1
/mjFh7T+Cq19StHPZ0Bba5ZRnKfXsaju/3Te/zfS2ocUG+h13MT+orV3KXbV
2l8rfqf4DJ+v1n5MsYdez4WKDn+j4juKpxUL6ndtrThH8QNdv6+uW1LXra2o
9NqW1LVnKg7V77hR8Vqt+4h+9mnFf/Tz7fWzFxQH6vWfp/ikLltY931R6+bX
/S7W/a7Qule1ZkH9/AuK6xQfaKV942Ct+ZnWtLRmacXFnPtae73iIUXv/6d8
4Ur2Hb3+Nytm071eo+sndO2RihsVl+jv+Yuua+m6e/i8dc2sDefT2zv1GbWp
7nGnrptL170nn1W7at1jiu9p7Tu05hqteaN+tpviQr53/O2Kbyme1Zo/KwZa
s4LiOUVPr+U4xdcUb2fP1TUkffPpdZ+peFHxrO77Cf383fr5ZorNFY8r1tLa
zyrW0+v/k+JI/Y7btP53+bv8c8V85BRaO6d+vnT+Tp+i2Fy/5lnF8vpdNyne
q2suZP9VvJ4cRte9Sdcdr1hD153EPlrkB7/rpJzgKPZOxX/7KS/4sNadq3X/
Veyn+/2Re+tn2+q1HqhYVWueUrxT67bmuVFcoXhE9zxBa7fSfX+tWECvYSfF
f/W3r6zr71NspOvn0nWPav0aPD9a/y+tfTd7MueOfn617v19xY5at5N+fori
CcUyWjO77rWcYivFO7T+q4qFtO5g3e9veT9gL9hJ93ygk9auozWHK77L+an7
t4fpzPe58FOt30trj1Nsl88HzoYPKZbnOxbyizdrzY2K53KO8bleyilm07ob
2QN1vxu07jmeAf38BMVJWvMlrXlAMdSaSxR36u8bkLdp/VBr1+Z7pXuepPi0
4ve6bgmuU+yg9bcpHlCso+sOVvxK69fRutn0850UD+reLygO0ppP6ee/UCyq
+6+k6OQ6YRtds4PiE+RtrVQ3XKK//QIteIR6QL9zsVw7vEGxe64drhuk8+nt
rXRG+Xz6dzijOJNOz+fSLyfSufR1XfOU4mxdN7euu47vtWJNXb+SXuvpuu+N
Wne71vxJaz6on/1ccbx+fqTufZju+3PFPxRtrb1c696kdd9SXKQ1f1AcqHUX
KO7TmsX1ey9T/FHxouK77PG65pp8PnbI61mn3/3efC5+g3pDa//N56d1r1Ab
6TX8UvG41i+re39Jsa2u+4TW7q97nsf5yOvO7y11mN9X3tP4froW8/u4mq7Z
UGtOVJyh3/F1xW+0dnmt/Zfin+QNWvdurTuUekHxE8VHtO45xR+05pS857+W
80uxttYepDWvo2ZUHM37o1hF63dRfIyaQ7/jGF33Z8UuuvZKXbcCZ4Cuu0lx
sNZfqThC9++QOygWVKyrtVspniUH0jXfUSyn607SNZto/aOttC+epd9xjH7H
1xS3Ke7ppL1xkPdH9sY/Kl7U9Xfo+tXy3nVhsV9dpHhZseww7VcqoavfKLbV
zz+t+9ygWE0/fxf5od7XexTna92PdI9ZtGZLzrCce/5H8Qat/5Pik1r3jXxG
rDzFGTFXqGPW0c+2UPyFXE+v83X6+XWKDamlFHspltLr2Innjtek6/ZW7KP4
iv7Og3SPNcL+WO6Lx+S90fviINew1Ocb5hp2l06q1aljXcP+I9euXxqkGv0y
sAZdsyx7n9auqLXvU3xbsZLWf1r3flxrF9Pa72rt/Vr7I8UpWru+1syv+/1C
a36qNX9R7Kp1G4Wc8oCcS457bl7Je//Cut+7dD+SgC8We/5HFSvo3rPq3vNp
7b4871r/V8U7dM0Bit8qvqvrvq9rfqm4W7e6S7//XsUl/D36t4/rPscrNtW9
/qE4R/c7U/c6vJ1y0oPIMbXuGa35kX7+M8V/ci56TJXyyttzXjm71hynuCHk
lw/m/PLT+bPbOpxrv2442/gM58o1bKxfn6JGZ1/s1fVrL9es7Ee3656fa6c9
6TTyaa35rOI9WreBXs+HFJ9QzKr1a+bzaq18Xh1bpfOKs2qPfF4tnusZzitq
GuqZQ7Tujex7+j1LKh5T7KHr7lWcq2seVnyIvV1r5yJ3Ap9qpRqVHGTz7uRa
1XXqPrlWJReZL9eJX2vVdaLrw2sV506k/ezNOdfaujWab/2MXLhf511fasi9
1snnJHv/J/XaPqv4UMN5+c5eOgM4L0nFZtW6fdo1fvSbjCGd1RnFkZ5WLNmr
8aQVdO0q+l3rK77brnNu8Ih7FY8p/sZ11AXUc3ofP6jXeatiplAfxtrwz52E
F1EjghGtkutEsKK7dd2Buu5crX+Iv0/r/qN4u9ZuRB6h9c8o/pif538oVmbv
V3xPsbiuvZX6UbGcrnuh01wLui7292nHjHkY6zDGQU1MTbYpZybfNf37ZYpZ
9bNr8zPzT8W8uSa7S69/wVyn78reojhd8VPFP1upbqdmf2eo2V2vHwkuovi1
4g6te0Sv5x/6na/TulmojbRuV/2O1+rfN841630ZM/i64veK9TJu8EetO0D3
WUprJ7Tu/eAh+ZmPz/vc+r1b8F7o9z2g+IDWfwWcVdfM3avPGs6X71HXav3c
WndSO+XN8+p+32fv1Jqn+Gxy/vyI1h6k1/B1cALFWbpu3/x6fqZYtNv8mng9
e2rdIg2f/+66/4WKbj997nze765Gz/pdwhl/ez7nD9X6ryt+pPh9P533a+q6
81spV14g5MlNOfLF5N95D2H/WDXvIeBBv1K80q3xIJ71ZScSHsSe8sm8r4AN
bZprWdexrludx/CgvjbXrfNWCZsyLrV3ZxSXOmCQsKljdN8VtfYinjWtXaoz
WsMuoLV7Ku7vp3p2O13z98FoXXujfs/t/E267lJd9wvFH6nhdc2XFbfrukU4
N/U73jkD+IyxGefBxmfu0bUP5TxmfV37BcVHdf3yvTqPeesg5TGfCM/CM/lZ
OEPrb+rUz8Sf83Px8fBsfE0xi66/Rdftput+30qY4N1c00vY+iz6XSdSNytO
09rPau0l5Bxa29W6U3XfhbXurfr5c+AouvdjYAb5+7sA+2wnfYd9hvp54tyc
O5+b7Clba/2O7dHz6Rw+l3A+LUjNQ37RTrg4mHhLa+/Ruh+DFZBbTSRM/Eny
HV1zbz4/Pkj9w35APaJ4ge8L3/F+fZZwjuyo605TzKFrf8Bep+u21Nq59Htu
4fzU73kdNSe5jNatp3UbKw5TfJPnVa/pQvIS8AuwAa3fX7Gi1n+aWkzrNgu5
MHlwmQOT95Lz3kwdqZ//QnFqJ+FRe+vnK+he5yn+O5EwqWv53PSzd+dn2M8v
vYiF9fP/KpbM+K+x3++wp3bTZw3++zmtv0rR19qZtXYJrV1c64b6vW8gR1Qc
onWPKt6i+96ruFhr36W1i1YJtwSzpB8yDrc8On9/Yq8qfo9eyN8l9678faJ3
tXBV46wzdxLWuqrW392r8db5tXb9iYS7fnyQsNd/gS1Sz7bqvs3y/C3k5rr2
gV7q3bxV1y2htY/kupd69z+c5+1U85K7/7mf8nXqXHIFavclW3WuQP3+wVzD
kxe4bgcPuLqVnhvwgLcaE8g4wLFa83Pe93bK8ZzfnRhyPOd3xyhuCnke26F7
ZJ9q15/ppcVnum/+XN+p17C57j/Uz3u6z3ycJ/rZUD97jWJ58kCem1D7bDmm
9gEf+x82lmugX2jdxVo3i17LZzgjteZ+xYrUIIrjFBcottD6bynO0e9eXdfs
w73bCT+aW/deRLFZZzKOdGnGkl7KeNKPdO07dO095A26duVOwoeW1O/8hGJm
/Z2/URySMaKTyL0V76lS/Xqr4gZd9wPFs7z/nbqeXbSf6llq2cPINQeppqWe
/ZOuX5daROsOJ4dkv+rXuMo3tP7b1Hc5390l57uxNxL7IuS7C/BdUgz1Og5S
7Avuob9hM615jdZc2k8YF2cYZ5fPLc6srfKZxVm1eT6vyEnBBCImDB7cdJ4a
BwbfvWA69+febd3rKcX5utds+vlciu9ozQ8Vv1aczTOidZ/Pzz1nB8/7t8Mz
3/Sssy9eFvZGMILZtPbBbsIGjAe8X/e7VmuW1pqTFRWfdTfVstSwl/K8kFuA
n1Spjl1P6zfIdaxxoLdp7Y69hAdR1y6esSDXctSqsXY7vajBPzgx+pyck58T
sCmeE3CphbX2jEF6Pl5TzVhf1+eYe7tfytd+NVwbr9spr/ubfs+bqoSDX9pO
GPhVvYSBP9lLOPh6EwkL/+tEwsNXHiY8/HW67iMNdWlTTbp5qK3W6yR8jffz
T91UU/E+gquBC+yQsYHbGzA1YwLr570U3O+c9ij292Zqyl7CQ18/qHHAb1KP
6JrFtG7tduonntBJPcUrM57zX8W5/RrP6ee9suQSmEcAlgSPgNz9YP1sf/3s
F4rv6T7r6zV8U7HsIOXsiwxTj3FWrX2DotdJvUb6jLf0Uo/R/cWNq4QVGhv8
jmKmfsIIH1I8pfjmRMILr8mvEw7ELVXNfzDnYZb8Wr+Y93T2MvC449sJjytx
OGNw11bpfeI98vtys2Jl/d53KM7K7xF1GT1U/jbXZf8M9Rh/30z6HUfls4fX
5hwy5o1+jT/Xv5/Le6j4u+Jn+vfP6HcdPUicgpsHiVewRTthlh/Q/T+saPVS
7+gvvdQ7OhKMRvFhrb9/kHKUJ1up7/MTxR/ade+Hvs8FissVu+r3Ha/7b6DX
2tP6eVo1dszzCV7MM7omZ6Xuv8wgPa9Had2H26kvthK1RbfujXU497Smp/se
pbgw1y3fr2r8dS/FYrruesV7qK27CY99i67fRde/OjGKydI/gf/gXNi9lG90
Uy7MWXhvP+XEP8zn3wd1zXvyXryS1r6tnTCwubv13uw9OWJgR3Buat3p7brG
ODnXGNQWtyt+p+hyLg1TrXF8NTmPnkfXLdYfzaWdR5NDP6BrXlas2ErY3RLd
hN3x/XlFcYXW/6Sf8Ludtf7LwzoHa3OetxM2/pdO6jWQg9Fr+I3iTVp7X743
39El8vezvDf3/a9+vrJ+9jlFlxy2l3pC1K8/1mv966CuYXlvwI+puX6e35Nb
ezWOfEauwXYfJk4EXIhXFG2tPVpxBmf7ROp1fl9xge69qH7/sfkZ/Zvi0E56
Vskzzu2lZ/XNw9T/7mrd+1p1D3xJzl7FmYqNda8LtG6bKvU3OM/AZq9pp3ON
Pdj4LOfYTzM++15qfsXsWvNLxRla90WtextYBc8/9xym/gG5zYGt0e/wusX3
+Bv5+0t+c0KVzmzqpKsVLyteVSzUSTXTC93ROgncGv6VMetvdxJePWcvYdb/
7iW+FXj1F6vU95sqxyO/ow94VJHjnaFr76/q75G/Q+Ty4O98l4zBg7/r9tOw
4ci5AxuGawc2bL4dz/md4RnnfSmf7fhcX6h7HsUzrXVHKy7TuqsVNyueY6/W
+nlzLX/k/8dafjny0VbiJOzansxL2C7XoZGXsCe5nK57tUr5OtjGwRnbANdY
YiLl6bfnPP0tWv820sVW+kwOzbkqPVnyVHqy5Klb51yVz2S+QerP7pjx3F0V
b2nVeC5Y7qcmRvHbmzKG+yI4gtYtr/t/SPFprX2v1h2e77uX4gYwBM4M3etP
7BPdxGn8WD9xGd81SHX3JYplOYdaiTv2O8X97cQbe6iTuGPg73DFOP9uqBI2
yblecojKs53chZ7l91t135K8hdqUvuX9Eylngb90vqKreyzdrblMK2vdj3o1
nwkO01y616vsGbrX4+2EV31La9/M/kxN2Et41R39VOOD0ZqLRt8BPtqRnZqL
BgcN/hl9tN3aqY/2vXbq/6/HXqf73dFLPbXTuK/W/173XVXXbD9MvTWejxNa
iZf6D123W2c8PxUMhefmlvzcHBu+3z/L32+4UE24LTgrezDnUtnHi9jXItV4
XhX3NbcKTuXSWru3Yt524gytxl7WSVg1vKG1tO4yrbtpkPDp/cnnyIEV76UW
Umyt3724fu9SinUVuyj2V6xdJc4p+atxgNjHNw7gnM681nGc1shnfS11U1Vz
MCL/wrxM+BfgwB/tJBy436sx4G/0Ug8ALBj8/wODhAevSA3FuZ5zlnKP/36v
rmHZ548cpL3+8fxM8twvP8UzeXqVMCFwlxMz9mLc5fpujb0Yd+G1f0PxsmJN
/fzabvo7hnrdba25fiK99ucH6XVT8pWcZ2pLXncT95nXv5Su+U6V+GU+X5fr
1jwzztgmrtmCWvceagxeu9Ztq3u/2E+9xZn089UV6yi+qHu+pOhq7QWKBxQ7
6Jo9FfeBN+l3fUjX36VYTtcfq9hY9/iqYjH9rnsVb+W7oHhc8WvFrLrmlG7i
Fe6h9fsqupwv5KlV4rSZx2JeG/g8fCB4bScPam7bHPrZcYpP6WefV2yhe35B
8QDvte67Jd9TxVOKucmvdc3KuvcnOon7t2s38f3mGiTO36mDxPuD80ceRo/2
rpzn7dite7TkYl/R/f8+Ued49HmO5kMEb9GabXhvunWvh4flSsWvFX9SfKBK
PXH3jKnD6RuXtfiDE6lnDA4F1nVQK2FQEe/yuXZOxr3ekjEvcKi7qjrvds5d
cphW0ZqH25O5WvC0du/XXK13kE9UNfZn3A8OkLE/OEDG/y6uag5B5A0slbGV
gzKeAq5zIc9sa/pcP2M8Jd+P54BnoMwvL1e8blDnmXBtqJeWy/XSM4pXFF/X
75hDv2Of3mjd1M97m+vW/9WFDbXro3kvibmE8wjyh/fmPeWokEOAA5trO2t4
LowB81yA+65TJa6U+T/T6//C/dlK939Ya8/W2sP185cVG+nnHwGTUSymdW/W
uncMUs7rvsAK+tk/Ob/6qTcw70TqD7wwMdoj+JjuvXo71V3bsTfk+su111q6
x8G90dprvlx/fYT6i++yYkXOeZ4Dxf1a/6BiE/3u0xUn6Xe+zH6s9Uvm8xoO
Luc1PFzO6HnyGQ3/Fu4tXIcbqhrDOFFxdcYynOuQ53yFHE5rjlF8QfEW3fMW
rdudukfrztK6I3S/z2jdFcO65/jjVuIWmVf0UidxiuYfph5j5AFuo/scoZ+d
qTifz4U6b5A4E3B73Hv9UTv1Xs/LNRo92McUL/ZS/5UiY89B6sOy71NXvV/X
bNRJe37TPv9MlXIu8q2Ya70751tX5JyLfGt/rb2+ShgRPV5wossCVuReL5gR
vV76vBE3Ois/W+ARv8jPV/lsHVk8X1cGbGL2arKGgd5Ck4Yh6he2y/v0Zu3E
p4FLcxF5O3jUROoBgP27r05utkmuN07vJd7xR8Gq+ilf+3KVMGvw6nl1v/d3
RnHrvbVuFa07rkp1Kv07atU/9Gqsk76dsU76dpvp9/9Aaw9rJ+yFex5FzZfv
d4/io1p36yD1dOk5uY+LBoeeU9TggFnDSaYv8fp26ktc3kl9iX92J/cm6Et8
u0r1+pWhZm93Ut1+bKeu2+kR0BOgdu/kfdh7MDgW3A/2Xvge7L1wPh7Ums/r
fkt2Uh2wbjfhC3x/wRb20bo3DhO+cKpex7eqGt+iHwe+dUjAt+jJgXG5H0cu
CpeS/hRYKvgpOelZvZpXushEykvBU+GV3phzuxdzfef9OOZ4Mb8jL50z56Zw
hKfph9qj2iHrWMhR2QvMOdy7lTgIV4S9wfuC+Qhxf3iySnXbeaFuW6JT127o
fC4fJG0P2iRrn9A9/VBxMnuJfn73IOmS0D6dOUz6J/bTvu53BOe91r5fv/uD
vYThbJr3UzAc6iY41OP4h++cGOVNr9mqMZc92wl3AXN5m9ZuqrV3cc7mfdcY
8lT4MfnVA1WNxz7fSphsxLwe7tWY19bD1JdFUxL7n9aWxD4o+jXycfqg7tnu
VCU+GDwOc8DgcMADM4/DXLANq5pr5XM28m0j13Y2XbPRIJ23/64SR+cTObeE
m/NX/f7PTaQ8c4GQZ5JjwtX5pH7fbPl99RnkswcsK54/kad/csYaXKuCObwn
YA17VIm3tVs3cbbga9H7gLNF/4PeB7wt+FqknmiuXmonTSR6q193kzYSzRV8
SzSRaK/QRR6gtZ9SzKT18yjmV5yoWEjX3KNYRNcdqWtOZv/VNZfpmpeq0TqA
2sh1QKwBlg417Vq5pj0817Sz95MWZiHd89Bc14Lf0DN9ND/nkU8PjmZOvXMu
8+rB0xbXumUUqyq+pPim4nbFm7qJ+/e84jO6x6Cf9Adw/uD7naE4d5g4MfBh
Ig8cjZI54DsNEgdmhfzsxOfmDf307IBZon9bY2L0OeI8JN+eN5+J5Nw+E513
W+PnnJsz8Yv5/diOukW/78Nat0+n7h3TNwZPJJ/8fTtx7uHY79xPPPvPT9Rc
e3j2W1WpN0oOX/J//8f9zXk8GiKwuh8r/qs4qJPwuR9ozVD32nyQMLrLte6i
dsJ3/Uy5b/lieKY+XyUsr6m/71pn+VDv8J0veYrmKD7crzmK++bXQA+Vvh/n
Nz2/Szp1z+9NvdEeKr0/zvFNdM3G7Aut1P9u4rD/uJ947PTA9+A16pqTWs36
pw/3xmugNsy/Z41Ouj/33oDztJ9+B/f+asYm/pzxCfbEcfvhA2FPNE4Bd+ck
xaVVM3/HfWpzeOhTj+NZLzyRuJlwMs23/mYr8W7+0068m98q/kjdwjnWS+f7
14aJ61z2e2bt1734fymenUh9+GsVh+m+a+a65ne5rqGmoe6fOdf91DZXV6mn
MO4z9ufq7zn1qvnuTd91uO3UrvG1+Pv/vSo962s2nJPTe97dr9i5qjnIf2wl
HrL5x1v2Egf5k7r+mP6oZpZ9add8hoJD/ETrb864wzUZdzh0Ip2ju1ap98VZ
Yu5YEwd5lXyWfKeq+zifoRbv1DjTTf263nYN4rrbNfceum4rakTORcXXuonf
tqOufb6fevyvHyYdiXsc1ujQ5zBnKfbL4CyhJ5mHHKIa1QDD+YMPZg0wfD/r
gNEAw/1bqUo1JznSGbnmJD9C10evy5q+LYepV1PupS/m/fTAvKe+d5je03ur
up9ILxF+N/3E8r399iD1E9dQvL4a1VFaT4+W3nrKdXpJUzn7IGkqzYUBN+m0
ai5ME1YScZLlqrRP009xLwVun/spUeN5+TDxmOjhwmUyjwkc/r+d1MeFv0Tv
Fv7SocPak6FJC2QdEH1OdED07yPXwTwHevnP9lI/H630hsPE796oqvVM5l1Y
lwG3u0mbAfd/XUWrk/I+OP/sEWsojlac0E97xWuHCR/8ZniO3xzObfcY/Qy/
rXhuydHgGGzVqjnfxgPBAnkeX83PpPHA+EwelTGmfsaXmnir4Ex8dzlL3thO
fbRv5jNkZ93nx9T+ijsGiQv7/hl87viKXJfxLbB7wOjII3FNAIZvrSU1w52d
pK98SfGaidGaYebWKC7UhAcZB3pXO9V14Dq/yfXdkhnXWSTXdJ8dJGxnmVxn
Lax1X8w11jxa/1I31Vmf1Wv5RM5p6cmiH8IHA90QPh/2+EA/9LHwfbU2kP1m
nB7QPXq0oR8pngm4ffD6Lg3PAtgEXAH0Pte1EpYccQow5d9mrAI8GbwCTNk9
EmtVY4/E9Sc9kt9VqaezRSf1c+btJ58D93Tcz1mtIV93ru48/eyM75Gvzz5M
OTt9FPrB9FEe7qSeMHpLuIHXkB9p/Z8Uaw2S3pJ+CvkafyM5G73XV8EWGjAZ
crbPDhPXB/3d9Lg+8OLZs5t8G+ApoMuGqwBP3rps9NhPDOrawH2e2NuNuKwx
WfCAzVr1vtG0V1yd9wqfWXx/fE7Zi6Y8r67KZ9YXdd3Xhymv20+xFvu14ouK
X3aT7nP1nOcto2uPZh/Tdd8YpM/ygPxZUnO53rqplz7H+BmulT/Hn7QS7/ov
5Kpaf5rWLkG+rxho/UcUx+iaUwapB4nHy2+r0T6k9TvW7tjj4Q72rdYor2iu
3iivCL19a1jzioydlLoNNBvmelufOVuoi0/vJHyW+gyMlhr5fblGpj4G41p0
OvgWuBY4z4z4lbxW93qCsz9jKuDUX2gnnPqQbsKojU0/VyWPCGPT9JIjPh19
jtxD3iTn7WcU9QN5+j9Djo4eFv+E3RV35H2f+sF7v+sHnwHUD0vovq32qNeF
fS7sbXFtzje3zLmmtffz5frXeSb6e7T3pwxrLxJzlJp4dOA1HH1wZPFyck8T
zfg4Xjy9Tfqas2ndaezt7dSTel5xja57AziGrltW6z/VT7XRxrkGc33k9881
0rW5TuIZci1GvbRMlfwzrJW310DZX/Tf+kD+e08JZ3vEqYxPvbOd+pA3d1Iv
cjX9bO5+6j0uBbareFnxW11/odYspTWrd1Pf5vWKvbT2/RO1zn198krFPbr3
h6rko4XGE8zHOs/I4zm9wA3Wmg5uYFzdvkDgCGAI61dJt46OHw4IWn7zQObp
JQ2/OSDGWpetmn1G0HVEn5H4veT7eEkvadfwXrluov5eztaqezNNfZkSGwNT
hQ8zPUz1H1XqaX+iXfeyz+ukPjb9a3rX9K3NrfEz7/ut3knPP/f8jF7PvL20
B2w1SPfHh4FnCW0Z9drzvaQt41mK+jI0knGvhfcxlVbS+y3cD9JHfMnu6tTe
Io92k+YYfxG0xvYYwV/koYnkMXJ2PkftgVSeo/Hs5Nz8aZV4Xngx3dxOfkzw
vfBk2kdxYneU+7U2z0JvlAO2RdjvrdczPm5s/Ov9Wp9H7gaHa5HW1HoLehpa
OoJ9gAmXuAd4Bz2T+aval+nybvJkgqOMJ9Pyg+TLhCcTngZgIWilSu4fvH3z
/1bX637/IPH34QPv306c4A30s/X0s28rltf9F5youcHwgn+g2GCY3gv6BvQL
XtdO+Szvy1WKPxe5rd+n/fspv3UfgfeKM+r1rRrzf1M+myL27z7q9/NZBRYL
LyNisVPxMnapkr7ZeBR4F/usdR+3KebI+y177blhvyW/Oy+fy2hSrEVxrynm
emhSrEfhnIa/z3PNsxc90eC1wd+H2wZ3H05C6VHivY59ztjo+9qjXifmXNjn
JPItwBWinxi59TL9UV8xe4pdVtW6DTSuTdqNn+Wan3ofDYe5JeTK5MeuB8pa
gH7kAq1aQ0NPstTR0I8kZ127qnl77Nkb5f2aHpn37A3ynn14lXSfaD6t93wT
WJhic8WCWnfnMNUifLfx0Xuyk3ImciW+33y3/xa+23De6SvtWdSIi2v9nd3E
h6VejHXiu1sJGwQXNCZIfvq4Ygv9/BlqvowRfjqfMb8IZ0yTfhCeO34J5KGn
UkMoFuU9GtS5KN5PfC+jVqqdc0Vrphbt1zqpY/Tz89upJ4730U3d5H+E7xEa
ikO09u0Tyf/o+YnUE99kmHpJu1UJh6SnBH8DjYl7SmDfcDfgbcS+Ev2kHTLW
UfokgHugowPziH4JaOjgJM7fqrm25iLGnjf9bnMTteR/NfAOGa+xbwucU/to
rjtI2A24DT6a1LX75rqW7/DY7+8w9QKoif7UqT06D9aaL/RTX+BduTaiLnL/
wrxoONH0cejf4DlmLvS/9Xu37CQc+hnFqVpzkeJu3fNp6nWt71ODD0c5IHCz
4GXBxYKHdeGg5oLAQXdPH1+Q43upl196g8DbQDdvzXzkbsDb+EAv8Ta27Nf6
efgbBw4Sf2PxVt0vp1d+Zi/1y+mVnzuoe+X0Dcj7/y89g5m0/qudhIsv0Bvl
+4CLm/PzB61bTfe8MuMH7G1v5PvO2aq4L+MI5oWWeOP2rVHtHb1EcEYwxn+1
knaTvOp7vRofmlNxsOIrE0m/eZhi6WHNo6a/CZcafXPscY7jUz+V97sbcn7q
/c485fnDnodudqFW4l3Q/4d7cU/eO+F6wr+ACwAHAw3M0VV9rnCWlNrwqHPl
e0MvCT33/eH784fi+/Nk+A6hx4MDiDfO7K2aL4Q2D84Q3jElbwj/GHhD9jm6
IucOMW8wF2n/nCcc0Up1P3trrP1d959S7LHUPP+pUi+B+g6ueMQxS06jMUy8
LPBQcT1Z+qaQB8d+xa1ad3lrvI7K50mpRfxKlfh7H20n7W7paRc5RegTY38L
LWaTT5P1mNGvKXo1zV0l32Dy4JdyHrxjp/YmJf99b8557U/qHOur08mxbgx5
1vEZa3DNsXqoMYw1UGfAnyk1YvTU9urWHJore4lHgx7y+ALjhaM9Tid4cTXa
i4t6WOuuJvJ+wD4AZ3N6/KAjq9rTAdx623atAQHDsAbklXwmgV2vWyWsET0y
/m7WJIM7Rl0yGKTxR7ze3lKlzxyfQj7jQXfUp9Aehc6V2DvMb2fvmMqr7sbh
6Of6+AzkztTFeHDeXNTGf831ccxd7Mn5kVwvfy7gBCVGYHwAbGDFApOAp0y/
Af4MflJwaOgB2ldq61AvnzumVt5lUHOQjqrq3gT8V/tqlH4a385nyhY5b45n
is8TzhL7LJ2f62TjTvZ7dN1s/AlMRkuTh3h7VKMxTp8BHoJGY4Oq1kaCteKt
F3FW++uhl8RjD5wVj6C7qoTxW7vofhe+uWgW6Xkdmr9v+L+RG5a+mNETk/4y
HAo8GNxbRr9Ffzn6qEUPNfaDJ2ZgP8DTBtzBmNYp7VEPSHwj8YEEf7g94w/2
iMU7ckJrF1VMaN0iiisUs2r9Doq1tXY/rdtI62bSvd7WSR7ZV3WSTzYe2V9Q
PNJLvLSLFcdSSw0SJw28BR0BGgIwl+npCIzBWD8Q8UZ6a9Fb6fnWKA5Hb43v
/DX5O/7dIg95Tcg/uH/MQe5tJX+XLXM++fucU5b5ZNQSgwWSUy5cnIulFzO5
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
TYlTlxxBMKF35fOPs2/cTAWwIbQLYCqeiQdXbc4psBU0y+Arno+Hl8u5+RnA
V3GqmVT0VT37Es4OnDQ4O028NPN37FsJP42+6wYZg7QnOZgldTycCPuTU8/j
03rGRPJzjTjQXBkHQn/c5Lka51ea4wRGGT0X7LfgPj3+FPiYRg9TfCnwpLAX
BXMH0F/jSQYm6P0Y/A+fHzgY6K/B/95Q1Z4MTXPiPCMO3kDTPLl7wlr7N+xW
Ja4P2nFzfOD3lD6y8HnBE3fvJE4vWCKcXua2gCN6bgv+WvQx4FSAw9PHAH8H
e2/iUoBH2wOgiQtoH4DICUTjBkaNVzK+bNGLzfMDPDsAr2R4oXgAwgmdngcg
XAL3beiXRD1U1ELZGwkuwW2tZq7VVDyrZ6rkdeJ5T7EnEvsh4KD4Rs0oDoo2
xboCPGnx0Cj9Lps0K557BLcDPxjPzbEfjDkdcw1rfQ5YIhpAY5po/sAR0fyB
Je6fv/+8L57B4fkb2/fT/I2PTSRvFs/eeKJKXoL4CMLn8kxk+FzwrvARXK3A
pMxfBMeCw2j+Iv7TnKXkDzu1p55J5zN17vxdeaxVc4jhTcCXiLNczfm1p8k4
zi/Pl3l0aMjRj8feeOnJgAeSMXn6YFPpCozDuwYGG1i/ofZ13Yt+w7PMpppj
Bg92hyr1NfCM/r/44YNNM0vRXq/0DYxPG5OmX1fyXNBylzwXa7lLfgucsU1y
ffapbqrRNuiNr9MeVsw/SPUaXDb8X8xlG+f7AtaPnyB1I2dm6YXtWrHE8Vac
ARyPuTF7hzzAM4OcD8TZQWjU0afH78RpDd8JejRN/Rn8WJhLHedRf6WX5kQ/
PpFmRTOPmj0MDgq8UfMCpscZZR8zT+AvGTOAH2BugHvF1p/TL4afy1m/f3uU
n7t9b5SjG32p3R8FX6VHOj0fP3vFkJsys27crDr86D+bn0meR3s6jHsul6zS
fKrD8zl4VjgL3VfzbF3ORc/X5Wz8cz4f16tGcRb66006cWMt4KR4yYM5GysF
Jy0xUv034vmIrwLz0aO2wH4KaLTmHI7qinYKe2NZV+FZ4vmfcfanPWajT0n0
CIs1ZjmbSZeO8Lus4439+9i3X6xK/iXMtZzReT6dYc3xMS5LvRSxWddL5vvE
frlxYusdyv6TOYvgFfZffrk93nfZnEv8HfDxiP4OeDvYk2uzsFfbs2Oqvfrk
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
oc9C74peS+yz2DfL3jDRjxLu0FQeWq4B2cPBWUst8Hl530YLjNcpvEv3Pu2b
Sg8UD9TonYr/6WkTkz1US20w3g/G4qMmOPpfxRoEbxVqENcfcfY251f0RvLc
JPsi2Q9pHOZuL4NxMzTAOzlnwDydl1iL/r58zjgXAfP0vBRmpcCD8awUuDB4
EHpOirkwePLgZb9hJ2lF4cKWPFj60HBg4dofl7FU8OCIpbqvGzni1M8PVvXf
zUwKPL/i34rvFz5U9v26eDjZWwsOtfnT0YPZ3wPPfY29u4hRXT5Rz3+NOoxl
8/kfNT/WYjgPbpo5H7mL1hLY9wJMw3qCqCPYvF33d6anr7OvMs8yfUQ/u+Oe
Wbi68HThubo/CL+1nOu7eJXqwXIWjevA14ZacNaQu58bcnc4BOTt9h+LnAFq
AuoB8GDjwCs11ARwr8Bz4O+YD1LOXIZ7FXGezmCU02kfa3KpD4ZcijyqiVOJ
904TpxIu5XLVqLYOTVTU1TVp6qL2CK84zzyNXnFx9umzVfKDwe9jmtd1Ph/w
/BjnB+4z0mdFnBPm+XicFz4j4J14vhIzO31OMl+JM7Kc+0o/3z5rTXiZZ3vH
94f3Bt3hQfn92S68N7wve+bvC7M7Sr86e9UtNgaHxYOixGGtfVu4U8+3LnMU
fDuYcb12VftFsH8wMxqPiDgDMc4/BF+Meg68gZv8gN8W9tQ18p7KfkoNDbeQ
vTT6nTEjBM8z9tY7q1o3gS+N+5Ho5speJNqJ2I9cWtdsrzi7l/Qgq+jft8z4
EZqQbYdJc7hzlfZk8kbyRe/BeCyg0yFfpO+H1wKanZJvYu9QeCfmwZn75npx
k06qE8fpC6hZjM/fUdQr9BXAuV23eK7qz1qjM1XRvsaZquRj03Kxdu0FWOZg
2+fvqfuC7FPw8qnB7ClU9gI944YccSLnhJ5pc8NEygfhYZZ69qozeV5sqWkn
d91CP3qoShoVODXwgD7dSzyg1cCtFB+eSDoVPD/g8cDfwfsDD3188+Ht4P0B
ZwfvD3N4o3cNfuHwdyPnTv9N8mSL8wzoT8Bjir5sxhx+mvNw/k74A9uEv9X4
A3+fMQh/N+htgif0unVv05hC2d+0xwnaSny9m+YExBkB9NgGVeKMM0sBrnHp
pWXO+GOhDnVt8Ya8b87eTXMNXYvGed+cI2gEXsm1OPMPjA+W9ZJxbHuvgGcb
y2Y/MicbLvY0HnYn+WnBxYYPDx8bHvyKnZRzwflr0h7FfMs8aTRFYD7wKNAU
eQYc+A5aInOmwXnwq4KTDyfMXlVw8+GEwc2PvHy8q8oeP/lcU29/ofw9PLZK
WNp24TuIn4r96vGqPyI/B3DL0Glt203csluL5wCeGWckzwPv3x5Vev1w23j9
u3Vrr62ne6lfy+vGa5vXvmSV/KfPbNXcfnj9r/aT3ybc/h8NRrn9pw9rXb/x
HTxk8NE0jo6HprX9aEytL0VTV84n8GyCTlX7EjAbBQyd2fPg6ODn+BLg3wl2
bn8C13Ylxx3dCH6acNwPyTWefarJZ/CpRitiTjB5jTnB5DXkWWt0xs+JheOO
LvLoiZrjHvdGamfP/opzv9gfra8De0RjN05fF3F58hZyNZ41cHnP823C5jes
EofWPRI4cviwzkh/hHzliJzD4V1DjoJGoORr42eDZgDe9s2KlaqE0YLLsieB
zbInGZ/9gtZfn/clz8jElxxdsP3I0enFOZnmufPcwCmBFx7nRPKsmOduP0q4
PnhS2j/NHofR3xBvSnNgowbMPr7WZ1HPlLos/JGZtwQHjpk/zFiC9+Y5S/gi
M2cJP2S0xubI4adsnhy6Y2uOXeO8p6r9xfEWN/8fb6AmT/ENqno+CJig5xrH
2SBggHDEPQPds8vJ7eHy2vcH7Yl9f57sj3r/NGHv9BkO7qZ+X4nBT7Xfg5HB
A+Kzc01n3bBrubKOazonwd6bcHf6UeDueEiBu5v/CO5O/8nz2OxREnNe8l3O
+U1Czut81/vG0aEOurlhz3BPFf8o+qp4DsW+qj2H4ow8dAzMYkXDsEreEz2v
BWzhnqqejQLX2LrdJg/ych55nDU/bs780VXt5YOePM5Ke65fe/mM05ajsy19
uBerJvMi4LPMKC9i2WoyZrpgA2aKf9QVucYp9Vn2+/hvzu/IL+xRSL1T+sjA
Y9hT187eSXPvmFliLkOcW2JOA9gMmEyc4dqEx6xXTeY+w6+B/wz3GV7NaiGv
x/eN3H6rkNvHvB5ujXsXTZ81HkL0McrPGb4NHjVwEMy7hHOJN41nvcA/sC8N
syOidwPzI6Y3NyLqgqiL4EVGfpzrop2qmk8Hlw7OhWe3sR4PK3Mtrh7WejP2
OJ/H8FnsV3BY3vN8FltTEGcxcb5aRxA1BPbgvLhK/QzP6KOf4T6GZ/NNDOuZ
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
4yG2697sod2kh3dvltzp0IbvNf4LfKc3zN/p+F2GbxM5kYd007wU+DaRZwMv
MnrhH9FPWPr5+tl3J9IsIzB0vEHA0TeuEl8FrkqcHwpnpeSpmKPieuSQUJN0
81nqWsS6eGqQ5apa42LuKPldE2eUvpI5o+P+5vcXf3OTt7d7+/heeqZy9Pcu
NanWo5bn0RrhPKKv6j65OaT4p7q/aoySHutMed8xpsVexz7HHsRsGfM8m/Ct
dxT1c9Toov2HY1LqdHmerP1Hqzvu7ITji1duPD/XzecWvlzl3BGfW5xZpR8G
Gv/onWjPxHIvtfenfT+9l5acXPer/b4yM/7DDe8t/esyJ8Ung7x0xYa8lJw0
+vVGrR0YEz4Z9uU9oUpeKa/TdS8o/k1dMEz97P/p2of1POrvtVNfnjrfc6k9
Y7qcTd2kU43ztiNXkPph2f4orrZDNeoXzPwqfILxCLY/8Jp5Xzmjqr1d/tNK
M/NKj0f8XezzGOcm45mMXrVpbvJxAbePs6iNCZXzqE8vzjOwoTinFV8kZrVO
5YsUfQ3gMEdfAzwy7Y85rmf8g25zz3iejB95DotnmIAj4QFbajz3z7VKqWd0
zULPvJz1VtYteMRTu2yke2xbjc7TxP8ZnSjzNNGKMlNzN8U3FKdMpNmaZW/F
dbJnyZa1srFB9tSo44Df9bFumtOAliPqOKzhaMp7qUXX6iVN5rmhDoVf7BmZ
nhuMDsczMe0VhbcHc812qdJcM/oIn+qlmWboU61LpYewQVX3T907jT7n42YJ
jOvNw5fl3Oe8j/35mLez/+3UsP959l752g/t1dra+NqpLcb1b9EKuX9rPxSw
bHQyzMFkZilYNjg2M4PAsT0LrsmLjH4GfmTlXLjSiwwd0ptbozokfEbRIcFj
RoeEFxtaJPusRY81vDnwS3q6k3pMeKrRT2IW3qfaaR4e/KzoMw03a8eJ5DV9
mO6/9LDuD5Sev/QH7KmPN800jX9/FKNHg1ueh+t3E7Zc+gJZL8u5AL63UG9U
K2uuDHsqPl7sqaV+G+32BnlvPWaingm4dlXrAtAEoIVFEwCuGnWw6BXBcX9T
1byJqM8Cs0WbFf3WPIvY/Ef81awN2LRhj0PXyB63b97j6Al7j7PnHZ5pcaZS
0zyl6OMa59PhN8AMVTxu4bbb57bpPPpYw3l0RKvWPfwl/H3Mzva85cjx5O+N
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
6bmLnL9xfnNTDYPfIX7OeC2ukesZcGNqGuPGfj/jzMb4Xtpv75P5/ZxRLRhY
w4d6CWewJqys4V2/20fSOTm19Z6t2u8DzjueH9TUcN+jH2nT3423I3/v0aF+
O6pKuK8xX2rUuzs1j5I69bSc05n3VOZ0cJ48q2WqM/cj4cx9IZy5eI7gowi3
Av9967yYeWyNF3gMHvwPDJLea7dh0nxdGTD+Jj4omD9Y/6X57wHHxgOFnGmu
XrMPyoH5NTV5mlofFrnf03RhrbTfRV8D73PmeqFdsDdT9MR6thqdI2bvFt5f
sJKmOWLUIFGj+KbOqE4Rfeb9uc6IPCVqnSa+HHWPfRXBGcyfgC9nrxu0Sva6
4fvBexp9bvy80+/0835Eft4fanjm0YFaG1LOqUEfwqwaz6mxPqQdcI+/Zuxj
mXbCPuAXfVtxq37n7hNpPgB8oun5a9g/JvrGNGlzrE8stTmcGXDu4rlxcD4v
OCt8TjT5dsGLsHcXvXF4EfTF/9tNvQbmAURsxXMAwFfQRozDBcGqy3nP+I/Y
m9Czn+0xGuc+g4tGTqCfPfxMH8jPHjMw1q7quWx4/URNCrMq0B2UuhT0B2X/
kd4jPoGRN7TIYLzXbukxWHru4jUYfQZX133OrUZ1Cfu1ky4BfTQzjtBIH6hr
Vh0krfRTincOaw9o+ofgmOy1YJcT/cTJpH8Ihum9y9ww72HWNLCXeT4k2tU4
H/KD+X1F38CeNonL20tcXjhDaLTgU5dcari9cU5onGdX9hTRzHuWHTVf5CVx
7+0a6j7jZtR+Tf5Uc/SSP1X0prqvqj3K4BW6p04/3TNx7XlZ9tXLWV54luFV
Rj/eswCY6cXacVievXDQsoLjec6E94HPd2t/Hc+Z4Nn37DT33D03zT58HDie
D8fctHH7oz1cvT96znnsK8J/oa8Ye4pbtWp+qHv9fq/gX5ojTS4Jn5jz5e5w
xhya88h35DNml6r2TnQfFF6Ze6Fz5Hog6gjpgXo+kGefUmu4xo9zUP0deDh/
D/Aqs08Z3mnw8o/JmIg9Ge0lZW599KmI9RH1CLVRWY98vD86Q2SqGtW9MeNJ
njtc8g/g2ZjDCO8AvsH8rWbt16S5TVXax33Ws39/tj/Zh9H7g/eFODPW3FH2
gRk558D6zy7OuhL7xGfU2KdxT8+g+3ZDbYGuhPqCPk/s8VBnLFM1z4e295Tx
c5655XTNbYP03FGfuzanLsff4/6iNqcHzOzOOLcTvH/T7uTZnbtWdS8N/2j6
qNd0R+c60DNt0iCe2kszJEsNonlLB+Wctazh9w41PHgRZ0k5C4GzxPMQot+G
uT/0t66oEv+n5P3EGaj0ufDgjL1z3j/658yBN65B/zy+f5zH1gByFlsDyJnM
nGXPjvI5vG5V5zlljnNOv/ZfiPxx/HLiPJnr+qN8Fvpxy7YS5/Rc6rNW4uDD
P8Wr1jP+mMXCHBbycOOW6GA2HaRc/B+DNIPF81qMc5Kzx9ktnttyQ87dXdc+
WI32YKjZqGkP74/2X4Cudq/SvC3P1MTL2j7WeMThZT0VN559+Zp8fkUNhvX5
5IPo86OnfdTl71Gl3iWeAfYVp7/k+Yi8yFsDdgDPMerI4hwF9v1SQwa+ggYP
PAUdHvMV0OCBp4ClWINnr13OCnvrMiPdvUF768Zz3d6j9h2dqVfP/ou9T/qe
9O3hn+BxwCzrVfujPge3av3P+d50ao/+z0wkPcPnB8m/CU1D6Z8Ib8D+iZE3
AGfCs0Ojlgj+dqknYo7oDopbeom3jbaIeaiLVkmn0qT1ss4LTyR0K9ETyd+r
cd+pp7tpXqt7LOClsddjXwr4CvRXPMu93Ntv69fz3Mv93XP1rAvAw7yJW+l5
jlN9v+M8xxtzHuMZRZ4z5RlF9utxD6j0JGV2yNIZN8CzBI3sY7mutV/n/p16
RgMeXsZ37ONlfrvnG5g3NMmvrpfmGtCLH9drjT1W+3XGHuvRWn9mlfTa9NnL
3jqcZ/Odfz6Ymrtp3qa1AuRyq1YJazLOZP4hPu8l/zByWuF4Wzdp38Emfrf7
FPb1if0K/HHpWeDtgw7Fs6NK7m/JtwWPa+IAm3sb96qLWjXe6fzUeGcTlvc+
/ftR/TSXo8T07O9czkSBSxD9leEUMCPFfs93FOddk/7X/r/WAKMv5fxzPVDl
/SLWA1f269nJ9OXiPFnOrL27aaZsnCeLR879Ve2RWvqjLtYb9UY9Ku+j4HOe
q8J+Ck7HHnpiv+aSgNXFucL0StG/xpnCnid8XP4exfnyaPYiP9rz5fkuecb8
klWa/eB5XXipXpX3NGbz4qmKr8vvJ9LsB2Z3cYy9r6rnKni+p2croFmC+00v
n/3JexP9fDBP9GYkxefpumN7aQ5T9PqIPh/2jUfXV3rFc56h63ONA3cz8jY9
Ww++ZuRqcqREjb/3tNvyfob+E5wOvOC6gBn8MuAGYAbmPOEVE3leeMWA58D1
KvGc6BdmrzB78uNbyfNC7xmfHXz/8drBY4c5avbXQXeIxw7+OjxzpX6IXquf
OfZaa4iMo4/zOCJXMT+QOQRwA9GbwXmIM1nhins+Y5y9C3fc3Ae41cxUi9xq
9MnDXOvBUTO/2hhz0/PGHGeeN/dzx80fdT3J76D31s71ZOnHztw8e7FHH/bI
U2ryiIKnhAajqdcSeUHOS+m3OC+N3E20a+Zv2rMk6tbsW7JMrgHsvU0NME9v
8txY8v//iy88eAve8HHmop/JfxXPJX0IP5MHF89l1FFFX21rqfDGtJZqr+HU
80RLPCDOFXXORs5L3ka+Rt5LH9H+lVvl3Hfz4WTeA/gX3Icm3sM7ilzgxs6o
/slcO7CkYwcpHzihGj1P0dLflM9RNCulhgZdfZzvxmw35nUz042Z3Z7pxmu7
q8iHzSGOfuLOheEPex+1b1L83NhPd2z43KjLt1ScU43W59Tmd/br2vzKXJ8P
q7rHSc3Buf9Iv645lsz1BucIemm8udFMP9ke1U3bl9te0+PyEL+Hpc90fI7p
qfEc9xqeY7Am69ztY8xzg94dbuw4L+Njq4QDlD43eJYz4wlc2V43TRruqN+2
923kC2vJ2Dm9Z3ZHZ86YtwBnAf/r0n8KDSceVNF/aslW7YuOZxC1Ct7oeAZ9
MGMGeAa5Bnf97fkBsWdGv6z0nrTnpGeRwxEwL2jDqp4jG7X9+PuW+n5myFrf
/4v8mXrWUOwB0Cf1jCFmZjCTFU8f+/mc10s+PmdOJHwPP0h7+fBdJJ/h3PTc
qpjDPJfzGM5P66mti0JPaF2UtdXMmi911eZjRBzW+Kv5kuhS4N+Cw5KfoPUY
57tW6oLx/7HnGjVL5AcbOxzHD7ZuExwRzaafBbgpPA88C2Cu8xfPgTUY4zhe
fhaYdW2vR7yy4VZFv2z4VfZ7xC97vZwjTzVDgDyZOQJxhgBzq0+s6vlh1vtH
7MU+7uSkJa/0p71aPw+nlPzTM2SPr0bxRmbJRryRuXX0tcCUo4YTXRu4Mtq2
Jm38OOyYXnE5P2nlTjM3F/9Fc3PNy0Vzj9Y++iLC8YLbFTXv1tnbY9k4qDFQ
+kfWcdI/Mh4Krwk+E0fKc1Xaw5k19ULYx5nt9lAv+V+gccAD45acj6J1QMtj
/U6cW4mWh9mVzA5cqJ/0PKVnR/TbwZsajhD8IHAYcG18k4xr459kbBvuDH5J
YNsxB3f+TU+17KfSh6VPTQ/WfWp47u7F0qtmNjs8d3rVJScIL6XIC4LXGHlB
M1fJ5xa/Jzye8LjF54k5kng6wXnA16nJwzTiRXDsIheX75bnQ8XvV5zR5d7E
VN6/V2SMwH4ueB7a9xfPQ/Lfj7Yne6Q6R5gr5whN85vtoe1Zvp7jjM+F5zij
849eCvaewmvLXgr0QuMMJmow82Ws+4QzQy3mGjLmPebOkA+4/nAOsFKuD+bP
9Qfn/w5V4lqjuS157Ghu8XBEZ2kPR7jsJRZ7cS/lRnNP1HgsuVFTzyDqYmK/
AG0M/YJxuibPl0bfRD/ffDi4qE18OOu1ok9vuVfCAfpW3iup2c29j1oQno/Z
OzVX4W39US2TdSERJ474hvFiMA5rZsA4jBevPEVO6p7RLXlPnsYzyPuw53+y
D/+92ItZu1Gnef1mxVr4CTEf8fxf8w+cgzyun79Ypb78Uq3Um1+eXJY6Z5A8
J+jHx7nAcNTQNXsuL3w15vEuETDpC6paV0ldQ28IHJq+EHXN76qk/WQ+LT0+
ZtSy56GXi5ot9rZj8p6G/hH+jbWP8HDw4cSrFR4OvBJ4OObFwoc1N9nzZMxL
hpPss+rFhvMKPUmcq2Oexj6679vbiaMxt65fRLFZp+ZnXDpI/IyXBomjUer0
Yl/fWj36+uP8HckL8Xi0v6PzQ+eGfv5ijuP5eVXObTw3jz3h/1V29jG2VeX9
XzNnzswcbCuxBiPGSBUB/6hgo0SrIi9SRIoBqxZjW6SI7xqvUdFQjUVF9Eqq
EY0VfCFEqLFiX4wlWhVFaBvaKJZKa5OWIGK1tdpoqrGW9nxc6+P+njV7z4zJ
b/JL6tzL3Dl7r/U839f0YMxmqz4MMko5B/BhZBY8+OdYN0liPHgM0rPyjbK3
bwUtF70971uM+0HFE/SFqm03A+ekMp1ZqRbdvEp06Kyb6O9e2O2ZnLdbgQ2w
W4I/mv/HfQOWbT7SWe2uQUuPjp5cJDPw4ePp6rx+o2Z+m/FCTrsdnTeU6u+D
K8fjp7dPXx/ZU/r69PQ9rAy5UXB4OWvx3N4Qz+3FMRf2M+Fx3Uy4/KsmOXz4
+0+1nwX+/pfKuG8ErQTeEfQS+EfwjqiXGMs45bm8ot0P+iUf2p7/+8bzz7N/
T9uLePbNqyDbtPdjZGeafWnMLsyVYFQ8SzxDmbt9dnuO4KTG8uHxQYzdPU+O
uweuuM9PdB/F92KW4i1tL+3zFN8T76V5y76Tl8Z7mRkZvqP8zHv5Ns7fHDTk
4MZgxsv/aSUThpwkdJFkz9otTfYLWUlkv6CFNHMAHWDqg8geQAuoPoiPVxxd
Xs/clOT1uI/hi3zPes4oszblj8wIMnsT3N9zGe3c2LmM3uGZ3dnMuXxyGdeH
9X2KmSUHHoVuSmx/LE9uynuUnRZgDHvlp2Tu5G69pHj5yRTGw2/3K/pNNJtm
Gpln5GdGDyu6Lu/+L7U7H7wajJpdij2K+19eyE50+tDpQr99o3ZI2YdOdxSd
6JwRT5w4J46Ic8IeIPxl5h7h5zcDDozCXldzj+wBk0NVL9p7nMkCpfcJXjU9
xdkxrrc4MQ50Zubl9/nnzszmnud7mLl7qa3sdZXm8KGjurzDUd9QdmKp99mq
WOphi3rO9GcLZwr6EnQpaFI8T+5dap6EGaK9ng4cx0yRo0rNKjGnhMztd8+H
zO1/3R4yt9F19/0zY9puMy3NE0fbTf8dWV7gf5nTjN6J/B2wP3Kawf70W5Dv
mp4LOr/wW9APSccXmDRednwXTyqrfk29mpk9gb5ut7Pv5RNnH9oPMFL0H2Ck
qQG5fXPItUQHYralPtYxb+rlsROf0Pbh97adeOwedA405zvvwXzX8j2zC/Oj
7R3bLf/UjgB25T6buPcw4sv83mblan+vwzDVLJpJ3uOYu2FJahHZ9fXagKvL
Q8jn91xE70Nk7jOvnLlPD6K7Z+6dZmqgIUfjjG7c56PPSfvavD4j5KGRhXZB
qVjpbu+YutVP7uO5u2zkuQOTpL9vN1ySLhpxyd7TZD7FmLeB2fCSslOn6Iz4
vJgR6Q/YjTPFK27Wlhk4XysDbnbR8s+9fvn1lY2qObws5lPuFe8Uuudft1Xv
E/sIx3AycCf0n2SKn9mwJ3Bvfs7MAyMHrP+ZZ5uDt12OF/z7xFJ1dnoGer8A
HKWeAXnKa0rt8jy4/G/dzh2+Ubs8j+D+4p7Yrmf3aWXohIVPgEvQs0lfoHyC
vY14Nn2nxrTA4rW+Z5d375kZ973n1O469K2pzexnHPYh5pzsLIF3yznnZ/WU
8c6B8zAv4SsTVxnTjJg/gl4E/hoMBQyvx+/I23h8w1PM2cj5Y7cuQs5H5g+1
3W8ulcvruzrpjqWv8zHz1b5Oe69S06zmDU0z72Tq3dyzzox9z12PHJfnbw0Z
w+58U9zvvbcGjjX53908p+Rt6Dk1J86esNQzmBeHrgFMkTxNMEVmlZe2eYVZ
5TdjRoHzlY+Wh4aDPmGt+hnkocE+4HTAPNCkwT+jefpiqTnM7Jxk3Zzcfj/o
nvgdoXm6JX4/9B1M9dM4pyWumXl36U02Z1p9cN69mR3MDir+4r3LjCXvnLOW
579+BaCGr5chexsOInlk+AcyuJN7OKmdF9xt3GvZKfrv7Y7jftvLm4nfCJwP
TxNY4BgvibcJbhJcEH4STPCuMnj+ssvNbCR0kXr9zHnP7EO8nWQeop/Ax4qn
U+/qz4LBwnOAwT4h9vjXzFd3+ZfELs+7Zj9B9sOT1Uomh/gTnQTkccBB9X+v
f+fn4+/seznU4qFBz44Hnss7ymq/vN3y5FnB24vXw1GaZyWO9c618UyF7F/J
3hUwzB77g9tM7I/8CrA/MRjzXr8/HzzPL4z5IDto2WGzh9aORnda9PWHt3e4
f3/tTOTd/UR7b68uNZft7IZVmMM2pmmj33NqnnlfN8/weZvN62duRq/524e1
z55OCgRzz1gMvUjsM5mB4x7jfINHNbWtYhTiE9d1GMUrA5/g3/z5UjMY0fGZ
vXh37G1b3Q6MV4mcr7W2A5MBnPm/6pDFwOizMGcbrZxZ23B46OTotnjXPjBK
+iT/d2vAKcc6UPLfrJbXnhazs+QW6Wqxp4XesuvndV5izx2bmT4UM9ORpeo4
D6xX7QM6TjScR86rBgItZ69/IPeRzMfUjJL9yK5zeMOO0IuqFWUfwBfJLnBw
c+Cg8D3S65R+Uv3cF5dBuwBWqtcJzYJ4KVrr7MY5ZzZ04jC7yu8yt5LtQ+Z3
n+9D5jeeyG8sv//pm5WPkYsh74f87+X/W+Hr6IeQr0PPJF/3xLLqbXP+Aav9
6NaA1e7F8fzGVj3H9S49YLazQ43Pky57vEx0MOFj4jPFy4QG9LXrgzbXrsUL
22d6T/tc+UztXeRztXuRXM3fLVXbhKYJPRNcfGqa4OPp8ULX9JR21oiNoqE1
29VebM+c/exnV3T7Wb7b6nR9v/nv3Nq94zeXqhdRK4JWKrUi6KrRiDB7oiXL
+RNdGTPodVurWjJm0Z7P5zwQF+edy5wizgJw8ZeVobP07rKze9uuUvyEz90e
9HC+i76D/9g+rz+I99BeAvsI8K9kFwEeg0e3vQiNFfqqs9aqvuqUWdVYkQ2P
vuo7G1VjRY/KvTpcSL1iYgTv7vCBE9r9zZnKeXpou7s5V9HQfznub36ea9sZ
Qk9w3xFMhiw/C2cJPw+Pe2b2ZAcduSxq4MjwGesEIadFP3V2UqWXWu2AuoGx
7+07rPhe+Du8C6nrA7NCy4dv6ZAOrxrzNONnRlsLt6z3GQyPLG1ytMHxspeN
LG3wPLrZ6F4jUxtfPLnxeOIzL57e48yL323XuU/bLz7e7Tt62tPL7jkO1vrV
OMfv7s7yJ5XpfLenbg7ZUebpXbm2M1OPLp/HzIYuH7P1yLY4Y/nnn7ZdO33I
HRnLGyHni7wRfJuvavfznWs1E4H7mUwE7mi4Q7IQPrs98IfuTJkNmvukvTUv
Xaxq27LLmL31ew1HYme11zizCNld+96D7Dwg85pcju+2uZp+E59p+lTscFUT
Q1YAuphT2nN6SXuuf62sdgXY7cKOD05PbwC5mnQH9P23Y7g+349W8SHLv/dH
peKaL1t+75+23fgcdr7l111tJ86s1rFuWjJafzCvHbX6RHfLHsFbT/4I3nq9
buiKLluvnTjpe4Mfw1eCnghujC7jKV0COjo1Cfg5p/I9yIQyD2osF1AfE34K
8GvOgnNHsHfOWPD2PGMPbg26cM9Y38X0jmcuDu+f755ZzjzH5tzCfb+tPb/i
Hy8oNdcUv25mm5JreuLmkGt6XlnVNaTmSb0TWie4G7Mm5VLB404JPK4/73tM
TizOcwwMrtdkkGsCV0GuyR2zgaMi1wTegmwTuCqyeJ07pvBm+jjAm/Hh2QOQ
Hjx6ANKDx7OOt4pnXX+VvSTg9mRR6rFi3iPnPbsKyHon5/3sjTr3/VXb4Zn7
MiMCfyXeSjngOzarv1IeuD/Pze7ocxs9y5l/p7RIzMFP3Ro6cK5r8+9+dlUz
IdhVyYTo+Q24jeQ18KL5+1Gb1WtlU3OFTkvNVWb+k/Pb5/6T9Uv2P1m/8Gr4
EO4sNR9wrHsT3zQ+RL3S4Djmy5hNA4bDvcp9ut5+NvAc+li8W8naGcvZ4Tm8
crPufH3Ojn184MLgu2C7YLjgwmDB5IOBB+ec6owKT8OcCl6ac+pYr506WfSx
9tvh57qqDLnGv7O2M9t4Jfd9s54HZB3j8eKZ1sfDs6yPh94CfDyHbdZupOwv
6H2u5qmdFe/Zfdt7lt6qvbBpfCfg0n/edvZXr1f/sB2Up7YZ/cK2px+9/L4f
Lr/evjbkWZBjQf4dnqy/ndXsZ/IrzlsMmQrplSBbAZ8EHgm6lZnN871NXzTv
rfku+KIz5xzMRZ2O2AtYUWZmicH0O6H7oHsgmRbsgHv1SvDZ4LO6Mj6bQ9rz
a+eCzy/PLnPRce3Z5bnle/+tVL+1359aAXzXx7bvBV8yD4x/Z+JLmQn27sXQ
Q8XcK3ZuD5U9pWDn9FDRVWoP1V4dXTyPPIsPjJ1PD1F2Osk96B86qlRMXr6e
nmw7spOzT30M2pheF4NuUU2MPc69nyM7POx0Tj8Hmr8bS9X8nQpeMKu6PzR/
5FJvLKrGD87H3g87P/rcBbS0cD9oaMkUTJ105grib0UrjU4azR7aaPYxclRz
H+t3MfxIT479yzyf3lNCrk/6SvBZ6Ssh0ye7YOyAgSu3k9E7Zawf+GPzoR+Y
vfPY9pz03qQx7RAeJXUU6aPSQ0UXHrsXOoqTyrgW1oxYsGV0sWTFjmX25m6b
uyy/w8yhzczuXvdvLrg53OaBL/+/n/bWmtuoZtuOWjRiYz//czaHfFu1vOLt
Uz45P0N6JB63PfjkmM1zLlfvz3yO3h+tP31+aNemZkV+l86L1yy/99CYGXuP
V3K26iOYGe2yn3p27bMnt++x7dk9ptSdDk0APCS7HBw6PKSaAHc4+PTfaniV
WBVaIjREaBLtOjLbRl12z7+j006vCjz807eGjm+123igp/zPZA6oK+vPvDzr
HtnmBs67seyaPrfmS5s1s4ZeTXkd+zTljNJbdPRi4Fx6voXnyyxrdeO+F2Nn
76NGzt69MIPM4gcnWP7PP8GWez2uHl68cGDLR5aKjSeWmjkHic3pE0ws9Zq1
cYxRfDHvmqn9mdl5I3Zoexx4JnvdSmpWeD7FGcAYeC65V5OTzvvUbkfuVPz1
v9Lu1b67Ca8KHgP7m8gNwmeAvmFMn4eHKfPNzDw8v92Bx61VbyP3IFj4F9pd
SE4t/kbuvt1wHbJkM7t9TOOY/A44JNzO1PucuoIz4p3ezZv1+K3Bm3VJWe0z
ouMH7y0+bHuN7HOa4grQbMIXoJmAL0iO3N2o79i9oWEr/1JqtyOZWzcv/9yL
Z0O3I7gKnY49Jv3ZhoeBSf/3rOLS8FVg09/aqrrYXhObHVfoYum3OqVUbbd5
JmDvp64PeSZi73g0yULdT2fr3fOarWs2Wz4DY/lsN8YzAZ5mT7B9eWBqiadx
QZpzO5b1y8/iz0HGHx2y7s8PXVvV9L617c+vbefux9tn0uNc5qCJc9HFSy8R
WNfYjHR83Kv6brlTrykDv8cekBwf3BA8H/oodoLsTfZ3QeYvvwN6TV7Ufgfg
bH2vt7uoOmy1SekVRO+Y/kC6D9Q6nl52Ztizh9iL2HeRm19Pvmhqx8mURD9O
rmRmSoKZZi9I3xULZgouQ/YNfDS87tSe+MW2K5KBcsx2zZl60GKnB2ZKN+A9
5rxE1/ATln/uWWsVbzx3+WcPMLfxWc0r3gjO+JYO15jCNOgwyswNPqMxHVlm
OLy8fV65c3jGunPYGeiuQS44jxTvtNkDzKn9fArX8mfbQ+/6yfGZMYf7eaH5
T73/XpnPeM3IfTbzOfvj1T+Aw8sFo+sSi0fD9OWGb2XHM1wvPK8YF1yvGJfa
Y3ic1B+T0QCXg/4YPie5nN06QvBSkc+Cj8qsEHRa163VzBCypx89q5otNVpk
VZg3Q+aKWRXkzpBVQfaKeRXkr4zlYbDL9j24zBfZmajXGr2oPms81uhG4XXp
T7xsAofE45B9zea90eMNHvmz7JJ4bS9tu6RefWbN3qvPvPnwrerXF7Mxkx+8
BqxGHMmO7fMWq143Phv9bul1s8vl6MUwf4nrMnt9b3PIzGL+Aq8kW+rSNreY
LZV5DGBsP9ys75F4Ebkm5GqgSUOPBm6ExuJ+bW4kYwNel/nh66Xq1+wHZG5I
7Rqe+VNLxaTuKFUHZZefeZ9on9jByPj8cKlYmjha9kTL9Yihoe9EK0YfJh2Y
189q/2D64tGMoRV772J/mVBihwQiwiVwdN1WVvMC0OkdXH7duTHkBfBvNjNA
zd5TFvXff3UZdAeZ2ZVdq6lxgpvhHU+OVl8B7zXcDFztxfF+p7c382PU8NHH
8Mj2Ppp3Ze4H2uejtqpem/wPtM94NMjcf8zyv/+s9Xr/vnpefQrs7Pdf1Kx9
9nZ+XWN9Bn2XAb283K/eqz9ar1gf9ys9Mdyr4K9oL+lXYN98xqzOsOhkbt2o
PO7ntytvi/YGvKDv5CbbLD1m8GhwaPpu1aByvmW+PucbetTM2cePiyas1473
unF+d2TuZU4nuXtm7pG9bUYnXNcNZdrvmXwtHY7wXugS7UAiH4NdNjuQyMh4
7mbVKibeZWeQOJeaA+9AcMBnrw0e5vTJiQXiW/5mWe0qfGW769EbcNfD4ZC3
TpYuObpXtrl+iheXE2fPhROf6hgiLwu8jaws5sndunGyszU1Bn0vPbyI3fRw
Ie4XaODYK8jO/ou2W1wU+wW6F/RwcO90V5EVeQH4w6x2Vp2+UfkauBp4mv+a
D1wN8wl7BngOewa8LLoQedlFm03sXrDfzbkA3gsdGLwX2i96tnM2gAMjH5/5
4CFtP3/r8s88czbs58e3/fyc7YHjZr50rvScca7kvGG2hIfodVOcX+dvruqm
1Gs6h7lbsVPxbzUnkuwbsEJ46P4s0jvCefSHcRaNZTrpnyVT2VwncCpzU+09
Zg/8ftsD7ThmDzQ7lV49e46n+kbtoiLzCA3Bft4HOgj24/Uny39spvtAN9eR
t0VHr3eA/jLO/7yfvIu5p7yPM8+GO6nfUXM3fXbbTdWhsB8eXXbnoOCfyFB/
YHv+ePbSe/DM2eA/4DnEg2DfJ8/hjcs/83PL73/x8usJyz/zjuXXweX3fWu7
cgUPWH49e1H1MPA+6mDkKu0FkatEE3NiGfw7Y94duz622/zY95zgl3WepOfk
rnnlxE5b1PnROwr8c8c9FXcU2hd5b7Qu6LjGOivgvNNDg39G3wweHDwz+GXg
Wce6tszBB4N98GLIy0icycwvcCb9tLxr4k3oidlT0W6kbip7VdBP9dopsM83
lMr1wfH1nlHxT953/Fhnr+/MH3MGMYcs9TfgRIlNJE50wXb1qqEjpp+cTEGw
Bbxrx85rtqB5gvZtkqc81bPpmXBaGfdnpR5EbB9NCNi+Wjh5wdTCPX9e9XBo
4fC3Pryd8+zd7ICp9VXjy/nOmd53dpO3YRaf5wIZfJ9r9/luWf90x8Dt4bsb
y2BFcwtGnBms/Rx8eTtr7mzz7z1xznDGfLnNv/zZvy5DFxs9bHa40sFGj6s9
bPSe0ON6dWCYvGOJz4Jj4qHm2QTLPK89h/vReZMNrM57N92x/341xz/eXs3Q
dBce66xmPzZLE3yh5/rg+cAY5PrQmYoPgTWM5bWTFcbdQw4oWgjy2pd/5Kd5
5fhw4MrMKIcrw49Dvi8e6/RXg7XpsZYTpE/Cjpz0SpoRyNwLpsW8C671plI9
D/6eyWXo8xj0ARxVqu6H+7L3lHNfwpOAE+U50fPT5FQmN01uA8+vfVFqqrgT
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
3VtyR3J/YTfKHUYc5OhSPZLywmMaNzjhg9uV5/pAGdc0HLtRdQ332hy0DWgd
Z6Xe91M5Gvpf0LRkhsZNpfb9kl9BNyyZFfbD2gtLj8IHFuP7hJxq7hTeN+4W
2UnwisU4/9RzT+YMcW/Aa8mvyqvCGaNtAr9Ho2++0N+U1dmReREvHfvqp9rc
yN6afch5NmaXZGaR3tbORzJJ6ZekKxldkZyBXAH7A3yBHhkyDMmdT/8NWQP4
b9BAkjuPDpLOaPCS9HSJmaDR0tsFVkInB/4uMBO6OfTq4uUGQ8XH/fGGn+Lh
1q8rhoovNHMD4d1esj5kjzGfo7eFdyMzEO0nexDvERrQ3IfyfXpEmz95n9iJ
Xhr7xhWzIbfWnYPsWrpqyK7lXsOfjz7x6NmgUTyrnU/cbXr00SdmFznaKbju
F8UZofaerAn6tc2qkgsyqyp5enMWcif1uRYbz5lprH/6prXxDupPtvmZPtlH
t/lZ/0vvfQHjxeuApgR8F2wXLRfZbyetVW2Rei4z4MiqRw95aamaW+bnI9oM
fdXGeFcWszT6Wzqzrh3BN7NXz/3yPYFFyjXAnzN7k1Gb/Dlz9we36gz4g5in
cpZ64KzOUv+5MfAB2XGbOQzmC2TXrfkyfaY22jlytcmiu3k+ZGpzl59fVj1K
U/1raud/e7v6dS8d2Y/7fCsziHfLr87savucOJPsPT23PRNg5WD+PhezeCbg
1a5q+xI6+L7P4lXz1U4LusPSdwHepLYFvhptiz4McCe8VF8vqxopZj81Utn3
hVZ+rMMczXxyqHqv7DL/dKkZN87Ih7b5mKwbZuQ/bnMyOzkz5BTf7yxJN5ge
bD/XsU699GHbrUdvMB4J9SV4O/QX8LvFY6C3A70J8yNak9TyTM1K8PR7ze7f
bGccmO3xZTgP+X5yFfrucPMUyC450M7F3bKj0wvAO0nnml6N7D1jJtSnAdZO
LxA+DbANMq04F7JH1g5ZeIp7NW7i90vlF5+3ttprTT4xHAWd1vY9HVkqn/cL
azt1NfC32XEMpz+V4XLf9nt4W7sfeo/DmL8BfRp7IfMFHkfuB/Uz6mbQC7xx
5J5AR5M5kmN6ALUAzIzk4pmVAPafZ8b72rlBFsTV3TmfZ7x5excuBl5Ynadd
BmAB8MFwg3iRe/y85zjhN5PbZA8z2xqOM+/k4+Ne/sys3svvjOcvNbvoWHvd
LhrWP2n3Hrwmd1+vGfBsQzNgH9KNZchGsBOJLFo7kMhIgHt8U6l5m/YNobVh
v8e3BrcPjgoHf1Obd8lpc+Z11v1wm3fJaxvL5p/yoJ8e53f6tuE6Ob/1bct3
ohOFtz2mVK+vvtW3bwy+1avaeakPnV1KflctAvyu3C46BDRh64v95SKRxf/Q
Mp7ZzL8zeXJym/fbK/H6hpWB4zmL9Fges8djF9X7wx6+X98Y5xHesXtPzFr6
CJi1vhPzFpil8z6a5Zzz1Srf1vAPsJvUP8EXoIFK/dOdsZv0etaDbU9xR3ne
YlW32PvWUpduPim+QXlb7rGT24wCf4u/Dw4X/pa76+cXq15M/CJgX1N53WTW
4MfEO/KZ9t5OvbPoz3lv0do/pAxa5V4rjz4os9LRKqvjQsNFdro+d86kqZ5E
uVSyVzl/0ptg5rZ5TeY0mYOY/l32ZfpOF+vVx8vebMcpfuJHbVXNwallyABC
C4AOAM+VfisygNQDkDeN/tmeIPs47Am6uu03dAXRzfHL8539HPRxHlOGPiDe
/b6/gffeDocx/h4/PXmycHBy+XBwPAfkjPXZd+begXvxzuFLZd4ngz37vz9c
pvsW6fcEm3nU8n//u/XB7/zPsXPheb51s/qdzTAkvxDOxexC9NzJudjpmTgS
v5eeG+H3YlfS6e1u5zmfymTCu4jXGB3ZW0rVkp2xtqol+8jy6y+XXzfOqqZs
Ph90ZY9b/h3f5tzerjlmno0/yTKbDx0SvV+fLLM+uw3+fiqPMzsIspuJnCV7
mZKD+Npmzb1D07BbtkvmbphJo8ZkSl/C/Ia+5P8B7ABSCQ==
          "]}, Pattern}]}, {EdgeStyle -> {
         Hue[0.1, 1, 0.83]}, GraphLayout -> {"Dimension" -> 2}, ImageSize -> 
       800, VertexCoordinates -> CompressedData["
1:eJxl3Tt0ZXtdB/CzXBbjWhYpLKawiN2UWT4HFD081PEdrhcIcsFwEAwCl7C4
SJYCHgJeo1wg5ZQpp0w5ZQqLKVOmTDllyildcr6fr2v/TLPXzt5n7//j9/z+
Hvs3Nt9868u/tFqt/vtXVqv/Pf7ib/uZ9S+O683uePnD3fHmU7vj/c9z/XO7
49U3cv1wd1x9Kce3cv2ruf6FHPP8m3/MfV/Pee5/9V85/2Le993dcZv3Pb/I
+3P94TT3H++Oh+/luW/nd9/KMdePPsj9X1mO9yrXH87zfOPN+Tbju9nsjse5
/zLvu/nk7vj4/Tz3KPd9czmeq6/l+Xnv623+n/msM75t3nNiPfL8Nz/O8z67
O57+a36f+6++tBzf6qM5P8kx63mT31vv1T/kfVlf+7b9QX6X8Z3k/eu/zTHz
vMrv93P/yvs/lPsy/9dZn7XrGQf6OAl97Wc+t2e5L/t/mnP0tnee81x/8tPl
/J5ZvzzvLPTc9c56bbO+27/M/dnvZ+gl9HqTed98PuP5dsaX52//PcfNmG/G
t/9PuT/rdo1+Pp3rWUf7Ydyrv8vxZ/l/xv38/eV9pznv/ntO1vfZecZj/zLv
+8zP/tuv56HPm3dyH/7P+j7O/avQ1/avc/+X8/uf5P95/tPcv818Tv8t481+
PM791v9N3mc/71zPfCuf8ry7/8x59uceP+T9t9mvbf6//upyPgf4K+t3neet
Iv/ID897ZnwZL3lS+Rj5Rn5sP5Fjnn/7Hzn/+91xP+txNfZvG3q5DL9bjzfo
Hf16Lzn8hzlG7t5nnfHTsx/l99nf67y/cg5fG0/mb32O31+O74T8wlehs1Xm
d4peMh76hjw+Ol+O5zTyapXz7Xo5vsvIG/qq7837Vh/PMfR8bP2yDvt5/jr7
e2f/c77905xnfk9zHX2tw79r/Jn7b3L/6sO7I/n8JvS0zu+fWr+s52Prm/Hd
hb7x/3348T73H5Dfmff19/N8ejzrvR86P8748dsVfZD1WUU+WR/ycvs3uR56
2ob+KvfJU/oj5+iSfr7+54w/1/H3NufH4U90t8o6ke/H5Hn2d/u15XjNg/x6
mfvJAfJiFbrc/nHuDz8/iXw53uyO9FHplV2R+/fPcx65dxn+qdy1nvj7e3lf
5MFh9vuKfsn+kRf7GTd5fxn5b79d3/d78jr0d/rB8r6Lny7nZz3XGe+brA/5
dTiuv/jZcr7H7s8+V5/hwz/JeDN/+mKNn80v79sjPzKfy0FP136f8W//PL+P
PfCEPMvzXuR++sH+oJcV/Rd9tTbf8P86eg2/Hnx7+fybyBP7/Yx+ynhuwnfk
533uQ2/eh75W31vOl37C74feTx/hT/KOHgh9v8p49jOPK/oi63Ho9+Fn9gf6
OGRv5Ln0I/tsa54Z3zrj39K/+Cf2zanrGe/e+8v5Xvx4zDfjw7/okH1KX65i
3+zb77z/hHzFT0OePnwnzyd/6Ovw+Vnmf5/5XpFX6IP9yj4ez7+Of2KdLumz
/P6U/ZDfH+L/vP9h8Gvfm/V7Qh5kvX7tMvfl+qPwA/lcesWfsXfR/y37PvT9
OvqKfLZP7Mt7fkL21z6zf9f0a/7/OM+n7/gj6G/1RznyH9/N+PM8dE0+3A//
svIn61T/gz5B75GPe1k//Lke9uU2/tMq60PeeT7/aDX2o/o34yfvVr+becXe
ueYv5v03eX/9BfZI1u/we8vrV/+S65sxT/ZC7qfv1pkHefU8/gq+p8/IkT30
Tv+7nvkchP/wu/HX3kAf7Ef8RP5mv8nZo2Ef0o/k8UPsB/S1tT6h54OMj75j
X9YPCP1bp1fWP/O74j9kfviSn7sd9h9/F/09sO/gE/yN7NdD1ucq873OeOkL
9r357+GP7Mdx5AF+tF78hbNcJw8vhv+LXvERP+Em46H/t/n9vfmyt/g5by/P
i6f8bDmeq4HHvOJPZX2fn+c887mMvMSPLzMe9Emfsm/2+b9Zv9uhj+lT/PUm
64E+7u0H/mdfRB51v8N/l4NeyDW/f2E+7NXwP/15GPyi9B//YN/6/Vaem3V9
MvUPfea9/OnIw0dD351lPOiH/ca+Zh9535p/n/vZv+vpr0a+XGV9+b8neR/6
O6aP4QfwgKw/PKf2I/mX8T3KufnjJ9f50+wPfIMeLsjj0HvlSfaXfUl+7Ztv
5sM/M7/6u5n/beRv8ay8h3684p9+fvk+fPeSfcRf5M9kvuif/r+j79mRcNe8
b2s9s96PzvO8jHc78LXaFTk+jv0Alztjn0b+Hgy8pnhA5ncE78p+PtBPw54t
vmu8k54zv3u4Uuazn/VhL1z+eHk/+4i+Zr/Qh1v2HX2W+ZLvxnXMr6Jv2Sff
Wb7nJvi39dvLfKzvm/hj9PUl+ze/3+d3wMfYFxnH658uz+Er9W/QDzuU/ULP
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
D8VB+Qf8K/TMPzRe+nfgW6/Fm+UviMewz+Vryd+Q/5Rz/RHw7Rl7yvgzXn4E
PJv9AkesvYsuw7/H8gHCj+rh0bt8avuM/5tvPurX2efdT+O0H+JLWa/m88nn
fG95v/2pfWB/5GfIl4QPoBf1JPBV9jA/mH8M14u+V49g3PUfrdsPx3jYU8ar
/jS/l6+OPv2fvS7f1n6TE/aLP2O+8FH+mHhg61btt/Hxh7I+4qOtN2MX+B29
b7/gLewP9C1/fuAh8Bj2uXg2+731zPJb6Gf5E/gh8rv8nOtP2ROb3ZG+Jt/g
R+JG5Ij9qv+Q/ZS/Qj8+xe8Zv/hm9bF4hXgif1T+jfi5eiXjy3jr78PjrZf5
s7Pkk9L/7Gtxs9jH8H3ypHwufxE/w8tH/tLq93N/6B+/4L9X53mu/A94FDwF
Dsx/5f9kfs/QJ3t5xPv5z/z+3o8uyeeRn1t8YeRjwEvov+ZfZf53A39SL138
DZ4bPKL9VEb/IPvRfHHx6tAnfKn2Lv+Uf5Bz8d/2RdB/QrxAPknW73bUB6zw
h3wVeLB8Mfup/0/uR2cXI1+x9hA7FH1+cnmUL9T72Yfqj+lLeKP8A3g8Ogn9
ka+vyBd8i043u6N+UfBI9hp869Z6qbcf9iR/nD8knw5fPZJvMfxR9Nl6Dn0P
6HP6EB6T9X/KXg39yc+Xv9H4E/8R3qV+HT3kvPF+eJL8CPufebaeFr3nHJ4A
H4AHkJ8vZz7F6Ncgf6k43aAv+Q2Nh8lf5G+yF8ip0Z+MPm/8xDrZj7fHOftY
fxD2pPrWzMP6iQ/Bv6vf1eNnPeTbNX8+8oD9Kf6uP4Dnla7gyfp7zfVlj9s/
9cvfXl5vvjv/x3rKf1Svqz6a/GSfkn8Zh3hx62HYd+R46I18OhT/Ri9+L199
xPPhvZUn8FH4MjsPXnue+9gj4lb8m5H/s0/+8fcGHoo/mo8w6nsPRj4Ze3Q1
9H3XP+uLDuEdjQcP+1q8Fr9VHtAPmxxDH/rd1Z/M/tdfTb+g5scmzin/4WDw
v3pi+vYg5/KZ4Bn2v/FZeJK4cOyLy7GfD6M+41Z80/wiD61f82c3y/vrD4Xf
yG/1Yexd9i/6WEXv8V9aTyLenPPWF8IHMj7y0P6tR/3oKvVN+PUV/qB/2WMZ
/zP5X1kv+kv8sPWp4k3okb3G3s997Fv4U+uZ5UPRd+8s54se2r8u44dH1Z4g
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
2E/4R/8g+bvnuU++I3rb5HcfH88XX7ff+MX3tOiPjF9+WuNZ4ztv7fc15Efj
m+mng7/gvPxx9VjF8eWrkKeJt8w8Ivu1ZR9/ejl+/vazgeceD3vhULwLng73
yvzYP/Rx++1kHuxp+HPjLfDz4M/s9fbvZf+Nfrm3o586fNf8j6e/KS/a92hG
Pn/jyfKx9DPL81rPLH9e/0r07Xrub/4M/G/0H1I/sD/wEftxNv1/+TO+rxZ7
ofXmw79l7xTPGPU4zR8Wb2LvoS95m/Au/fcGvYlPsn/It8uhP9kP/f4L/0Y9
y+hf1fry6Cv5R8WbRv1//Q30w/4l78e57++wr8R7Wq848xHlWw78ij2qP2Tj
lfI35HfO+DAcAq5wvhyPeF/rq/EDfTLWu/VN9A//n30iLq5/6IgXtl+S+rZR
P8R/JFd8Hwd9md+Mj+K34mf4ZH5/lF0zvrfT+Jj8BvvBHpavQh7AA+0n/GTE
n58MemtcSv4HeUC/fmN5nT2zmvYw/5o9Qn6p32bPkIf6i8ZeoT/QVfs9jvgL
/wt99ntMWa/1wJ/o+9aX0H/wovE9AfH69o/gn5DD/D36cnx/o9/PHPFx+8//
bnxe/wf0E3ojP/o9t7E+tbdGf+2n7GXycHy/58b3TSIv8Cv9UTzHd4XoC/mk
w39rPkF+3+8X88vhz+rjsy7tl/rB8v/GUX0vj2D022p9ETqlH0Y+Q/sEif+y
w/SHGv3e+J/Wuc+Xfxj53/rFkR+2HevV+L/6h6+N6+rJ4Q3i8qMek73FXmEn
q890f/PlPrucT/t+qof1vSLykr0Qe7D44Ed3x+YPnOd+/avgBfz5wT8nI359
T/+Qj/ob8Sf4jdYLP8Nv6LPYj6fO+QejH57vjbLvHg99VTrK/eoZ0UfrQvUX
HP3h+3252APw4tmvrfEjfG+81kf823rmffrZFFeQF+L7l2O81+g/6/98yGvx
QfZF6wfDX8Vn4Z/w09nPjD/PH2X/i28Oe5k8VD/Z/qAD7+z3Ydhfuc4efTri
61fD3oJXtd+f9aUvIm/7fVt2P/tm1Oe9GvFUdsGM99fe1s/V9yDDn8U32CsZ
T79XIS9O3YZ4RPAMcrHfFyYvvru8rr9A66vsl/oD9oLf61dH3srnNR/2h/x9
/io81vcP8n72W+s29QsSj1Z/Qp5HXpDP6g3YdwfwMN/vQY/h2yfDHisu5P5R
P9Y+NuLt/PfQS/t942f85ft8GV/rM+EdI7+If9fvK4z+hOgRv1mv6+Gf85f6
PTnynP+W8bS+b+SLNr/c9zjYE/rpiR+Qd+hfffuo/229t3jwqCe+mHhb5AH/
jr+BX9sPHx5qvfEBfYHe5O/l/tqH7P3R/4f8Kl3wj/kX+p3jf/JiszvK36Lv
2w9GfQb/zPiGviYfW39hPUd/ZPX2rwaeX1yQ/lbf7XtrP1leb/2setXRH438
Kj6rHtD8B94ED23+Knt29P2sfyF+KF8h+1l/WL0/v0H8bOAZ+Et+l/jzw6A/
+rj61fjhK/TRJuMhD3P918lr9aKj3qH5huIr8AR12Mm3aPxp1Bf7Hgj5VP9i
fD+4+YjsyNDL45G/sxr2qu/n9vvsI39L/nbxPPiV/k/0iecnXx19iE+Qx+p5
Wx8jzig/M/yEnk6G/Gw98ui/Y7xH6B8+rt/VqA+CPx2O+vfGj+Srjno2+BH6
bH/UYT+Ip8hX9Hvf3+73m/k/mV/rLNgfo394vxcx4r/tTwR/1x9kxHftN3+n
+Al8IPobvzQ+SX6N/Er1lN4vv8B+tP8SfEc8S7xo5IvcjPoY9dfsV/ZU+72i
N+sxvm8Fr0O/b8gH/ZLZyxk/eex58vlaLzm+70U+00/18+E75/l/1l+9uPWg
r5vfMfLT+v15fX3E4+GToz6r/aDp89Gfuf0c6R/xleHfto8GOZj5svvh48Wr
+Zejn5p+sa2fHX12ax+rF6Dv8Pv3l9fZL61/G/UFcMz5vep+5wxey9/wfUr5
uRlv+xvnfe1/pX4563M67MfWJXqf/Bv44Cbn9GH848qR8+V9rvPX259j5NNa
1+preJd8jvBb+zf7PtPoT8Q+83v1yuit31fl/3ue+hrrgR7JJ/gnfS8+Sz7w
3+Un68dwnv+Lz6oHkPftuRm/eA39/1J+j34C5NeoH7Mf9VftJz98xKtaD0Sf
ktviMfwx9EVvje/z6d9Q/Gn4N62P4a+z3+UDjXzpxh8G/g1/Up9qP/VHaz+m
IV/1B2j9iHFvciS3c95+xzlv/5+ctx5OP2z2EH4ceYPtN539uqM/Rr8J8lO8
pfUz/HX5vn5v/UZ8Xb+KynN2hHo0+vRzy2PrD2b/lGm/wEXVm9pvz2O/+X4v
/5n9HX2MX2of2xd9EPUXHPlP8NnmW7IH7Jt42Gb5fvZ2v6OrfmB8v1J/MfK4
3yvmT47v6ZA/zefOe5tv+vXl/bVPon987x6uJZ5e/GB874d/1/y/0T+u+Szo
MflbzWcZ6yV/EP+3PjT70O9j5Pn69TT/M/gHe+pq2uvsGvFt+InvdcOz4Avq
e+jf0e/iaOQXtp559DsoPiA/Rv6y+cpnZb/Qv/m/9VX/0vyzHCt/+Fe+7zT6
jZU/xAPQe57Tfmjsa/bk8Afsb/v1y/dib7w9zuEz5AX/6mOZhzhC1gd/tH+L
/l95f/OdfN/OeOA/s18X/0g+izwtekq+1uj3Y/+t191YH/xVfCD1G/a93y/N
/ewr+NDewCd9v7B9J/N88m9v5EP0uznqu8jrzLf5ynBV9Jzn0k/l77z/Ztg3
M06MPx+ZH3kuf5q9PfJH9R8j9w5GfFQ8u/n84ikZb/Pe4BX6F9E/o/+f7yOU
Hkf+wXY8v3W54nnw9+xX+TXjFw9qHzL4OvuFPy9+POoX9f9hf+2Nfhbqjcm7
4sfwbPRJHqEv9PmR5ftOx36UXu2/uDf7J/VW9lP/8OIFg17WI96jnwR8Dv5g
/9r/nP+rX0Lm+5o9DC/g77H/310+r99Lp2+sr35m5NnAO0vXcD37OPAa9UTt
FwcvFU+Gf9Hr7BZ4IHxUPuLoP6Q/S/uZk9fwSvl9m91Rfil68T0a9o7+DfP7
X37ffovqAzbL6w++/4OerV/WR//Arv/Ir2p8THxZPQz+Hvn2eyN/o+spP5jc
Mx7rzB+QTwyPzv6gf/HH4ksjfgX/sP/ik8XXB/83/iRfZ+Tjo9d+71Q82e9G
HV3x69BD8Tf5GeTdzEeVj21d2Cv2e/SnnP2hmhdlfpEH+qdaX/ie/e/3Q0Z/
H/Qjvx4eKH+h+nnEk6x744PDHqw9JZ9p9CPQP6rvR0857/pmPdQvo9/nUx5M
upIvR7+N72n5Pk75d+SXnwy8rPXA8u3sd56nH4H9sF7tfyouq78affeZ5bHf
3zE+8tP6yLegz0a/qOZfJ77evCp+kX5woz4V/oS+25/P8+Ch/Cf2r3rGUe91
/3/2+P8AWichfg==
        "], VertexSize -> {1}, VertexStyle -> {
         Hue[1, 0.9, 0.78]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.1, 1, 0.83], Opacity[0.5], Arrowheads[0.], 
        ArrowBox[CompressedData["
1:eJyMvT+QXVlyn3ljl0Yba8CQAWONt16bFSQlYTSUdElRJMghpwv/q/GvH4Ce
GQw5JIuhlYSgltJlc2eF5UpUmTCftQGzTJjXhAkT5jNhwoS5EYvzZUR97/zq
YCImKrI/ZJ48971377l58mT+b0//6ubP/udpmv7fH03T/zR9/v///7/l3vz/
/52ftr/ffv67Ppm7fLrb/vvTPl/vtH8X+NTkTbJ/8vnvLvC1jb8d8M2zy/1L
/i9Nfwr682j+Td4lfnLR/7O/u+jXVrL5rsnL7T5HnoJ+8aB/jP27fX59MP7x
wP7JwD/053t9vjJ+k/f/o/37B5K/7fNPTV4D/42zZv9+n79s8uLxmvymyVPg
7xn/YZ9/HNifmn9z8A/9aWT/UZ9zfdL8z9L1bvIH5Db+7i/afI8//93+ZZNv
9Pnyq/b3mz7fNHm+2edzsz8FfcZP9ifsHwf/mjyF8bcjfeb30z5fkYP9TfM/
zZ/rs7Try30Mf+dnl3Pum/OtwJ9eHM98+lnTD/a3TX8K+rvvL87PfP/s8vFX
5G+C/+gH+3WfDrz8D3zzs8v9q+sXrk89V4L99fvL9XnupuvLcz3xhevP7/OX
Te9x+/tn7e93fT4/b38fBf0mb7Z9vpdsvm3ykvTb+MvDPse/Kfg3tfnNSX/g
3/xnl/u3cn2C/WlwfTbYD/rYR5/1yPqLpof888Dbc3v5RZ+z/tsn/fZc3gT9
Wh8l+/cH+u25PQXOumUJ/rGuiPNr67MZud2v637M/ftmn2/ht/t8bvIU+ObP
L7e/It/q8wX94z5n/CXoT38u2fabPAd97Nf9KcxvTteP8YN++X/ncr6G+e/4
/TT57T803u6LH5vMfTjxbeDnTeb9xfw1POh/GHDG3wf7Lwbjv4Rv+/xsoL8b
8De6Pvv/+Pkv69nTJtf6VPysybW+FN/B7/f5ihz4OXIY/8qLy8ffNL4GvkhO
9tcw/jK4Psg8v5L9KcwfeQ285tf4q5ef/858P5rM529+jvy0z18O9F83eQp8
2+R1MH7ir75w/H3gzJ/nu/kLxh/wNL9XA/6G8bkfnF4cb/nri/6ZnzV5E/jc
9PfJPvqBr6cX/TXfNvvbwE9PB/yvLx8fnsY/apz1a/J/Hcx/CfqLru/x//75
L8/78yZXvEN8J9l8+vdtnKC//3fN/s0+/zjgJQd+OuB75hf8Z/5z0J+Qw/yQ
Weel+c1B/x2cda5+L/7+m/v7bb7h+/e4z8+Rv+tz/z7M6/sb7Pv3kXjy37+P
k//W5Laevo78iz5H3gZ+3ORd4FeavAT+dZM3zy/n9sf+z4GX/z+7nO8DZ357
3h/a+zXrrfVps7/t892zy/lC/Oa7Pq/4xpM+r7h0sM9ze5/4wD/4HMbH/03Q
53e3CfrTQL/iJzzffmj+tN/L13//+S/rN/Nrjc9Bf9M46y9z5DXwI+wHPjW+
D+Pj3xr4qyYvwf6Vv78om39CP1wf7G/C+Mhp/K8H89s3eQr+bQf+v25yxUPw
pz1vzuHHff4C+UafvxzwD/hzs8/fML+BfZ5XyX/im+Zv4bcu53OY/1W+X0H/
PXLQL//u9Hl9vmF+Z/gXrk99P9F/+vnvNtw/zX3/PNB/clE+4E1eAq/7buC+
vx7412S+/wf6g/nx3r0Gfe6v8+D6bNL8vtA+9+/0vEv2ff8+Yz1JPFrrOXPW
e3y/zVfWjzcu12d9az7Dg/132A98Goz/Efvf9LnX3+Z7yeZef1/9v5o99qWb
vJz0+VdNZn818qB/HTnoX2H8wK81eR3oc/9J46f5fT3w76rmv/2rxnmfQL7Z
52uTub+aX+H9YsRv9/mE/RuXj5/8Y/802V/ZXw3+7QbjH/P+3PR3xIPZhyL+
+zRw4r/P+pz4MfdZc/avlsDnJm+D/X0bf/N9GL9xnhPmxL93wT7zmwNfBv4t
bX6bwNm/SHzD/kSTPyzt37X7+b7JPL/Mr5Gv8aTPr/zdRTnyp31+tfFN0N+Q
XxL41Pg+2H/X5G2YH/6xz2r+tslr0P/YZOJ3M++7zd5z5Gd9fsr7b+Ab3j+D
/XpfDfqMz/fbnPfz7cj/wHn/Zp1ifsT7eeC838/B/lWN/5z9CZ6H7O/8aZ+z
f8L60vz5gC/w4z5nf2S50eef/u/+eMibgf2jJk+Boz8H++wPTT/t8y36wT76
PL/MT7DPfP/PJpOP1WT2d8zfIQeOXPlM4h+bTJ5g4kkf/5Yw/n5gv/Tv9fn7
AS//mnz6nz7/5X65bTL3X/Pp/2hy4GuTuf+bbySb7xk/6J83md939C9wxt8H
/z/+Tft3QR95Dv4d/afL9ev6Bn7c5FqfOF5G/s7jPt82Xvkf4n5/PeDYD/p+
fzSv/KuBPvff5F/yfx745/dDc55LPN+n322cvJ9/28b5RZ9P/7rx532+/EHz
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
71yUK/9K/DXPlzt9Xs+n231ez8+g7/qVyb79RX41sF/Px5t9fpX3n1t9/hX1
Kdv18XmC1J8EnvqTwFN/EtvfBp76l/i8g/uXmO+C/dS/xP7x/LvO+w/vp7wf
3ejzDfxmn5d8q8+v8n4W+NlgfOQl8K/ZPwj+cT6e92dz6g/U/nq4Pgfzlf0p
zG/H+EH/dHB9ttgP/n090H8zuD7UJ+D8kfMBnf9n7vw/c+fvmTt/z9z5e+bO
3zMnL6ryW+yf8vvi/NL4yt9zP1H3DzU/6I8t7v6i5u4fGu0f9/lB/+0w/jKw
Pwfu/qEH+u6/nfSD/+gn/9w/m3qfPK+pD8r75wFv8rrtc84HRk590sCR0/jU
F90m/VYflPhx4muaX7O/CfqMn+ZHfVP037FfSL0o4veP+hyZ+ZkT/0983+Qp
2P/wXy/6bz6xfzHQ3wR9+BT4+8H82P+o9azi/d6fMD+oHybu/YmkvwTu/YsD
fe1fmHv/Is1vCdz7F+bev6h4Au9b5Cfe73Pnp5vzXlvnLcR573cdvaqrNOD4
V/2PzZVffmDfzyfPT8+n6F8Yv5539/q88kOJb1JP+9uLMvlb5ptWH3z+ts+r
vnfgV5o+8Uvzql8exocvQf8d/j/o86ofHvSpHz4HvtP45NNX/6J/vCibX4ff
6vO35OcPOOuTyG/2Ofn9SZ98/DQ++f1TmB98Dpz8/nq+a13mdaA561a+xwfc
vxtxvneJ+9zHgX/UtQ76PtdiXnWvg/4ymJ/rW07/qv29d1Gu+4e56yeKUz+9
7q9Bf7nX58u/6ftTMuuzxBk/+HdQf9Hc9ReT/2l+qr+Y7Ff+m963/Hw6OI+l
81OJE38y9/uZud/P0vtg0vf7mbnfz9L4zP/631/89+7/ae7+nubu72nu/p7m
XyHf7/MTxt/2Of0Zl6Dv/p7m7u+Z5rcE/91/85z11tPPf50/Y876kM/ZfAd/
1ufOrzEnX4X4v/nHJk/B/tTyf7eBfxz4dzQYfz/g5X+wPw/8/4r8ZZ/zZH2u
8z3m7G+xPj7Q1/kec5/fSfqsz9P4c+C1fxm4z/8k+0vwfx74V+caue9Qj4X9
if92OSd/gvcRc/Ij6nySeOV/BPvEj5dgv/JLvutz8jWWwIl/r4F/JL/k8eV8
G/y7ouvnfpQl3+/zZcDdv9Lc9SPMd8kf2w/c/S/N3f/S3P0vk/3kn/tbmtf5
z3t9ftD/Mlwf7LufnfvXmdfn/32fu3+dufvXmbv/nLn7z5nz+9wF+/Sj4z6V
9Lm/u56S6yeZV9/NbeCqr5T4lOyrvtKBf/QJDfbrvSrZV/0lc9dnOqg3Rf58
4qrflOpVpevj+k0H/rl+k86b+XxcPE/3bZ9z/mEJnPjoEuwvA+7zdWl83m/M
fb7O3Ofrkn3uj+bODzf3+TrmWecpuW//PHDeowJn3vvAmRf5Vwf2eW8L+rx3
7oJ+vbf9rM+rzkPS5707cN4rl3R9yPNI/lMnJvjH9V3C+FXnh/3oHxrnfGKT
eZ8zfw5/3Of0j698T3HXNzZ3fWPzVwN9zjcn/3YD/zj/PQX7nN+eg32uzxLs
c359DfrMfw3j8/nw/nza6nET13J/OHP3hzN3/zdz938zd/83c2Tez83Psf+w
z90/LnGP5/nxfDF3fznzPXLwv+bH84v9uKft3/2L5sfTPme/jvffqP8k8N9p
/z3pX2t/E28y78cHvO2/bgNnf3ZOvMUH4/ybXPHZwDdp/j+63L/qXxPsT61/
5ZT02/Vjn8f90vb01wn8dMA/Npnrn/qxbYK++6uZu7+aufsTRfuBH/RXU7yj
PvcQD8HvWj+Kc923SV/xB/PKj071VqQ/Ec9O/Y/M/0CyON//NehXfkHSJ36e
xqf/atAn/h654+/J/6Tfxq/+RuY/HnDm12T3U3b/ZHP6D0+Bo78ETn/kij+J
V//loL80eTvSf3r5+POALwP7+8H14fdv7v7L5u6/zPOSfFaer3x+5qw/6j1Z
vPrT3u1z1he8h5vz/F0Dr36ywX49zwf+p/ldGegfS6bfeOXjkl98t8/fD7j7
O5rTf3IN3P3ZzdcB/zCwD2d/2dz9281fyz75UlXflPypk8C5v3zb51VfPdiv
9c29y/mU7Gt/9YBr/zT6n7ju3wec9Q3nw5Xvv0g2J39+Cvx4wKs/aeAvBuO/
GNj3+YLkH/Etc+f/m58OOOcf6n2Ueqvtetf5lAd9viAH7vqw5tRnXQPnvEyd
bxFHTv6/g9/v8zo/FcZ3fdnof5o/9cgDPxvMj/NDU/D/VLLvJ75/xPvNw8Db
77vypc11f0l8SuM7fyOMPwX7B/kZ5rp/+H12+udtnGeB6/31gOv99YDr/fWA
6/31gLf8jTXp/7PPf+fE/+nnv9vE9f6Z/Me+zwP7fK+5z/ea+3xvtP9dn/t8
bhp/CfY531P1AcL4vH+Z049pCXxLv6Zgn/NHaX70p/L18nnsqr+ieqTU9yS+
Y+76qebXBvquj2ru+qjJPvszyb7rpVY+74C7/mm6Prx/mU/i3q/3/ry599/N
a38y6Ht/3nzD/mCwz/7hJnD8S5z91W3gtV8ZuPdH0/zS9YHPgTs/wPwa+6+B
O3/A/Krm53oT7t9o7v6M5u7PaO7+iObuj2ju+hLmri9hXvVrg3+uP2E+NX3m
v2/5RnvyN9q/5/lqfrXxTeAbxguceo2VzyJO/cpt4PhHfNX8bZPXgf06TyL+
ER78/4R9zher3yD9DclDMuf5h5w4z/tkfxf03T/R3P0Tza8N/Od5R5zV/Arj
B/vuz2hO/8VpMH7Sd3/HZD9x93c8/9vPf1lPr01mf9/8DH63zyfi3yd9viDf
6fMN8fKgj39r0N9JTjz5dwoP9pkf8QPX23T9TPOq3xu462uau76muetnJv3E
K7/hz/qcfId1ML9d4K7Pae76nGl+c+Dng+vj+pzEa6r+HPGRp33+ssncL81d
/8H8a+IfT/r8xWB84k+boE/8ZRnY3wb/XP8hXZ9dsO/6D453O75t7vi2+TvF
p80d3zav/fnAq3948M/x8TR+nW8O46+BO35uzv79nPwfjO/4uvl+cP3oX155
RNR7aZ8/9zV+H4nXfpM4v9N94PSnqn1Q8eoPFjj6m2Cf+94S/Oe+sga+Dua3
a3LFO8L4/P7pH8x5euqpsb9jvmV9fKPPa/3+TZ8jr0H/NfrHff4W+Waf0x96
DrzW86Pxw/yrvzT1H3zey/FJ83/Z5PuBt/hbnRcSP4hfmv9uG/+kz9P5sQP/
E8f+3cDD+a7ijl+a63yXz2NUn64nfU5ccRe4z1+Y+/yFuc9fmFf/s6eX823w
z+cvDsbX+QvWH8y31l/bPj/6Qk58w/ylZPMt65/AP1EfINinvsA+6LN+XYN+
rY/D/PCP+7f5C/JtR/ML9lk/8vlXvjbxyeOLsrnz282r7syA1+/B9gfjVx2e
oF/rmsS/uZxzX16TvvLnD/x3/2L7r/z4dP2XwfzS58d9n8/n/D98/sv39eO/
vygf8Cbz/TM/bvI28DPkwI8GfGrrrV3wn/Ub8zc/bTL5b2l+a5g//vP7N18G
nOtb9xPqOfF5/o+L+ubUd5oH+hWvCvoj+5tgH74N/LVk84+D8T8N7DM/Pl/X
43T9TXPX30x8E/RdP9Pc9TPNXT/T3PUzU73RfRjf9SvJc6i6Bw8v/nfz+nff
Bo7egz6vvIOgX3qP+5x9s2R/GvgPnwOvPIXkP3kC3i9s92P2F3l+mVf89Ls+
J744B33vX5p7f9Lc+5PmL4lvhvGr/uKAj+Zf+bOtX3S97yE/7fMt/aUD9/ut
+U6y+b7Ju+Cf338P/Gv1xng/Nd80eR/sb351OV+bPIXxJ/lfcSHiH+T13u7z
Ol93s88rT/dWsI9+4Ngn/n3Ake/0eY0b/ENvSfPjvS6Mj99xfF3HN9rP+MT3
+1mf059iDfw1v7+nl+tzPzd/h37gH/g9hvFXft+BL/9w+fjnGt/xFsdXzHfE
I273ecl3BjzoOz5j7viMueMz5u+TP012/Mb8+mD+x4P5Ob5j7viO+cr4/I7I
9+e8X8sPoz76ASf//3ngLf91Svx3P//dBj5d178P9ul/dcB/r/1N48+X26e+
4zaNT35dGJ98t/3A/8SJT42uL+dbv+Z+8bT9O/XrMKf/zT7wj9wfBnwbOP1s
uD+afz3wb6P+Jub0H6r9ouDfPnD690zBfvXvafJz3jfYH+V95E6fu3+kufs/
mlN/meen+fFA3/0hzV3/2PxcsrnrE6f5MX49T/n+qj/wAee5//M+PzjfbX2f
7w7258R9vjr4X79P8YPz0+Lu/3swP/X/Jd+n+hY2mfi/+TH8p33u/Q1z9682
vy458eSf9y/M3X/a/Ag5+E9+E/apN0Xcvc4fft/nrl9l7vpU5q5PZU49033g
rl+V7Cf/XJ8q+j/wbw7X58qAu76Vuetb8b5V8c62P8j7ozn7l9XPXpz3R873
H+j7/cnj6/3P3Puf5n7/O+C/upz7/S/5P4f5+/2w6q0SF29y1fsXR67zZ0F/
Cvoz9o/7fMv5yW/6nPquy8B+nd8T/8j5wuA/nPcT87PB/Pay734T7i9h7v4S
5u4vkfR5Ppq7v4T5lnzaX/a5+0+YU/9pDdz9KdL8WP9WPh39CZBv9znny9ln
MSd/rs4bim/JTwv6W/SP+/wj+W7Bvyv/+aJszvn9NfDNwD/GX8P4XL8p8D3y
N30+Mz/8IW7AX+Jgzy7nu8CJey8D/XoeiVfcL+gTV9kEfZ57PB/NJ/l5ML7n
4/E1jjnvGUmfdck2jM97yRz0a1+A5y/1lsn/bXKtD8Rf/+PF8c13yEH/HP3A
3zL+kz4/avImjP8KPvB/Dvo1frg+z6mvPfB/CvavDfj5wP5W14/Pl/cZPlfe
H8zZJ9sFzue2BL4OONc92YdPA/s8v8zre/28zyuPPHHuL2n+/L4CrzhD4Ozb
Jvt8Pvv0+fA5cz04T0C+EfG5kz7nPEL1YxM/G/BXA45MflfSn4L+y4H+G+TA
OX8xhfmfw+/2eZ3PoP6e6lW6PqW5z2+Zu35lqoe5CfZ9Psvc9S3NfX7L3PUp
X/73i/a21M9/0ufIu8DfIQeO/SnwF/Cnff5mwF8N/EOfdYI5/QM2A846gv1N
nic+35M46wBzn78x9/kbc5+vMff+jbnP1yRe+Qfi3v8x9/kZn8er+MzDPvf5
PHOfzzOfB9zn98x9fs/c5/fSecM1cJ/fM//I/T9cH5/f8/fR3z9zf//M/f0z
9/fP3N8/c3//Euf7Z+7vF+s94n9XiJ9/0+cL663jAQ/6tV670ee1Pr7Z5x+Q
g/51yeasT+fgP+vTOYy/G/g/Ec8nTzDt597u81qfhP1g78+ae3/W3Pur5t5f
Nff+ahw/+O/91XPqjbTvo/PPzE9b/h/rRHPnpyW+Cfbd/9kcmfWDOfVVloH9
xN1fOV0f5nfQj4/938d9Pv3kcl77pY/6vOrXJX32v4P+Qf8+c/ff8/hN5v6e
7K+BM//KxyLfnfqj6r9nXv3o7vd55Yc/7HP33zOnfvQU7D+XnOzPQR//18Dr
/GTg7v9nfn2gT/++6rPE+zjrD/Zx7vc5z90lcNadyX7Fjx72eY2fOPeRYL/k
5B/+fxs464AmOx7u+Lc59S9Sv2bHv82p/7EG/epvEXjVBwn+OX59pvMTVR/9
aZ/7/In5a53fMPf5lDR+4q++cPx94Mjsf5lz/mQN3OdXkn6a/6sBp779ErjP
t/jz8udj7s/H3Nff3Nc/2d8H7utn7vmbU3+/nr9/3PzlXE7Lf6pzLIGzPj7g
bR3J+tS86pslzvP9Vp9XPbHgX+nf7PPpTwfjX7/cfuWnBX2uy5p4829J/E8u
+u9+Z+5vZu7+Zubub2bu/mbm7l9m7v5l5u5flvxfgn/uX8bvBX/r/vSoz92/
w9z9O8z5/UzBPvcPrk8c/2Gfl/3A3X/D3OsX81PZd7839x82d/83c/d3M3d/
4mQ/je/+w2n8ev6IH/QP5r2VfhjKPzvg5D0FXnUHftbnS7v/rIHznpk49419
4tw3k33yOJI+4w/ml+xXHCHoV193+o0Q37lzUa5+MuIVv7rT53Ue5XafP4cH
fewvQf9o4N/zgf7LgX976hsF/4iHVX0d8WuD61Pne271OfUXyWOsOjLtfuf8
qwNOXuTDPkeeHvU59R7mpD8Yn7yUpD8pvyz5V+fEgn30j6gXy/NL9XnNS77f
59SfnQPnfCHzMz9O4/H8VP3b5B/nz8xPB+O7vq455xfrerZ8KuLBJT/rc+rH
z/735Hcme8Svqa8feOV3hfGrf8DTPj8f2K/+5oP51T65OP3FWb9f532XeCny
jT6/OuCcD5gDP+X9eMCRzY+wf7PPF/pXBvucb+I9w/z5wD/y/5cw/pHGdz6q
6/eYH+SnilMfZwn6vr8dcOefBvtr4L7/HeTbPr+cO790T94v+Q4/uyibEx9i
nMT3QX8e2Hf+h/l2YN/5IdH/wJ3f4fVMWn/A0/qizn+E5z88Pf+rvx/ySZ/X
+eTAWV8tA/1k3+sL92Px/d/c/VfM3X/F3P1Vkj7xksSXoO/ng/lRk9P9xPcH
c9cHM3d9sAN93T/S+OvgfpfGP1hfWV/3l1qvsL5Gvt3nM+uTO31O/QR+H+a1
/rnX54w/D/STf6yPqA9nXvuDwX/qQyxBv9ZPbfwT9ju/uyhzPt+c/dvqNyHO
/mf1FxSfm7wN9qn/Owf9BfsD/TQ++7v7oP9yoM/+7RLmX/vD3/U586/zFsQJ
eS/W+fsDzrriRuBtXVP9ucQrbzzwyX7Y/vGX8TX53+IXxAEO/GNeSf/mxb8H
/vPf7/R5xWXb37ecN233lRX5l33O/g/nG8y9/2R+Jtnc+0/Jv8S9P5X8W8L4
54P50699NH/2v3YtH67iq+Tn3e/z9+Tffdvnz9F/2OfvBvbJz6v9RvHKLwy8
8h8H/q/B/49NnoM+/q9hfmeD8Vc47/Pcf5o/VV/9fp8/H/CTAT9CDpzxWf+Z
c38kP9j82pfqh/kvA/9OBuNvB+N/PeCur29+OtB/Lv+qDtTTZpe46vd9Xuc9
nvS560uaV55P4Afnc5J/gZPXxP5q1A/84HyOeJ2vCf67PqU582J9n8ZnHsec
12jPm5fk193qc+cXmpO/V+e1xE+VP2hOfuAaxud8zxr0nd9o7vzGNH6dNw/z
m8P8rw7sw+fAuf/z/Hc9cvqnEV8zp9/aJnDXHzd3/XHz64PxXX/c3PXDk/01
2C/9wPF/edrnzJ/4arKf6oG6vmfiVV9L3PU9D+qNqr6nea2fvwu8rV+3wb7r
fx74r/qfB/qq/xnrpSb/VN/zQF/1OzkPzfvMKfJ3fX7MeeYHfU68Ygr2OZ9d
dfaCfhqf+PoS9A/iI4HXfo0457XXwLcD+7uBf3V9A6/z9ezXkE9NPXzVjzF3
/RjzkoP+e9WPMf+Ns8vtU7+F54v5W+zf63PXjzF/N5jfdHa5/1fE/X3399fc
8cGkj5z0l6Dv72/ic/i9+vtr7u+vub+fV+gn9+SizP6S+YdfN/uB7xvfP+nz
q/RrC/rvf305pz/cNnD3lzP/iv54Qf/TwH/3nzN3/zn3O6n1x7bP3Z8k8Ypn
iXv9YL5r8jaM/5zxA3f/E/N1oO/+KOb0YyZ/h/cj1t3Vf+xpn3M+dh8471es
880rvjfg/D7MXw/0T7/QPt9v83P0v+9z3k9Z37FOo58Q/73yIMRZN1b/Iut/
f7k+5z72gaNf/ZsCZ//N3Oe/D/Sffv47Bfve3zuYf9Nnn4N6R9QjXlr9DeK/
5uTH1XpDfEd/rsCpP8X9wfwc/rjPj8lne9jn6E9Bf4/9oF/1n4L/6JO/4/Mm
Pj9izvkQ7i/m1T/rcZ/7/Im58yvNff7D/AP9HYJ/Pv+R9KeBPvw5z8v2XlH9
V2/2Of1XeT82/5rn060+f4l+sM/zdxqMn+zTX5b3PPNzyebbgf1TccdDXT/B
nPoAdR5X3PFRc8dHzR0fNXf9BnPHT80dP436YX6ur2Du+Ge6fsTH3S/C5xvN
3R/CfIf+kz7f0z8h6J83eQnjn0o2d/+JA/+xH/TdH8Lc/SHM3R+CeuOVT9rk
Or8qvjaZ9zdz6qPz/pnsL0Gf+nq8j5kvTZ6D/voX7W/wv8YP/i1/cdE/1zP6
WrK56xuZu76Ruesbmbu+kbnrG5m7vlHyfw76rl9kfm3Ajwfzd32jdH2Sfdc3
ivGQO33u+Ia54xfmjl+Yuz6ueck3+9zxj2R/Cf65vq55xYeo10YdnvZ947nG
9TWvPK0ngdO3LHDyaraJs48ZxievZkmcPOLA6eu2S/zkon/eD/Xz3dzPd3M/
nyN/0Ofev4z+BfvevzT3/qS59yfNvT95ftr+Pfm9TWb9Zb40ueojiF9BP/Cj
v27+3+xzxl8Dn7F/o8/foR/42WB+2F8G+lUvQ/1c3b/V3P1bzd2/1dz9W83d
v9Xc/VvT+NWfIIyf+tm6f6u5+7ce+D8Y3/1bzd2/lfsx9w/qmfN+br6of5X5
SZN3QZ/67DxfzY8G9l8O9F/wvAj8eMDdv8t8ZvzA8W8ezG8f9Le6fq4Hu1f9
X3PXfzV3f3bzc+LvQd/92VO92qRPfdnKHxV3/VZz9183d/1W8ysan3wm1guT
1q/mXl+bfyCfKei7flwan/15c9eHM/9Eflbgrg9nfkX1Qc1dP87c62tz1v+7
MP+rWv+n8Vn/8D2g31j1Bd/2Ob+LzYBXPRrx+p4lfdZ3Qb/6Tz0OnLhOsF99
a4J+nSsI47Ouxz7fZ+JxfP6J8/3cBc7ntx1w9ufM+X3grznfnyXY5/tR5++D
Pt8/c75vaxif/ET2T/8J+7HEy5Ef9fn/0uQ1cPo74r85+8Nz0Of9kPizOTL7
8+b0p0z+836a/Hf/ynR98I96C7yPvfqhzfNJn7/+4aJsfo36CNs+Px/Yn5q8
G/B9sP+y2Z8H/q1B/4T6FoF/rfF9Xiie/2RfqcncP83j+U/253Q+KJ5XCjye
D2X/MJ0PJS8xnQ9lf1HnQ5dWT8Tn86t/jnmTq15x0N8kfdU3OOCqX3DAW32V
XbLf6qVMA//j/FSf4B370eTrIN/v809NZv/J/Iz976D/ER70kafB+P73yOfo
P+zzt8iBfxzY33/h/IjLfGj1DCpe3mTuD+bvmrwJ/GWTuX+Yv2ryPnBkfp/m
nE/cBn3qM2wCfzvwf4WH8T8hB8712Qfu/q21j4D89HJeccARf9zn3Bf3aXzk
J33OOncN9nkvmYN9+CbY57oyf85rV7/SJle+nXidvzzpc87dVDzb/M8uyuZb
8jKC/sL4gVfeRrCPfuXveX70E7rd5/vB/Lg+U9DfMf+BfuJ8PrXOVzy57Dzr
83r/eNrnlacZ9Kv/bOCOrx9wxdcP/FN8PfHNYH6ej6/PFPTrHF7Qd/z+YHzi
HIkrfn9wfYij8DtXvNTxUfOST/rc8U1zxzdTvHYN3PFJc8cnrypfzucPzJ1f
aL5Rfp75Mfrf9bnzA82d32fu8wuJ8/zm86jzZ1yfB31+NuD+/M138Pt9XvHz
wPl818D9/TInvr0E/4+CPeS9xp/+dfvLudkftfkdX86Jn5rTH3dK+tfavwt8
+TfNv5t9Pv24+Zf47wzG/93B+Ph/o88Zv/aH//LzX9Zj5CdwPzLf/OXlfP9X
jT/p813jrJMO+F9czuemv00c+VmfT02f+2+yPwX9bZO3gXP9eH4c9Ht1f1dz
928N+nPi7s8qXt+TwNm32wX7B/1bg33Gdz0g1/cwd/20VG+N909z10870Pd4
5qoPcmB/UO+o1rdhfNf/qPrw5Fc0meen+UT+1Z0+3yMHferTsw4xP6U+fuDU
35/C+MfUx7/b5x/hrF+5X7d40PTPG3/W59zfyB860P+dy/Wnf/X57zbp/2bz
N+n/syYn/i8lB/+nNP4/bf4l+9zPk/48mN+1gf+/1fxM+m1+5LGnfFNkc+d/
mju/xNz5n4nX+5G48z/N3V/L3Pmh5pzfqN+LuPNHvd/i/RVz7x+ae/8l6bP+
Nff+irn3V5L+Lvjn/RVz76/Qj55476cW3+H5bk79PuJD5tQvWQL/+A+Xc+oH
pvG/lmx+Df3v+3xD/ZNgn/qGlX8mTn2/Kegj1/qkrScn4sO6v5pz/6l4snnr
P7ILnH4ec9L/1/r35rp/p/Gj/u9f7t/U1u/7ZF/314P5NftLsq/7J/ls9fzn
fnG7z6v/0J0BD/pVj+Nun6f+RXDfX81T/yGPn/w7GczveDD+yvhB3/fng/NO
9B8O56F8vsnc55vMj3V+yNznn8zp/0x8Lemn81zI63d9vh3Mn/7Jtlf9eZq8
DfM/0vzYX+fzJP+a+JB55V8HzvOT57v50UCf5xG/j8TrvEjSv335/NbB/NL4
R7LP+y7vO5wPIP/WnPf3NXDeZ+t8vzhy1a8W36N/v8+3+Bf4gn+Br4wf/Gf8
Nfg/IQd97K9hfsQHlsCJDyzBPvEHfp/Jvyldf+IjQR/O9ed9hf3k6V98/lv1
+82JbyXe3q+2if9owH/781/iBwf8x4Px2/N3nzhysv/bA/22vpgSb89v4jec
56v8Jc7/fdfnC+fpt32+G/APnAd80udnTd4Efc4nLoGvyI8v53PQZ/w56L9p
8j7ov9X41Avk9/qK9fuDPj+XbP4a+WGfY5/3s8SJn5vvWF8/6vN3+B/0Pwz8
5/1lDtfnKv3Bgn3mn67vbjC/d7r+7LfUPhb7G3f7fB5w9kcqT1Gc+gw8D83Z
H6o8T3HqX9X5U/HnA/3yP4yP/crjDPqVn616RNQ/wT9z6ptMgbs+kfkZ/EGf
uz6ReeWXBX3XdzHfDfx/B7/f567vkuxXfcy/afaefv5b+W9P+vy8yZvAz5q8
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
a/5+oE/94DVw9+flPlR1GW9e/GvOun1JnPvOrT6vfve3+7zqLt4J/MZF+cD+
zf5f+xXnhxzGr3MYgS/BD/KleO+o+hypXlriro9m+/QtC/oH9c9s/4Zk63Md
Aj+onxbmn+bHe9E26Ne+Fv9e+Y4pfxGe8hfhri+U9KsfhnjKTzR3fiLc9YPM
XT/I9dRcP818pT7ZjT4nPsnvwPx0wF2fLfIwPvXU5mDf9de8n0m9bPLXzT9p
P9AceQ363h819/5o4jzfzL3/mea3BPvsTyxB3/un5t4/Nff+6asfGm/fZ/ev
MEdmnWV+Hv49svtXmJ8iB/vub2Hu/hbJ/03QX5rMOjRdH57P9JPDHv31uH7m
K/3nAqd/3jbw44E+/e6m4N+GfnjbPq/+f8E+/f+4v6X5L4HjX+2XputHPYa2
viQfyPlh5rW+/b7POV+zC/rrgFf+VrDP+Z5t4Kzfp2Afzvt1Gn8b9M+xz3w4
r0D+gWTzhfry3/Y59ULnwF2/3py8+aRP3nnVdxCnPv0U+Ep91TA/eJq/69dv
lI/zlfqdm7s/vLn7wyf7df5S3P3jzd0f3vyI8Y/7/OrA/6uD+Zd/9PNUvpzz
48yd32bu/j3mzn8zd/5byufjPd/c+XH4w349MvFuc/xbt33OfkydbxRfmF/Q
r/G/63PGX4I++0ebgX9z8I/9M+7v5tuB/fp8mux6mq6fae76mObUx+T+bT6x
v/yszz8qPprsb4K+62+af1B82dz1N5N/dV4r2E/zc3yZ/fh6P2N/+0mfI1c9
PvH37M8Hzv77Jti/wvmQoI9/I/1t4Oznb7eX6zN/n4fy+Sdzn38y9/kn85fw
+33O+aE1jM/+2hT0kdfArw+4zz+Zf/qv4d83+SvmF/R9fsr1nM4lm7u+k7nr
N5mvA33yF5N/rwf2XR/K/BU82Hd9qDj/ML7rPyX/K/4Xrgefv/PBvf4xd/63
ufO/zZ2/be78bfMXWh+lfPbkv/O7kz7rJfeDdf/XxLm/HnDWrU/63P1hD/TV
/8jc/Y8O9PkeBP/qPSDouz/sAVd/WN7HibeQ/8P9yZz8KOI/5rzvs39gvhvY
px9m4uRfTcE++VFL0K/8peA/54+SfsUvyIeknij7kdT/vNnnG/qjHPd51V/9
ps+pL4p8YB85jF/1S4P9qjd6u8+r/mywT3+UNH7Vd73V5/hf/b1ffP7LeuxK
k9knNZ+Qt31O/hLrT/N1YH9uMvEH832Tt2H8U+RgH3l50ufvmjwH+6Uf/MP/
XbB/rvOz5rsXF/lBvVnXlzX/nc9/t4m7vqy56tMf8B8Pxnf9AHPXjzV3/Vhz
1wdo/TaqH5T7VwVe/avMW/+S2nczd/8qc+orJP5jyeZNngb26zlrTn+VG4H/
5oA3/8iPTPU86n1RnP0n4n3mrs9h/pz63oFTH3wfxr820Hd9DnPX50j2pzA/
1+8w37L/12TqFVd/TeQ7ff6S9V3g64AvX8jXwF/Bb/f5Hjnwkk/6nPOXrBPN
Wf9OwT/0l6APn8P4LwbjI1N/1bzWz0Gf61vnlHmfZD+a98lf9vmZZHPef8n3
Nz8Z8PMBx/480N8E/84H/sPJX3I82/Frc8enzR2fNnd82vxI3+/E5xCPPxmM
f0Xf7xjPD/qOjyfu63VwfcJ5EJ//MHf9RnOf/zD3+Q9z13dMPNnHf/b703mX
et8Wn5Fv9bnrN5r7/Mdrngfs/+n5Yv4V9Q8Dp35i4p/I9wj89UD/rZ6/iSf/
z/V8fs39pH3/qH/E+irym31e989bfc79bw32zwb65L/X5yfO/YznYxo/+U98
tr5vqufp+p3mZ5LNXd/T3PU9zV3f09z1PZN+5bmJu76nuet7Podz3qDJxGPM
y7/v+nyBP+7zl/CBfeLv5m+4fkGf8acw/uvB/Lbi71o8m3jLhyYTRzPfwx/1
ueP35o7fJ/tz4Mhr4FV/7EGfO35v7vi964GzP8jzwdz1vc1d39vc9b3NOV+3
JPuq353GT/XOOV9XeZoeX/n95q7vTTyP76vzx82dP27u+Kb5LNnc8Uvzyr8K
+s6/Mt80eQ36zi83d35WnZcif47v56M+9/kxc54/U9Cv81tBv/YHHw7sB/5q
4J/378wnxg/+e38vXZ/kn8+fsX9KPO9c++/m7wa89l8Dr/3nZ33+YcDfBHsH
/g34NnD68+wDR654hzj740m/9r/JdyHeSvyb+OqtPideyvrenPgt91/zM+TA
iX9zfzMnPrsE/ZKD/zW/YH8/4D4fbH6E/98Efa5PuH7n0vfvwd9/86qX/LM+
9/c32d8GTv3pbRif+gv7wP39Nvf3M+lXPqd+D87vMXf+TtInPmju/B1z5++Y
O3/H3Pk75u6fm/zfB+78HnP33039iInfVj0U8u/I3392Oa98XfFz6pkEferD
JP3diONf4EcDTv2VffDvo/ynXnTl8/3RRfmAU285cOTqX2r9tv+zTfp/2Ow/
uZyvwT79j4nPH/A2/ibYr/7GQR//0/VZfu+i/aqTxvsqfddv9Xn1Nb/Z51XH
7Uafsy+Q7Jf+7T4nblj7S+bkeYXxK28o+O/zaeaVF008jnhT84v9H/TNT4kv
BX6d+NKtPn8BH+izP29+xvjB/93AP/gS/Hs7GL94sF/xQ84zUX+a/D/yEx/0
edVXcv3qxmN9bvL74CeX6x/U5yZ/LtXfbtz9Hc2/SvW3G3d/R3PX7/b7mN+/
zP3+Ze73L3O/f0X7gfv9K/mf9P1+5Hgj8cPqzyh+lfhW4I4/mjv+aO74Y4qH
rgP9Kfj39cB/9ycy9+838uCff7/mjo+aOz7q/TLnN6b9NNb/5t4/M/f+mbn3
zxKfB/6n8b1/Fs+7BH3vnyWe9iO9f2a+Hfh/Ks6/J365SDbn8+N+Zo79iu+I
V//hYL8+32Cf678EzvWv+I54XY+gfzLwn/lV/mDwn/iv+deD+V0dXF/nB9CP
lPU09anZHzD3+Rlz91c1pz8q9+/E18Dd39R8T33wx33u/qbJ/12Yn8/X1O8g
5B+bV5z+SZ9XHZ3ElX98wInjfNfntW8W+DzglceZOM+l4J/zj90PrernPuhz
6htNgbs+r7n7q5lTH2lO9tV/Ldmfgn3XB07jr0Hf/duS/cTdny3Z9/qQ87yV
D/N9n3O+Zhv4iy/Vf9bnrA/3gR+zvnx6uf4cxif+vwm85j8YH//YT2U/czpr
45z0Ofun3J/N37P+u9vnxwP9V6zHwvhvsX+vz8+RA38nOc1vNH7FKf78818+
z22Tyc8053zyEvjcZL5f5pzPTvo75Cd9vmnyLtifftX8CJzz2cQ/zZeB/5w/
3wS+aeNPgVP3jPgV5+OJ904/XNQ3T+f/4en8Ptz9YZL+PvCXTV4CPx2M/wr5
yeV8Cfydxne+lPOjzJ0fZe78qJSPlfQ3g/GdPxX9D9z5VebVD5f7LXG37UW5
zl+J896ybvucvDuerwf6rI8e9/nyp5//bpN9ra8O7Gv9dDC/Aff66sB+828K
/hPHjP7/5KJ99vvqfYX9vQd9zv4f6ydz9h95PzNn/3IO9jfs/wWOfu2Xh/GX
wDnfMwV+NJgf8hrmx37lFPRr/5Lzbj9ctEd+CnFo83nAnb9i7v7L5u6/bO7+
y+buv2xOfkry3/URzSfJ5KPxvGJ9U/sn4i8H/AX3p8DfSDY/Huiz/uH5kfzj
+WdOfHAf9MmvrP5e4jv0m8xzC39Z17C+MK86B0/6nP++C/q1bvq+z+tv0K+6
2WF85rUPvNZNTwPHzzB+PbeCPnbn5L/+3dX2PsB63e8H5r/R5Ir3iP+TL9Sf
Akd/Dbz8C+N/4vsd+BX8vzsYv+lXPeQWV9myP3+7z5/D7/Q58jLQT/zlYPxj
+N0+pz505eeLXwv+evw56FNfmzgL/derHlqT+X2Yb4lvBP6OesqBL5LNJ+IP
T4N9eNC/0mTic+bVbz5w5r8Gvja59s/Zb2vxEPbvqj6P+JUBpz/vHLjrv5hT
X6XqB4l7/9H8VHKaX+Kng/l5/9L8ZKBPftUS/Edm/ef9Iu8Pmdf5xLDf5P0h
c+//mHv/x9z1Mcy9P2Pu/Rlz78+keiHsTzrev2nxbZ6z5o7/mzv+b078fQ2c
+P9+wPl9JP9H+mvQR2a9ZO79hzS/xL2/YO79hao3yPx+eXF+5o5fmRMf2wR9
4j9LGJ9zj2vgq+1Jpq78Jug7/lTvm5xPVf6tOfUN2D8zr/zZO31e7293L+dz
GJ/8X56/5vV+HTj5v9VXN+mH+R1Jdrze8Xlzx+ejftgPcHze3PH5pD+H8R2f
N3d8Po1f+d/tnDDvm5wbruexOfUzH/b5RP3MwOv7/rjPq09D0Hf9z+Q/63Pz
zZ9JbvFf9sP3zO+kz4kXV31Pcdc/Nd8M9Bl/DvrE/4lPJD4H7vqn5q5/mjjv
R/Qr5ftF/THe/8zfNXkbePV3CPz6wD79DXi/Nqe+G+/Jyf4a7B8N/HN/e3P3
t6980ZaPT92Hqq9v7v4B4gf9161P//Ng/6D/gHjVsQv8oP+6x3f/gDC/OD7P
rWRf/dlTPfiK94lX/fZv+5z+sWvgrt9ufoX30zA+/V+XYN/13c2rPnzQZ/zK
V2r7YZx3LPk48D+/nM9NrnpZ4lOrjzUH/e2Al/zTwfhBf9PsV/604kXeXzZ3
fMnc8aWkvwbu/Wdzx5/Mvf+c9NP8HJ9yPNTxzcSrfri444jmxAc3QZ+4buKO
Xx7oNz4PxuffuZ/nKed/Ty7nxPPM3f/zQF/9P83d//Og3yjjP+jzqkcduPuD
mu8G83P/0IPx4Xx/1a/E/UPMz+D3+rz6Gwfu/iLm7i9i/hHOuQnuJ0/bfP/y
omy+a3LtIwROfNB8/6uL8oH+ry63T33DxKmvyO/AnHqF26CPzO/H9Qpdn9Dc
9QnNXZ/Q3PUJzV1/MNVTJL4bebDv+oLm1V82jA9P83N9QvMz7IfxXb/w09L+
Pf3X/675cb/P98jf9vnU9Invms+NVz1S8XfID/t8Xb7Mvynof5Sc/J+C/+iv
Qf89/oXxkVfdr7m/HPSHFnf9C/Nz6kHc6fPtgK/Id/v8oL90sD8F/w/6S4sf
9Jf2+H97OT/V/DjnTL8096dMnP6N5rNkc9Y9S+Dbgf3aFw68/A+89o2bfK19
n1nnXGky96fIn/b51SZvgv6G30/g/L64/5ofo/+sz59LTvrE19L8psCv49/2
cvs8n8zJr5uDf9w/eL64X53705m7v7a563cm/SVw6mNuAnd/u8R3wX/X70zj
7wJ3/zufl/T+o7n3H829P2ju/cGkn8b3/qC59wfTedCqbyPu/UHnUzs/2tz5
0ebk51T98JRvHbjfb82dX23u91tz51ebV/21gX9zuD7kR1V9dnHqfbE+od4G
8TLX3zCn/sb88z6vzzfoUw9jH/j7gX3GnwI//0L9bRjf9T/Mq77OwP80/7cD
/6hPQnzR7yN+/zB3ffNUb537+4F99qeSPuv/wP1+Ye73B3O/P5j7/SHpL8E/
v19U3ijxJO5Tty/nxC/NKy/3bp9z32F9eqBP3DOMj/016HPfJ/5w4D/7QEn/
weW89tFO+nzW/I/+48X/fibZfEY+6fMd8v0+v9LkNfBT5Ed9zvdzCf7BeX8z
R+b7Yb7BP64H66Xm7yvke33+nvXRt33+HPlhn7+TbP6S9VkY/wVy8H+Lf8E+
/q/B/1N4GP/VgJ8Nxmd95v0J1jPuv2te/Wa/63P3zzV3f9xkn/WT+VXyCcP4
M/s3Yfw94wd998+l3nmde1D+k7n7F5lT35z7q/l78p+CvuvDm3/AftB3f6Tk
P+fzk//zYH5V74Z8ZM6N6f3evPaZA+e5WXk+wf4ceO0/BPvsO2wCr/2HYJ/3
WvwjXs1+mft7m7u/t/kMP+7zd9gPfBqMT/yc/ERz9xc3d/9wc8f3qXdOvgv1
Rdk/Mqf+5xz4VwNOfdM6DytO/dJt4Nsm8zmbcz5mDeNTzzTND/+IvyT7tV/H
uoP9M+cXBL4L+uQ3LMk++zbBPvkHm6B/kH9gfcZ/ern+lPxnnRb0iUtuE6fv
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
Jj8K/A+bnYd9Pv3+wP4ffP67JvtNn/yDNP4a+NTsL8E/5hf9V/+tA3331wrX
F+56iq6faO76WOauX2Xu+onmrp+Yxp+Cvusjmrv+lbnrI3JenOed6wOZcz58
Cvw657O3fV7nz5/2uesPmb+SnPS5f5gjb4N/rv9zkO+l/C5z53cd6P9xGz9w
52+Z13Mv6Su/K/kf89n+eGBf+V0r8VrytojnnvQ58eE58B3x6XuX82Sf+HXl
YSX9wM8HnPj0FHjF19mPHcTXzD9KNkdeAvf5a3OfnzZ3/M3c8bVkv/o/DOJr
yf4SOP5V/wfV03f9fHPXz0/1+JM+6x/OCZtXff3Aq77+SD/45/r65q6vnzh5
ytUH+NZFPX7nkd/u86pPE/QZl++v+UH9HPE6Fxh43VeSPnkiYfzKP73T5/W7
Jz+Y9w7q9ih/9YCTF/qgz52/au781QOOnOxLTnwOnPHnYN/5r66H85bn8+0+
d/0a81p/3O3zdcAX7AdOvZk5+Of6Nuaub2N+jH1+B23dUc/Xp+2//6LPHR8y
J39lN+DEP8yJv1BfJOlPA/+ITx3MT/GlNP422K/8GezxvOG8GM+H7/qc50md
DxY/Yn/vUZ/z/F6D/pnkA970Kx9W/EqTd4Gzf8f7vznP/zXMn/orS+A8n/fB
f+Q5jF/XP1y/Lf5RX5J+RKy/OH/0bZ8v8Ht9Tv8kniPmdT4r8DfwYB//+P2a
1/mwYP/6gM8D+/hfz1H6NT5tf5Gf9bn7U5qfwp/2+ccmT8G++1uaTy3/axv0
3b8yjZ/mdzTwfz/gs+ZHvmjlO5FfeavPK/80cPRZv5iTz7kGjkx81Lzqv4fx
i9/oc/xjfzqNn/ynviT5be6n6/4mia+Bf1R92KgfuPubJPusg8z/V+Rg3/15
o3+Bf6A+bBvf8aoUn4Kn+FPVpw3xJ9t3/Aie4k/IKf5U9XUVf0r2Kz7N58F6
lPq4j/vc9YPNV65v0Hd9YXP699T+gTjyEjj1e+dHfc78puDfnvGDvusPm7u+
8K7Vy2bded5k1mHmb5vM88P8lepvmz9v8hr4sWTzK+rPnvxP9reaH/vptZ5q
++F8vge85QfU+T3zlh9Q+4HmbX+/3rfM/8XA/m99/rtP9v/5QL+Nv6bxW/7A
nPiPJJv/0yaz3m39V2s/nPoL3/c5/VqXwCfub8/6fPs3l/N3Ta78TPHjAT9q
8hzsnzZ5Cv4fUz8i6DP/qm/SztvzvsL6D9mc8/u7wD80eQ28zvc/7fNrrK8H
9jcDPgX+XrJ51RPgfYLzoe37eizZvOqHBf6C86UPL+dr0H/5hfaTf/SH5Pll
vgz8o//jHPSpb8b9wfx0wM++cH5pfM4nc3+tfpzt8+R8MN+fxHm/Ned88jbo
f2wyzw/z3UB/Hfj3aWAfXv1pxekvyvlF6vURj636e8d9Tn/jOXDXJzSnvvoS
9F2f0Nz1Cc1dn/Bgfrw/hPHpv1z5I+n63Ojzc+lvWn5W9Ycj/+t2n18jf+1O
n3/kfMHdy/XnwJHrPJr418hBv/Lf7vU5/UnWYH+WPueZ69xfy78gj8Z8S3+3
wDeN1/u/uPvXHegr/8N85nxY0Kf/XNLf/dVF+WD+f3k5d/+75N8UuPvfkc/K
+9Is2XxPfuyDPv8w4NT3XYL9zWB88o+rzg77ZTyvyJd5GDj9Xx/1uc/Pm1c+
zuPL7Sd997c2r/2/wfhT8H+H/TD/PXzg/xr0yV+q9wvuK9uLMvk9B5z7xpM+
r325bZ9XXdtgn/tmvZ+Y37ooH4xP3d2g7/opB/z2RTnV66n6O+bK3zjIB3H9
Heu3fKXdwP4U+PRHl49/UL8n2E/5LPiH/mv2q6hPwH7Wd31O/tAc+MuB/nbA
nb9jvpec7Cf+kf27MD77h9yf0vzrvCn327becP6sedU/Pe5z1281d31W86rv
eqPPOX+yBu78XPM6f9L0/b7q91Nzv5+av2jyJnC/nyb7Sd/vp+Zb9l8C9/ur
ud9f2Xcg3l196L7t89oXud/nta5IHP17fV71DU4Cb/I04sE+85sHPNlnfkl/
I9nn6Xx+ztzn48x9Ps7c5+PMff4t6a9hfJ9fS/Or9YX6Ybm/lbnzd8zd/+rA
vvJ30vhr0Hd/qzR+4u5flfTJ/0njp/k5/8f1Zkt+2ufnLb638b9vMvHANfCV
eGHgjm8m/5I+8Ud+R+a7L/Q/cebP/d/86D9dHJ96RfyeSj7pc+oHTf735IdS
/yjwqn8UuOsnpfGX4N/XA/+uSk7ntavfsfiCfLfPOX/M/dkceR7o+99XvRDl
d5o7v9Pc+Z3EOzjPxvlB+iOZ0790+7zPt8Q3gv7JgBM/2QX71Z818K8G+tOA
1/nEwJn/XvlRdf6F+gDf9zn5T5tnfU7+k+3V+R3ym4L93YC7vsKBPnLQ5/tP
fkeaX9JHTvp8P/dh/q6/YP5R128hHsTzSPWNzImfER81d32jxKeR/u0+J35W
+a/irk+U5lf9cYL+kvSpbxjmt5N/B+e9fb7b3Oe7zX2+29znu819vtvc57vD
+El/afbnpO/z3+Y6/+1+Zu5fZu76keauH2nu+o/mrt8Y/Qvc/cuS/2l813es
dbLqRVf/KPFadwZe3+vA2ZdJnPtG/b7N+e+J48ftPq9xk//8/SbokyeX9Kmr
O/Cvzhfw3CTeyfmHh31efRUf9znP7aTPuqDiibaP/v0+x37FH8lPafMlP6au
r/gpcuAlf9PnZ8g3+nw3sH8d/356uf+z/bF99iN/aP+ufR7sJxBfM7+G/LDP
iZ/x+ZrX/kngVX8lcPY/kn3qkST/8J/8AfY7Wa/Tf7vOa5qrv7K5+9OZbyWb
uz+dOfmttV4Xd/7qAWd+9/rc+aPm7P/yfvKm5RPz3v8O+WGfnyF/2+cvqU/5
oM9fDfRX9O/3+b7JU/AP+9PIv2AfeQ38Y/j35mvg7xk/+P9G17/eJ59elOt9
X9zvF+acj9gHfZ+vMPf7gbnX/+ZVzytwn5846PfAOjecF666Ys/73PtLB5z7
dtD3+eGD8XnOhn4VPl9sXs/pgX9xfj5fbPvuH+H1vNfv5l6/m3v9bu71u7nX
72H8qO/1ubnW5wfnDdUf46Cfhs4Xmvt84QEnzv9wwIO+zx8mPgfu84cH8+dc
TPJP5xOTfpqf+3e4n5T7R5m7f5S5+0OZuz+UuftDRf/C+O7/ZO7+T+bu73RG
viv7p+T/bvvc/dfM3X/NnPMPVZ9dnPj5FOwjz4/7fEv+cbC/4fzCoz7f/81F
2Zz84DnY3w3m5/5x7ufh+lbm7s+Q9PfBvvsvmPP+vAn6rl9l7v4JqV8J969N
e19jvcD59+Vpn+9/eTnn3Gz1G7R9+JM+5/x+7Q+Jz43XPqby7ZxfZ+78OXPX
ZzJ3fp258+vMnV9n7vy5A/vKnzuYv/Lj3C/D/THM3V/Z3P2Vk37lS4u7/7K5
+3OYe3/J3P03zN2fOc6P+yH5WE/buO0+XvuN4s4PO+Dqz2de76GJk9/1tM/Z
1yUPIPlve8i8Nyb7tc+VuPMOzNX/7+D6sM/cOP04WQ+yv8P615z+l+z3mFd/
z5/3Of0y18DfD/SRp8DPv3B826v+cPgX5k9+9Rw48ibwt/Kv7jM837hPPulz
7nu7wHlvTPpVV+5pnxO3noM+cfVkv+r0Bft8bxnf7+Ouj2Ce3r9rPaH6CObp
/bzqOoT3c4/v+AFyej+H+/38OuchWb9yfvNun1+F3+pz5OqnKf46/Hvkrzmv
ebPPTznfebvPZ+Sgf4T9MP7pYH5b9MP4X0vf+0XeHzL3/pC594fMvT9k7v0h
c+8PJf/T+Af7Q+15W+eLJJvX8/tJn7t/tznrgyXwF1/Id2F8/NsG7v5f5qyf
5qDv/l/m7i9u7v7h5sjUleF9mO/LV+RrPutz3n+r/7p45Y8GffI/WX+YT+SH
BvsfJZtf5f072P808K/yV8P476R/3PoFsR6mvxFxHPMz5Pt9vqH/0uMBf9Tn
500mfmBOf6c12C//HwzsB//przQN7C/h+lz568v5lvkHzvjEH9zvckf/yId9
7v6X5ryfTcH+HvtB3/0zD/pxqn+meeV/PLh8/DXMz/01k/10/dx/M9mfwvj0
36x+iIFXHq3iZY6PmTs+Zk59jk3gxMfWYN/xMXPHt8wdn/J5MJ//Mvf5L3Of
/0r254H+FMb3+S1zf77mPt+V/Evn5Q7Od7leRdsfqHo35q5fYT4P7Ld8odpH
MHf9CnPXpwjjr2l816cI86t4rPKxXT/CnN9PvT+Jx/xqyQf51Y3H/Oom1+8j
+Of8aPOKTwfu+hPJP9Y/fh86Zv3/bZ/7/cjc7y/mfj8x9/uHud8/zKlfk8Z/
T34KcSDiEe197qpk81PiIwPO/oj5EfGJm32+NHkJ9p8Pxj9GP9g/kn36OfG+
XudNtn3O+ZN94Jxv2Q7058Dp75T098iBv5VsviI//fyX8wL8nibiv88u50vg
yNvA6Ye8Bv7p15frf/j15f5zvmAJ/P2vL+e8n20DR94HfjTgdR4icObv/ZLa
V3b+n7jrP5tXfeQHgTs/UNznyxOfA/f5cnPXfzbfsL818G9N10fri6oH0+5X
J5LNqa9T9zvx44E+9WnmoP8OOfDXA33qxyxhfOSqj87zpsXx3+t5Ye74nvlb
9O/1edWPu9nn58hB/x3ySZ9T/zD5X/XvwvhXpM95FtZrVySbc35mDrzqr3zX
5+xPLIHX+IHX/sHjPuf8zhT8+2rATwfzPxlwzu+swT/OB1U9Cb3P13mIR33u
93dzv78f2Nf7ubnfz5P95L/fz5P9Nc2vzX8J3O/vB+Nz/R73eZ0vCfb9/n/g
X3j/53nr/fvE6/1E3P2TzLk+28S1/27O9an3nWB/Cvrevzdnv5/9qcrHbvFI
9780J3+cfAFz9680d//KqB/Gd//K5N82xJsdXzZ3fNnc8WVzx5fNHV82d3zZ
nPy25L/jz+aOP5sfN3kf9B2fdr0J15cwd32JxJO+608kffKVkn9pfNenMHd9
CnPXpzB3fQr3g7r6jxf1zd3fydz9ncw/UU8lcPd/Mqf+C+8/5u7vxPkC7oec
v6j9EXHON2wCLzlwzlfs/e+bTL262p8yb3LFo8R3g/HLfuCcD0nzZ/z6/ML1
2wX/q/540IdvAj8fjM/nM4fxqW+IPteR32vlgWz7HL/3gTNvvm8H+tR5C/r4
WfWtxeu9N/mn/BHzivsFfe7ro/E3wf40sL9Ifke/MPJumlzfX/HTAf/Y5Pp9
iS9N3gT9Df0BAj9D//s+Px3oY38O+lfEz3mfJj4p2bzqr97r8zfIt/v848D+
OuAfBvb3A334Evx/P+DU3yUPz/z14Pq8Ih4w0E/zoz5v9ff522avvT+fNZn3
Z3Pk+U6fV3+5231OP7p1oL8G/e2AHyMHfsr8wvhXZJ88W863EJejv/YBJ64R
eO0r/6LP6zxH4LWvFexXn5afX85H/m8Txz7nlxRvdnw5xaO3gRPfrT7FyX7g
jk+bOz5t7vi0uePTyf/EHX823wzm925wfRy/Nnf82vXGqr7Yt33u+mLmri9m
zn7GGvg5/F6fuz6ZOTL3F3PXJzP/IPkK7/NP27hNrv0B8eMm1+cdeO1HiCNP
gaO/DfxrxR/MOT/L+v0V8cp2PSs/+kGfv4Y/7HPk+nwD575iTv418T/zd8hB
/8PA/zPFV9P8psB3A//fSWY/tn6vXJ9nfY68Cfwa/Ps+x/428A1ysP+u7V/u
gv6Hf7jc/2thPpaxv2nnqSr/7Idm/1GfHzV5DvyrJld+lvgJ8rbPrzZ5CfpX
GP9xn39q/lf+VZjfEvzfNz4F+1uNf1APuJ2/Xn/W5+w7Jc6+0z7wg/rB1nd9
4FCveJ/4Ty/X9/nqtb0v87x2fMSc+v6VTybu+Ie54x/m1Pefg33HN5L/u2Df
8QHyiaqeCflRx31OPtKSOOfPE2/nz8n/OOC/NRj/dwa8nU/ne3rAf3PAf/fy
+dX1IR+F9eDTz3/PtX9v/kLrR/MT1n+Bo8/3y/y11p/mM+u/wfiJX2vyFPhz
rV/Nd9gf+MfzK8YrA/fvz9y/P3PHF6N+4P79HdjX78/nOX1+0tznJ82rvud3
fe7zlYlXvengX+I+30C/M973r5F/dqfPqb9EfoH50RfqEz8wv0J9p7sDHvSR
1zD+tYH9I9mP8fZnfV79MQOv7+/3fe74etQP9v39N3d8PY3P99+86j8FfcfX
E98E7vi6+abJ+zA++qxH/b7r91tzv9+a+/3W3O+35n6/TZzvo/kbvf+m9/nE
/X5s7vdj8qUr3vM7ks3b+mNKvD3f18RZHyTe8svrfci89f/bJn3q2TwNvNXv
mZL9awP/2vqo9hO0n+79c3Pvj5t7f9zc++Pm3h839/64uffH03k09Le8T7b7
6XPkO33+osncf5N+4i8lmx8j3+3zN9i/1efXmjwF/68O9PFvDvw1nHP65M2x
Hld9TnPi/qx/D/SJm9/qc+LmU+Cu73mgr/qaB/4Rlw/z479Xfjj5qk/bv1f9
FHPyV/n9m7u+ijnna+q8vDjnYXg+m2+azP7sAf/V5dz1WcyXwfzIL94ETr+m
KcwP/6ag7/owVQ+82XN+pDn5hOzfmiMnTn7lNnDqkdseMvmX1W9FnPoM+8H4
yf5V+tk1efr9z3+rr8Qftv/+sM8Pzk9Z/998/kv884D/QeP3Luecnzng7f26
+p2E8adgv+Q0/r9t/z3NH878f9LmQzzM18+8xZN4vzrgbf6VzxrsR/0WH6vz
kOLEz+p8mfV/crn9SfyM/YI7km/3+fUmL4EfD/Sr/9OtPj9J/rD/y/jc11u/
MPKduL7kh5hPLX64C/zg8wn6m5H9bZ/z+cTx/fnZvjj3B+pyfZKc+DZw8q8T
/2rAXw/GZ39oE3j1Hx2MT/+I5D+cfBbWBdsmc37DnHyVqucrviGf5U6fO3/B
fDfQJ/+H9U2yvwb759gP/pMfNAc+N5n6yCkfkv535hXf2Pa5+9clfX4f5u5f
Z+78x4N69a4vH3jlh4gf1JcXn5o8B879vfpXmP/kC3nw/6C+vPmfSF/nKXx+
wtznG8x9fuHAvs4vmE/Uj3gcuM4vHJwH0fmFg/FVv8L8iP4gbX6u5+P6Peau
32O+bfIauOv7xHpCgbu+j7nr+6T5Jb40ueL9/N7b98n1+80d3zV/AQ/6rv+f
7HP/NXd/AHP3B0h8Cf67P4D51cH48HnkH/0hVE+f/YWqIyzu+vfm9Ddfg77r
25tvB+NX/f7At5LNNwP/XD/f+c4lP+7zeo9P+dK81z7pc977k31+N2vgzn8+
8P8L9TcD/3g++7znb7Tzj+SHmvt8p7nPb5r7/Ka5z2+ac/50Dvo+v8n6mfOu
yNXPVbzeH28EzvvhceB6fh+Mz/tFsq/n+4E+739p/OuX258an4M+7xdL4lo/
nLPf2Phb8gVv9/l79i9v9PlL9hOD/Q/YD/pV//abPn8HP+5z6sPNgSMvg/nP
wb+zwfjos35zv1b2j1gfmdf+zaM+j/tD9HPG/sM+d/9Wc/dnNX8vuc4Lt/sR
8TXuT+aO75k7fmf+XPGzNP404HPgvL/ugv+O75k7vmfu89Oul03/vIrfirO+
3g84+0Pmro99oK/62Oasz9P42zb+Jui7vvaBvs7fOp71osn1exR3/3Fz9x83
j/Ex9odSfIz9mRQfazzGx9g/Yn7Hfe74Gec92A+g/gXvF+bUp9gGzvmWXeCc
3yG+b875F74/5pxH4f3EnPM9rIPMPw04/rFOMt9JNn+u6+N8jng+MuRvmMfz
kSF/40A/nY8M+RsH+VbKzzB3foTfB/1+F/u9fdPnfn8z9/tb4ry/mbv/W3qf
ZX1g7ve7xOeR/+yvtu8pv6daz3/f57W+f9bnfG82Qb/OkST72A326/0m8Klx
vj8Vr27vC1W//G6fV/33kz6v+iiBsz+3BvvrwD7P9+RfrV8Cr/oq9/q89jcD
nwf6nB9w/3nybWpf6kGfk3fu/vLwquv0beDsmwX7FSe81+cH/Y/sH/ZPAsev
ZsfPM+ovsX9t7ueT+XXJia+BH+n5mMbnd2zu54/518jf97mfT86XcX6M+RH5
Kff63Pkz5s6fMXf+jLnzY1K+D/GgND7v5+bOj+E+X/t97A9s+5znWuX/Wv9P
Lufe/z3g31yuz7p0HYy/GfmXxmdfIfmv/c2D60NdSL0PpfpZ5q6fZe78EHPX
zzJ3/Sxz189K9cASd/0sc9fPMvf7n7nrZzmfyflL5s5fMnf+0kG/qcZ3wb77
Rx3YV36SufOTDrjykw7mr/wirzde8v253ef1/QscffZTzb1+Mff6xNzrE/Mz
rR/Mvf4w9/oj2Z8DZ39/Cf57feJ6u68U3zV/Sbz3QZ87Pmx+Bg/6L6hveL/P
nzN+45zXqvdt9h+O+5z9mSVw9l+IP5jvB5z9D96fzEu+0efn0p/J1yN+0OTq
xyJOfzWeQ+bcP4g/mCMvwT710efAkZlftE8+RDtvSD8q4uf0fzU/OL9ofv1y
jn3OHx7o/5H+fbC/BP8Ozkdav+0/7JN/Td4N/I/6cM57ar10kD8nfpCfZX3n
x5lrfZTsp/XcQf6W7Wv9Y+71Dc8BzqNW3uTPA6c/3c/6nH3bfdDne131QWz/
rmTrk3cSxq+6LkG/6ugEfdbVo/mn8Xlu7Nv7Desh4ie8f7MON+f5x/fE/Gig
//8x9u5AdmXZmd4xZJQxRho0yqBxTZgZnBkNhqJGpzt6JkpDqSsTz8QrcZGo
7kLzoUkGh80KUpw+LA5DUEgU04R5TZhplnnMMmHCvGaZacKUgf2tiPzO/u+h
lbHwYe29773nsfd6btif3u9z9mPYd8zZ/02B31nRZ388h/lrfxr0y37A90x9
ZJ7fPJ/v9fmW+tMP+3wPf9TnA/vHMD7zj4Gzf6v4rDR+4LW/Detn/5k+//ib
23LUVzxs1SNu9TPq+hHHfs/5NXGeI+b2P5jb/2C+XZnf/oc0flof9UTmoH+p
+Z0v6vghc+eHJn2eQ+bOD4086Ds/1Nz5oWn9lX9EPxzqedF/+WGfb1f4jPyo
z+kvPT/uc+Qh8B38SZ8fr+h/gD/t80t9vkv1m6r+VM/6fII/7XP3tzJ3fytz
xxeaXxFf+KLP8X8OYfzLFf0aP3x+xzemz1/2CO53+iP9/WGO/xL7hPnYZPZH
5hueH0F/YvwV/TQ/z8d90H+7ol/P5/D56/n6ss/5/HPgPP8qf4H3Ybv+q//B
o8Alm/v8ZV79GcL4fr+bV3+INf0nfY69pvIMA58DX7x/f9vWddH4XzX5VZ/v
G8f+ZH7dOH4w88vG92H8qybj/zU/XuEnzB/GnxvHP7hYX5M3Yf2sD/uY+bTC
b/j+2vreUr+aeGTqR3/T5yW/7vNL1cc2P1F+ctIfw/zOXzbfsf6V+Vmf+y3j
F6rzqXjVRQz6XBf7oL+Vn3UxPn78tfmDPp9rHzh237Q+xt8GXnVVwviVx44+
dabwK+K3ft7nXHeVDyfOuXJY4fgXzKtuwMr8Za8XJ45pCvMXf9bnfL/4RY/I
J2rr+UC90hd9Tn5Q0j8hPyjoU5+Vz29+tDI++Vlj4JW/FMbfM//LPmd9Sf+Y
8c/7vPK7qNfH/2/v72vpmzM+9ifzqpccOPWTd9s+P27c9ae9viGsr37/l31e
+XNBf6B+Nfsd4oHIT0B+2ucz9W0Cp/7NHDjxS+xfzI8Zv+0/ql8T+T/4y1/0
efnnnx/m84r+EDjxA+XfEMd/PwZOfEP15xW/XOHEC9TzQvECju8zd/yeueP3
zB2/Z+74PXPHR5g7/oH8UezXZT/8dZ/j/5u/7XP8Z2PQn1f0y/8cOPL0ps/x
L25W9PFvEI/G9Ux+J+djc/I3eX6bYx9J+h/Rf3J4fOeH1vkbHsZP+aH+fFzf
5uSPVr3WFo9f/UmI33/V5+5fb+7+9InvwvjuT2/u/vPm7i9v7v7y5u4vz+9Z
9Zl1/ZgPXB9nfe7ry9zXl7mvL3NfP+b0X6l4PPEr5KDv66fO9+3/H2M/eNrn
2Aewn0Uexp9Wxj9bGd/2X/N32CfC+Lbfmr/R/H6f+P1h7veHud8f5q5/ae76
luZ+v6TxK/5E5z2f38zrfLDtc5/vzH2+W3Cd78x9fkv628RX1u/znbnPd4v1
XdxeP8+7sm+QP/Wqz/38Nif/jN/P3M9n83pehvWhn9Zfz+8wv5/v5n4+7//L
bZn8G75/c+zjm6CPvXgb+An25cDdn8+88o9e9/kGe/W2z4/QD/O7vx/9kjkv
Or/O3P2hzd0fOo2/Ddz5e2n8Mei7P7T5QPxs4Mhz+PyMj/3jrMVDVbwo8VOB
T/DzPie+q+z7YfzKnxOnv+sU9Om/vg/67yWbbyVX3Zl23tzIv7zgst+b279u
PhE/GXj1bw7jo1/+QHH7183tP1/oyz8e15fmXxkfGf0v236C5xX+H64Pc/uf
zD9Mh7n7a5j/2PTnoG//k7n7a/z0fVt3i0f4ocnEd5hTP4T4jsSJTzSnf8Ec
9D82eQr618z/sM+rP8GDPr9CDp+v+iOQD0m8TLsuiHfZvulz17cyd30r8y3x
M4GfrXDid3Zhfa5/ZV7x40Gfz098HvXCieekPnfFQ4nT/4frw9z58eb0N5rD
+NX/KPA7yMTT6n3s96+5368pX573q7nfr2k/MJ/3ufPj4/jYm3Ve8/nP3PFB
Uf9Zn/v8Z/6J55fqMeL3mX7x+S/nkAUfP/9lH7/gLf50SvwXksWp35g4Mvu7
tL4hzF/1IX8VOHLSV33nBW/z4y88wx5HfpLyDxJnf2B+gn7g9PcZwvjOHzA/
Zv57h/XHoF/rC/qj5D39stv16f7t5lv/f8nu727u/u7m7t++mJ/1rejjHzOn
f3rdz4oXXsT/Op7Y8b3ii/6CHt/9Ba3v/oLii/hgr8/9BT2+44fD+reBV5wJ
dgTs7e3+c38sc/fHMnd/LHP3xzJ3fyxz98cyn8lvXFl/6hd2vTL/or8WzzHs
NopPMHd8gLn1zJ1fbr7TPAv9Jm/D+OiVP+ov27rafvemyexfzPdNngK/hJ/0
+fBfGz/t8y36X/f5h5X1oT+G8Xfor8xf/V/D+nk+p8/P+SF9v2PQZ31T0D9B
Xvl+xrD++n7JlyIe6KJx4ode9Tn9CzYXfU5/+Slw908wp9/BEDj9G/ZhfY5/
SuvnPkyfP63/w8rn/4r+Ek12Pz733zPnfIv/x9z9+czdf8/c/ffM3X/P3P33
zOt8G8Z3/z1z6ntWfSf8adgP8C9t+/xM/k/z75Av+hz/V/kbgv4Y5i85zP+2
yVXvl+dF+72uuH+f9jnP3zo/ifN84Poxr+fnWZ/zfBiC/uXK/POK/pXmr3oS
7IuIv3jU51fEhzztc/dHN3d8ibnjS8zdf9z8bphvsb4wfn3+sH73H78rfy7X
W/VHE3/D9Rj4HeTA6/55tjL/0z4/ln/Y/ET+77Q+/M1Jv+Kh9H3485v785v7
85v78yfu50PlJ+j7Mff3k8Yfz/t8Qm7P22ved1xfyI/7nHhfPp/5D7z/gj7x
w3z/5sj8fua8X+cw/6XGr/o4+GXVv33Bn61wzn/f9Ln7yy84cbFBv+6jwN0/
3ryum6A/SSZfoeKH/+S2nvlA/vh5n1f+RNAv/8/zPmf86tcrTv7GGPT38LA+
5DnoU1+D+T82+2DV7/q+/X3d5182Thy2+SzZ/FOTx6D/Af9N4FU/MYwP53wa
519Z3zbwa+ZfWT/76/T9VXwi/lfJ2DfNZ/y/gX/CHh04/Qf3gR81+8E+rK/8
y4F/Cp+nziOMH+bfYL/gvE++WjvPEX9Q+c3iFR9w0ufHf/H5b+UfixP/MAde
+X+nff4BOfCrlfUz/rSiX+f/v/n8F//iVZM535rPTd6vcN7fic+B3yBf9PlO
svlJk4kfSZ8v6SNX/Dz7eeIbmrwN/LjZPzi/mmNvmIP+FfaTxP/y9noX82O/
OO/zkzZ+xe+Lj9ifAud8sw/rw/4zhvlLDt/PlvUFf57jZ5K/bxu4/Xfmjo9J
8Tx8/+Z+vlLviPMM/Y94P5u/w9765DBnH2S+wz/yos+przQF/Z8km5f/5vzw
5xsC362sv9bH/2efRj0b4j7f9HnVof7NYY7/25z3+iaMz75yDPrl1wt8uzJ/
1cUOvGTyBXiusu+9aPM/7XOuy6qfKY7dp+J/wvhVX1MceQz6yEmf9ZUfqtWb
4n5G5vozd/92c+pZjds+P14Z3/3bzat/StB3f/eJ5yX2IL0/zGfkJ31ez/fA
eb5Xvpz4B/jTPh9a/u4c1rdbmf+a99t5n9f6n/V5vR/D+i6R8VPS76Ot919d
3V6/Of1FxsB/D/1nfX5D/OHzw3wK4/8+chh/T/xj0Eeew/y1fr6//3j787q/
pTn9MqufpPXV33LBW7wDv9eCt/HZPy7mb+NPYX3u75nG5/txPLjju80d323u
+G5z5+eYE3/F/jXNPwTu+PDIw/yOD5/p54B/TecPc85P4xp/0OfI1e/ZnPiI
MH71dzvtc9Zf/bHV79H9Gc3J963+0OLuz2i+kZzmn8P85C/j/93IHln93c/6
HP9jvW/F7yA/7HP8g2Pg9GcfAh9lv4zjh/V9gRz0Wf+88vmrPgrXO/YL7r/X
ff6R/KBv+rzkwImfnMP4n/7x8PysD/uH+WZl/g8r6z/W+K6HTv1wnhfmrn+e
+By465+bu/55Wh+fz9z5vVWvF3uTZHPyZ6fAOb+MKzzNj8z3b+7+4ObEJ+9X
Ph9xLzvqBfC++N3t+c1vfnd7PPMN+oEPxM8HfiPZfL+yvsuV+VnfGD7/0Qof
Vz7/F9Tva/rX7X7j9/qJ/L+LPt9LNuf5w/Vv/h1y4O9X5n+zMv6O50fgnyRj
D+J643xT8XXi2MemwLG/Vfyd+G6NY98K/HiFI9fzVxx71j6s/2rl89/o87te
qeuTmpf95rTPXb/UvOoT3O9z1zc1d31Tc9c3NXd9U3PXN03jD0G/nofh81e/
8KDv+qg/8n7Z3paxr5r/xPtn2+e7FU5+c+UbiM9hPcgfV/SpnzEHjj7nh0U9
Yvbdv+pz4ur2ibu+r8e/J9nc9YPNNb77Ne+azP1tvm3yHLj7M5u7P7O5+zOn
ftJpfe7PbD4hN77I13B+hrnzM8TJX2D+Bf9PK/M3ef+6zxf5HdZv45cd1LzZ
H3aJO/8jjM/7M62P87nPEz4/xPNG4D4/mPv8YF75VWF9Pl+Y+3xh7vNFWn8a
n3wvfr+x+VvZTzj/3HxWfrn5tsnbFf2yk4tf/sXh+XdNn+sr6af1MT/nK/sb
j/7r7f9vbv+iuf2LCy7/Ypp/F7j9j+b2P5rb/2hu/6O5/Y/m9i9+iT2W/QT2
23t9XvnrgZM/zv7AnPxw8qvS/FPQ/4l6RKd9/qPqV5t/pD5O485ncP6COb/f
ELjzF8wvV/Sdv2Du/IQ0P/Ync+cXpPH5vtL6qv8X9kjs8+SPPe9z54eZY9/E
fm5OfYwpcOeXLebHvnp+eH1DWD/5Z9xf+FnLX0f+/ZM+d30Bc/Kyk/4If9rn
rh+w4KoPYHup7aPmtn+ak5/B+szJj5gDt/3U3PbTuL6wfttPzW0/Td9P1acI
8aIlmyu/cMEdPyq+iB8Vd/5g4mvrm8P8zi9cjO/4VHM+fxrf8avii/hVfz/4
2QN3fKv7af3I++Jxn1/z/gr8A/ysz91/K83P72Tu/lvm7r9FvyTywYbWX4j6
BOblPzwNHP9o0Kd/0hz06Q+V9OmPFPXpH5Xm/+M2TuM3LR6y4uGIj3zV585/
Nb+DfeSiz8lP3QW+xf4d5kfeB17532H8H7we+TPtv431GoO+/afmrp9o7vqJ
5va/Ug+x/CPI3/T5J/IbLvqc+ohlnxSnviLnH3P6kcyBUy9zTX8I62d+vn/X
23X93MRTvV7nN6V6vhVPKe76ueaun2vu+rkD9ZyIVyC/4EmfO/9gwd/cls2d
f2BOf4SqRyDu/IS77AeoLyPZ/Ix6+IGTv0L9m6SfeO2P/qTPyX+Zw/zk9+wC
H1f057ZfmsL6+Hxj4F9q/A318Lhfm32A+zdx7i9z1/cz53wxp/E5P6yMn9bn
+n5x/UGf81Ecv/HNyvp5vqT1pfk5X5U9lnwJ8i+JL37S5+RPzIFfwx/3+Xvy
HZ71+STZ3PWF3O/E/U3M3b/E3P1JFv1U1J/E3P1FzN1fxNz9Rep+b8/jyq97
0efv4Od9/ob793mfv5NsTn8T/CnmVzwPAuf5RHyc4xUcn2Du+ITEt4E7PsHc
8Qnmjk8wd3zCV6pH+QX7u22f0/+d97c5+UFj0Hf9S3Nk7JvmXyKH+Ufmf9Hn
9J/fhfkZf1rhaf18P1x/9Estf538d+b23y146/da9X7M3X/W/Je39V3PyP1L
F/WOVN/InOfqLui7PlGqpzQF/bLTpPXJP1lx4MTzSzav594KZ39lznu38g2C
/hDGZ31zWD/38RDGr3NgGJ/nNrLz0Z1/bu7885jPHvL9nV9u7vzyND72UXPn
l6fPx/va3PXlZ9nbbZ83x79SfYnFif+fAr9B/+s+t33ffI//5bTPyQ+oep/q
l+7+6Obuj27u/uiLfux/fVs2d//02M/9tM/dP31u9iruO+xZ3Bfm1C/G/mD+
dkUf+xr3aRofOfIwP3wbOPa/aWX9nE/Mb1bW92ll/nnl+9lR/7nJjnd3fHvk
D/oc/27VOxSnf+gYuPOLzZ1fbO78YnP6e05hfsfnmw/Nnz2Hz+/85bT+KazP
+cvmju+vfBT6z5O/8ibwZl8dEv/Z57/bwMs++22fTz9vf5N+s+dugz7jR/1m
f96n+dv+bJf4V4f1h/b5174/9jt7+n0RnyvZ/KbJ3H/m9B/bBP3qjxb0HZ9s
PjJ+0L+Cf9Pnx4pPTvOPQd/xx4v1Kf4Ye3T198X+/LTPsU9zvjVH5nxsvgv/
H/mM+QOvfKNnfb5fWf+P6Adenz98vh/1+d2PifVzvjJ3fyZzf79p/O2K/hi4
P5+5/Qvmi89PPhH9B7h/Hvb5RH5U4PRPnAPfof/4MMc/be78KPPtCr9EDuuj
PyH11W7oF0j8CvL9Pq/+hIEfsf+71+fos/7F/Ownw/je/y74X6/ow0/73Pvj
9P1MgdPfcQjjk789hs+/5fMFvtfvQz0uzpXvsZ+96nPX9zS/XuHvJKf594Fj
HyR+L62P91vST5/v3QqnPtkUuOt3foU/sH3f3yHf63P8l+x/zZH5/c3xX06B
408c7/f5CXKY/1jj0y+d+4n6V1zf5iP1v+73Of3IK58i6Fe+qHj1bw/6Vb8r
6Nf84fNVf3Tv74P/KXH8Q+Z1vgj69k+Zb9n/B33H7yb9TVjfleTF+hTfGz8/
9nDsQfdvy1xfkd/rc/oHYlc0x740Bu77x9z3jzn+fZ7f5tinxjA++mPQx//P
+W/mfuB+Iv7wXp/7/jOf/uz2fOZzG7/6G6XxH/b5RH1+vs9/+PyX5ycy+zPz
t9+3eV71+d0mz0H/jsZ3P4RFfwPxRX8D91NQfKv5ov+B+KL/QdDH3ln1gHif
q/+FOf1zuX/MK/8r6OM/4/owd36dufPnzJ0/F9cX1u/8NHNk3m/DH37+W9ff
3fb3deDK30m84u3N/3XTD7zyi171+fDv2/gr889p/J+vjP9v2/8jny3lw3/T
586/MXf+jbnzZ8ydP2N+Rf9R7APkG7Pf+fs2/oM+P2l8CLz6/zzsc/qPVbyz
+DX8UZ/Tn4h6hOb0T+P6XfgjnT9o7vxB5yM6f9D6yL8O+ivj239pzufeNU4/
s+pX32Tir8zvNrnsHeKuj29OPiD+J/OdZHPyD4egT/7iFPSrfj1x4urn5/6F
i36JxLeFforOLzB3f0Jz9yeM84fx3Z8w9XssffV7dH9H8z089ItcfH+BT2F+
93dczO/PJ17nh8AX30/od1n14y4aD/5vc/u3k/4Q9O3fNufcsQnjcy6gv9/C
ny//eFr/NqzP/vGFPnbtwDl3Mb7t8ba/m9v+bm77u7nt7+a2v5vb/m5u+3nV
i3l+W55f9Ln7J5i/VTxvGn8InPz94XmfOz7ZfArzVf1+1hf0HZ+cPv/a50vj
O77Z9lLbR82Ref4m/TnwqxV+xPxf97nto0k/re8E/Yd9bvuk+yG7/7G5+x+b
u/+xOfkx/L7m7o+c1jeE9bk/svmiP/K923+rrvW9wNv3Xuc9cd4rQ+BlJzzp
84p7edDn7N+moF95O0F/0t8FT+vm8/P3YeBcV4FzLkjzV91x9q3kkfH8aTL+
J/Pqqxd4nbOe93n1cXjR59S/ncL4xZ/1+aIvhOpdLupbuh4m/u5UL7PVlxjD
+OiTp7eYv/F63od6nEPibf1z4FWfgv058bZtP4L9AX++OfWd2aeZU98Z/7/5
vDI+9aA3YXzsM5ugX/HEzEdeM/nQ/H0S+PPbsnnlaT8O/Ln+X+Bj4JXXHObn
uqj6yZxn2Rfevy2bl900cJ5rU+I8Py/6vOpWBl7PReyV1IMivrvJm8CpL8X7
JPFt0EceVvgY+A3x8ds+pz/3LvCjlfnpz135BKp37/r25q5vb+769uaub2/u
+vaul2v7mLnzL82df2nu+rhp/CFw158xd/1c7FjVz5VzbuC8d6ekTz/ab/q8
4jAC51y/D9z9bb/geYh9m/yB0z53/2fzL2V/Nv9C9vE4//0+d/9oc/eHNnd/
6DR++vx71sdzUPkGzi8wd36BufMLFpzP8abPnX+wyIdQ/oHjHRy/YO74BXPH
L5g7f8nc8Q2Jez6vL3HHL3zSfgV5+5s+H/7fw/yLFe79kbn3N+a8P5I+85P/
mtYPt7/e/nlz++fN7X83d/7oYn7lj5o7fzTNvwn69t/Hzx/4Ir/0oq0r5NeY
2/6Y9Idv+9z2R3PbF81tX0zr24b5bV+8wh9DPCjyeZ/Tv6z6NYjTz2wO/O3K
+PiPyn8hXv6tl30+IjfOc7D6UVzcls35vtw/Bc7vMwVe18fzFR7m57nL/s68
rh/sM35f6f1jTtxj+bvEF/U1ra/9yXe8T5veG8nm5D/OgXv/YE5+I+//NP4Y
9N/D+Zzy18b67cH/m+o5ln9dPNZvD/5hx3s7Pjvysz53fLa547PNHZ+d5sf+
Ue/rE8n3+rzqL5z2OfnR/L7m1I+YPR/5Xiv67D/GMP/ZyvorfjLok1/O/tT2
UNs/zW3/XNhTZf9ccNkvF+Pr72J96H/d57ZvLvRl31zoy36Z1l/5jtTFei35
os8rLyRwZOwL5tU39ps+r30M/1/2Gj4fz3dz228W9h7OnxdhfNlvFvqy35jb
fkM8N/d3+Xee9jn+kzlw/C/V/y1w7Gjmx+g/6fOKvw/z77W+7/Q831If/3Wf
n61w1+c3H3m+B33H/6T5k/5d9AN3/X9z1/9P68ee4noorn9i7von5q5/Yv4D
+g/7/N0Kd/0U85/Eq54e8Q2yL5uXHfhhn1ec5oPA2VcGfdunzasvW9J/dpjb
/pw+v9fr+cs+gz+yXc/Ut0U2/9T4LvD3K/qbfz7MqZ/Lc9r8Lv7RwEsO/Cv8
oYEz/xDWd6T5Uz/MirMJvPI7xR3fYu7+lubub7ngrw9z97ckHrT2M3/Q9O4F
3uJb2U8t+L9p4yf+P33+O6bxW3zrsDJ+7V/M/8c2/mngf7DC2/pqHyd7dLI/
l7062J/hnP82QT/Zp0tf+4+kP4TxfX6k/hb5Zu7PbV71ir/uc+xPlR8j7vx2
84pfD+O7P525+9OZb4ifb/Nft+cB+7F6Pr3q83eqvxj1X/f5G9V3NCd/agj8
ekV/K7neo/aTnvd57TMTx/79fIUHfftvEx8D51w9pflZ/4p+Wj/vXb4f50M4
/8EcmeeEeflXAnd+hLn9L+bYv3kOpHyOeg6oHt019eNe97nr05m7Pp2569OZ
z02u+HvPT326sD7XrzN3/TquV87VPt+bl/ygz2v/5/8P5/q91+fYbdL4FTeR
9Ln+m2x/TPK/bFf8L9sV/wuc+JDpTZ8n/8x2xT/j9dk/488H9/Xs63fB2/VT
/eXEfX2b+/o29/Wd5uf6TnwOfPzt7fEd7+j4RnPq9dTzW5z6PfX8FXf8o7nj
G80dv3j1N41jP2kyv5/5hybz/jO/afIm8B08jH+yMv7Viv5xkzkHmF83ueoT
Ei9DPU3iW170+RcrHP058LMV7vgZc+6/6o998fkv92fy38F9PjJP/rm6/4N/
Dj5LviJevn3/7s9pvm1y/d7iU5O3gX8gfj5w9980n5vM9fUd/rb2vMd/yP7d
/Ef8e/f6/Af8i4E7vy3Of7/PnZ929Lef/3Ku5f4sf4740GSef+bbvznMryWb
XzZ5DPqXbfwh6J80eQr6fD7O6e4XgH+s9mOhn0C9v8S/k2zu+qfmVyv6uxXu
/gBpfWUfb/WssIsTn1t+GPHqP/c48NafofIIzX9xeHzid8fEf3GYE588r4w/
p/VRf2xlfmT786J/rvHon6Ne44p+9M8Rh8r4YX3Rf9fkhX9O/riF/835Cuyb
H/b5wr9mbv+Z/YH2n4mXfehBnzt/YDG//G/UK6z6pK3+H/t88w39785X+Is+
Jz6Jc4Y5/QHT/Dcr+tdt/mlFf/J4TT5a0S8e9Ku+Yfj82/R54Hx/a+Njl+d5
gb3X9Q/Nf9bmSfzn7W/gi/qF5q5fGNaX+KI+oT7Poj6juesvBv0pje/1+/t0
/UVzfT7XO3Z9Y3PXNzZ3fWNz1zdO43P/mrt+Mec55iO/jPWb+/xm7vObuc9v
5lfoh/ndXyrNX/VS5O/Gv1zxYeL2byde+VHi9m+n+YewPvu3zTff3eYVVxPy
48ydH7fQb/Xea/9jfb9Xre+/4o4/WXDqLof1OX6krpcm479LnPzHykcVpz9o
xRuJu7+oed0fgV/Cw/x1/wX9E+S2vjvEa1FfBPlenxMfxz7B/EyyOfFx7F/M
iY+bgz79jeewvup/HDifbw7r30p2vW7X5zZ3fW5znj9T4K7fnebHrpD4NqzP
9bnT+on/ML9aWZ/rb5u7/jb55NgL6KfFfWp+Itmc/l1j0H+/wn8k3z2MT349
zwfqsfBcon5KnW/Er5G/7nP6y1c+TeBjGP9L6ocF/Y9NnoL+HvlBn1PvZQyf
/xPjK46s7MEX7e/rPsfugP/ZnOsu8Ro3jF/2v8C5TrG/UO+HePLy05z3Oe8/
8vcW+q0/yi5x+keG8bmu0vjYH0r2+OJfsZ+jfvE/HeaX7E8Df7vC2d9Wfx7x
7b9w/O2KPvvXgf0W9jP5V8yrfsTrPieecBv0iwf9LXLgI/GKgdv/spj/t4fX
t2nyPugPK5/P/h3za9av/J3iIf+ovp+Qf1Tzh/yjWk/IP6rvJ+QfeX7nH8FT
/tFiPvj//Plv1T9s9e2qH7f5H7W/z/rc9QcWvJ2P8fOm+ec0f4tvGlf4lMZX
/YEFb/FPlcf4/e3/7/pn5q5fZu76ZOYbyeaDxl/4a+lfc9Hn9s+a2z9r7viA
es85T/hJn08rnPuy8krNee+d9XnFea3NvzZ+4BWHj339ov0lPvnitp659wfm
3h8sxlccv7n3D4v5L25/Tp8X7P9O/X72gXv/H/mrw3wbuM8HSX8K63P/njT+
Lui7v0/6fvieN/gTXa/ySZ+THzgEfldy4lXfT/xsZXzX1zR3fU3zOyvrc31N
809t/IoT4rxMPBf5XA/7fF7h07+Qz4G/0/nc/DvZD8yrv0nQ9/k/jv+4z5H5
fS6/b/LF57+8n+r5L75t8hy460ObH0s25/yZ5n+3wqcm85zjPMx54Kcms/82
361w6uNxfjKfm7wJ+j8gv+jzjyvjf0JunHwP3iuuf2L+ifyQwMl/2Qde/Udf
Hx4/8WP872F8+p/yHuP+r3pxTeb3Mef54ecrnPrD+6Dv/GvzS56fr/qc5yPv
Hz+P/Pwx/1H3f3qeJX0/n8z9fDInf3YK3M8vcz+/ov7jw+vn+eTzls9X5u6v
kPTZX5n7fGTu/grxPLiyvoqncz1TxS+Zu76pueubmru+qbnrm5q7vqn5QHxW
0Hf/MXPXR12sT/3FJuoBt/0A9X8rv018Rn4W9P/ksD71gzlvpfGJK47zN069
In7PO8QHX/T5T4pvMr+r/tTmG/XXTuPPgRN/PwRe8fUr6xvD+pDJs6IfAedL
118zd3018zfUMwuceEz2D+bHxGsG7vptiY8r60/6X2r9i3qiit8xd3zOIl5f
8TcLfdfn5P+TP6k8ygXX+sw9vzl1wanrsdB/fPvf0/qGpE/dwjD/on6pOflr
bZwP2IOxz/x/h/le8Q3m9MdBNv+I/pM+v8G+HPSRiT82d39nc/r/VPyA8n3c
38Tc+Tvm7m9i7v4m5pfMH/TJ76l8OfFJ9dni57vX5+6Pgr2O5+nc9pOVDynu
85P5DfvTwD/Bw/jwbeDUT2J/Yf7l97f1nQ94LPuKufMDzcmP3gXO+MjmRyvc
+YH2h37VZPxSiSd/Kufjiv8Wt3/V3P5Tc/tHzbl+pjC+/aO8b/n/vv/MeT/y
fjHn/Zb0ya+YAr+zou/7N40/BH3fv+nzV7y+9mPen5l/p/Nz4imefaYeVNB3
/Lm548/NHX8e1896Vs6vyd6WzsM+v5r7/Gru86v5jc6fiU+B+3yb9GsfEb6f
OYzv8y/9qCqfX/UDzCt+/l6fu37AQh//12mfl38vzO/6AQv+s5X1IxPP9n37
91/elhP388283lfEqzWZ86Xtm+Y8fzkfmdM/aAzc9k1z2zfNbd9kf7FpdZzI
D6X/lDn7q6qHJ17P56Bf+XEr428Dpx56+QHFyY/dB175q4FXffUwP/vDeWV9
U+DvdL52PoHzA8ydHxDzEQJ3/H/Sn0K+g+P/Iw/6jt8nn5F4+y3Xx2/6/GyF
c/4m/9i88i8DR6749vZcqX5s6q9m7v5qC67+aebun7aoB+P6L+au/2Lu+i/m
rv8Sxq/8G3PXfzF3/Zewvqr/wjzEc6l+nHm99172efWNPA+cONwwfvnBgj72
gyHMT95aja/zfPWvfdTn7o+b9JO9wOd7c5/vzd+h/7jP72r97/Hnts//Dnnb
5x+avA38R/y3KxzZ/Ar988PzT0H/B+SgP6P/os/L/9xk++uvJJu/W+E1/9PD
+kPQ5/PNQT/2xxSv/rjisX9m4/bPk89IvFjVRz/vc/IXeb+Ylxw4489h/MsV
ffI/63pQvfx6z4d6+nVfpnr7qm9szvc4Jq76+ov1qb7+HfzF7bxHPzTsK+b0
b8O+bl7x44ET/74LvPqxhfkrfp5+IMS7s19B/2mffyDePXD853V9i7v/nTn+
+DHwm5Xx9yvrL338T66TyHskcNvfzRf1p8QHzxfkqnfq+c8O85p/5fNNYX2L
+lNeP/ppfJ6zXC9/1/Soz/HfbsvmM/LzPj9q+mW/F79u8hTm3yO/7HPmH8P8
x21+4sfNb9Bv6yPehOum4lMe9PmNZPN5hf+0Mv5+Rb/un8d9/nGFV/5M4O+4
/8/6/L3Wb3uB45/Mbb83J/6X86W57Qfmth+Y235gbvs974nK22hy1TcUr7j2
r/scPy/2KXP8FonX/IGXfNrnvHemoF9+lfT5Xt3mi3obsr+Zk39d/h/r/0L/
P/A4vupvLPgvDnPX30jj1/nO+qq/keYvP/Cffv5b11uTq16o+PBn7d8DJz4D
e7X5JHnBm/4m8E2bv/IjfJ73+d3c53dzn9/N/2iF+/we7A2Ryz4b7c3YTy8+
/618E8Wvmzt+3dzx6+Zl9wyc+7fqYP2f7d95Xje54ovFj5AD3yHf6/OR8U/6
nPGnFf3KJxa/oX7Tg8Oc39f8amX9lyvfz17z7/68/b/Xt2We4+b7dv/U7x04
z2nzTZOHoL/7M8ni1N9NnPq528Bn5md91Mdt8gnxia/6nPwvrmNzxw+aV33h
MD75Y+XvC/PX84v6zdjD/pf2/7aBO//L3Plf5n8o2fzfrXDnf5k7/8u8yVMa
/982Tn/oiyZz7m9y1dEXr7jEp33O7zIF/Xq+Pe/zitsI+rVfIb7w+8bpT4X8
vM8rn+y8z79o8hg4+Wlz4MSnpPlZX9UfJl63Xe+z7i/zyyZvA/f9mcbnezTf
4F/Z9rnvzzT+HHjJIZ/Z+cvmzl82d/6yufOX0/jbFX2uD/OJ+DDOs/o98C9t
w+/t39fcv6+5f9/F+G3+dL05/jvpp/l9/Zj7+knrn9fuhza+61Egs/83d30K
c9enSJzzgbnrT5hjfyRO9V9dNc7zvMk8380/kp/4vM9/D/lZn5P/NwR9+BTm
//0mT2H8/T/fls03yGH+n8gnpN4W9f7afuhtk9m/mGP/3gd+gv384rA+8dvm
9D/bBI69fVqZn/VVPdFmt6v9+fM+r/3p48N8Cvofmsz71XzL+EGf+qVj4DvN
j78BexX+j4orFqc/bvlJxakHWXbcoF/5CeLjCnd9SvfLcv2wxKveoLjrh5lT
/4H71/143H/H3P13zN1/x9z9KWI/oMDdP8fc/XN4HxDPXPKDPud9wPnVnPcn
9iPzylcK+u4/Yl75U14vcfOMf9rn7j9izvud98OW8xjXVzu/cb0sOPabZ30+
0N8k8OqvsqJf9S7FxyZXPTy+L+wt4fPD+f6GwNPvY31///D0/cOrPif1p4iX
pD6OZHP6d7J/M79LfOTLPkfehvE3K5z86U3g1Idj/3Xc6lGx37hLfaptn38B
f9rnZ00egj71r6agf4R83udVv+pZn9/AX/T5vvEhjL/V/NxP2Aexz1R8qTj2
15LFxybXflB8YPygv/3Tw/rbFf2Sf7myvqDP5+f+8n7M+y9z77+S/hj2e95/
mW95n4fxvT9L62P9i35e6t9l7v5d5u7ftdBHvjisP4TxyRtL+u4vyj6D+M+y
a/0qcPozfdPnVdcj6OM33wZ9/Ppj0K/3UtAnbmgOvPzkjVc+BPUJiI992efE
D8+B35Cfcd7n7r9hfrWiT/zwEDjz834wd/8N/B3lX2j2zbrezJv9lOtjwf9D
m/+bPse/t0/j/8cV3upVjWl87LeBD83/t0+cz5f4ePjzsT72596vVX+6Z33u
/dliv6f9WdKveuzi3p8N7X1HvQi//839fje/I7nOzVyvfE/nhzn3nznf6xjG
r/pWLw7rYx93vKfjO80d35l4iid1fGeafwr6ju80d3ynueM7vZ/h/c/5w5z+
iBW/EPZDY9D3/scc/1P5/8S9P1rMz3kkrM/7o7if++XK+tLn5/5a+f7GoO/9
1aj4HNs3zYk/JP7HvOrlPuzzsn8+6fM3K/olh/nHFX3so9hnbO+wfcPc9g1z
2zdiP+PAbd8wt32j+gVcfP77g2Rz4terH07QZ39nTn79JnD7NyofvcXj7sgf
+nWfO//K/KNkc+dnpfGTPuvbr4y/XVnfHDgy8c/mP66sz/lVV3/ZOPGwyM/7
/KTJ7FvNP8DP+nzb5CHo3yA/6fPLlfXNK+NfaX2LfE3nXzqeTPFjC33FjyVe
ssd3/ybzXxzmi/5NYfzq32Su+KOYz5q+H8WX+Ty66B8tvugfHfgQ9N0fenEe
fnybu56m62emepv4JxPfBu76mOb0dxhWxp/C+lwf09z9Ka8Vb+T4LPOZ+KlH
fe74rTQ+v4v58Qo/avHTXF/mjp9yPSfXBzB3fSbzLc/vV33u/nbmrt9k7vpN
dZ74zW2Z/Erzirt70+d1HwX97cr4lfdLPkxbJ/cL+wK+H3PioveJ8+/bw3wT
9Cv+MehX/DHnQewN7f1Y/UB/3edln/hVn5d95ds+J/92G/Th7F8W8ayOXzV3
/Kq541fNHb8a8mGrnw2ft72Pyc/mfWvO/gj7kjn1Q6agX/VPnvW57VPmtk+l
9aX11/qw76uezl2etxd9Tv+cKXA//83vqH+KuevzmB/r/JB4qhfk+j2+331/
L7ju78Q3QZ/PVc9Hcd/fjtdyfJa547PMHZ+Vxt+u6HN9mjs+65h4Js738i+b
U39gDNz+Z/MP8NM+H5rM+9fc/ufEK36p1cNnP3jd9uecT805n7A/ND9qcl2/
Hl/19813TZ7C+APjB33m34X5OR/tw+e7kmx+o++n/CTtfe/3v3ndP6Gfde2r
kz732bd9jp9qH3jto9r8trfavmqO3aTyQ8XLj7Ptc9tfzW1/Xcwvv4/tEbY/
mNv+kOwZQ+C2P5jb/pDGx35gbvsB9aLZj59Qn/RRn99Fftjnd5DP+pz602Pg
W+pvrein8b9g/Ca7X7f7c5u7P7e5+3Obuz/3gqs/t7n7c5u7P7fj2Ry/Zu74
NfM7+KcfHh6f3y/F02F/N3f/ZnPHv/nzeP3mXl+K56t4LHGvz9zrq+uyPTe5
LnmOmleflsDtP1/on93W3/9f7f+9uC2XvU/8Q5PnwAc+/4s+/6nJnL/Mj7h+
nvU5+viDKs+DfHLl35uzT6/8DPHK437c586fX4zvf/f6mP+sz8tv+qjPnR9P
vfGyt5If/6zPnT9vviU/PYzv/PmoH/ge/rzPpxVOffL0+ff6fI4HIF+y9jHm
zX7J/m3BFR+w4O38O6fxOT8nrviAFM8wpPlbftQ2jd/yqdh3LbjiB9L3F9ff
7AtT0ld8waKevurHmw/4txNXffs0/i7ou/69+X6FlxzGd3188y+o14O/TvUs
XZ/T/CPxkqd97vqc5q7Pae76nOauv2l+zficV4knJx6Z/tMP+/yS+PQHfV76
YXzkOehfrXDi48f7K/y0z+nfOARe/bXxv1+0/089oSazHzf3+cyc+57+9OY+
v5nXuRL7LvE6rZ6E46PNK/7n66Cv+AZzx0csxl/Rd/zCgit+gfd92VtdX0p8
UV9KfFE/yvrUafnVYf1N4LW/S/rI3wR9xS8Sj8F5+C3xDS/6vPLDXvY58hD0
yW8bg777O8X5n/c58SFD0L9c4Vcrn9/9o8yJX5llD+d7L3/8WZ/bfm5u+7j5
vDJ++f8f97nt30mf83Pst3ne59TP4fowd36zuftzmjv/2dz5z+bOf3a9Ntdn
M/+K6+d1n7t+mznXP/sFc9d3M3d9N3P6q2EHHLEncj4nPuJRn1f8xuM+Pybe
YkW/6s+IE9/B+9F8hxw49lXiI+inxvV7jfy4z9/TP+1Znx9hP3ra5xP93Z70
+U8rnPGrH6/zpf70tpz4GDj1dObAqe9T50fxHeM/73PH737S+4D6Zfg3zF0f
0Nz1Ac1dHzDNn8Z3fUBzP//N3T8wfT6eT6nfpftbpvr75qm/Zaqfb576W6b+
cWn92MPoh1ZxP/RHe3iY8/4y363olxz0b1bGx94wBH7N/OHzlX0jcPq78f2Q
D896/oer2/ObV/584JWf//Qwn8L8R+LYAyt/FPvmaZ/bPmz+CTnwj9j/Ai85
zH/M/P7/nL8Y/6TPN3y+xsm/4nng+rjmro9rbvuzeX2/T/v8qxW+qK+relDb
9rzm/W+e6j/BU30neKrvVPOH+k5w13dyvWJ//7GeceCuT2xOPQTs1+b+fs1d
v5i4KeYrP+3zPscvW/FLQb/qi+DP5v2l+Fhz/MtD0B+bPAf94a8af9HnJ+i/
PDz+FDj++cp/TeM/63P882PQr/1hWP+W8fEn631T9Vsf9Dn1Yat+m7jfX+bY
36s+XZh/DvP7/WQ+rLyP/f4y9/tr2+xx5c9pMt+/+Q7+tM+x71X+v/imyXPg
6HP9pvmnwGfsi4Efr3y+ifnD57tk/KC/Xfl+rtFf+37cD+Vc8os+r/4mL/uc
eJ7Z46FP/E/g7o9i7v4n5u5/EtcX1s/6Kv6DeIt2P7n/obn7G5rTLzRx9zcz
d38zc+w/5W9XPJDjo8x3K5zzP/YHc8c/mXMenwN3/JP5Ir6J93Wzd/C+rbg/
8ffkxwfu/H5z5+ebsz8Ywvglb/uc/Rv7G9+P8f5TPODi/uN8y/33rM/dv2jB
0/2r8Rf3J/79dP+y/7i8LZvH+9ufP3w/vr8dz+P4HXPH75g7fsf8+G8Oc8f3
mDu+J8UjsX+mXgr80z8e5kdNLn+oOPVbKv5R/EMbfwz8WOMTL0+83xeSzYm3
ngPn+Ti96XPi4zZB/y7x9oFXf7Mw/iDufFf8BzyvzVP9PrjzX82d35rGd/0/
5+Mmfdf/+4p49bbeij+/1+fEi5M/Zk58+7yiP4T5d8hB/xJ5Zf2J/7Dy+Yjf
H8PnG9DHP9n8DdT9uIv/4azPS37W5+hX/rT4WRqP+nkr85+sjH9nRf9yhb+R
/Jb9VLseyY/ivGHu/Zm5/VuJj4FX/lWYn+cL5ytz78/cLxP/Fvs7c/xndX2K
p/6acPcPNnf/TeKByv/d8kPpz7fgLf+I/kkLTnxV4qrPsuC/WJm/xWcNafwW
fzQHTv4t+c+OR6nz2aM+d3yJ+Qnnt8DrvBb4Ffxxnzt+xLzOp9ij5U9I/gN4
8h/U9fwv1X/c5/YPJH84519z+7fNff+b279t/nFF388Pcz8fHK/l+Cvzn/h+
Tvsc/w33v/kH5JM+d3xWiicbw/zVP7mN73xa57+au3+2uftf+zzr8+uCK38n
5Qsl7vOpuc+ni3r91F/aBu76++YtvnKf9F2fX7zqPb3q80X9/sTT/K7f7/l/
vjK/6vv7eeT7w9zPJ3P7N9PzbnAcPf6DJpc9T7zymZ6v8PM+d/6jecX/BX3n
N9Ovh+cR/vmyL4uX//9Rn+9b/50x8Io/WNN/0ucz/OwwnwOnv1DZ0zlH0w+J
OLjTPq989nt9zn1ffYTFq65bmL/6lITxK/8s6buPsXjVDQyfr+qJ8b5p51au
I8692KPM3b/J3P2ZzEc44+n5afuiuZ/P5rYvmvv5be7nt+spun6iuesnmjv/
3Nz552l83h+ux7envtnzPnd9PnPX50v6VZ+v1bupeH+dD8yn/9TmT7ztv6t+
Yhh/jQ9hfJ8fFtz1FcP6OB+4njJyxd+Ju76yuesrp3rN222f834bw/iur2w+
ox/4D9jvAuf9Sfyi7V3uX2le/WFP+5z+lFXPXLz6RwZ94r/Y/5rbvmZu+5q5
7Wvm7q9hbvtb+nzp+7N9zv0u3d/S/F2TuT7Mic/l+Ww+Nbnyi7AXYc9HPu9z
6kdWnp44/ayHwBl/DuO7vqV52d9e9DnyEDj9ufE/m3+kvmVYv+tfmrv+pfdz
3r8tuOpjmnt/Z+79nfnA/A/6vOZ/2Ofev/E8qnosyC/6fMfz53mf+/lmfgU/
7/MfJS/yQZT/Ye78jwVX/3Bz9w93PLbjr81df8/c8dlp/DovieP/LfuQeNXv
C9z1995gD2jzvaW+wIM+d/0Bc+wHXP/mrk9g/uWKPusbA38P5/mtfF3n55o7
P9fc8a3mjm81d35vnD/wo5X1Of835Ssn7vzfNH7FpxMP2M4h+Pen3/T5GfX0
Aye/n/vTHP89/r80fuLV3+dP+pz4wjms73plfORd0B9XxufzjWF85t+E7+d6
5fu71vfvfAzyL8rfIv4DcuDvVrjzM8ydn5Hisbn/zH/EH/i4zz/8823Z3PHZ
5o7PvmrrrXrgfH/bPt83eRP4j/BXhzn7rzR+1Uf/WeP40+UfMsd+iH9/wZt+
vR89fjvP7RNvMte33+eL/E1zvb8X+wG/v3k/tPNIvZ9O+/wD8v/e5xvJ5lXv
JvCqrxPm5/02/LLPf1wZn/o8Y+B+f5qfMX5Y316y94veH5pzvh4D5/zO+9G8
/B9P+9z7y6Rf9mDFa7u+srnjs81dX3kRD479K82v+Gpzx1ebuz6zueszmzs+
2+9zv7/N/X5O+on7/Wzu93Pab+wC9/vXfG75KFNYn9/P5n6/mn+p+YkHJ17D
+09z52eZO3/KfEf8/OPDfAr63n9G/cCvV/i+8SFwx887XmVQvK65/dOJj4GX
fK/PHb9ibv+06926vq059vExcNe3NR+bvFnRJ16D50N9Xs6f9/qc50+9L8R5
fg6B83wrf704z1f87+Z1/g7rQ38M4+OvmAN3fnTSnwLn/TKsrJ/za/z8vM95
3xEvx/vtXp/bP2vO+xl/ljn26DHM7/gG8+3K+JcrnPd7XV/KB3F+ifkH5G2f
O//E3Pkn5s4vMXf+SJ2nqL/G/v15n3v/b855YA76Ph+Y1/kl6H8U5zzhemDl
zzJv/p2yT4vTz2BM+o7fMHd8hrnjL8xbve0x8OofkT6/4jOIZ+Y8R/w0sjnP
923gxzyvL/qceuZD0IePgdv/aU789i5w6pfuVz5fWt+XTca/tW3x7viLzySb
f9dk/CfmI/HzQf+qyeQHpPmT/l30A3+DvLI+/PtVjwX/Gv6Te31OfZU58I/4
V+73+Q/4Q4K+42fN36+M7/ha85nPR/zMReM8D/BLP+1zxw+ZO37IvPJGgj4y
9ifiDyu/iv3j68N8Gzj7T/JfzInP3Ad98tW4/s3r+bMyfsV7sO/m96HOymng
nEPu9XnVVXnQ58SlD4HX/A/7vPq4P+rzinMK+uVnSfrEwa6sbwjjc67h/sH/
yO9F/H/VmQuc+BvzI/QDR9/+Yzj5BbswP/5Xns8z9gjyF7BfPOnzD/CnfU5+
PPZg80vkwHcr81f+fZj/hvPH2vycT7XfWexfzJv9k/tksV/y/ibsp+a03/L+
JfA6z2OPIL+E/Minfe76xeauX2zu+hrmrq+R9Mewftc3Nq/6J0/6/Av0V74f
fj/OgdV/HrvrSZ/zXKz6nOKVF/J10CcOMejzXE3jV980/jZ7SvVHwN5y0ecb
1V81pz4B70lz/IkVjyju+rLmrh9Lv7A6T1BP50WffyT/7XmfV35b4G+Qw/ju
D2Z+g/8pjD/Bz/sc/SnMv+fzBf4TMvZm4v/5/cgfuOjz7/APvO5z/PvE6ZpT
X20f9PE3bIN++ScCP15Z/9kK30imHm7lN1NP9nmfU5+26k0EPgT9kybjHzSn
vi3nS/MN+UlhfvKXyt8iXjL+E66n9hwhv7P2++LOD036PMfM6Y83hPGdH1r9
7ohnQH7W53vyu5/3+Ye/Pay/JR886NM/r/LxxTf0xwuc/PMxjL9bWT/99xLf
MT/1THQ9u76Lua9vc9d/SfpD4Lavmfv6X6xf17+5r//E2X/E+518E8WDOf7L
3PFf5u6/au74sKgf6oU6/mvL56UusvIrzV2/25znV9U7VD1P2yfNHR9ibvuk
63VQvwL7mbnrd5hfNnkT9F0fI+mPa/Mjt/7Q7Ifcv9r8TZM5/5kfqX+1+d0V
fXi9X4l/bvtH108wd3y4uePDzR2/vch3UH7Dgn/V5F/3ufMXFtz5z2n+NL7y
Gxb6ym9Y9Mtwfwxz978wd/8Lc/evMHf/CvO7t8enngD2I9svEuf6M3+/ov9e
9gjzt8iBX/4L18fnN79G/5s+t/3E/Xzdv9ec/Qn2D3P39zV3f19z9/c1v2H+
B33u/r5x/fgvL9pf7PlcRxd9znXF89Oc73UfeNnRw/jYh8s+Jn8U9/cc/FXV
X/xl4PQnD3xo41d+gvV5PgW+sP+E9fF+xd7Bebz6O73u87KfXPR5xa8EXvVd
A6d/Fb+H+aeV9X0I/998CM8jP3/M/fww9/Mjjc/zw3zxfFA9rA/Ul7ro85MV
7vpX5q5/lfrpcZ+S/4TdvvLHnva564ObU5+f84O5+0uYuz64OfljYxif/hoV
vy9e+5snff7dyvisv+z+IR+6+rmKO//ZvN77X/e5858XXPnNi/GV32zu/GbX
E3X8hbnjK8xdv9Pc9VlSPVOvZ1HP86zPHZ9h7vqefp76+WnO84/7z/wG+/nr
Pvfz19zP3zR/1QcJz9shzO/nrzn1w7fh8/n57H7B7g+84Jxft33O+bbiDcSd
/27u+prm7i9sTnwY+buON3d8ufkX+I9P+9z5VebUcyF+3Nzx5eaOLzd3fHka
fwzrc36WuePPzR1/7vM+/bm5Ps19vk98DNzn9zQ/9R3KD4Rfpv3uFX8vXs/d
B32O3bPy/8ypkwHXftb71wXX/nWxH9b+daGv/Wuafw58aN9P+T/CeYnzizn2
TeIIzH3+MT9SfW9zn3+cL1XxdQ/63PlTSX8I3PlV5hWfd6/PnV9p7v7M+Itn
8mtcf8682R923wbe5H3Qd37RQl/15fy+OGn18afwPlnUTw7vm13Qd3/41C+R
68fc9lPzI+zNX/e5+yMm/SGMb/usuevb1Xme/UO7/jlHm7t+r7nr95qXfyWM
7/q8rmfr+rXmrl9rTvz7EPRdv9bc9WtTvV345W8//8Xee9Vkrk/zuj5e9/nc
rn/2l+bIm6CPPAe+a/I2jI//ZR/0h78+rD/+9vb6/X0cSzb395O+z80KnwP3
5zdfWz/y5qLPJ/HvsNcT349/4EGfX2G/P+3zHfzeYc77wfzHlfmLr4zP+tzP
rfIrQ7833k8V3yPu/GFz9q9z0L/D/vOszyt/M3DGn1b00/juP+d4OvsXF1zx
deaOrzO3/9Hc8Xfmjr8zd35jWt8Q1u/4O+ebOr/U3Pml5s4vNXd+adJn/+p4
GsfPmDt+xvwT1/dFnw8r46OfuONnzB0/Y+74Gcdrs2/g/jV3/HXilQ8oznOf
328xPzJxuszD74Wd6jxw8ssDL7v9i8N8DLzmJx6n2Zv4fqlvzP428td9PjZ5
F/Sxd2E/Yj9X+2ft/8y9vzM/bjLvN3Pv/2xPs/3L3PYvc9u/zN2fJPlDkr3P
9rHEk777kziemPMy59sF/1lb/1mfL87v1vf53dznd4+Pvp7f1U9c+Z/mvL+m
wJ0fak78NvZx80vJi/mVP7rId+V9FOav8yKfV/XCXP/L3PW/zF3/y9z1v8xd
/zXxOXDXD+N5QHwL9zPxr+bYXzaBX/E8OO9zx9eZO77OfLsyfz2/qOdCfMzF
57+OvzF3fI35CfvfwK9X9LdNxv/nfqAVv3/S51UP6H6fU59hDvru/2l+tTI+
/aOSPvNX/pC4+4uau7+oeT1fw/z0t5wCd3/S1E+Z56G5+yOb4z8lvtHc/ZPN
3R/Z3P2R0/rZ/7jeKvtd3v/mqf4qnPx0rt9Uz3UIvOqvvl7hYX7XT3W9iC/V
/83c/hlz+2fMj9G/1+euH2Fu/0kav96PqtdGf0qer+b0z6x4ZHHXrzN3/bo0
/xDmR38O3PXrzKt+yMvDny/pH+v7oZ5L6n9n7v535u5fl8ZP/AeeT012vqnz
S82dP2ru/FFz7JlJ3/mlaX73P8Sfa/9t8vfuAnd/W3P7Z92v7UueDxd9/vEf
D3P3dzN3fzdz93dL/eTKXuh4NPW/WPj77N8L+tFf6P1/0sf//U/t39t6PzWZ
8575uybz+5ojTxd9vm/yZoXvAp//6fb6sTNUPumj27J51YV91ueVn/y0z2vf
HXjt28P86I1hfuyO08r66/95/ayTeCz1C7nh/f34MJ8Cd30ac9eX+Yl6CRft
/1P/4VWf+/429/1t7vvb/L1k8y/YnwS++8fD/NPK5xv4/tjvEGdAHBd2+F8F
zr7i14FLNq84YOILVS/M9cvMXV/X3PV1zV3/zNz7F3PvX5L+4v9r/qoHKO76
ZovPx/6E+enXil3T8S3iu//S5nnd58i8f83pDzsE/V2TeX6aD9J3vojr95s7
/8Pc9ffdj/An7c/N3T/afNL+Ofajvnd4fs4P1c+X5zHy0z53/2Bz9w9O+tj3
zI9W9N0/2Nz9g825HoY1/fD5juFN3/YM2yfMbZ9I+rw/zG1fMLd9wdz2BXPb
F8xtX9g3e17dr02u+AvxzZ+38b7p86HJtd8Xn5q9bxv4DjnwTZMr3lP1BFwf
wNz1AcxLftXnrh9g7voBi/X97vb6F/lYzq8Sxx7O77Pg1Av7ps8X+Vfm9O9M
+srPSvly+xVe/X3cT+g/N/7rPl/0/7G+8ucW+u37q/5A1nf+nOpl1vM91NPk
eT0E7vqa5px/hxVefcHEeT8kfdY/B+76nuau75n094H/qO8v5aPV/l7c8ZVH
PM+Jj+N5/7DPL4mfvdfnvC+moD+3/c8Q9Gt/c7/PTxif+pPUG7j4/Pc76hdc
9Dn15yufSJz6BTz/zKl3wPPNHHm86POrlfnnMB4y9RvqfNP2W9gTsBfX+UN8
J9nc9m3zucmboG/7tfmnlfXZvp3Gr/hv/GWhf4+5/XfmVWf6YZ9T97ryL8Xt
/1usjzrYYfzy393rc/pEDGF8+//s77N/z9z+N3P738gfwR6T8luqX2rIb4Hf
Zf8Vxk/5LbP+/yboV75L4JUfEzjxAOi7nrL93+auj2xu/3bSH8P4ro9s7vrG
cX1N9vP0LvVeLvrcz1fzE8npeT0G7uenuZ+PxFOwX8O+yvNjwdv+hf2Xufdn
C332Q2l+7z+D/ibw2v8l/Z83ffwV6nfi/ibm7m+SOM/nNH7584l7xv7Jvut5
n0+SF/qKP0u86vV7fMWfmTv+bMHZ94b5K/8SexN+cvIn8Iu/6XP2RVPgldf5
bZ/z3CH/wpznwhz0Kw4orY88syZvFY/v+Hxz6tkTX2/u+H3zS3jQP2H/3NaX
/BnlHxJ3fRZz+y/MHV9iTj0X/CfmXyqeJM3P86P6NZ7dlon/NT9rMvFp5tsw
HvLJyvjUHx2C/p2V8S9X+Butv+ppProtT48P8/LfJ/4o8D/o///F/GeBt/ys
qvto/q+b/sr8fL8V38z3L/9O4lPg+HMW8dvSH8P8MT678e9W1ofM7xvHp58Z
52Hm4/z+os/xd2NfTfpj4KWvetVVv1P5/+bcx+zvzEsOnOcCz3FznmtT0B8k
L9b/6rbsfEnnR5oTv17xXuLOnzR3/qS58yfN3b/S3P29zJ1/ae78yy90P3yl
69cc/+QUePW/XtHn86X5uV/M76ysD/9r9XlTPLDjf819/jF3/K+543/NF/G7
jlfW+cbxFjxfiS9ZxGM0mf3vQl/xEwuu/hKL8X++Mn6r/1X9xDlPPL4tV3y5
eTtfDI/7HPvvnPjPGn8UuOLH4/jY+1q9Gs77rp9jvvnb27I59W/qOSi+gwd9
1+cxv1rRd/0e8+sm039joa/8Cvqtc37Cf8r8iXO+Mt/IPmdOPb8x6L9Z0f9O
9jjzLesL/Bj7XpOpF8d5cvr7w7z6UZz3+VvJ5vTfqP6H4lUPqn0/5ecgvorz
3rbPq35Q4Nj9E6/xX/R5nT/5vrhP23mv4p9+1efuz2m+6M9pfcWf+H72/Wvu
+9fc96e5778F1/1l7vpaaX34V10PyvWfzLFvVD93ce8PzV0fyryujzC+60ct
5kc/1Lty/aix3Q/c7xvOf+d97vs36c9B/6sm74O+729z37/myHPgnD+xD5p/
mm7r448v+y/2/3t9Tv5P5XuIb5o8Bn38F0l/Ir/ol31e85/0uf0Pzid0/qC5
8wNd79v5QeauD2P+Aflpn7u+dhq/8ovbOn2eI37W3PZHc9sX7/5Dk3kfNhn/
gflRk7m/zO80eR/0t9J3PGzFpz7vc8fHLuJpFR9r7vjYOH+I13X8a1of/2+x
PsW/Vj1A6gn999t65q4/aP5esrnrE5q/+++312/O/ovznfnI+sL8rm/4w/ft
/1Ofu8mVjyS+Q37a51/8w2H+XZOHMP6XTX8K+p9Y37M+v1lZ/575z/v8veSf
OA9T/4zz89d9/gF+0ueL+Gdx7Fe8XxOv57P2m95fmnt/aV5xMxeHOflhCy55
MT/+HfR1nqn40cAdn2Du84m5zyfmPp+Ycz7ZhfU5/iDp8334fvP9Ze77x/xt
k3m+myNvwvy+P8zr/ljjvB94Lsuvh2xefcUuAue5HvQrrjtx1hXGT367Wj/v
j8DrPZ+4/YzqN0VdR+ozmi/6T1nf/afMqc8Xxrfeoh+W+k/hb6p6PORHP+3z
j8hP+hy5+iGJ38DD+B+Qn/c5+UH1/iBegPWpv5R59W8K+u4/lfSHwIlfGMP4
xE+wfzB3fyhz4iHq/SxOfyzev+5n8aP8n4lzvZs7P97xhMS/E69k7vhCc8cX
mg/U/wzxjI4vNHd8If3g9yF+1dzxq+bXK/r4n/Yr429/1efU18NulNY/B33H
l5rT/7Tyi2yPxn58FniwT5c/N9ini8v+7Hrnzu83d/1zc+f/mzu/39z1z6M+
z0fi65ivydyv5q6/Ye7+V+Y+f5u7Poe5+1+Zu/+Vuc/n7mfp/pXm7l9p7v6V
5u5fmfTLXxb6bfJ+MHf/SnP3rzR3/0rH2yGzvzB3fJ35F7w/gv4dxdeZb5pc
8Sfixyvjw7EPm3+FHPSPVj7/0cr49K/j/UY8CX7v1P+m6kXLvmme+tvAbd80
T/1vvD7sVObv4K8O8ylw2z+//L7x9j75BP+mzz8wf+BvmrwJvMZ/fZhvA0eG
V17l9rZc9l1xrqvNts9rX3Pe5z4fmw8r43PdcD6lX1/Vx6Lfwf0+pz8D54cF
p77waZ9/gJ+E+anfGjj9ATlnmNMfcAjzu74x+0GuZ/Zn/H7mzr81d36s+Yb9
37bPyUcZVuafAye/lN+/4h3ZH7M/e9TnyGPgG/j9Pr/T5CnoV/7U4z4nfnMO
448r+sVDPrDzf80r/+u0z++s8Kp3ctLnzh82d/4w9jjiTbGf4T81LztB4FvJ
SX8bODLxvXwe5Pn/Ocy5/sbAXZ/b3PW1zTm/bML4rr+d5h8aH1o+WdX/+j+a
fK/PnX9mvm362H/Nx8bLD+7xG+f6Nt9JTuvH/+f9yBH7g4s+T/2x4Kk/1qz/
v73o80V/rPbvnDdKPu9zvz+db+/8+sSrPqa48+fNnR9v7vz4qB/W5/x4xwvY
/29u//+Cy7+/GF/+fXP793n/8nncX9jc/YPN3R/K3P19zd0fKs0/rIyf5nd/
KOdjLPIvxBf5F+KL/IowPrLtYbZ/mX+An/a57WPmto+Z2z5mbvtY+V353Nh9
7vV53ZcP+rzsPIlj5w3jc11UPUzsyS1e4y31pF4e5uzHzW2/Nsd+PYfxbb82
d30r+vFxTkCeX/d5+a8Cxz/G+8H8DvI3fY7/jfPVot8M9Q5+Hbj7z5i7/4z4
ov+M9f9D+5vmV3+a6mfbno8/8v681+c/cD4N/CPyaZ+XfL/PyXeZ/f/x33x/
e/wfm8z1gH+O38vc529z/I/7iz5/J069FvqnYF9j/2Z+tsLL/vYnfX6Jfew3
fU793F3g44r+3Ox3U1gfn28M/Dp8XuQvNb/r2bt+/aLeverXJz4G7vr1C33y
lvj/8uva72nu+Kio/yJwxU+ZO/9yMT/7o5X5+dyVr4H9gviMkz6nfwX3r/l3
K/rkV1S/mMCnwCt/I4y/XVnfpbjr8bn+nrnr75m7vp656+uZu76euevrmbu+
3u9dff7LvmRoMr+/+VGTsY+Yl+zrh342yu8xd36PufN3zJ2/Y+78ncX72O9X
8cX71fp+v5rr/brgzT/I85N4FvZ7vG+4Ps2vkR/2+V6y+djkKYx/1WT2+eYV
n8b+VOdh28fNbR83r/f968Oc92+cP+jbfm5+zfwr6+f+d75l2Y/O+/xqheO/
HgJ3fqa58zOxF7If9/rMK7/8xWF9zgfm2Dt3gZOfzvvW8QSOH0jxBmPgtt+Z
2/9vbv8/8bDsJzg/8H2b27+eOPkr5u4vbk784BD0rySbu/5++nzYC8zJZ6r6
ysTDNHuO+7uZu7+bOf3jKn5fnP4W7C/i+G1+18t3f2Nz1883v+T6XOGcX8xd
X9/c/ZHN36zM7/7I5ic8H8L8rs9v7v7Gjjdx/EjqN4Fs7viRqN/e79SrrH5q
xBM873Pq1/P8MXf8hLnjJ8wvNT/1zKrfNvXVXh3m28Bdfy3p479L+rvAP63M
7/psR+SXUM/L9fXEF/X3xJHLfys+It/v8xvifx70ufsjm++ln/L9+f/mzt83
d/6+ufPrfySek8/D8/FRn2+x7wVe8r0+n1f0J+x1gdf6PB/+Ip7f9/v8ivGD
PvbHsqdSj5rf/+9u65vTX4Pv23yH/LjPGX8O429X+An1tQO/bPIU1uf+37aX
j9ivT/vc9nNz28/NbT83t/08rW8K85d/KXDb3/0+9/vb3O9X87cr3O9Xc/qr
joH7/Uk9QM4bN8T3ve5z3k+VZyLu/n/mVd8v6NNfcB/03R+Q653vo/IX7/U5
9emnwKm/X/5ocd4v+KfNqV+f+Mj9FOa/0vrJfy1/LOe/p33u+lLmVc/pRZ+7
vtOlfg/3fzRH5vxt7uvHnP3T9LrPfX1wv9T7UvVjzF2fxhx5DPqL/lLte6t6
xcq/MWffWPWHzZVfY15236Dv/JrF+pRfk/TLTqvnuZ/f5o7vMPfz19zxGeZ+
Ptc5j3gG5Jd9XusKfFzh5V9O45P/c97nnMsqHpHvn/et/LPm9s8u9PHPPuzz
8tcGXs+ZwCvO4FGf2z+c5q//T712rs9m36zr17zZN8fEW/4C9dXT+GU/NVd9
9QV3fXlz6gkFvqjPHj5fxZURT8V5DvlFn4/t/pkCr/iqZ31OPBTXr3ndn2H8
gfirJt9VPzP68fH9mG/UD82c/dMcOPaFIXDkMcyPvYHvH/919SNs9avKH2z+
Ryuc/gingf/BCm/2+ymMX/0Tkn6TiR91vWDXX0/12sfAb1b0XT/Y3Od7c9cX
rjiIJju+3Jx9Q9LHzr4P+uxL+PwL/Yvb8hX10aiP8ldtnFd9PjTO/bXQp7/y
yz53fz9z6rdxfy/mp75b4Fvmb5x4eM7r9FevfgXixJdNgV/BH6/on/U58e/Y
B7xf8fnR3OfHtN+Zwn7I+5Pj337+W/6i9vvy/jC/bDJxiInPgY+/PTz+FeNf
9Pm0wm/a+snPp55+9dsjDuRxn1d/gCd9vn1zmFcc4NM+p37OELj7eydedVSo
50M8seoLmVP/p/o7i7v+kLnrD5m7/lAaf5I9j/0m5x/2t+auT27u+uTmVd8z
6A+cvwKn/ucQ1lf1QYO+65/H8YM+30/Vt2jv24qrdP6s+CJ/1hz5UeDKr031
XNk/m9u+a76R/cf8WPalpM/zzdz1W81tnzI/Y34+r/uJqH+IufuDmLs/iLn7
d+x43+DvU36X+X6FOz/L/APx0ad9fi1938++/8x9/5l/xe933uf8fsR3mfv+
NR+RX/Q59pZdWJ/v/zh/4L6/2a+wH+P7HwMfm8z7z/ya+PqLw3wK4/N71372
+ya338P1acxdn8bc9TvNN02eA78Ltz+f/RTxAad97vpf5j9JTrz6U4rvV8Z/
vzK++2fan2P/jbnty+aX2JcDt/3Z3P4fc/t/zG2fXqxP/h9z+hPy/HU994q3
Oevzyud71udfoh/qxTv+yNzxRzvOQ+yHJZvT/6fs0eKchzaB39C/x/lZ2FN4
jmz73PlZ5s5fNicujOeL460qvzTEizk+zNzxYebVL4/4HPf7+d8+/636XuLu
35P0Nyv6nF8W+urfs9D/45X1/fz2/Dv2E5yHmsz7y5zzRdJ3/1Jzzgf7MD79
RROf2T+F+Qet3/Ygx48kvg3c8SOp3x+/v7ntS+aOHzG3/cnc9idz25+od1/9
sql//6zPj3k+nPc5/cCI5zGfV8bn+cX+qvqZ0V9G+uY8vzgPm3t+8yvJe/kX
f5JsTnzrGDj5PXPg7F/q/C/u+uPm5Pfw/nG9A9c3MHf9AnPXL0jjz4G7fkHK
F+X5a17nicDLfnbe584vNXd+qXnZ68L4zj9Nn29YmT+tr85PId/W+anOJ3D+
QOonwveb8hGwX5o7v8Dc+QXUEym/Ld//8z4/Rg76G76/Z33u79ec+iRV/5h6
7y9vy/PLPnd9LfPUX6L6BTR5CvqpPwTc/TW9X0NmfnPvz8y9P8MOXvrYhV72
OX6bTdCvuK3zPq9zhuqvMp/7U5in+rBwx5ebp/qx8FQ/Fu7+t+apvizc8euc
t7AH0++c95f5jWTzifNR4I7vS3wK+pwv6/kozvluCHzg8z06vH7sYbzn6rpR
fQRz9m3YRxNP+pxnhsBrn3ba59V/8mGf1/0Xxoenz1/nAuTv23qod97kypcR
d31tc/KD67wr7vq/rkft+tPmri9t7v4mC33yksL4rj/t85DPP+YD/ovzPvf5
Z8H/7DD3+ccceQzz+3xU+XDNnkL+HPZt849NngJ3/luqZ5rylVy/1Nz1S1O+
0xy485PMXZ/U9epdf97c94e568+XXzD0zzF3/J15nZMSd/wdz232I/gpXvU5
zxWeMwt9+jImzvp8vpWceDx/S+b9aR7P3xp/YT9oPJ7P+Xw6f7vfnfvbmbu/
nbn725nviW8I47v/Hedd1n/UOL+XOed7nk+ul+X6V+bzn7e/D/rc9bHMp6Zf
79c0fuKqr5XGnwJ3fS2fV33+NKd+4RR4qm8E9/kznpef9rnPN64X7Pq/5q7/
a+76vuau72vu+r7uR+v+s+buP5v0az8s7v6x5u4fa3+B6y+aUz+v9sPirs9o
7vqL5q6/aG7/hDnvzynouz7jD29vy9Qvqf4x4sTHl78Ke1Zbj+P/zd1f2pz6
tNU/Xdz9oc2dP2B/mc8/yZ9W/kJx+7fMnd9kbv+Wuc9H5vZ/OZ7P8VHOB3X+
p7nzN6n3XPGqqr9s7vrS5q4Pbe76z+au/2zu+s4z9iLy6ySbV33c+33u+EJz
xxcu9Bn/YZ+7/q254wurnkl7nru/hbn7W5hXfZPA3d8ijv+iz/esL/AN84fx
3f/C/cwW9ZPE3d/M3P3NFv3Szg7z+vc0Ps+tsP4pfR7Wj37o5+b+Z0k/xXM4
fsPc9gFzx2eYu79Q5PibdJ6pvNWLPvf5ZqGv88vivMR9i6z9vvf35vi3psC9
/1+cJ/BfBb6Dn/b5ov91Wh/5hsQz4T9AftbnP/3ft2Vzx2eZ3yE+6qzPK34s
cMafVvTT+EfIT/vc+ec74mnYH9heKm77q7njb8yvkR/1ufcHaf4x8BQ/Qx7B
O+w3r/ucesz4n83ZvyZ94m+w06X54VfkYzZ7iusLmru+oPn1Cnd9v6RP/erE
pxVOPcBj9uecT1W/3dz1z82pXzQF7vro5q7vnsYfgr7rp5u7frq568M73tj1
Jcwdf2zu/Ftzxw+b+/lQ1zP2l7Z+3ifmfP9D4K4vZY79cx/0j1bG5/zIecH9
ut2f29z9tc3d//eE9wH9BvT9m/v9YO73g7nfD0k/je/f1/UuXZ/SnPyt8m+b
q37lYnzkh33u+pZJv/xznKfPb8vzeZ87P9984HwduPtvp37hc+Dur+14kRn7
2fM+t/3O3PEj5rbPmTt+g+u86h2Sj/emz/Ev0r/BvPx7gVdcZ+Ou10l8B/OY
E8+xD/x4hbt+p7nrc07YmxtnP4psPrK/DdzxseaOf13kczt/W7zyVwNf5F+b
O//avOXvTokr/9r9Qt3/05z40cq3tb76gy54G3dOvI2f+pkSH8v8jnf272fu
+GZz/76ut0J9LNa/qMei+inmrr+1GF/1U9L87F/Mqc9VfQTEXX8Fe33F26k/
n/k2yGW/RX7S565PZu76Ye4XavufufuHmtu+Z+7+omVHbM/b8lv+ps/9fF5w
ngPfHubbwOucFLif3+Z8Ls4HtlfaPml+hP8p2DttfzS3/dH1mKp++UWfu76O
ueszmbs+k7nrL31o+wXsW2+bzP7KfIY/7fN9k6s/qPgP7E+C/g1ymN/7p6Q/
B33mZ39i/pHPF9Zfnz/M/4P/v+JlyG+s+ori1LVP+QaOn1nwPzvMHT9j7viY
tH7OL/gLeW54/2ROffch8Pfsj16v8Fd9PrGfapzfp/KfuT62h3n1NxG/Qv+8
z5GnoM/1mdbn/bvzZZ3/au78cXPnx9KvhfOa6z+au76jues7mrs+o/kl/Vse
9/m7Fc74PJ/MT5Db+dX1mF1/2Zx+LjwfzV1/2Zz42THo31V8q7njX81dv9nc
9ZnNXZ+Z/W7Vs2ef+ibw//XzX97P5lPb31Y9e/P//Pkv/W3cj8X9V8zxh3Ce
MX+3wqcm8/xyPX3HB5oTHzff73PHD5q7Pr+56/ObO/7QvOLziLclXor3HfLT
Pnd9G3PXtzF3fRtz17eJ4z/rc9e/WXw+5VeZuz6O41kcv5L6jfL8M3f8irnj
V8wdn2Lu+BRz4k/T/PgTKl5C/TgX+3tx999M+tvA3X/T3Pv/RT6q8k8XnDqr
28C/vi2bO3818V0aX/mtC44dIozv/Fb32yI/Dn+AefXXut/n7s8V9U/7nPoE
c+Du32VOvwz2J+bu3+V6D7Zfmrv+g7ntl+au75D6dSGbu3+Wuftnmdu/Zm7/
WuLJH2j/mrn7b1HfjefRNfEtj/v8A/ysz4lXqfrk4sQnj0EfeREnHvInUr4F
8akLfeVPmDt/4g7fN/V+2u+L/cCc8/sQ+DHy/T4/QuZ9xV/8HoqPX3D8et/0
OftouOPZbL8yv6P87RQPx3nO3PFv5o5/M7d9zNzxb64X5vpe5q7vtag3pvpG
5j7fmdf5jeel/Dn2z5j7+Wbu/F1z+2+8H077X3ja/8K9f6XfGver7Qvmti+Y
235gjv9mCNz2Bd/Pvn/Nff+afwE/63Pf35wHWY/zL82dX2le/U9f9bn7n5qT
X8r9iz21/A1NZp9ojn11Vf91n2+x3wY+Yr8N3PUZF/P/9vD6yb/eB/1h5fNT
X4r3jOM1Fv71X9yej/oo5d8Tp/5d2cvM5b9L47secnHVX15w+f8WXP4/6rdU
vW7V5zZnf1yy9cWdb5Xyq5zv5PwqeMqv8vjOr4Kn/KqKt1R+lePRv2P/t+3z
iqcKnP6vg/LBef67P5O57V/m7t9k7v5N5rZvmbs/WbLnVX0S1ct0fUxz1+cz
d32+NH7VkxJ3fTxz18dM+szvfqOOXzB3/1Fzxy+Yu/+o+SK+QfUunB9mnupb
1PWj/DFz538NXzUZ+0KTd7/u84V907zJnN8W42OfSOO359U+jG/7aFp/1IeT
Dyt71pXsS+a2PyX9MXDbn3y/zcgXTVa9ZddXTnwO3O9vc9dfdry648/NnX9q
7vzTPfs7/KH4a5/2ee3/nvV57Ref9Ln3l+acJytPQ/kglWfl/BDu15Sfwf93
/+ygn/JRFv21PT52hPZ8PGvnEZ6HR/9w+/+b32ky/lPzrfQ/8n5p1wvvm3q+
io88H1/3+d3Gh8C9v07jc3/gr+R6sH/f/J1kc/v/k/4Q9N+u6Ds+wPya8R/1
uf3v7kfm+vHmrh9v7v5hi3hJvb/M/X4y9/mc/VLZYSSbu/5q4sS/mLv+auLl
fxD/uMKp3zoG7v6czgdyfo858hjyiZz/Y+78nzQ+9gvX43P9P3PX3zN3/b3q
L0w+vvIbzPHflL1F3PkF5s4vSOPzHih7HvF2nI9O+nzEPnevz9Hn/jNHngL/
if6Rp31+gv0wrG9Abtz+PPvvzO2/M3d+iLn9d65n5fwpc+dPmW/Rf9bnzp8y
P/5dk5/2ufOn7A9x/pA558/db/rc/pHkbxkDt38k8ZQPZf+Iuf0jZd9pzw/H
H0Z+2ucf4Cd9zvlmCpz30xDGd/yj+z25v5M5/Sor/lrc/Z9SP6kx6F+vjO/+
Tz6v+3xu7vr55q6Pn/gUxvf5PNX75zzv8xD9FjhPm39o8j7w+vyv+5zx4cRb
YQ/+gfiqiz6nv+4mcOKxsE+bE1+Gfw37FPw9/SNf9fmW+/eiz7GPDUH/3Qqn
ngf2wQl7KH0C2/md94c553verwv9Zg+tejzmXx3Wr/N+mv9n7d8Dd/+x1A9y
Ctz9H829f95gT2r7YddfNa/6rS/7/Aw56OPPqfxqceTqhyOO/4n70/4o29fM
7Z8yd/6QueNjzW2fcz8190czd380c/u3F+Nf3P583g96/2fu/Zu592/m3r99
Ip6F91OTeV+Yl/z6MN8Gfk18Sxj/y+9v6/M9Vd2MJpedI/HHfU7c+LjC0/g8
95M+z9WqnyJedrswfsUxtf2F+20fI9/rc/ffNn/D+ea0z91/O80/BX3333Y8
sP0f5o7/Nb+r82+KN076jt/lfuF3c/yFueMvzB1/kTjPF3PHZ5i7vr/50cr4
jt+I9/sK3wbu+5t+qfwe7s9q7v6q5iP196jXJXuz7cvmti9jT+K84f5X5u5/
ZZ76Q8JTf8iyHxCfQv1f2TNcn8Hc9RnMXZ/B3OfvNP4Q9G0/MXf9Bed7YW/n
uWg+aH9r7v7t5s4PM/f+2Bz/wyZw55eZc/7m89mfweer+oni9m+Y279hbv+G
7d22b5vbvp30h6Bv+7a57duJs389xl7dzqPYo7EPm9+wvw76R39xmJf88vD8
+G9sj7L9ydz2JXPbl9L4VadKzys/v8z9/DL388vczy9z9/dbxOMo/mbBnT8v
7vibBVf8zYI7v771qy57DP2tXwfu/H/zf9vGT/p3V8Z3fj/xYO28RXxYxVsE
zvPHHPvaJvAb/Mev+px83zFw9wdc6Ks/72J9K9zxC/TrxR4/E2f+qM/d39fc
8anm9NudHgb9Jg9Bv9aX5l8ZH7sq+j5vc17n+jH3+drc52dzx6/ctOdV5cWT
z/m6z5F3ge9/d3s+80t40P+C9wfxEOzXyffS+dvc/hdz+mdNQR95Cvrsz4cH
fW7/jjnxcGWPYh/N/rq9l8gPXfDnt/9f4mPgi/qU4rxXq469uepL2h9g+7+5
7fvmtu8nf0Pdn+KuX3BG/Bb5lVz/F33u+AbzK+IbvunzsxV9x0eYv1G8WVof
8RH0Q+S5gv8T/5I58Usb/j/nwdD/zNz9z8zd/8zc/c/M3f/M/Qj35Idf9Dn9
O/j+zaeWj7ANfNfkTeDUJxgCp3497+8Uj8v71dzxt+aOvzV3/K35dkXf8blb
9rON4y+t8cSn392e33xoMu+nxfjwoH/E+2fb5+y/p8CvkAOfm0w8n/OBbH9K
9a65HsxtfzK3fSnV0+H5Y+78oMR5/9f7hHhC4tsu+pz3R+2/zVUXzZxzYtJ3
XbwFVx0+x6sRf8PnM/+0wp0fYu74NXPsozxf2IeS/1JxGg/7nL9VP9wcO3jQ
Jw6J+LLF/Pdvy2fYk3j/NBk/iTn2p+1FnxM/sgv6yOTvmWN/2gTu+rLuR+T+
Q6lfEfObu/9Q0if+wtz9iczdn8j9HO0/NLf/z9z9Hc3d39Hc/R1tb7J9ydz2
pWivCvq2L5lTf4b9qbnjK309V3zTrw5zrt90P2yDvq/fND7Xr/tRuf+UuftP
UQ+g9t9/LDnxe33u+n8LffIDHvS56/+5Hq6fH+bUAx4Dd/3cxMfAiVdj/2Du
+rrmrq9r7vq6+Lsr/gn5pM/xr4+B07+G85X51cr41f8GfzXxOO154/rv5lVf
+Xmfu7469beqvy71nJ4d5mPg45/els3JLx7C/Bvyj5/3Of3IXf/M65sD53zB
+dz1Tt2fy9z1T81dP9Pc9TPNXT/T/hz7b8ztnzG3/yVx9F3vZJHfaa76I4t6
KdiXk77qjyz4z9v4jW9kr7pq5x+e5+bHsn+Z2/5ljjyG8Y9W+Gh7Hs957JbU
Hf22zxf1scQrLirpY9cK+th1yD/btP0y9nD3/zV3/15z54+bO3/c3PXLzMkv
5/xYccN8TuxiD/qcfdEQOH6iOenz3LsXOM896svInmP7jbn7b5nbfmNu+83w
h+0v+U//TrJ58+9UfyDzf9PmS/zft/Wl8Zt/h9+/4tnaeYj3Jb+POfb3KXD2
33Pg7N85h5mX/LjPqd9Q9RSDvR77vLnt8+Z+PpnbPu/r3de3efmpH/Z51bEP
vOzQgfv+WXD0H/W576+0viGtT/ef7eGOfzeP9nGe27KPVz0qfn/ux4s+R94H
/pb7O/DLMB6y44vMP2h81/tyfS9z1/eK+qd97vpe5q7vZT42/Slw1/eyPcr2
f3Pbp8xtfzInf43zT9Upp94F7+9f9zl+qiFxzoG/6vOqu05+eHteV3xmk7l/
In8UePO3j4kjnwWOf35lfOwL7qfn/nnm5V98flh/WOGc783dP8980R+POIuL
ps974KLPXV9swbETb/vc8dXE8/BcvSZ+52mfO/7H/GhF3/FB5lvkxJv+GDj5
tbxHuA+pN1/77jd9Xu/hb/uccx/5WfWebfdL1Q241+fuH2OOH2AK3PHTi/Hb
+rj/iIeq/i/4U573OfJw3ufERxG/ZU7+3xz06/z0os/3zB/4sdeDPxG7eZPr
/R54fV/i7k9tvoEz/tvbnHy9ss+JX0k2Jx9oDOMv+vuG+eu8I+76YOYVXxnm
f4M+8fCyp9l+aG77obnth4mPgdt+aG77X9XR4/u8d/vvgtP3NfCF/8hc/p1F
PJzj28zb+Ynvd8Ed/2bu+LcmU49icf4TJ36w6tNa3+sz5/y4DdznQ3OfD5Vv
eEX+5qs+P0P+ps+Pm1z+xqCfeMmNf8BeQX6J6ickXvHs4lXf4LTPqZ/F+cS8
6ukF/cov4TpVPwnee7W/EOc9uQnc/SUW/SrUP2LB3xwef9FfQv4s9w9J/rIh
+NPsHzO3f8zc/UcSnwNf9P8Qr/4OnNP1PHN/KnM/3xb6er4t9MNz1M9Trj/n
S7t+mbnzp82dP514XS+hntq0oj8E/UV+dduPYg+/bPvXqkclXvVhXvf5rsns
S9P4YxgfufL4/tttzv5qE7jji8wdP2R/CvVL6nnufmnuf2Yu/6e5ry/nSy/y
o51Pbf+r9bW+hb7zp63v/Glz9W9L+eg8H82dP+7nnZ9P5n4+mbs/UtKfg777
H8XncRh/8fwL9YfKPr9SfyjxymddqT9k7vpD5u943571+Xutn3ruvOcuVf/D
3PVNzF0f3tz1RVyP44T8tNd97voa5q6fcUy8HPb5Jle8uPgR+duPVnjQHxj/
fp+f0L/uYZ/fXZn/WPPbX2b/mLn9Y+b2j5nbP2bu/j6LeBQ//8z9fAu89gHi
jj9xvs8iP8n5QO7vae78I3Off8zV39P5QK6/Zu78IHPXZzN3fpC584PMnR9k
7vyeY+INqA+n97O5+98k/covFHd/nLn1s65+wvS3ftXn+7+5PZ751Yr+dZPr
fCB+Sf9Pvs8mcz0Vf93nJ00mfmOn+9n3v7nvf/N5Rd/PB3P7HyofutmJHX+X
OPeHOfkNSd/xm+aO3zN3/F7S3wde/daJB5S9cGj2PfZn5u7PYO7+DMkeOf2y
z0tO88v+GOPBnvQ5/dfZn5mP1It60eeOLzNfxJeFfMHaP4lvkZ/0ufMDzZ0f
aO78wKSfxnd+IPlu7Mddn8Lc+R3mjv+fW/2Gqmfb6h2xPzYfqId03udVPynp
q37EYn7uD/YPqmdN/Wj8k4t616pvvdBX/eoFV3+/NP8uja/61I6nc/ycuePn
zKt+wbbPF/ULVG/O9evMZ+6vwKcmp3p5rm9n7v15nRee3l5/9e+TzPmk8hzF
XX/h+Pv2/y8+/3V8hLnrq5i7P6O5+y+au37SlnwE/KXYf1/1uc9H5iP8os8d
35ziRfh85v5+Et8GnuI/4P5+OLeW31N+SPPy6wf9ek8EffJusX9dsR/D/9hk
/Jvm7s9u7v2lOfu7MYy/Y/8XuPeXqd5w2ffFXV/YnP0551Fz9ufk36bxp8Br
//6gz12/+FL1spDnwF2fy3xS/Sxz1+cy5/6cwviuz+XrydePua8fc18/5r5+
yJeteqFNLvupOHLFt4s7ft7c73fz/Z8e5o6/N3f8/V2eL+2+PsO++KTPtzyf
zvr8RLK585PM76yMf0Q8Wbu/HG/0e62/IPtrc/oPEr9r7vijxNn/mf/+Vfj/
2GMVn2ROfvIU1rfh84X11ecP+o5/eot88fmv67OZO//ZnPgu3o/uJ+T+QObu
D2Tu/kDmi/5AIR6q+heJO34q8qDv+CjX82J/hr3L3PW7zJGJUzP3/tb9ENz/
wNz1W6veHf4fnc/Nid/BT2m+XdHfUC8P+yf3O/5H9l/bPic+t/pdiRO/z34v
8SnwEfllnxP/W/VSlW9LvxzyQ8ydP2vu/Nn57z7/5Xl1RPzXs8O8+rSI75o8
BX69wvfIgSOPz/v8Bk4cuvzhC/+3uPPDF/qK/1n42+0/D/FG7E/Iby97qOyD
5qm/GTz1N4N/lGxOfHT5751Po/wBc+cPLPIVsLs86nPn3y/mV/79Ql/5CWl9
9XuGzzekz6f8gxvs1Ref/9r+bX7SZM6v5rZ/mx//7W3ZvPajTV74y+UfWvBf
NDlx+Y/M7R9f8JY/yPnF8YaOLzR3/KC54wM/UA+VfKnWz4v7w3yH/KTPT5Cf
9Tn5oVwn5tRj5fn59vsmt/vtXZO5/833TcY+aH73+9ufz/w9POgX5z4O+aJc
b6leIfuHqtvH+1l5DOYzdrLTPq99SdDHL8j5+wfsbe16e4t9/H6fv4eH/Y7r
25tX/Hrg3h+5HqXrR5q7fuQb/N0Xn//elWyOf3wIHH38s+bXK+Nvm+z7FbuR
+9+Yu3+gufvfuJ6H6/ubu76HuetzOJ/M+WPmx/p9zJ1f5ngXx4+aO/4lcb4/
c8enuB+s+7+aI8+B3/0X6uMvSf1oE9+uzO/+tIt4BPcXNlf8QYpnwL7ufDrn
z5k7f87c+XPmzp8znzl/POxz58+VP5B61apfb0589RB49asJ43+p563r4bv+
vbn3v+auf2/u+vep3y7xoxudB30+NMfehH3H3PF35ti/hjC/z4/mFT9MPEZ7
3nA9uz+6ufujm7s/urn7m5u7v7m5+5sv8rEubsvmvHeGwL3/WHDGP+1z53eZ
Y3eZwvze3yx4e+4NYX3e37ietutnmw+c7wNf1M8WJ1646p/JHnGDfeHbPnf9
THPbL5I++X/u1+r6Tebu32ru/bW5+7sSn8X+1/eXue8v8xR/Bvf9Z1757EHf
9a3Nr1fmd3wb/bp4Xn3XZPxj5lvJ5v9/YXcPY2eSlXH8hoQOJ+zQoTUIGAkE
lxHBghDb9vij1+32tHusXSNA6oTFWiF05dWiFSukDh12uKHDCW/ocEKHHU7o
cEIC13NQ/6qOb9Qq/13v/XrfqlPn4zn2/5Knf1i+/+76Hd+lP1nyJ4Y/sfJ1
4z98uOb6J+U17njyM75Zc+sX5fo3p/st5wXX38Szu/U98dtufU++cLe+J5+O
9buzJ/cH7M3Yf3LtQ7n2oVz78N6IB1Z/L+KD8vMxLr0auPE/+eV/fp5f5/WT
X0E9h/Ubcut75eVfbXj2hzx/VXcYeyr70dM1jy5K8tf0h+n/kuv/kpv/qV6U
+lCdnlTdn3D1n+LPjl+y/Nsna34Z/mjN3X8Tj6z1NvGFizVPfDPfszzx0dwf
Uz2q9Z1y60/l5F8bL7B/rNz4gdz4gdz4gbzslyaeYXyhi3d0840vxB7JuPwb
Z2se/2SeH3niNduGp7/yrnn9Ta6f+EjyH5Ov0OVnJt8rY/M/kz+Bvt/H+E/G
/X3z37fnyzOOn15e+onN/Gv0Vdv5ed7shzL829FTmfjwZ9ofJTz+8eizmA/T
5b+E239b3uXHhHf5MeFdfozvL9e3X6v9WTte9iDnbePvcvu3u59ZfyhXn3za
D9Unp945+b+xX+XWP0/zqV+23sn6Jbn1SXLrk7p6qlz/Kv7a6Fdl/ODzPPal
PK+X/HZ5/L25f+XRT98eeP2M2/slcbex31R95V8xlkcv4X7Dv7zNrZewPkJu
fYTc+gi59RFy6yO6+TcNV/+4e/9lD+Hv078n178n178nT/wl/TnlqW/YNq9f
+g/N/e79Lbd/rPw9z5vc+7+d/2DNP2TcXN/n44p4iPERecbbhkcvPeuLPPtT
1U8Sj1XfpePbhhuftd+I/UXk9g+R2z9Ebv8Q+0naP1Ju/0i5+3t3/U0z3/6R
8jy/+2a+/SXtp/hj6h/O19z8/m7+5sB89RRynkp9UdYnufUPcvVf5Oq/yLOe
5Px0L/G8sd/Ev7HnvFt6EOO6lR8GV79NvmGsv1T/p1z/p3qq72IPP1hz9VHV
U8u5MPU9k95a/AwNV39Nnu+ju37FkVPHNfQaqh5n1A+Vv6PhsQ8nHv2H52s+
6VfDY0efN9fP/Mrv8/Xl9POxP49c+1eu/Su3P4/c/jzqydo/TT7pyzpffVn1
aumPJp/0ZZvX3xD/rPN74nPP1lx95a4ffeWDwO1/1/XT2zXz7X8nt/+dPP2u
S59k5CHkft4SZ5JPz1fD6/6Dl65uM9/nK/WwFV9n/5e7/8vd/+Xx73fzk09c
/m76Rf6Q/nO5HvWcm+T3PG849Z1y6zvlyT/K/PQvST7dhzfj/x+v+bvB83zI
K/71cM1/yvXTr5F6J+ubOl754fDjMU7+jNz6pOl+5v6bePa9izVPnOW84ZUn
mvUWvfIT9ld5+oV2eue53/bN/OQn1XrU8F3D1U+Xn/P+4/8sf1L8oQ/W/Cj8
/prHf5rXl8c/W/UA1iNbXyy3vlj+T4ybeufMz/NXeYZ5fl+ueZ7f6hcBjz7u
UTM/68emmZ/4YXf9vL+KF8Mz7q7v+me9v/7jVg/gScOtv8/rJL9gvO/KN+h4
M7+LT1W8hvjUND/2u3q+vp+GT/q+8MovGeNaT2OfZHy25uYnyM3ftR7P+ju5
9Xdy6+vk9reQXx6Y/4qxej3q78jVz5GrnxM9kNwXk/0BT/+jPF9y+59OfMw/
arj2i3oz6svI1Y+R21+lzVe8v+bmH9rvL/6knN/l6Zd703D9q3L9q93rV3yG
eJzxOXnG+4afHODH4c/X3Phc9t/Y6/Ynk3f7v9z9P7z6E8Z+oh+W/a/k9rcy
n2vqfwwv//qrNd8c4Po/pniA/n/5lwf4347Xa+INlQ885lf/mItPf+NvyfrR
8hdrnv4zsV+TD1zr1Rjn/pJ7vpVbH1L9KYc/IvZr1hf50QEe+/Ko4bkf4z+W
b+CVpz38RVlXyr8Er3Ncwyf/FLx0Whqu/8p8ffWd5eo7d/O7egD1nbXHtb/l
2t9y7W/7Mdt/WW7/5Y5HH0Vuf2a5/Zc73l0//pWsb+5X7k/yt3/4/Hz3H7n6
mt31q88H8XDzm+RTfzrqpc1fnOqxGU/z0T9r9daa+eqfbfAjVn3o0zWP3dzx
5JVU/Njrx85/9nm+bXj5Jcf1tces35Vrn8m1z169Gdcb94P6SOoJdf2lwrv+
UuFdf6lw69vl6g+9/h3vd4yPGr6Nf+27Nb9Kf6eXa35yYL79oeSvfvf593+d
6x94/7Hv7Rdnfzi5/eHk9ofz+/T9y33/8p/yeeI/4/v0+5f7/cv9/uW+f7nf
r3qO6jfK01+g8qnhOd9VPSbxGOMrcuMrcuMr1jtF/zfrl9z6Jrn1TZ29dN7Y
U9pHcu2j5DtVPJd6UPkXY3zUcOtP5eaf3aS+OvZM6qufrHmN76/5u8x/sOap
/078Sf4xPPnA6HG/i773qzVX/7vTC983PNc/b7j64NaTWj8qVz9drn66et/7
1GM8XnPz5+Tmz8nNn+v0xnN9P2/3+TL288nVh5eb35Z80tLHGOOq94InH3X7
sOF/93meev19Nx99hmm++uDN69fzSD6N+TPy6Dnk9eXmz8jNfyl/bvyFOc89
P8BP1zw6xBUvRk+i9CG+XfNt1oeGZ/2p/k3d9ZvXPw9X76W5f+Xev3Lv39R7
VX+/5As/XfN74adrfvy/tz+f3Pot+d3w5v1dHXh/e96f+Q6Tvo35EOQvyM1f
UM8r63vsfXn6x+X82+mBZb80X8H8A7n5B3LzD+TmN9pPz/54cvvfyavf/fGa
2/9Obv87+RHjq9SHj9/1LfrZcvW11ZtSP8p8Hu1L+WRfko+gfR5/aPWjH/1Y
Sz8ZHv9m8s2m+UP/IP1t1cNQ/0Ku/sVPqbe/GJ9njHM+kle/pu/WPOOOmx+o
3qP6jp0eZPTGWr3IszVX31GufqNc/Ua5+o3Rsy492TEufQa4/SXllR861i/r
fa3v7eqBq19CMz/+annW58pf+3r8TX4h9688+lT1/+VDr+qmmz/iA6mTst7H
+h259Tty63fkpT/9aM2t79Gfqf9Sbvyt84fuGj75L11vWD+0B82f7uzFTWNP
mh8tn+xD+i24vqsXfk1/Srn64PLoTSW/yHiB8QG5/R/lxgfMR3T/l7v/y78P
N98x+i3x/5+t+S7zn6+5+rby6MtWvSRcfVr561z/6Zq/Yv3Vntd+l2u/T+cB
+u/Itd/tl2j/D7n9E+X2B2nnn6+5/RHNhzL/SW7+UpdPtWm4+UnqfanvJb/K
+Pltnv3I+Kbc+Kbc+GbG5f8mPiyPHlnFc8bfTZf/BE9e4vYAn67X5S/Byy/7
eM3Nb1KPQn2ISa8i9uO4TvQUc37SvydXv1Gu/06ufqNc/177/sb8Lt9k3+Sj
WB8uN/9Ebn243PwTnxefj9JXjn1M/vLE6T8jjz591lfj1can5canb9IXMflt
0ac/XfP49/P7yvcZn3ye5/729+zyg8p/Q36Q9cjml8nT5zHPWduv6njNjW/o
r9E/I9c/I78Mf7Lm+mfk+me618/v8458+EmfHT7pr8PNr5eXvufZml8e4Pei
l/7tmu/y/hue8b65fubX/kw9u/XrdV5r/PPy+N+2Dc/vF/+zvLs/wt8e4N39
E+79oT9C/4NcfVX7sd2NfXSy5lUffYB38+2/1vWDq/0561H878Q35fZfk7s+
yO3P1s4f17efkf2L5OYPyL94c3u++Rbqm8vVN+/mJ15rv3v7t8j32X+a+fa3
155r7TfzyR+teWvfxX/d2XfxX4/xZN8Nrn0nrzqvcT/8kHzGsR9ZnyqPfkv5
A+BXjLv55Q/O/ZT4bfJbHq555aM/WvPoe3bXt7+M9VjWV8mvxrj8c3Drr96m
H85YH34f/aena27/cLn9deTvMh73h+d9z/dyz+9yz+dyz+c5j1Y9G/oT1mNZ
fyW3/kpu/nXHdw23/kpu/ZXc+u1d9MJjL41xzh/yO9nfGp75lScHr/3xdM2P
GFsP6flBbv3jVE+JvSPXPpMfZXy+5tpvcu0z+b3Mj55W7O74k6Nr/8s1rzz0
V2teuvi/auZn327mx+45b+ZnXUu/zU7vLs+fXH02ufprcvXxPA+eM57ymdHf
kx+6vvq2lXd0Md5vxi/WvOrPvlvza/+9mZ99deLxg71c84xjH1mvp75bqwcX
fwfnKftbtfzZmvt8yu1/Jff5bK9/uuaen6Z+KNGHOF5z+59M8+l/MvEx3nX8
H2+P1WMzf05uftzUz6XJHyre5A9VPlKTP+T1zR8qPuJn9fm9PvU13fvL67+P
PXN+exz/t/yH2EcNVz9Trr761E8SfVi5+rBy9WGn+ejDZhz7LHqyZY/Df8j4
6Zp7ff3V1iepJ6B9K9+OcewzufaterHqw8rv/eb2+5VfjrF6Ee35zX6dnN86
vbTsq3L1z+Tqn8nVP7Nfqf1J5ernyu1va7zJ+JE84+zncv0b6u11+nrhnX5e
9btu9PPU88s+2b1+4tfGo43vy9Xvkhufdr26yvryfM279Ss857tNM3+f+Wdr
7vpmvrL5yfKMo1/V8d0BXvpP5iP99fj7y4aTXzBx8zfItzK/Sm7+fqd3XPYV
XH1iufrC+hv1L8p9/rr5m4brX9Te076Ta7/Jtc/0x+h/ket/ket/sZ7M+jG5
9WNy68OmejXqw7p6tvp/Xj92ePZn4unqh0zxdvRD5MbfO72Sqg+jXnmf8fma
f594dsO1H8z3Ux9Qbv5fly/YcfP/5OoDZr9JHCX56Vmv5F8lvvfPa17xwGZ+
4oM3+AvK35Dz/bdrvj3Ay3/QcfTtNn8x/sbfMtbT8s/IR77XtuNDf778QfKh
N1/6zQf6g8jNH5SbP+553vO3vPLaXqx5zl3JX1CPRv0ZefX3yXrL8+D9L1cf
U+7zIff5kPt86M/SPyXX/zTNx/+kP1v/dcdrfcZeM/9Sbv5ll8+Z8ds3n/7m
vKc+j9z+m+9zP0ZnjHim3Poo+Sb6w9+sefwHpdcNN37bzd828+N/qN/1QPy4
rQd7uOa+P7nxY/O5zN+Sm78lV5+idK5iX8Y+GGPPY57/k0+Z9e6P0Vc4X/Pk
h0evU37O/NSPV77NGOf8L1c/ynxCz3/yir+cr7n99br5m2a++YevycfN+fq6
4VeM5eb3ys3flZ+wfsozzv5gPrbnT/mUX41elfpTcvUzJ70r9KfuRX8x+R7R
A3q45pfh36x59INS/yK/yvyTNY8+UZ5/9UrVJ530TNGHnDj6pB2P/VT+ktjn
9N+WZz2o+i14+nnn9/sx/pPYCf9ze75cfRH5u9yPDf/iD7e59UTW93ue8vw0
8fxt9Dw8X016H5yvOj2Qynf1+pyv7PemPkrbD67j9Hfrrr9ruP3d8vvEX6j/
UP4ef6Fc+0V+Q7+FKZ8o+i+P1tz8oZYnPpfnOfqA5PfKze+V76Mfe7rmri8T
J/+3fX/ZT9GLV19w0lto9KfCO/2pspfRn1Kvr+0fnHqRjJt+xNG/rv4TB/qv
df2eKn8Wbn8nuf2d2vnj/rCfYNd/2n7Rsd/kXf/p8K7/dNWj0V/Qet7U01U/
Xbj1u12/0NgPcvs3yu0P2vGjhtsfVG5/yG5+9iefd59vufn7XT1Ant9pPSF/
X71D9Q09byY+mP1L7vnTeJTxJ7n7f85D+Twfcr75xZp/zPno6Zr/kPnP1tz6
93fJ58r3lfHJmqd+Nr+PPOebrA/mu2u/Thz9VLn58b9Pvud4PfUP5OrvyNVH
kG8zbq6f+rx8/m69Kn1EuP1bOr5puOuXvNanhtvfJd9T9dWO3fXy8zzxO3nF
TZr5ta9010+eS3P97Ct5f9p76t+1/X4frLn2nVz7buLo41nPkvH2dM23sbca
bv3LxHP9Z2te9SQNz/ObeqPEQ3Mefp/xizU3Piv3fGy/r65/18SbfmFdf66p
n1jqbbp+mYmfkW9qfqnc/NKO7xpufql6V+pbZd/KedXnb+Knt8fyqsNreNUV
NdfXL649oP5NV+9X+S2eF9j/W3uj8ZfFPi7/M/UK6ivK7e8rj75i/Hty+/92
83fNfOsrpn6oxNfl9l+Y5o/8sOqf6vwxjn6A9oz2i9z6MPmk3+PnIT9gm3yn
xL2Sf/XzNb8T/mDNM67zP/xj/D331/wq88f19Vfrn5brn7Yfk/pFU7+mxKMf
r3nWta7fU/bn6ncvR/9Ibv8m86GNL8nNf5448Sfz5fL7lH8Tnvy86o8Iv2G+
+3W3P28P7M/V3zn+2bM17/Zv7QX3722zf1f9cPTC4j96suZbxnL7S+rPtP+f
XP+7XP+m+a7mt075sOS3TvPJb53mo4/XvX6ur7/G/Ej5vfCfr7n+G/0Fnv87
ftRwz//yj78e7+fFml/l9eNPH993nR/z/Txp+MjfSv6+fMpP7q5P/KD6mTX+
f3npeRhvgPu82z9d7vMt9/nu1pN9w32+zWcxf0Vu/orc/g5y81uM1xmfkxuf
kxsf7OKBdb+P+yjniaxLsV/kpfuZMf42ny/59Xg+zpv5+s/km//4/Hz9a9oz
2i+dvVP1aHDtF7n2y+bvx//Lfo3+lnyyL52PPtc0/x8+/b3uePp7HeKxD4ed
Gnvc/q7yKT+Ifnj2v5Pb/67rp1fxGfTq1KeTqz8nV3+u1cNLPG38Xtkvst/V
8wWf+qvKvx7jfN9Zp/N7xK+S8wT5JOaHyNUfkJs/IldfoNOrzf4rV38sepX5
PqPnmd9Pbn9m6+GOU1/X1MtZHyffJv/4wZrf8fWSL536qtTPPV/zG/Kf5eZH
y5OPne9DfhS99bM1z+uXLiv+Sv2Tkz9T/4gc/+R0ffyT0/wnn5+v/1Ku/yT1
6cnH1b/Q8V3Dt8mv/nbN4/+IfWc9h/275NZvyPX/2Y/e/vPy2DexB+R3mutl
bP9646nmp8v3+X5zvnU/dH9Tr9L9Te7+ln3g7PZ4e7bm5md0PPm/xoOM/8iN
/8jfh/9ize9w/ex32T/Mj5Pvc70xnvz99LeRT/1ryLc2/1pu/vXEzb+WR6cg
8RjqTazPllufLbc+W77P/vBsza1fsV7F+hS59Sly68fk1q/Yr8r+VB2vfG+4
/ac6Xnqg8avFHsG/Jte/Js+5d9PMV196ev38HfeV+fTq61Ydzfh8ee7i3544
/ZXl+dy7htt/eeLGF+D2Z664RPJx8ruNz5d878qfQL9Vbn6d9ThX1N/Irc8x
HmT8p+O7hhv/kasvYr9J+0PK1d9RD1X906nfAfqncvVPL0f9WM4DGW9frLn6
avJ96v/H2HxG+xPJ7U/U9TtKfkK33nX1eq5fPyWen3qmxP8v1tz8om5+3c/4
e/TvRG8l+13ps9xf86rva/hxxlkn0FtQP2Hi41y87zj6ChNHX0F/u/45ufqQ
Ha98D/wZxr8mjv/Bfn/2B5PX+eflmtsfUH+b/jW5/vcunz7r51TvxDlKPSD1
f9SrVp9abn8KufrV2nvqZ8q1/1yvXZ/lrq/mO5nfNOVD/evnufn7Ps/6X7UX
W/2e5I+pHwFv9X0a+1Gu/ej78fpyry/3+vpL9I/I9Y/I9Y9Uv6nz2+M8L/LE
v6tfLjz9r/J8ydWHiV5/9tvo9ZeeKVz9YONx1hfKjb+lnjjrhfaPPPnwRw3P
ehH7b5pP/bJc/XD1CNUflKu/1s3P+mG/DftryO1vI7e/jdz+NZ537K8r93wj
t39u2bEvb8/bN7zqZRtedn93ffSv5Hkuts38ykvO+3gz/t94XtWf0Z8Z/2Tp
Y8Cj5xD7Va7/s7t+x/VvdtePv8Z+ZvYv6/qdlT/ggP0gtz+p/W7T3zbrX8dz
/jRfZeqvBTe/ZOrXlfy1B2tu/slV+lWN59X+VfL058r6L7e/ldz+VNqjU/5G
/v/F7devOhF4rR9jHP390muO/uPDNb9Jvcs3ax495aoXjL8z/QDiH36y5ncZ
yy8P8Ffxt0YPC3/M5J854J+bOP65ieOf6/RM8vnlk34Jejv2/+z0eKpffcNL
X4e4d8WxH6157auJj7Eeuv7Jy377ds2jz5jvV34v62PWV/wN5odO/RTxP8j1
P0z+OvxzU74c/rlpPvlxXb7dprm+9Y2ehzz/yD3/WG+vfoC87b8afZ4D/Vzt
vypXP8Dzrudb+Z0D3P1L7v7l92l+udz88eSBZL8pO/bBmlec4v6al5+1mZ91
PfajvPTBG65+t3p26ivL1a+Tq19nPYX1s129xa7h1ldMnPO79TZd/V/G32d9
bbj1NdrD2r9y7V+59q9c+1Y9OfXj5OrHyT9k/rM1V1+uu371xyTfzfy2KR8u
8bjna37zL5/n2k9y8+PM5zB/o86V8afk+RnjrGd5P57v5dbnyaf89uwzsT+y
Tz9vOPaJvPb9Zn72v+zfE8+6EfsIe2U/zquJV8vtT576hdw/ia/n/pKXHty3
a27+QuzZ+r2jb/684dR3m8+Q+qb4c+X2T3Q/c/+Su3/J3b/U62v1+Rp9ZPNx
zb+dePK/4t/FnlB/qOPbhms/yLUf1As1v0Se8U3qWYaeWdUjZPy44V+O1+n4
X376W/nj8j8d7//A9WP/2U/lXe7/l2ve9VcJt79K9DNLX2Xot2Xdm7j5f/Lo
x52v+ZT/N57HrKvmn3c8/gT51F8Ovc9J33P8v01jn8m1z+TaZ3LtM7n2mXo8
Od/kfpGrzyNXn0du/qpcfR7jqcZP5enPk/O5fIqvct70fCn3fCn3fOl+Ff9J
6ovk7l/Ga42/Wo9ufbnc+nH9ifoP5eZPyvUvyvUvGs82fm0+vPUlcp9vufUl
cutLun7zeT7l+tfl+ueMV9qfZIpn0r9Abv+Qqmsf60Hlfd5f8/LfYq+632V/
cz1z/ZK7fsldv+SuX+YjdvmH8nxf9suy/5Vc/5U8n7/8MfD6PM31/Xz6E/Uf
Thz73Hpi64fl1gdXHlv2vzEvv6O8fn/yvyo+wflgOm+c3B7LPT+YL3V9eft9
yo0fys3v8fsy/1nu99d936WHbD0q9acTp/50M/I/qj927KdnDY+93XDt75yv
Kj8y69fJmt/N/tXwqj/Iue/A/iJ3f+n2q8pXRu9W/Vq5+rVy9Wv1N+g/6Opp
8/3L9R/YD3fyXzQ8+Qrmg6hvY73dhrG88ukbe0b9/o7Hv3H569vvL+P9d2tu
/Zt8O8abhl9lfLHmO7h6hO4vcvUFJ47/fdKLR1/QeI/xLbnxH7nxL7nxr6ne
uTm/t/XPTb10nV+db/2z86m/fZ/479gXLzO+v+axfyt/UL2JcZ6s/AC4+Xdd
PfH+wPdV9VJveD9jnHXefor2T5R7f8i9P+TVvyP6YAf8R+phq38tVz/S85bn
K7nnK/PJzQ+f8s3JD584+eH2Czd/y3wv87emfrn0v5Wrb9nN73jOjXme7Qdv
fpbc/u7mI5p/KDc/fNL7sP7AegXim3LXz+itVf9sxvKT5IdEH9b3o/4I3NdX
z2+T9fNszTPen6658RG5z+du5CMn39f6romPPNTqfyMnf9jzrvlncs+/cs+/
cvPPzDcyv8h8A89nUz7Cxfj39Gek35L9lVxvXT9/jD85+w3x3ZY/WHPjv3L1
w+SbxOdz3uc8251fy265GPzxmnt+9Xm7in/pbM19/oyXGh+VGx/9WT7/uK9f
5fs9XnPjBx3fNtzv33iSz7/c+JLc+JL5KOqTyct/erbm6pOZr3WV8ZM1N39L
bv6W51HPn9N5lfPnpPfY1EdXvXVTH13zm/rocOuj1ctUH1Ou/qV80r/E32d/
U3nqweq8B9c/KLf/sHzqPww3vtddP59Xf8zUXwqu/yX5QPvBzX+Xm98uN79d
nnHOj/LzMY79aL2L9S1dP4i8v67fnf3t5Mm/Mx9f+27qtzTigVW/DZ/8Q86n
/9KkZ6B+qnqs6D/K1XeU+3x287UTiqNvoB6L+ivu5+7fcvdv/eH6v+X6v+X6
h93v3N86vm24+5v1+NbP66/p/DPh6hPJ1SeS698xH9P9T25+5p3Ei5KfmPgP
55Gb7v6Wo/806Q2r/wT3/r439JKyXtkfxHhYF/8K7+Jf4ZO+WnP9+Pe7886+
OQ9N5xv0hjKOPSRXf0h+k/qUZr76RPKj6BM17+/H1LPEfhnnpYpvUX86cft3
y6kvnepZrU8lXq++vdz4vNz4vNz4vPV89p/u+kXX/UE+yOarcf3ko/wXnyfx
9sdrXvGAhm8TH+j8dfYfh+uf7PydVb+BPab9Jtd+k9v/VK59J9e+k2vfvX7z
6W/iIW8Zy3djnN/zHvmG0b/K7y+3/6L8bsbR823OK9n32/PMyZp7ftGfqv/F
eED+X+kzNnzbcfz/nqe/z/k5+5v17K4P8IrT319z15+c1/P8v2Isj78tz498
e2C+/vmPb8Y4+SRjHHtXbn9E+7Hbf918cfUJ5OaHWw9p/aPc+sdd9pfkH7F/
ya+y/+R5Yr13fZ94xuN+115w/5e7/7ueuX61693pmrs+yV2fEo/Pc2R8S258
K/rsuV8+Zv6zNf8q4/H60cdI/M74uNz4uNz4uPFw499dPlbp05HvY36P/Zbs
ryS3v1I7f9xf9kN5nfHpmtv/RG7+2nXypZv4hv3O7G8mt/5Ebv3JZC80+s3G
O63vz7muq88P138h1z9hPqDfr3zKD0QvQX0EufoImz8f43xfXzKWk9/c9gM9
X3P1e7UXtQ/l2ofaE3eS//t0zbUv5O8y/3TNj8a4+guS7zHll3De9nwt93w9
6QlzvnY9tH+Feu6lB9Hovb/L+PGaq+/ueuT6Y76K+SnJV65+kPT3k+s/sF+9
/enleb+Vr4berP4B1yPXH/nUX9F62osxNi7e5B9O/kD8e/6epW/2aM39feX+
vj5PFV848Lzl+ZL7/Hg9ud/XlF/6N+Nvlx8iH/1Brpvn0edPrv72VC/S1Ycw
3p00vKsfCe/qR3j97BdTPSL1hXLrC9Vb7fRVwzt91XD1VdWLiP2R312ufoR6
Seojqeelfpf+rM4/Fd75n8L1P6n3Oum7ytV3VS925CslX09/XpefED7VZ1rP
8/X4nPm+ySdQv0ZufoHc/AK5+QX6E/UPyv195OqbW69yHb2/izW3PkU9MeuP
/b78fuR+/ilfhPuj5SM/xPOO5xu555uuXmTTPC+T/7Xxt9T5Ga7/ZeL4X+Tm
pxtvMb4it77QeKj6VJ3eVcb2u7L+Vz7V/9oPwvgK3P0pesxZr88Zd/2cqt8c
96vPr9z7t9sPa/+Tu//J3f/k7H/6Q/V/Gi+a+tfBJ332Zn72Wf1x+t/k+t/k
qRfL7yXXP+fz5vMx2UvYR+rBnZB/L1cfTm5+/sdhbyYfQ/tBf3T6NVS+Dlz/
s9z+cub7mN8zrUfN+rNt1h/1bDv92qo3Ib+i4lAZ218Dbv1Rl6+Q/AT9BfoH
7v7209+cp87HuPQG0XtX313+iv37h9j7yefLeWH4vY03+Pvrb/+Q+//5mqf+
tPyJ6DV063PVb6Gfrb9b//a0X7M/+359f/oTrE+RW5+iXrD1qeaDe36Umx+u
3oj6InL1Q+QVvxlj/ZFTfjD+gqvUK5+suf6DSY+N/es9+UbGD+TvzEfi9/L3
8Tzl+if3/CSP/mvuH+1ln0+59rFc+87f2/OH3N9f7vlEvU71yeXqc+qv1T8r
1z9rPb3xG7nxebnxee1W9Q3tB2j9SdevNPEwuf0vO75trm//L7n9MasuL3oQ
F+Nv9pPGnx+/nFz/vv1A7P+R+yXr4+T/a/qVao/FH699Jtc/bz9sn98pH4n8
I/stTPUz9mOwfgZu/wTrDfLcXI+x/QasH5HvwuOvtx8E72/i1PdMPH77F2vu
5zMf0Py/rl947i+5+fuuBz7/cp9/65WsT5L7/FnvbH8nufXN8kk/ZtzPuX+v
449reOyZXF+u/+Qo+TDZ/3KefrHm5s90vNYb9OTMD7j8zXi98bwdj/Ur+7v8
4xjHP2o8e4pf449yf5W7v9Y5Nf6HMS794+EPrHPAOM/l/jWeZvzsZtRb5/s0
fmc+g/aD/HX8QU/XXPvf/Tj+l9xfcvdnz9Ouz3LPxz4v3fOxa54P+xHaf1Bu
/0G5/qfSsc75If75X6152Z3jfOd65PrjejztD5y3PB8Zb8v6X99nvu/cj3z/
P8vvk/r+rC/frbnxAfndrD8v1zz+knxvxqu6+G/1dyE+JTc/bepXjj6E9s4f
M3645to/rpeujx2v9bGp5y5/4FgvS18V/f6J4/+Uq8+vv8XzX5tvebrmfn65
+UvySR9Pf2UTf9OfWX6g9KfJ+dz+0nD7S+uv1z9vPm69P+pjsn+5ftqP1v6z
VYcx/r/xQXn5xcdf60km+w4+1ZfIqQ+Z+oVhH8qd/yc5Hwz+07BPYq/IN7Fv
G3+e95/1aF39Wbj1Z34f+pc9b3u+7s7juf/td/bFGMd/O+n5ff3pb6f3t/mz
8f8y1p/P82M82vvL9dj1V71/z29TP4D4w6Ofdch/znlM/7/rkeuLeiPWp8un
/GLqSc0PlVs/6n7axteb/VPu/qlegvoHxiv8frWXtI/k+vc7eyv2pdz+zvn+
sp/lvJb1wd/b9cPn2efX9cT1w34Ox2Oc50A9JPWP5MZXjHdO8c1xnewfrt/W
I5l/PHH0eaZ6Jrj5SOYfqTeivojfh/Ep+fT9cN4xP7Gz13N/yb2/7vF7+/v7
PHq+lvt8yn0+tden+DL5ZNP6jb2qf0h/o/7Fjpd+IVz/hlz/ov0K7E8gV1/Y
9+v7k6d+qvR54L6/6DHGntQ/L1ffpcv3z+9jPbP1y/HPVf4H+Zny9APNPiWP
nkzO/96v3n9vx/qU/fADY+9n5/s8+/zK/fxdvKHqezjPTP3Hmn5lle8Bn843
npf+7fb7m+rB+f27fmhdPoqvL/f1qw9o/NvqFcHVL/J58fktv7N6J8kP4bxi
/sFUL0X9k3qa6tNbj6t/T65/z/XE9WM6zzGO/6v0FFJfdLHm1h/5vKtPrz/e
/nXeL94f7tfuz9N+/u/jczT7udz1xvUj+oX5vMkPT52/8dapP12TD1R2NXqm
6pNO3P4GB/S7rKe1ftbv2+fP86L+B7n+G7+vt4xdz83Pl1sfJDe+Y75DjVP/
xvPm89Xl68R+Oo7/OM+/+knE+3y+jKcbf9Oe0z6a4vnqi/B9+v118erYUdoT
2g9ez+9ff7v+dfORvP/9vny+Jj3A/69v+D/g2G8E
         "], 0.5]}, 
       {Hue[1, 0.9, 0.78], DiskBox[{94., 146.}, 0.5], 
        DiskBox[{562., 87.}, 0.5], DiskBox[{1020., 109.}, 0.5], 
        DiskBox[{237., 67.}, 0.5], DiskBox[{152., 72.}, 0.5], 
        DiskBox[{205., 123.}, 0.5], DiskBox[{95., 190.}, 0.5], 
        DiskBox[{224., 75.}, 0.5], DiskBox[{857., 142.}, 0.5], 
        DiskBox[{382., 110.}, 0.5], DiskBox[{787., 138.}, 0.5], 
        DiskBox[{271., 134.}, 0.5], DiskBox[{325., 80.}, 0.5], 
        DiskBox[{280., 132.}, 0.5], DiskBox[{907., 182.}, 0.5], 
        DiskBox[{152., 133.}, 0.5], DiskBox[{606., 121.}, 0.5], 
        DiskBox[{600., 74.}, 0.5], DiskBox[{150., 131.}, 0.5], 
        DiskBox[{329., 71.}, 0.5], DiskBox[{707., 96.}, 0.5], 
        DiskBox[{251., 80.}, 0.5], DiskBox[{221., 154.}, 0.5], 
        DiskBox[{541., 141.}, 0.5], DiskBox[{904., 148.}, 0.5], 
        DiskBox[{845., 71.}, 0.5], DiskBox[{671., 100.}, 0.5], 
        DiskBox[{439., 149.}, 0.5], DiskBox[{157., 131.}, 0.5], 
        DiskBox[{34., 195.}, 0.5], DiskBox[{374., 103.}, 0.5], 
        DiskBox[{857., 160.}, 0.5], DiskBox[{781., 205.}, 0.5], 
        DiskBox[{488., 139.}, 0.5], DiskBox[{653., 77.}, 0.5], 
        DiskBox[{97., 165.}, 0.5], DiskBox[{482., 128.}, 0.5], 
        DiskBox[{25., 81.}, 0.5], DiskBox[{733., 130.}, 0.5], 
        DiskBox[{100., 123.}, 0.5], DiskBox[{1005., 145.}, 0.5], 
        DiskBox[{397., 108.}, 0.5], DiskBox[{391., 67.}, 0.5], 
        DiskBox[{578., 111.}, 0.5], DiskBox[{933., 103.}, 0.5], 
        DiskBox[{841., 150.}, 0.5], DiskBox[{559., 141.}, 0.5], 
        DiskBox[{154., 70.}, 0.5], DiskBox[{57., 75.}, 0.5], 
        DiskBox[{905., 190.}, 0.5], DiskBox[{79., 119.}, 0.5], 
        DiskBox[{311., 144.}, 0.5], DiskBox[{688., 148.}, 0.5], 
        DiskBox[{733., 109.}, 0.5], DiskBox[{209., 96.}, 0.5], 
        DiskBox[{331., 91.}, 0.5], DiskBox[{161., 160.}, 0.5], 
        DiskBox[{150., 104.}, 0.5], DiskBox[{960., 158.}, 0.5], 
        DiskBox[{723., 150.}, 0.5], DiskBox[{718., 131.}, 0.5], 
        DiskBox[{160., 123.}, 0.5], DiskBox[{585., 77.}, 0.5], 
        DiskBox[{69., 191.}, 0.5], DiskBox[{781., 81.}, 0.5], 
        DiskBox[{531., 115.}, 0.5], DiskBox[{1020., 101.}, 0.5], 
        DiskBox[{771., 192.}, 0.5], DiskBox[{61., 174.}, 0.5], 
        DiskBox[{883., 188.}, 0.5], DiskBox[{775., 106.}, 0.5], 
        DiskBox[{503., 139.}, 0.5], DiskBox[{867., 75.}, 0.5], 
        DiskBox[{1023., 103.}, 0.5], DiskBox[{891., 150.}, 0.5], 
        DiskBox[{562., 107.}, 0.5], DiskBox[{827., 119.}, 0.5], 
        DiskBox[{159., 187.}, 0.5], DiskBox[{317., 156.}, 0.5], 
        DiskBox[{202., 101.}, 0.5], DiskBox[{646., 128.}, 0.5], 
        DiskBox[{822., 84.}, 0.5], DiskBox[{907., 187.}, 0.5], 
        DiskBox[{1001., 75.}, 0.5], DiskBox[{152., 109.}, 0.5], 
        DiskBox[{229., 74.}, 0.5], DiskBox[{41., 132.}, 0.5], 
        DiskBox[{762., 126.}, 0.5], DiskBox[{498., 133.}, 0.5], 
        DiskBox[{160., 98.}, 0.5], DiskBox[{441., 103.}, 0.5], 
        DiskBox[{959., 71.}, 0.5], DiskBox[{110., 157.}, 0.5], 
        DiskBox[{30., 92.}, 0.5], DiskBox[{143., 108.}, 0.5], 
        DiskBox[{617., 115.}, 0.5], DiskBox[{507., 150.}, 0.5], 
        DiskBox[{163., 129.}, 0.5], DiskBox[{896., 128.}, 0.5], 
        DiskBox[{716., 98.}, 0.5], DiskBox[{909., 156.}, 0.5], 
        DiskBox[{78., 124.}, 0.5], DiskBox[{782., 92.}, 0.5], 
        DiskBox[{94., 182.}, 0.5], DiskBox[{587., 115.}, 0.5], 
        DiskBox[{375., 112.}, 0.5], DiskBox[{33., 150.}, 0.5], 
        DiskBox[{489., 146.}, 0.5], DiskBox[{156., 126.}, 0.5], 
        DiskBox[{38., 80.}, 0.5], DiskBox[{438., 142.}, 0.5], 
        DiskBox[{370., 85.}, 0.5], DiskBox[{667., 84.}, 0.5], 
        DiskBox[{47., 96.}, 0.5], DiskBox[{647., 119.}, 0.5], 
        DiskBox[{324., 105.}, 0.5], DiskBox[{46., 99.}, 0.5], 
        DiskBox[{26., 149.}, 0.5], DiskBox[{831., 117.}, 0.5], 
        DiskBox[{711., 132.}, 0.5], DiskBox[{899., 136.}, 0.5], 
        DiskBox[{571., 104.}, 0.5], DiskBox[{540., 135.}, 0.5], 
        DiskBox[{838., 152.}, 0.5], DiskBox[{475., 93.}, 0.5], 
        DiskBox[{776., 201.}, 0.5], DiskBox[{652., 139.}, 0.5], 
        DiskBox[{378., 83.}, 0.5], DiskBox[{208., 142.}, 0.5], 
        DiskBox[{559., 63.}, 0.5], DiskBox[{30., 102.}, 0.5], 
        DiskBox[{165., 137.}, 0.5], DiskBox[{776., 141.}, 0.5], 
        DiskBox[{71., 134.}, 0.5], DiskBox[{363., 143.}, 0.5], 
        DiskBox[{1023., 140.}, 0.5], DiskBox[{310., 163.}, 0.5], 
        DiskBox[{116., 111.}, 0.5], DiskBox[{844., 127.}, 0.5], 
        DiskBox[{220., 142.}, 0.5], DiskBox[{83., 81.}, 0.5], 
        DiskBox[{855., 159.}, 0.5], DiskBox[{562., 76.}, 0.5], 
        DiskBox[{43., 186.}, 0.5], DiskBox[{869., 147.}, 0.5], 
        DiskBox[{1005., 92.}, 0.5], DiskBox[{82., 188.}, 0.5], 
        DiskBox[{580., 61.}, 0.5], DiskBox[{505., 160.}, 0.5], 
        DiskBox[{214., 127.}, 0.5], DiskBox[{450., 73.}, 0.5], 
        DiskBox[{906., 189.}, 0.5], DiskBox[{476., 74.}, 0.5], 
        DiskBox[{153., 158.}, 0.5], DiskBox[{978., 152.}, 0.5], 
        DiskBox[{153., 185.}, 0.5], DiskBox[{536., 99.}, 0.5], 
        DiskBox[{910., 153.}, 0.5], DiskBox[{945., 147.}, 0.5], 
        DiskBox[{844., 162.}, 0.5], DiskBox[{575., 109.}, 0.5], 
        DiskBox[{842., 162.}, 0.5], DiskBox[{981., 61.}, 0.5], 
        DiskBox[{556., 69.}, 0.5], DiskBox[{331., 158.}, 0.5], 
        DiskBox[{45., 124.}, 0.5], DiskBox[{771., 113.}, 0.5], 
        DiskBox[{156., 111.}, 0.5], DiskBox[{898., 188.}, 0.5], 
        DiskBox[{786., 141.}, 0.5], DiskBox[{790., 146.}, 0.5], 
        DiskBox[{53., 67.}, 0.5], DiskBox[{613., 111.}, 0.5], 
        DiskBox[{789., 107.}, 0.5], DiskBox[{505., 142.}, 0.5], 
        DiskBox[{68., 175.}, 0.5], DiskBox[{840., 85.}, 0.5], 
        DiskBox[{194., 117.}, 0.5], DiskBox[{307., 111.}, 0.5], 
        DiskBox[{444., 160.}, 0.5], DiskBox[{873., 67.}, 0.5], 
        DiskBox[{206., 129.}, 0.5], DiskBox[{167., 186.}, 0.5], 
        DiskBox[{840., 92.}, 0.5], DiskBox[{448., 141.}, 0.5], 
        DiskBox[{202., 135.}, 0.5], DiskBox[{309., 87.}, 0.5], 
        DiskBox[{555., 126.}, 0.5], DiskBox[{68., 78.}, 0.5], 
        DiskBox[{889., 193.}, 0.5], DiskBox[{948., 107.}, 0.5], 
        DiskBox[{554., 102.}, 0.5], DiskBox[{161., 147.}, 0.5], 
        DiskBox[{970., 71.}, 0.5], DiskBox[{646., 145.}, 0.5], 
        DiskBox[{66., 134.}, 0.5], DiskBox[{452., 118.}, 0.5], 
        DiskBox[{1020., 88.}, 0.5], DiskBox[{455., 126.}, 0.5], 
        DiskBox[{706., 141.}, 0.5], DiskBox[{657., 135.}, 0.5], 
        DiskBox[{554., 159.}, 0.5], DiskBox[{162., 205.}, 0.5], 
        DiskBox[{498., 120.}, 0.5], DiskBox[{772., 119.}, 0.5], 
        DiskBox[{717., 74.}, 0.5], DiskBox[{548., 104.}, 0.5], 
        DiskBox[{351., 143.}, 0.5], DiskBox[{227., 82.}, 0.5], 
        DiskBox[{975., 151.}, 0.5], DiskBox[{1012., 86.}, 0.5], 
        DiskBox[{101., 142.}, 0.5], DiskBox[{557., 104.}, 0.5], 
        DiskBox[{267., 66.}, 0.5], DiskBox[{377., 84.}, 0.5], 
        DiskBox[{1006., 142.}, 0.5], DiskBox[{469., 82.}, 0.5], 
        DiskBox[{958., 147.}, 0.5], DiskBox[{86., 125.}, 0.5], 
        DiskBox[{965., 128.}, 0.5], DiskBox[{1029., 126.}, 0.5], 
        DiskBox[{609., 137.}, 0.5], DiskBox[{444., 152.}, 0.5], 
        DiskBox[{57., 175.}, 0.5], DiskBox[{666., 109.}, 0.5], 
        DiskBox[{829., 140.}, 0.5], DiskBox[{141., 131.}, 0.5], 
        DiskBox[{207., 90.}, 0.5], DiskBox[{88., 148.}, 0.5], 
        DiskBox[{372., 89.}, 0.5], DiskBox[{643., 132.}, 0.5], 
        DiskBox[{374., 102.}, 0.5], DiskBox[{31., 72.}, 0.5], 
        DiskBox[{245., 145.}, 0.5], DiskBox[{78., 188.}, 0.5], 
        DiskBox[{207., 123.}, 0.5], DiskBox[{331., 87.}, 0.5], 
        DiskBox[{25., 162.}, 0.5], DiskBox[{544., 98.}, 0.5], 
        DiskBox[{962., 129.}, 0.5], DiskBox[{872., 150.}, 0.5], 
        DiskBox[{35., 168.}, 0.5], DiskBox[{556., 87.}, 0.5], 
        DiskBox[{488., 124.}, 0.5], DiskBox[{965., 93.}, 0.5], 
        DiskBox[{242., 113.}, 0.5], DiskBox[{22., 181.}, 0.5], 
        DiskBox[{726., 128.}, 0.5], DiskBox[{888., 109.}, 0.5], 
        DiskBox[{644., 88.}, 0.5], DiskBox[{453., 109.}, 0.5], 
        DiskBox[{426., 144.}, 0.5], DiskBox[{162., 104.}, 0.5], 
        DiskBox[{462., 76.}, 0.5], DiskBox[{170., 160.}, 0.5], 
        DiskBox[{691., 161.}, 0.5], DiskBox[{580., 68.}, 0.5], 
        DiskBox[{994., 63.}, 0.5], DiskBox[{576., 112.}, 0.5], 
        DiskBox[{499., 118.}, 0.5], DiskBox[{888., 201.}, 0.5], 
        DiskBox[{203., 132.}, 0.5], DiskBox[{960., 143.}, 0.5], 
        DiskBox[{31., 194.}, 0.5], DiskBox[{779., 92.}, 0.5], 
        DiskBox[{906., 85.}, 0.5], DiskBox[{367., 148.}, 0.5], 
        DiskBox[{656., 152.}, 0.5], DiskBox[{582., 153.}, 0.5], 
        DiskBox[{94., 159.}, 0.5], DiskBox[{438., 162.}, 0.5], 
        DiskBox[{729., 62.}, 0.5], DiskBox[{820., 115.}, 0.5], 
        DiskBox[{142., 97.}, 0.5], DiskBox[{656., 119.}, 0.5], 
        DiskBox[{482., 123.}, 0.5], DiskBox[{830., 138.}, 0.5], 
        DiskBox[{319., 110.}, 0.5], DiskBox[{894., 197.}, 0.5], 
        DiskBox[{598., 67.}, 0.5], DiskBox[{441., 92.}, 0.5], 
        DiskBox[{369., 70.}, 0.5], DiskBox[{940., 140.}, 0.5], 
        DiskBox[{779., 133.}, 0.5], DiskBox[{943., 120.}, 0.5], 
        DiskBox[{849., 150.}, 0.5], DiskBox[{488., 78.}, 0.5], 
        DiskBox[{157., 198.}, 0.5], DiskBox[{575., 122.}, 0.5], 
        DiskBox[{668., 127.}, 0.5], DiskBox[{74., 80.}, 0.5], 
        DiskBox[{74., 182.}, 0.5], DiskBox[{960., 133.}, 0.5], 
        DiskBox[{330., 80.}, 0.5], DiskBox[{825., 112.}, 0.5], 
        DiskBox[{595., 136.}, 0.5], DiskBox[{265., 129.}, 0.5], 
        DiskBox[{567., 161.}, 0.5], DiskBox[{206., 99.}, 0.5], 
        DiskBox[{708., 67.}, 0.5], DiskBox[{445., 160.}, 0.5], 
        DiskBox[{448., 128.}, 0.5], DiskBox[{863., 153.}, 0.5], 
        DiskBox[{892., 133.}, 0.5], DiskBox[{776., 101.}, 0.5], 
        DiskBox[{656., 91.}, 0.5], DiskBox[{722., 62.}, 0.5], 
        DiskBox[{89., 133.}, 0.5], DiskBox[{597., 108.}, 0.5], 
        DiskBox[{243., 71.}, 0.5], DiskBox[{389., 143.}, 0.5], 
        DiskBox[{26., 177.}, 0.5], DiskBox[{19., 73.}, 0.5], 
        DiskBox[{965., 151.}, 0.5], DiskBox[{724., 90.}, 0.5], 
        DiskBox[{788., 188.}, 0.5], DiskBox[{705., 74.}, 0.5], 
        DiskBox[{591., 70.}, 0.5], DiskBox[{981., 163.}, 0.5], 
        DiskBox[{789., 73.}, 0.5], DiskBox[{1000., 69.}, 0.5], 
        DiskBox[{1005., 130.}, 0.5], DiskBox[{762., 106.}, 0.5], 
        DiskBox[{458., 75.}, 0.5], DiskBox[{589., 120.}, 0.5], 
        DiskBox[{780., 115.}, 0.5], DiskBox[{892., 156.}, 0.5], 
        DiskBox[{391., 69.}, 0.5], DiskBox[{886., 162.}, 0.5], 
        DiskBox[{865., 151.}, 0.5], DiskBox[{319., 162.}, 0.5], 
        DiskBox[{41., 134.}, 0.5], DiskBox[{92., 67.}, 0.5], 
        DiskBox[{977., 77.}, 0.5], DiskBox[{906., 101.}, 0.5], 
        DiskBox[{786., 118.}, 0.5], DiskBox[{996., 73.}, 0.5], 
        DiskBox[{711., 75.}, 0.5], DiskBox[{716., 106.}, 0.5], 
        DiskBox[{429., 130.}, 0.5], DiskBox[{76., 131.}, 0.5], 
        DiskBox[{490., 117.}, 0.5], DiskBox[{786., 157.}, 0.5], 
        DiskBox[{1015., 96.}, 0.5], DiskBox[{216., 150.}, 0.5], 
        DiskBox[{567., 147.}, 0.5], DiskBox[{987., 160.}, 0.5], 
        DiskBox[{65., 128.}, 0.5], DiskBox[{392., 113.}, 0.5], 
        DiskBox[{577., 107.}, 0.5], DiskBox[{1008., 145.}, 0.5], 
        DiskBox[{147., 148.}, 0.5], DiskBox[{1030., 100.}, 0.5], 
        DiskBox[{847., 84.}, 0.5], DiskBox[{499., 139.}, 0.5], 
        DiskBox[{896., 116.}, 0.5], DiskBox[{715., 69.}, 0.5], 
        DiskBox[{431., 136.}, 0.5], DiskBox[{202., 142.}, 0.5], 
        DiskBox[{398., 89.}, 0.5], DiskBox[{788., 164.}, 0.5], 
        DiskBox[{199., 114.}, 0.5], DiskBox[{217., 102.}, 0.5], 
        DiskBox[{658., 164.}, 0.5], DiskBox[{86., 168.}, 0.5], 
        DiskBox[{829., 104.}, 0.5], DiskBox[{228., 63.}, 0.5], 
        DiskBox[{1024., 97.}, 0.5], DiskBox[{142., 155.}, 0.5], 
        DiskBox[{450., 101.}, 0.5], DiskBox[{336., 86.}, 0.5], 
        DiskBox[{238., 148.}, 0.5], DiskBox[{385., 145.}, 0.5], 
        DiskBox[{543., 109.}, 0.5], DiskBox[{457., 86.}, 0.5], 
        DiskBox[{169., 186.}, 0.5], DiskBox[{551., 142.}, 0.5], 
        DiskBox[{957., 142.}, 0.5], DiskBox[{909., 111.}, 0.5], 
        DiskBox[{1013., 100.}, 0.5], DiskBox[{888., 174.}, 0.5], 
        DiskBox[{384., 135.}, 0.5], DiskBox[{113., 90.}, 0.5], 
        DiskBox[{371., 109.}, 0.5], DiskBox[{946., 104.}, 0.5], 
        DiskBox[{829., 119.}, 0.5], DiskBox[{734., 71.}, 0.5], 
        DiskBox[{158., 210.}, 0.5], DiskBox[{325., 65.}, 0.5], 
        DiskBox[{586., 159.}, 0.5], DiskBox[{90., 154.}, 0.5], 
        DiskBox[{882., 148.}, 0.5], DiskBox[{392., 78.}, 0.5], 
        DiskBox[{643., 67.}, 0.5], DiskBox[{720., 106.}, 0.5], 
        DiskBox[{448., 140.}, 0.5], DiskBox[{564., 82.}, 0.5], 
        DiskBox[{711., 163.}, 0.5], DiskBox[{890., 162.}, 0.5], 
        DiskBox[{730., 125.}, 0.5], DiskBox[{443., 134.}, 0.5], 
        DiskBox[{884., 97.}, 0.5], DiskBox[{770., 76.}, 0.5], 
        DiskBox[{109., 147.}, 0.5], DiskBox[{593., 70.}, 0.5], 
        DiskBox[{61., 183.}, 0.5], DiskBox[{104., 126.}, 0.5], 
        DiskBox[{663., 64.}, 0.5], DiskBox[{728., 64.}, 0.5], 
        DiskBox[{597., 137.}, 0.5], DiskBox[{236., 108.}, 0.5], 
        DiskBox[{595., 149.}, 0.5], DiskBox[{710., 121.}, 0.5], 
        DiskBox[{377., 109.}, 0.5], DiskBox[{153., 77.}, 0.5], 
        DiskBox[{546., 141.}, 0.5], DiskBox[{263., 76.}, 0.5], 
        DiskBox[{831., 115.}, 0.5], DiskBox[{483., 70.}, 0.5], 
        DiskBox[{862., 148.}, 0.5], DiskBox[{850., 59.}, 0.5], 
        DiskBox[{343., 155.}, 0.5], DiskBox[{308., 75.}, 0.5], 
        DiskBox[{825., 107.}, 0.5], DiskBox[{574., 158.}, 0.5], 
        DiskBox[{24., 180.}, 0.5], DiskBox[{898., 160.}, 0.5], 
        DiskBox[{155., 190.}, 0.5], DiskBox[{615., 130.}, 0.5], 
        DiskBox[{586., 60.}, 0.5], DiskBox[{165., 114.}, 0.5], 
        DiskBox[{224., 156.}, 0.5], DiskBox[{49., 121.}, 0.5], 
        DiskBox[{455., 98.}, 0.5], DiskBox[{945., 141.}, 0.5], 
        DiskBox[{60., 189.}, 0.5], DiskBox[{476., 102.}, 0.5], 
        DiskBox[{318., 75.}, 0.5], DiskBox[{215., 96.}, 0.5], 
        DiskBox[{101., 76.}, 0.5], DiskBox[{114., 116.}, 0.5], 
        DiskBox[{947., 92.}, 0.5], DiskBox[{140., 189.}, 0.5], 
        DiskBox[{320., 128.}, 0.5], DiskBox[{781., 101.}, 0.5], 
        DiskBox[{504., 149.}, 0.5], DiskBox[{369., 76.}, 0.5], 
        DiskBox[{1025., 106.}, 0.5], DiskBox[{455., 100.}, 0.5], 
        DiskBox[{1012., 116.}, 0.5], DiskBox[{980., 144.}, 0.5], 
        DiskBox[{22., 122.}, 0.5], DiskBox[{425., 159.}, 0.5], 
        DiskBox[{762., 131.}, 0.5], DiskBox[{652., 116.}, 0.5], 
        DiskBox[{668., 133.}, 0.5], DiskBox[{389., 68.}, 0.5], 
        DiskBox[{900., 86.}, 0.5], DiskBox[{244., 159.}, 0.5], 
        DiskBox[{579., 104.}, 0.5], DiskBox[{222., 115.}, 0.5], 
        DiskBox[{84., 129.}, 0.5], DiskBox[{57., 185.}, 0.5], 
        DiskBox[{949., 121.}, 0.5], DiskBox[{573., 62.}, 0.5], 
        DiskBox[{773., 131.}, 0.5], DiskBox[{149., 99.}, 0.5], 
        DiskBox[{817., 111.}, 0.5], DiskBox[{111., 80.}, 0.5], 
        DiskBox[{434., 141.}, 0.5], DiskBox[{705., 101.}, 0.5], 
        DiskBox[{307., 83.}, 0.5], DiskBox[{901., 193.}, 0.5], 
        DiskBox[{320., 156.}, 0.5], DiskBox[{252., 72.}, 0.5], 
        DiskBox[{28., 179.}, 0.5], DiskBox[{593., 161.}, 0.5], 
        DiskBox[{70., 71.}, 0.5], DiskBox[{194., 116.}, 0.5], 
        DiskBox[{976., 64.}, 0.5], DiskBox[{578., 122.}, 0.5], 
        DiskBox[{381., 91.}, 0.5], DiskBox[{535., 109.}, 0.5], 
        DiskBox[{307., 146.}, 0.5], DiskBox[{67., 189.}, 0.5], 
        DiskBox[{25., 179.}, 0.5], DiskBox[{103., 116.}, 0.5], 
        DiskBox[{766., 77.}, 0.5], DiskBox[{441., 122.}, 0.5], 
        DiskBox[{598., 136.}, 0.5], DiskBox[{201., 143.}, 0.5], 
        DiskBox[{238., 166.}, 0.5], DiskBox[{718., 113.}, 0.5], 
        DiskBox[{87., 144.}, 0.5], DiskBox[{887., 183.}, 0.5], 
        DiskBox[{153., 142.}, 0.5], DiskBox[{307., 141.}, 0.5], 
        DiskBox[{1001., 79.}, 0.5], DiskBox[{597., 162.}, 0.5], 
        DiskBox[{720., 133.}, 0.5], DiskBox[{762., 158.}, 0.5], 
        DiskBox[{277., 116.}, 0.5], DiskBox[{241., 111.}, 0.5], 
        DiskBox[{440., 131.}, 0.5], DiskBox[{227., 114.}, 0.5], 
        DiskBox[{24., 115.}, 0.5], DiskBox[{434., 149.}, 0.5], 
        DiskBox[{996., 90.}, 0.5], DiskBox[{876., 71.}, 0.5], 
        DiskBox[{826., 137.}, 0.5], DiskBox[{706., 150.}, 0.5], 
        DiskBox[{210., 112.}, 0.5], DiskBox[{654., 64.}, 0.5], 
        DiskBox[{1020., 84.}, 0.5], DiskBox[{897., 119.}, 0.5], 
        DiskBox[{245., 114.}, 0.5], DiskBox[{241., 148.}, 0.5], 
        DiskBox[{577., 162.}, 0.5], DiskBox[{769., 155.}, 0.5], 
        DiskBox[{774., 133.}, 0.5], DiskBox[{954., 139.}, 0.5], 
        DiskBox[{381., 147.}, 0.5], DiskBox[{149., 132.}, 0.5], 
        DiskBox[{493., 164.}, 0.5], DiskBox[{662., 91.}, 0.5], 
        DiskBox[{472., 84.}, 0.5], DiskBox[{105., 179.}, 0.5], 
        DiskBox[{704., 152.}, 0.5], DiskBox[{819., 102.}, 0.5], 
        DiskBox[{546., 149.}, 0.5], DiskBox[{883., 110.}, 0.5], 
        DiskBox[{867., 162.}, 0.5], DiskBox[{612., 116.}, 0.5], 
        DiskBox[{61., 177.}, 0.5], DiskBox[{396., 145.}, 0.5], 
        DiskBox[{25., 65.}, 0.5], DiskBox[{685., 147.}, 0.5], 
        DiskBox[{388., 152.}, 0.5], DiskBox[{711., 121.}, 0.5], 
        DiskBox[{970., 85.}, 0.5], DiskBox[{377., 153.}, 0.5], 
        DiskBox[{823., 101.}, 0.5], DiskBox[{23., 156.}, 0.5], 
        DiskBox[{764., 161.}, 0.5], DiskBox[{844., 83.}, 0.5], 
        DiskBox[{87., 72.}, 0.5], DiskBox[{219., 146.}, 0.5], 
        DiskBox[{893., 136.}, 0.5], DiskBox[{40., 103.}, 0.5], 
        DiskBox[{54., 121.}, 0.5], DiskBox[{562., 84.}, 0.5], 
        DiskBox[{50., 134.}, 0.5], DiskBox[{893., 206.}, 0.5], 
        DiskBox[{489., 85.}, 0.5], DiskBox[{963., 131.}, 0.5], 
        DiskBox[{61., 75.}, 0.5], DiskBox[{252., 116.}, 0.5], 
        DiskBox[{591., 157.}, 0.5], DiskBox[{973., 74.}, 0.5], 
        DiskBox[{388., 98.}, 0.5], DiskBox[{142., 128.}, 0.5], 
        DiskBox[{1019., 90.}, 0.5], DiskBox[{50., 70.}, 0.5], 
        DiskBox[{726., 71.}, 0.5], DiskBox[{823., 113.}, 0.5], 
        DiskBox[{907., 134.}, 0.5], DiskBox[{251., 165.}, 0.5], 
        DiskBox[{562., 80.}, 0.5], DiskBox[{661., 149.}, 0.5], 
        DiskBox[{381., 155.}, 0.5], DiskBox[{974., 72.}, 0.5], 
        DiskBox[{142., 157.}, 0.5], DiskBox[{895., 95.}, 0.5], 
        DiskBox[{111., 102.}, 0.5], DiskBox[{651., 154.}, 0.5], 
        DiskBox[{845., 87.}, 0.5], DiskBox[{65., 137.}, 0.5], 
        DiskBox[{898., 119.}, 0.5], DiskBox[{214., 148.}, 0.5], 
        DiskBox[{889., 89.}, 0.5], DiskBox[{1002., 100.}, 0.5], 
        DiskBox[{397., 67.}, 0.5], DiskBox[{226., 80.}, 0.5], 
        DiskBox[{53., 187.}, 0.5], DiskBox[{64., 134.}, 0.5], 
        DiskBox[{85., 176.}, 0.5], DiskBox[{906., 72.}, 0.5], 
        DiskBox[{212., 80.}, 0.5], DiskBox[{554., 90.}, 0.5], 
        DiskBox[{967., 84.}, 0.5], DiskBox[{454., 94.}, 0.5], 
        DiskBox[{263., 114.}, 0.5], DiskBox[{555., 128.}, 0.5], 
        DiskBox[{216., 93.}, 0.5], DiskBox[{357., 147.}, 0.5], 
        DiskBox[{785., 163.}, 0.5], DiskBox[{160., 143.}, 0.5], 
        DiskBox[{168., 118.}, 0.5], DiskBox[{481., 115.}, 0.5], 
        DiskBox[{493., 130.}, 0.5], DiskBox[{372., 97.}, 0.5], 
        DiskBox[{650., 116.}, 0.5], DiskBox[{666., 155.}, 0.5], 
        DiskBox[{893., 187.}, 0.5], DiskBox[{963., 114.}, 0.5], 
        DiskBox[{724., 133.}, 0.5], DiskBox[{955., 102.}, 0.5], 
        DiskBox[{555., 104.}, 0.5], DiskBox[{668., 157.}, 0.5], 
        DiskBox[{158., 141.}, 0.5], DiskBox[{725., 147.}, 0.5], 
        DiskBox[{255., 140.}, 0.5], DiskBox[{825., 124.}, 0.5], 
        DiskBox[{1003., 133.}, 0.5], DiskBox[{206., 88.}, 0.5], 
        DiskBox[{547., 137.}, 0.5], DiskBox[{605., 73.}, 0.5], 
        DiskBox[{907., 202.}, 0.5], DiskBox[{705., 62.}, 0.5], 
        DiskBox[{818., 122.}, 0.5], DiskBox[{550., 106.}, 0.5], 
        DiskBox[{39., 159.}, 0.5], DiskBox[{875., 84.}, 0.5], 
        DiskBox[{239., 104.}, 0.5], DiskBox[{93., 176.}, 0.5], 
        DiskBox[{864., 158.}, 0.5], DiskBox[{161., 156.}, 0.5], 
        DiskBox[{315., 76.}, 0.5], DiskBox[{774., 146.}, 0.5], 
        DiskBox[{606., 119.}, 0.5], DiskBox[{940., 136.}, 0.5], 
        DiskBox[{307., 107.}, 0.5], DiskBox[{649., 101.}, 0.5], 
        DiskBox[{935., 105.}, 0.5], DiskBox[{940., 114.}, 0.5], 
        DiskBox[{790., 102.}, 0.5], DiskBox[{111., 164.}, 0.5], 
        DiskBox[{219., 118.}, 0.5], DiskBox[{571., 157.}, 0.5], 
        DiskBox[{829., 152.}, 0.5], DiskBox[{264., 67.}, 0.5], 
        DiskBox[{427., 137.}, 0.5], DiskBox[{317., 125.}, 0.5], 
        DiskBox[{817., 134.}, 0.5], DiskBox[{886., 109.}, 0.5], 
        DiskBox[{165., 198.}, 0.5], DiskBox[{142., 103.}, 0.5], 
        DiskBox[{398., 131.}, 0.5], DiskBox[{328., 109.}, 0.5], 
        DiskBox[{1032., 118.}, 0.5], DiskBox[{43., 117.}, 0.5], 
        DiskBox[{718., 142.}, 0.5], DiskBox[{254., 79.}, 0.5], 
        DiskBox[{486., 71.}, 0.5], DiskBox[{772., 94.}, 0.5], 
        DiskBox[{704., 156.}, 0.5], DiskBox[{647., 153.}, 0.5], 
        DiskBox[{892., 152.}, 0.5], DiskBox[{506., 157.}, 0.5], 
        DiskBox[{694., 143.}, 0.5], DiskBox[{320., 161.}, 0.5], 
        DiskBox[{901., 75.}, 0.5], DiskBox[{665., 129.}, 0.5], 
        DiskBox[{77., 173.}, 0.5], DiskBox[{595., 155.}, 0.5], 
        DiskBox[{41., 155.}, 0.5], DiskBox[{706., 155.}, 0.5], 
        DiskBox[{276., 143.}, 0.5], DiskBox[{318., 131.}, 0.5], 
        DiskBox[{995., 78.}, 0.5], DiskBox[{319., 75.}, 0.5], 
        DiskBox[{242., 116.}, 0.5], DiskBox[{202., 99.}, 0.5], 
        DiskBox[{765., 96.}, 0.5], DiskBox[{103., 169.}, 0.5], 
        DiskBox[{1011., 97.}, 0.5], DiskBox[{50., 62.}, 0.5], 
        DiskBox[{862., 147.}, 0.5], DiskBox[{733., 140.}, 0.5], 
        DiskBox[{960., 153.}, 0.5], DiskBox[{646., 117.}, 0.5], 
        DiskBox[{208., 113.}, 0.5], DiskBox[{775., 204.}, 0.5], 
        DiskBox[{249., 155.}, 0.5], DiskBox[{815., 102.}, 0.5], 
        DiskBox[{346., 139.}, 0.5], DiskBox[{782., 123.}, 0.5], 
        DiskBox[{893., 152.}, 0.5], DiskBox[{841., 128.}, 0.5], 
        DiskBox[{59., 174.}, 0.5], DiskBox[{88., 183.}, 0.5], 
        DiskBox[{144., 188.}, 0.5], DiskBox[{941., 112.}, 0.5], 
        DiskBox[{332., 70.}, 0.5], DiskBox[{393., 65.}, 0.5], 
        DiskBox[{1016., 145.}, 0.5], DiskBox[{261., 76.}, 0.5], 
        DiskBox[{45., 190.}, 0.5], DiskBox[{494., 155.}, 0.5], 
        DiskBox[{725., 114.}, 0.5], DiskBox[{722., 129.}, 0.5], 
        DiskBox[{473., 90.}, 0.5], DiskBox[{383., 75.}, 0.5], 
        DiskBox[{785., 141.}, 0.5], DiskBox[{969., 79.}, 0.5], 
        DiskBox[{217., 74.}, 0.5], DiskBox[{261., 152.}, 0.5], 
        DiskBox[{953., 77.}, 0.5], DiskBox[{230., 79.}, 0.5], 
        DiskBox[{608., 141.}, 0.5], DiskBox[{247., 106.}, 0.5], 
        DiskBox[{890., 78.}, 0.5], DiskBox[{26., 141.}, 0.5], 
        DiskBox[{699., 162.}, 0.5], DiskBox[{540., 77.}, 0.5], 
        DiskBox[{69., 174.}, 0.5], DiskBox[{594., 107.}, 0.5], 
        DiskBox[{201., 86.}, 0.5], DiskBox[{209., 90.}, 0.5], 
        DiskBox[{150., 188.}, 0.5], DiskBox[{487., 155.}, 0.5], 
        DiskBox[{655., 114.}, 0.5], DiskBox[{375., 79.}, 0.5], 
        DiskBox[{1000., 127.}, 0.5], DiskBox[{75., 75.}, 0.5], 
        DiskBox[{166., 115.}, 0.5], DiskBox[{47., 112.}, 0.5], 
        DiskBox[{882., 193.}, 0.5], DiskBox[{119., 108.}, 0.5], 
        DiskBox[{75., 141.}, 0.5], DiskBox[{901., 132.}, 0.5], 
        DiskBox[{819., 135.}, 0.5], DiskBox[{721., 153.}, 0.5], 
        DiskBox[{88., 163.}, 0.5], DiskBox[{865., 76.}, 0.5], 
        DiskBox[{86., 185.}, 0.5], DiskBox[{789., 136.}, 0.5], 
        DiskBox[{895., 206.}, 0.5], DiskBox[{256., 159.}, 0.5], 
        DiskBox[{145., 189.}, 0.5], DiskBox[{562., 119.}, 0.5], 
        DiskBox[{142., 120.}, 0.5], DiskBox[{89., 176.}, 0.5], 
        DiskBox[{847., 82.}, 0.5], DiskBox[{704., 164.}, 0.5], 
        DiskBox[{722., 105.}, 0.5], DiskBox[{791., 66.}, 0.5], 
        DiskBox[{76., 74.}, 0.5], DiskBox[{170., 152.}, 0.5], 
        DiskBox[{78., 141.}, 0.5], DiskBox[{378., 105.}, 0.5], 
        DiskBox[{687., 155.}, 0.5], DiskBox[{818., 101.}, 0.5], 
        DiskBox[{110., 90.}, 0.5], DiskBox[{993., 162.}, 0.5], 
        DiskBox[{164., 199.}, 0.5], DiskBox[{25., 76.}, 0.5], 
        DiskBox[{88., 157.}, 0.5], DiskBox[{249., 65.}, 0.5], 
        DiskBox[{982., 147.}, 0.5], DiskBox[{102., 118.}, 0.5], 
        DiskBox[{881., 82.}, 0.5], DiskBox[{350., 149.}, 0.5], 
        DiskBox[{97., 68.}, 0.5], DiskBox[{895., 203.}, 0.5], 
        DiskBox[{347., 156.}, 0.5], DiskBox[{1008., 123.}, 0.5], 
        DiskBox[{425., 142.}, 0.5], DiskBox[{905., 117.}, 0.5], 
        DiskBox[{145., 203.}, 0.5], DiskBox[{505., 143.}, 0.5], 
        DiskBox[{559., 71.}, 0.5], DiskBox[{433., 163.}, 0.5], 
        DiskBox[{854., 141.}, 0.5], DiskBox[{49., 83.}, 0.5], 
        DiskBox[{791., 74.}, 0.5], DiskBox[{80., 78.}, 0.5], 
        DiskBox[{271., 112.}, 0.5], DiskBox[{41., 194.}, 0.5], 
        DiskBox[{49., 192.}, 0.5], DiskBox[{933., 113.}, 0.5], 
        DiskBox[{1009., 110.}, 0.5], DiskBox[{380., 106.}, 0.5], 
        DiskBox[{66., 74.}, 0.5], DiskBox[{1010., 69.}, 0.5], 
        DiskBox[{709., 76.}, 0.5], DiskBox[{1011., 144.}, 0.5], 
        DiskBox[{651., 64.}, 0.5], DiskBox[{599., 68.}, 0.5], 
        DiskBox[{142., 160.}, 0.5], DiskBox[{61., 127.}, 0.5], 
        DiskBox[{937., 132.}, 0.5], DiskBox[{368., 160.}, 0.5], 
        DiskBox[{256., 160.}, 0.5], DiskBox[{29., 106.}, 0.5], 
        DiskBox[{584., 104.}, 0.5], DiskBox[{343., 143.}, 0.5], 
        DiskBox[{161., 91.}, 0.5], DiskBox[{148., 156.}, 0.5], 
        DiskBox[{1015., 138.}, 0.5], DiskBox[{548., 98.}, 0.5], 
        DiskBox[{720., 86.}, 0.5], DiskBox[{590., 144.}, 0.5], 
        DiskBox[{665., 127.}, 0.5], DiskBox[{829., 149.}, 0.5], 
        DiskBox[{548., 136.}, 0.5], DiskBox[{721., 85.}, 0.5], 
        DiskBox[{267., 156.}, 0.5], DiskBox[{495., 151.}, 0.5], 
        DiskBox[{212., 103.}, 0.5], DiskBox[{867., 153.}, 0.5], 
        DiskBox[{900., 143.}, 0.5], DiskBox[{86., 76.}, 0.5], 
        DiskBox[{87., 90.}, 0.5], DiskBox[{954., 104.}, 0.5], 
        DiskBox[{888., 74.}, 0.5], DiskBox[{576., 152.}, 0.5], 
        DiskBox[{985., 143.}, 0.5], DiskBox[{591., 67.}, 0.5], 
        DiskBox[{897., 63.}, 0.5], DiskBox[{853., 149.}, 0.5], 
        DiskBox[{728., 85.}, 0.5], DiskBox[{33., 64.}, 0.5], 
        DiskBox[{585., 61.}, 0.5], DiskBox[{596., 151.}, 0.5], 
        DiskBox[{888., 169.}, 0.5], DiskBox[{281., 104.}, 0.5], 
        DiskBox[{906., 195.}, 0.5], DiskBox[{66., 175.}, 0.5], 
        DiskBox[{18., 74.}, 0.5], DiskBox[{84., 124.}, 0.5], 
        DiskBox[{960., 96.}, 0.5], DiskBox[{533., 124.}, 0.5], 
        DiskBox[{540., 101.}, 0.5], DiskBox[{788., 116.}, 0.5], 
        DiskBox[{95., 189.}, 0.5], DiskBox[{645., 142.}, 0.5], 
        DiskBox[{668., 105.}, 0.5], DiskBox[{94., 110.}, 0.5], 
        DiskBox[{477., 116.}, 0.5], DiskBox[{667., 91.}, 0.5], 
        DiskBox[{588., 150.}, 0.5], DiskBox[{145., 67.}, 0.5], 
        DiskBox[{44., 80.}, 0.5], DiskBox[{218., 155.}, 0.5], 
        DiskBox[{24., 66.}, 0.5], DiskBox[{149., 161.}, 0.5], 
        DiskBox[{450., 80.}, 0.5], DiskBox[{237., 153.}, 0.5], 
        DiskBox[{253., 146.}, 0.5], DiskBox[{25., 120.}, 0.5], 
        DiskBox[{146., 106.}, 0.5], DiskBox[{579., 118.}, 0.5], 
        DiskBox[{264., 137.}, 0.5], DiskBox[{939., 127.}, 0.5], 
        DiskBox[{268., 138.}, 0.5], DiskBox[{646., 71.}, 0.5], 
        DiskBox[{1027., 119.}, 0.5], DiskBox[{783., 164.}, 0.5], 
        DiskBox[{439., 101.}, 0.5], DiskBox[{784., 94.}, 0.5], 
        DiskBox[{369., 107.}, 0.5], DiskBox[{989., 162.}, 0.5], 
        DiskBox[{257., 77.}, 0.5], DiskBox[{235., 104.}, 0.5], 
        DiskBox[{257., 64.}, 0.5], DiskBox[{715., 132.}, 0.5], 
        DiskBox[{614., 117.}, 0.5], DiskBox[{228., 66.}, 0.5], 
        DiskBox[{785., 155.}, 0.5], DiskBox[{85., 156.}, 0.5], 
        DiskBox[{111., 169.}, 0.5], DiskBox[{892., 124.}, 0.5], 
        DiskBox[{33., 161.}, 0.5], DiskBox[{244., 107.}, 0.5], 
        DiskBox[{608., 135.}, 0.5], DiskBox[{164., 121.}, 0.5], 
        DiskBox[{531., 128.}, 0.5], DiskBox[{233., 73.}, 0.5], 
        DiskBox[{648., 91.}, 0.5], DiskBox[{991., 165.}, 0.5], 
        DiskBox[{943., 144.}, 0.5], DiskBox[{887., 178.}, 0.5], 
        DiskBox[{313., 105.}, 0.5], DiskBox[{39., 75.}, 0.5], 
        DiskBox[{92., 160.}, 0.5], DiskBox[{1009., 134.}, 0.5], 
        DiskBox[{459., 87.}, 0.5], DiskBox[{869., 150.}, 0.5], 
        DiskBox[{165., 202.}, 0.5], DiskBox[{146., 135.}, 0.5], 
        DiskBox[{901., 182.}, 0.5], DiskBox[{20., 67.}, 0.5], 
        DiskBox[{885., 113.}, 0.5], DiskBox[{998., 145.}, 0.5], 
        DiskBox[{141., 139.}, 0.5], DiskBox[{942., 124.}, 0.5], 
        DiskBox[{275., 73.}, 0.5], DiskBox[{323., 153.}, 0.5], 
        DiskBox[{147., 198.}, 0.5], DiskBox[{167., 120.}, 0.5], 
        DiskBox[{884., 182.}, 0.5], DiskBox[{838., 92.}, 0.5], 
        DiskBox[{431., 164.}, 0.5], DiskBox[{781., 87.}, 0.5], 
        DiskBox[{790., 88.}, 0.5], DiskBox[{92., 137.}, 0.5], 
        DiskBox[{764., 116.}, 0.5], DiskBox[{109., 101.}, 0.5], 
        DiskBox[{488., 111.}, 0.5], DiskBox[{28., 156.}, 0.5], 
        DiskBox[{503., 151.}, 0.5], DiskBox[{729., 80.}, 0.5], 
        DiskBox[{380., 78.}, 0.5], DiskBox[{145., 184.}, 0.5], 
        DiskBox[{242., 62.}, 0.5], DiskBox[{99., 175.}, 0.5], 
        DiskBox[{655., 119.}, 0.5], DiskBox[{883., 103.}, 0.5], 
        DiskBox[{583., 114.}, 0.5], DiskBox[{655., 145.}, 0.5], 
        DiskBox[{308., 86.}, 0.5], DiskBox[{826., 103.}, 0.5], 
        DiskBox[{228., 108.}, 0.5], DiskBox[{671., 116.}, 0.5], 
        DiskBox[{720., 85.}, 0.5], DiskBox[{493., 91.}, 0.5], 
        DiskBox[{1029., 97.}, 0.5], DiskBox[{762., 77.}, 0.5], 
        DiskBox[{785., 106.}, 0.5], DiskBox[{237., 146.}, 0.5], 
        DiskBox[{787., 120.}, 0.5], DiskBox[{202., 123.}, 0.5], 
        DiskBox[{323., 117.}, 0.5], DiskBox[{482., 86.}, 0.5], 
        DiskBox[{390., 110.}, 0.5], DiskBox[{274., 121.}, 0.5], 
        DiskBox[{892., 80.}, 0.5], DiskBox[{315., 156.}, 0.5], 
        DiskBox[{780., 142.}, 0.5], DiskBox[{274., 117.}, 0.5], 
        DiskBox[{432., 158.}, 0.5], DiskBox[{710., 158.}, 0.5], 
        DiskBox[{896., 203.}, 0.5], DiskBox[{646., 81.}, 0.5], 
        DiskBox[{1001., 70.}, 0.5], DiskBox[{552., 100.}, 0.5], 
        DiskBox[{881., 85.}, 0.5], DiskBox[{585., 68.}, 0.5], 
        DiskBox[{31., 175.}, 0.5], DiskBox[{385., 84.}, 0.5], 
        DiskBox[{720., 87.}, 0.5], DiskBox[{887., 97.}, 0.5], 
        DiskBox[{731., 70.}, 0.5], DiskBox[{861., 149.}, 0.5], 
        DiskBox[{318., 161.}, 0.5], DiskBox[{31., 130.}, 0.5], 
        DiskBox[{723., 83.}, 0.5], DiskBox[{148., 120.}, 0.5], 
        DiskBox[{217., 93.}, 0.5], DiskBox[{165., 76.}, 0.5], 
        DiskBox[{207., 148.}, 0.5], DiskBox[{314., 161.}, 0.5], 
        DiskBox[{891., 126.}, 0.5], DiskBox[{246., 108.}, 0.5], 
        DiskBox[{47., 164.}, 0.5], DiskBox[{719., 132.}, 0.5], 
        DiskBox[{658., 80.}, 0.5], DiskBox[{593., 138.}, 0.5], 
        DiskBox[{544., 117.}, 0.5], DiskBox[{221., 86.}, 0.5], 
        DiskBox[{728., 120.}, 0.5], DiskBox[{104., 185.}, 0.5], 
        DiskBox[{312., 91.}, 0.5], DiskBox[{845., 82.}, 0.5], 
        DiskBox[{489., 108.}, 0.5], DiskBox[{784., 202.}, 0.5], 
        DiskBox[{822., 95.}, 0.5], DiskBox[{1025., 96.}, 0.5], 
        DiskBox[{818., 131.}, 0.5], DiskBox[{35., 195.}, 0.5], 
        DiskBox[{103., 184.}, 0.5], DiskBox[{848., 66.}, 0.5], 
        DiskBox[{725., 116.}, 0.5], DiskBox[{318., 113.}, 0.5], 
        DiskBox[{778., 204.}, 0.5], DiskBox[{480., 98.}, 0.5], 
        DiskBox[{874., 86.}, 0.5], DiskBox[{905., 178.}, 0.5], 
        DiskBox[{318., 74.}, 0.5], DiskBox[{721., 73.}, 0.5], 
        DiskBox[{398., 121.}, 0.5], DiskBox[{823., 119.}, 0.5], 
        DiskBox[{32., 116.}, 0.5], DiskBox[{897., 137.}, 0.5], 
        DiskBox[{684., 156.}, 0.5], DiskBox[{577., 81.}, 0.5], 
        DiskBox[{145., 109.}, 0.5], DiskBox[{887., 156.}, 0.5], 
        DiskBox[{97., 80.}, 0.5], DiskBox[{544., 151.}, 0.5], 
        DiskBox[{332., 101.}, 0.5], DiskBox[{28., 108.}, 0.5], 
        DiskBox[{770., 103.}, 0.5], DiskBox[{79., 64.}, 0.5], 
        DiskBox[{488., 153.}, 0.5], DiskBox[{1016., 121.}, 0.5], 
        DiskBox[{842., 157.}, 0.5], DiskBox[{375., 117.}, 0.5], 
        DiskBox[{1013., 79.}, 0.5], DiskBox[{449., 112.}, 0.5], 
        DiskBox[{379., 114.}, 0.5], DiskBox[{310., 92.}, 0.5], 
        DiskBox[{374., 91.}, 0.5], DiskBox[{821., 108.}, 0.5], 
        DiskBox[{283., 126.}, 0.5], DiskBox[{966., 161.}, 0.5], 
        DiskBox[{650., 64.}, 0.5], DiskBox[{42., 173.}, 0.5], 
        DiskBox[{24., 152.}, 0.5], DiskBox[{557., 156.}, 0.5], 
        DiskBox[{454., 87.}, 0.5], DiskBox[{151., 143.}, 0.5], 
        DiskBox[{40., 121.}, 0.5], DiskBox[{767., 145.}, 0.5], 
        DiskBox[{554., 152.}, 0.5], DiskBox[{422., 158.}, 0.5], 
        DiskBox[{658., 106.}, 0.5], DiskBox[{168., 69.}, 0.5], 
        DiskBox[{394., 105.}, 0.5], DiskBox[{765., 152.}, 0.5], 
        DiskBox[{321., 143.}, 0.5], DiskBox[{855., 70.}, 0.5], 
        DiskBox[{278., 139.}, 0.5], DiskBox[{66., 83.}, 0.5], 
        DiskBox[{45., 119.}, 0.5], DiskBox[{460., 90.}, 0.5], 
        DiskBox[{821., 85.}, 0.5], DiskBox[{20., 190.}, 0.5], 
        DiskBox[{331., 146.}, 0.5], DiskBox[{375., 80.}, 0.5], 
        DiskBox[{446., 158.}, 0.5], DiskBox[{897., 203.}, 0.5], 
        DiskBox[{359., 162.}, 0.5], DiskBox[{361., 151.}, 0.5], 
        DiskBox[{975., 75.}, 0.5], DiskBox[{834., 105.}, 0.5], 
        DiskBox[{325., 103.}, 0.5], DiskBox[{724., 114.}, 0.5], 
        DiskBox[{840., 151.}, 0.5], DiskBox[{152., 106.}, 0.5], 
        DiskBox[{108., 120.}, 0.5], DiskBox[{391., 151.}, 0.5], 
        DiskBox[{443., 146.}, 0.5], DiskBox[{770., 148.}, 0.5], 
        DiskBox[{39., 109.}, 0.5], DiskBox[{325., 72.}, 0.5], 
        DiskBox[{218., 91.}, 0.5], DiskBox[{448., 126.}, 0.5], 
        DiskBox[{979., 145.}, 0.5], DiskBox[{776., 71.}, 0.5], 
        DiskBox[{670., 118.}, 0.5], DiskBox[{719., 141.}, 0.5], 
        DiskBox[{864., 80.}, 0.5], DiskBox[{485., 116.}, 0.5], 
        DiskBox[{790., 142.}, 0.5], DiskBox[{890., 154.}, 0.5], 
        DiskBox[{315., 134.}, 0.5], DiskBox[{703., 155.}, 0.5], 
        DiskBox[{41., 124.}, 0.5], DiskBox[{951., 144.}, 0.5], 
        DiskBox[{98., 103.}, 0.5], DiskBox[{732., 82.}, 0.5], 
        DiskBox[{701., 145.}, 0.5], DiskBox[{78., 172.}, 0.5], 
        DiskBox[{486., 105.}, 0.5], DiskBox[{262., 154.}, 0.5], 
        DiskBox[{647., 69.}, 0.5], DiskBox[{887., 77.}, 0.5], 
        DiskBox[{267., 108.}, 0.5], DiskBox[{773., 64.}, 0.5], 
        DiskBox[{231., 161.}, 0.5], DiskBox[{493., 148.}, 0.5], 
        DiskBox[{32., 151.}, 0.5], DiskBox[{45., 170.}, 0.5], 
        DiskBox[{896., 174.}, 0.5], DiskBox[{446., 95.}, 0.5], 
        DiskBox[{257., 81.}, 0.5], DiskBox[{1009., 144.}, 0.5], 
        DiskBox[{669., 131.}, 0.5], DiskBox[{211., 85.}, 0.5], 
        DiskBox[{443., 132.}, 0.5], DiskBox[{765., 134.}, 0.5], 
        DiskBox[{311., 66.}, 0.5], DiskBox[{1007., 148.}, 0.5], 
        DiskBox[{44., 147.}, 0.5], DiskBox[{819., 130.}, 0.5], 
        DiskBox[{163., 103.}, 0.5], DiskBox[{74., 186.}, 0.5], 
        DiskBox[{908., 200.}, 0.5], DiskBox[{959., 146.}, 0.5], 
        DiskBox[{551., 98.}, 0.5], DiskBox[{20., 89.}, 0.5], 
        DiskBox[{724., 98.}, 0.5], DiskBox[{883., 105.}, 0.5], 
        DiskBox[{147., 64.}, 0.5], DiskBox[{828., 82.}, 0.5], 
        DiskBox[{705., 97.}, 0.5], DiskBox[{324., 64.}, 0.5], 
        DiskBox[{32., 131.}, 0.5], DiskBox[{45., 93.}, 0.5], 
        DiskBox[{428., 143.}, 0.5], DiskBox[{651., 130.}, 0.5], 
        DiskBox[{565., 123.}, 0.5], DiskBox[{167., 126.}, 0.5], 
        DiskBox[{90., 180.}, 0.5], DiskBox[{429., 147.}, 0.5], 
        DiskBox[{165., 73.}, 0.5], DiskBox[{552., 131.}, 0.5], 
        DiskBox[{220., 66.}, 0.5], DiskBox[{448., 149.}, 0.5], 
        DiskBox[{457., 108.}, 0.5], DiskBox[{149., 110.}, 0.5], 
        DiskBox[{615., 134.}, 0.5], DiskBox[{91., 103.}, 0.5], 
        DiskBox[{655., 93.}, 0.5], DiskBox[{599., 111.}, 0.5], 
        DiskBox[{733., 68.}, 0.5], DiskBox[{164., 134.}, 0.5], 
        DiskBox[{656., 137.}, 0.5], DiskBox[{595., 118.}, 0.5], 
        DiskBox[{103., 160.}, 0.5], DiskBox[{67., 66.}, 0.5], 
        DiskBox[{956., 111.}, 0.5], DiskBox[{1015., 108.}, 0.5], 
        DiskBox[{981., 162.}, 0.5], DiskBox[{268., 84.}, 0.5], 
        DiskBox[{886., 175.}, 0.5], DiskBox[{45., 100.}, 0.5], 
        DiskBox[{666., 104.}, 0.5], DiskBox[{446., 114.}, 0.5], 
        DiskBox[{773., 104.}, 0.5], DiskBox[{999., 150.}, 0.5], 
        DiskBox[{557., 142.}, 0.5], DiskBox[{579., 166.}, 0.5], 
        DiskBox[{154., 131.}, 0.5], DiskBox[{385., 72.}, 0.5], 
        DiskBox[{263., 139.}, 0.5], DiskBox[{903., 87.}, 0.5], 
        DiskBox[{893., 69.}, 0.5], DiskBox[{165., 191.}, 0.5], 
        DiskBox[{892., 190.}, 0.5], DiskBox[{248., 71.}, 0.5], 
        DiskBox[{554., 150.}, 0.5], DiskBox[{147., 115.}, 0.5], 
        DiskBox[{264., 104.}, 0.5], DiskBox[{159., 67.}, 0.5], 
        DiskBox[{385., 109.}, 0.5], DiskBox[{78., 194.}, 0.5], 
        DiskBox[{271., 85.}, 0.5], DiskBox[{103., 70.}, 0.5], 
        DiskBox[{954., 125.}, 0.5], DiskBox[{649., 154.}, 0.5], 
        DiskBox[{27., 180.}, 0.5], DiskBox[{565., 64.}, 0.5], 
        DiskBox[{601., 158.}, 0.5], DiskBox[{779., 203.}, 0.5], 
        DiskBox[{105., 123.}, 0.5], DiskBox[{162., 112.}, 0.5], 
        DiskBox[{713., 72.}, 0.5], DiskBox[{700., 143.}, 0.5], 
        DiskBox[{1029., 99.}, 0.5], DiskBox[{713., 100.}, 0.5], 
        DiskBox[{32., 183.}, 0.5], DiskBox[{593., 80.}, 0.5], 
        DiskBox[{568., 157.}, 0.5], DiskBox[{884., 116.}, 0.5], 
        DiskBox[{898., 127.}, 0.5], DiskBox[{891., 178.}, 0.5], 
        DiskBox[{657., 117.}, 0.5], DiskBox[{976., 62.}, 0.5], 
        DiskBox[{867., 71.}, 0.5], DiskBox[{671., 109.}, 0.5], 
        DiskBox[{781., 113.}, 0.5], DiskBox[{1016., 135.}, 0.5], 
        DiskBox[{449., 84.}, 0.5], DiskBox[{823., 87.}, 0.5], 
        DiskBox[{953., 82.}, 0.5], DiskBox[{472., 85.}, 0.5], 
        DiskBox[{263., 75.}, 0.5], DiskBox[{858., 59.}, 0.5], 
        DiskBox[{768., 160.}, 0.5], DiskBox[{470., 64.}, 0.5], 
        DiskBox[{552., 108.}, 0.5], DiskBox[{782., 159.}, 0.5], 
        DiskBox[{849., 83.}, 0.5], DiskBox[{108., 168.}, 0.5], 
        DiskBox[{260., 68.}, 0.5], DiskBox[{68., 122.}, 0.5], 
        DiskBox[{108., 84.}, 0.5], DiskBox[{31., 168.}, 0.5], 
        DiskBox[{247., 115.}, 0.5], DiskBox[{871., 161.}, 0.5], 
        DiskBox[{27., 73.}, 0.5], DiskBox[{1017., 152.}, 0.5], 
        DiskBox[{155., 144.}, 0.5], DiskBox[{329., 128.}, 0.5], 
        DiskBox[{391., 88.}, 0.5], DiskBox[{269., 71.}, 0.5], 
        DiskBox[{355., 151.}, 0.5], DiskBox[{207., 101.}, 0.5], 
        DiskBox[{226., 78.}, 0.5], DiskBox[{833., 131.}, 0.5], 
        DiskBox[{35., 99.}, 0.5], DiskBox[{831., 71.}, 0.5], 
        DiskBox[{215., 89.}, 0.5], DiskBox[{394., 66.}, 0.5], 
        DiskBox[{839., 125.}, 0.5], DiskBox[{389., 140.}, 0.5], 
        DiskBox[{584., 120.}, 0.5], DiskBox[{663., 83.}, 0.5], 
        DiskBox[{479., 81.}, 0.5], DiskBox[{890., 106.}, 0.5], 
        DiskBox[{330., 164.}, 0.5], DiskBox[{147., 123.}, 0.5], 
        DiskBox[{894., 121.}, 0.5], DiskBox[{47., 138.}, 0.5], 
        DiskBox[{221., 142.}, 0.5], DiskBox[{1015., 145.}, 0.5], 
        DiskBox[{309., 111.}, 0.5], DiskBox[{317., 99.}, 0.5], 
        DiskBox[{572., 108.}, 0.5], DiskBox[{261., 138.}, 0.5], 
        DiskBox[{386., 111.}, 0.5], DiskBox[{706., 102.}, 0.5], 
        DiskBox[{376., 110.}, 0.5], DiskBox[{428., 124.}, 0.5], 
        DiskBox[{143., 130.}, 0.5], DiskBox[{82., 130.}, 0.5], 
        DiskBox[{656., 126.}, 0.5], DiskBox[{482., 97.}, 0.5], 
        DiskBox[{145., 81.}, 0.5], DiskBox[{596., 107.}, 0.5], 
        DiskBox[{165., 130.}, 0.5], DiskBox[{223., 133.}, 0.5], 
        DiskBox[{598., 62.}, 0.5], DiskBox[{887., 176.}, 0.5], 
        DiskBox[{609., 107.}, 0.5], DiskBox[{101., 178.}, 0.5], 
        DiskBox[{96., 141.}, 0.5], DiskBox[{1015., 137.}, 0.5], 
        DiskBox[{333., 66.}, 0.5], DiskBox[{313., 137.}, 0.5], 
        DiskBox[{241., 75.}, 0.5], DiskBox[{385., 115.}, 0.5], 
        DiskBox[{445., 108.}, 0.5], DiskBox[{734., 92.}, 0.5], 
        DiskBox[{898., 99.}, 0.5], DiskBox[{791., 92.}, 0.5], 
        DiskBox[{560., 106.}, 0.5], DiskBox[{476., 87.}, 0.5], 
        DiskBox[{341., 140.}, 0.5], DiskBox[{788., 112.}, 0.5], 
        DiskBox[{996., 162.}, 0.5], DiskBox[{380., 83.}, 0.5], 
        DiskBox[{1024., 117.}, 0.5], DiskBox[{97., 113.}, 0.5], 
        DiskBox[{591., 116.}, 0.5], DiskBox[{91., 139.}, 0.5], 
        DiskBox[{320., 70.}, 0.5], DiskBox[{836., 102.}, 0.5], 
        DiskBox[{490., 86.}, 0.5], DiskBox[{890., 155.}, 0.5], 
        DiskBox[{786., 188.}, 0.5], DiskBox[{902., 75.}, 0.5], 
        DiskBox[{828., 84.}, 0.5], DiskBox[{893., 137.}, 0.5], 
        DiskBox[{434., 143.}, 0.5], DiskBox[{842., 91.}, 0.5], 
        DiskBox[{164., 103.}, 0.5], DiskBox[{548., 121.}, 0.5], 
        DiskBox[{394., 114.}, 0.5], DiskBox[{150., 182.}, 0.5], 
        DiskBox[{707., 148.}, 0.5], DiskBox[{312., 151.}, 0.5], 
        DiskBox[{30., 163.}, 0.5], DiskBox[{60., 65.}, 0.5], 
        DiskBox[{323., 164.}, 0.5], DiskBox[{458., 72.}, 0.5], 
        DiskBox[{451., 129.}, 0.5], DiskBox[{454., 92.}, 0.5], 
        DiskBox[{985., 159.}, 0.5], DiskBox[{154., 193.}, 0.5], 
        DiskBox[{377., 83.}, 0.5], DiskBox[{766., 158.}, 0.5], 
        DiskBox[{538., 113.}, 0.5], DiskBox[{214., 137.}, 0.5], 
        DiskBox[{724., 149.}, 0.5], DiskBox[{538., 131.}, 0.5], 
        DiskBox[{219., 88.}, 0.5], DiskBox[{945., 93.}, 0.5], 
        DiskBox[{655., 116.}, 0.5], DiskBox[{58., 186.}, 0.5], 
        DiskBox[{597., 154.}, 0.5], DiskBox[{601., 76.}, 0.5], 
        DiskBox[{324., 115.}, 0.5], DiskBox[{894., 91.}, 0.5], 
        DiskBox[{170., 186.}, 0.5], DiskBox[{56., 141.}, 0.5], 
        DiskBox[{569., 74.}, 0.5], DiskBox[{397., 130.}, 0.5], 
        DiskBox[{777., 197.}, 0.5], DiskBox[{1017., 94.}, 0.5], 
        DiskBox[{169., 130.}, 0.5], DiskBox[{773., 86.}, 0.5], 
        DiskBox[{91., 174.}, 0.5], DiskBox[{999., 156.}, 0.5], 
        DiskBox[{216., 75.}, 0.5], DiskBox[{396., 112.}, 0.5], 
        DiskBox[{601., 65.}, 0.5], DiskBox[{718., 139.}, 0.5], 
        DiskBox[{767., 85.}, 0.5], DiskBox[{654., 140.}, 0.5], 
        DiskBox[{369., 156.}, 0.5], DiskBox[{819., 87.}, 0.5], 
        DiskBox[{41., 159.}, 0.5], DiskBox[{47., 127.}, 0.5], 
        DiskBox[{1015., 139.}, 0.5], DiskBox[{787., 123.}, 0.5], 
        DiskBox[{662., 112.}, 0.5], DiskBox[{828., 129.}, 0.5], 
        DiskBox[{699., 148.}, 0.5], DiskBox[{376., 112.}, 0.5], 
        DiskBox[{48., 186.}, 0.5], DiskBox[{888., 97.}, 0.5], 
        DiskBox[{825., 137.}, 0.5], DiskBox[{348., 160.}, 0.5], 
        DiskBox[{335., 62.}, 0.5], DiskBox[{764., 105.}, 0.5], 
        DiskBox[{97., 121.}, 0.5], DiskBox[{619., 128.}, 0.5], 
        DiskBox[{667., 160.}, 0.5], DiskBox[{530., 101.}, 0.5], 
        DiskBox[{267., 86.}, 0.5], DiskBox[{387., 121.}, 0.5], 
        DiskBox[{670., 91.}, 0.5], DiskBox[{310., 63.}, 0.5], 
        DiskBox[{790., 97.}, 0.5], DiskBox[{310., 108.}, 0.5], 
        DiskBox[{891., 77.}, 0.5], DiskBox[{997., 72.}, 0.5], 
        DiskBox[{903., 89.}, 0.5], DiskBox[{493., 99.}, 0.5], 
        DiskBox[{779., 197.}, 0.5], DiskBox[{369., 63.}, 0.5], 
        DiskBox[{864., 163.}, 0.5], DiskBox[{836., 130.}, 0.5], 
        DiskBox[{824., 145.}, 0.5], DiskBox[{947., 141.}, 0.5], 
        DiskBox[{787., 141.}, 0.5], DiskBox[{43., 68.}, 0.5], 
        DiskBox[{254., 72.}, 0.5], DiskBox[{708., 117.}, 0.5], 
        DiskBox[{713., 147.}, 0.5], DiskBox[{154., 138.}, 0.5], 
        DiskBox[{998., 66.}, 0.5], DiskBox[{575., 162.}, 0.5], 
        DiskBox[{144., 94.}, 0.5], DiskBox[{865., 69.}, 0.5], 
        DiskBox[{649., 110.}, 0.5], DiskBox[{1002., 148.}, 0.5], 
        DiskBox[{570., 163.}, 0.5], DiskBox[{240., 109.}, 0.5], 
        DiskBox[{327., 72.}, 0.5], DiskBox[{391., 77.}, 0.5], 
        DiskBox[{900., 77.}, 0.5], DiskBox[{771., 150.}, 0.5], 
        DiskBox[{762., 107.}, 0.5], DiskBox[{529., 110.}, 0.5], 
        DiskBox[{275., 123.}, 0.5], DiskBox[{495., 97.}, 0.5], 
        DiskBox[{392., 74.}, 0.5], DiskBox[{42., 159.}, 0.5], 
        DiskBox[{18., 158.}, 0.5], DiskBox[{368., 133.}, 0.5], 
        DiskBox[{204., 87.}, 0.5], DiskBox[{706., 151.}, 0.5], 
        DiskBox[{511., 152.}, 0.5], DiskBox[{1006., 81.}, 0.5], 
        DiskBox[{113., 108.}, 0.5], DiskBox[{376., 77.}, 0.5], 
        DiskBox[{683., 156.}, 0.5], DiskBox[{885., 206.}, 0.5], 
        DiskBox[{573., 108.}, 0.5], DiskBox[{227., 149.}, 0.5], 
        DiskBox[{1013., 140.}, 0.5], DiskBox[{502., 142.}, 0.5], 
        DiskBox[{993., 154.}, 0.5], DiskBox[{112., 160.}, 0.5], 
        DiskBox[{662., 151.}, 0.5], DiskBox[{83., 85.}, 0.5], 
        DiskBox[{907., 158.}, 0.5], DiskBox[{886., 178.}, 0.5], 
        DiskBox[{711., 103.}, 0.5], DiskBox[{531., 101.}, 0.5], 
        DiskBox[{909., 161.}, 0.5], DiskBox[{611., 106.}, 0.5], 
        DiskBox[{59., 77.}, 0.5], DiskBox[{898., 139.}, 0.5], 
        DiskBox[{725., 63.}, 0.5], DiskBox[{829., 114.}, 0.5], 
        DiskBox[{214., 111.}, 0.5], DiskBox[{320., 151.}, 0.5], 
        DiskBox[{764., 144.}, 0.5], DiskBox[{45., 146.}, 0.5], 
        DiskBox[{498., 159.}, 0.5], DiskBox[{72., 196.}, 0.5], 
        DiskBox[{644., 129.}, 0.5], DiskBox[{99., 74.}, 0.5], 
        DiskBox[{570., 109.}, 0.5], DiskBox[{26., 120.}, 0.5], 
        DiskBox[{719., 84.}, 0.5], DiskBox[{512., 155.}, 0.5], 
        DiskBox[{106., 82.}, 0.5], DiskBox[{376., 69.}, 0.5], 
        DiskBox[{565., 152.}, 0.5], DiskBox[{574., 75.}, 0.5], 
        DiskBox[{670., 143.}, 0.5], DiskBox[{73., 173.}, 0.5], 
        DiskBox[{20., 94.}, 0.5], DiskBox[{1019., 115.}, 0.5], 
        DiskBox[{170., 144.}, 0.5], DiskBox[{271., 108.}, 0.5], 
        DiskBox[{149., 200.}, 0.5], DiskBox[{162., 86.}, 0.5], 
        DiskBox[{491., 121.}, 0.5], DiskBox[{228., 77.}, 0.5], 
        DiskBox[{784., 77.}, 0.5], DiskBox[{909., 140.}, 0.5], 
        DiskBox[{71., 80.}, 0.5], DiskBox[{22., 154.}, 0.5], 
        DiskBox[{19., 135.}, 0.5], DiskBox[{847., 152.}, 0.5], 
        DiskBox[{666., 68.}, 0.5], DiskBox[{210., 132.}, 0.5], 
        DiskBox[{536., 106.}, 0.5], DiskBox[{74., 74.}, 0.5], 
        DiskBox[{832., 128.}, 0.5], DiskBox[{268., 145.}, 0.5], 
        DiskBox[{484., 145.}, 0.5], DiskBox[{321., 141.}, 0.5], 
        DiskBox[{68., 62.}, 0.5], DiskBox[{47., 64.}, 0.5], 
        DiskBox[{789., 143.}, 0.5], DiskBox[{540., 112.}, 0.5], 
        DiskBox[{664., 91.}, 0.5], DiskBox[{776., 210.}, 0.5], 
        DiskBox[{868., 154.}, 0.5], DiskBox[{966., 84.}, 0.5], 
        DiskBox[{650., 125.}, 0.5], DiskBox[{55., 77.}, 0.5], 
        DiskBox[{29., 162.}, 0.5], DiskBox[{373., 129.}, 0.5], 
        DiskBox[{307., 122.}, 0.5], DiskBox[{428., 127.}, 0.5], 
        DiskBox[{443., 163.}, 0.5], DiskBox[{660., 131.}, 0.5], 
        DiskBox[{898., 170.}, 0.5], DiskBox[{226., 71.}, 0.5], 
        DiskBox[{833., 110.}, 0.5], DiskBox[{198., 89.}, 0.5], 
        DiskBox[{1000., 136.}, 0.5], DiskBox[{246., 119.}, 0.5], 
        DiskBox[{49., 181.}, 0.5], DiskBox[{768., 143.}, 0.5], 
        DiskBox[{858., 165.}, 0.5], DiskBox[{776., 107.}, 0.5], 
        DiskBox[{582., 144.}, 0.5], DiskBox[{876., 139.}, 0.5], 
        DiskBox[{574., 146.}, 0.5], DiskBox[{91., 153.}, 0.5], 
        DiskBox[{441., 121.}, 0.5], DiskBox[{317., 75.}, 0.5], 
        DiskBox[{878., 68.}, 0.5], DiskBox[{438., 115.}, 0.5], 
        DiskBox[{224., 122.}, 0.5], DiskBox[{551., 93.}, 0.5], 
        DiskBox[{1022., 110.}, 0.5], DiskBox[{1009., 146.}, 0.5], 
        DiskBox[{665., 113.}, 0.5], DiskBox[{283., 106.}, 0.5], 
        DiskBox[{778., 150.}, 0.5], DiskBox[{272., 83.}, 0.5], 
        DiskBox[{243., 63.}, 0.5], DiskBox[{560., 134.}, 0.5], 
        DiskBox[{884., 183.}, 0.5], DiskBox[{476., 112.}, 0.5], 
        DiskBox[{78., 75.}, 0.5], DiskBox[{662., 122.}, 0.5], 
        DiskBox[{100., 80.}, 0.5], DiskBox[{431., 145.}, 0.5], 
        DiskBox[{46., 71.}, 0.5], DiskBox[{905., 147.}, 0.5], 
        DiskBox[{333., 107.}, 0.5], DiskBox[{593., 121.}, 0.5], 
        DiskBox[{39., 149.}, 0.5], DiskBox[{158., 62.}, 0.5], 
        DiskBox[{855., 78.}, 0.5], DiskBox[{265., 76.}, 0.5], 
        DiskBox[{398., 74.}, 0.5], DiskBox[{973., 150.}, 0.5], 
        DiskBox[{901., 90.}, 0.5], DiskBox[{705., 114.}, 0.5], 
        DiskBox[{381., 65.}, 0.5], DiskBox[{669., 83.}, 0.5], 
        DiskBox[{783., 129.}, 0.5], DiskBox[{33., 160.}, 0.5], 
        DiskBox[{571., 76.}, 0.5], DiskBox[{827., 73.}, 0.5], 
        DiskBox[{656., 114.}, 0.5], DiskBox[{825., 123.}, 0.5], 
        DiskBox[{548., 123.}, 0.5], DiskBox[{378., 163.}, 0.5], 
        DiskBox[{153., 75.}, 0.5], DiskBox[{488., 96.}, 0.5], 
        DiskBox[{888., 190.}, 0.5], DiskBox[{610., 121.}, 0.5], 
        DiskBox[{373., 149.}, 0.5], DiskBox[{945., 124.}, 0.5], 
        DiskBox[{238., 83.}, 0.5], DiskBox[{378., 155.}, 0.5], 
        DiskBox[{786., 132.}, 0.5], DiskBox[{451., 117.}, 0.5], 
        DiskBox[{483., 137.}, 0.5], DiskBox[{154., 108.}, 0.5], 
        DiskBox[{426., 137.}, 0.5], DiskBox[{489., 161.}, 0.5], 
        DiskBox[{474., 93.}, 0.5], DiskBox[{546., 144.}, 0.5], 
        DiskBox[{21., 155.}, 0.5], DiskBox[{481., 111.}, 0.5], 
        DiskBox[{893., 109.}, 0.5], DiskBox[{198., 113.}, 0.5], 
        DiskBox[{734., 94.}, 0.5], DiskBox[{42., 168.}, 0.5], 
        DiskBox[{878., 67.}, 0.5], DiskBox[{951., 148.}, 0.5], 
        DiskBox[{670., 109.}, 0.5], DiskBox[{493., 140.}, 0.5], 
        DiskBox[{203., 134.}, 0.5], DiskBox[{969., 81.}, 0.5], 
        DiskBox[{978., 68.}, 0.5], DiskBox[{668., 106.}, 0.5], 
        DiskBox[{19., 64.}, 0.5], DiskBox[{897., 168.}, 0.5], 
        DiskBox[{836., 66.}, 0.5], DiskBox[{980., 72.}, 0.5], 
        DiskBox[{882., 94.}, 0.5], DiskBox[{902., 146.}, 0.5], 
        DiskBox[{231., 148.}, 0.5], DiskBox[{898., 69.}, 0.5], 
        DiskBox[{768., 117.}, 0.5], DiskBox[{839., 162.}, 0.5], 
        DiskBox[{371., 102.}, 0.5], DiskBox[{156., 129.}, 0.5], 
        DiskBox[{894., 186.}, 0.5], DiskBox[{725., 80.}, 0.5], 
        DiskBox[{152., 192.}, 0.5], DiskBox[{59., 131.}, 0.5], 
        DiskBox[{504., 139.}, 0.5], DiskBox[{110., 87.}, 0.5], 
        DiskBox[{571., 111.}, 0.5], DiskBox[{1000., 75.}, 0.5], 
        DiskBox[{63., 141.}, 0.5], DiskBox[{233., 160.}, 0.5], 
        DiskBox[{708., 164.}, 0.5], DiskBox[{250., 118.}, 0.5], 
        DiskBox[{611., 79.}, 0.5], DiskBox[{310., 69.}, 0.5], 
        DiskBox[{73., 142.}, 0.5], DiskBox[{710., 82.}, 0.5], 
        DiskBox[{481., 74.}, 0.5], DiskBox[{53., 176.}, 0.5], 
        DiskBox[{250., 158.}, 0.5], DiskBox[{204., 94.}, 0.5], 
        DiskBox[{154., 98.}, 0.5], DiskBox[{607., 110.}, 0.5], 
        DiskBox[{555., 100.}, 0.5], DiskBox[{378., 122.}, 0.5], 
        DiskBox[{217., 157.}, 0.5], DiskBox[{653., 129.}, 0.5], 
        DiskBox[{567., 73.}, 0.5], DiskBox[{887., 171.}, 0.5], 
        DiskBox[{910., 116.}, 0.5], DiskBox[{710., 65.}, 0.5], 
        DiskBox[{308., 150.}, 0.5], DiskBox[{893., 196.}, 0.5], 
        DiskBox[{28., 64.}, 0.5], DiskBox[{719., 144.}, 0.5], 
        DiskBox[{577., 121.}, 0.5], DiskBox[{711., 127.}, 0.5], 
        DiskBox[{160., 188.}, 0.5], DiskBox[{669., 77.}, 0.5], 
        DiskBox[{487., 75.}, 0.5], DiskBox[{997., 152.}, 0.5], 
        DiskBox[{882., 163.}, 0.5], DiskBox[{496., 146.}, 0.5], 
        DiskBox[{232., 65.}, 0.5], DiskBox[{92., 110.}, 0.5], 
        DiskBox[{655., 131.}, 0.5], DiskBox[{589., 161.}, 0.5], 
        DiskBox[{565., 151.}, 0.5], DiskBox[{687., 151.}, 0.5], 
        DiskBox[{511., 157.}, 0.5], DiskBox[{693., 145.}, 0.5], 
        DiskBox[{680., 154.}, 0.5], DiskBox[{217., 73.}, 0.5], 
        DiskBox[{509., 138.}, 0.5], DiskBox[{653., 109.}, 0.5], 
        DiskBox[{163., 191.}, 0.5], DiskBox[{962., 159.}, 0.5], 
        DiskBox[{334., 83.}, 0.5], DiskBox[{782., 206.}, 0.5], 
        DiskBox[{668., 91.}, 0.5], DiskBox[{962., 90.}, 0.5], 
        DiskBox[{668., 94.}, 0.5], DiskBox[{41., 80.}, 0.5], 
        DiskBox[{910., 70.}, 0.5], DiskBox[{164., 119.}, 0.5], 
        DiskBox[{336., 119.}, 0.5], DiskBox[{667., 94.}, 0.5], 
        DiskBox[{943., 108.}, 0.5], DiskBox[{116., 95.}, 0.5], 
        DiskBox[{782., 162.}, 0.5], DiskBox[{998., 76.}, 0.5], 
        DiskBox[{779., 67.}, 0.5], DiskBox[{818., 115.}, 0.5], 
        DiskBox[{72., 84.}, 0.5], DiskBox[{497., 133.}, 0.5], 
        DiskBox[{698., 162.}, 0.5], DiskBox[{22., 189.}, 0.5], 
        DiskBox[{375., 66.}, 0.5], DiskBox[{831., 148.}, 0.5], 
        DiskBox[{1029., 111.}, 0.5], DiskBox[{763., 84.}, 0.5], 
        DiskBox[{943., 130.}, 0.5], DiskBox[{37., 196.}, 0.5], 
        DiskBox[{870., 73.}, 0.5], DiskBox[{885., 167.}, 0.5], 
        DiskBox[{20., 183.}, 0.5], DiskBox[{901., 69.}, 0.5], 
        DiskBox[{816., 102.}, 0.5], DiskBox[{862., 143.}, 0.5], 
        DiskBox[{661., 69.}, 0.5], DiskBox[{1012., 74.}, 0.5], 
        DiskBox[{1012., 114.}, 0.5], DiskBox[{325., 127.}, 0.5], 
        DiskBox[{841., 122.}, 0.5], DiskBox[{248., 160.}, 0.5], 
        DiskBox[{715., 113.}, 0.5], DiskBox[{715., 131.}, 0.5], 
        DiskBox[{710., 151.}, 0.5], DiskBox[{146., 96.}, 0.5], 
        DiskBox[{389., 156.}, 0.5], DiskBox[{329., 95.}, 0.5], 
        DiskBox[{897., 116.}, 0.5], DiskBox[{718., 111.}, 0.5], 
        DiskBox[{243., 110.}, 0.5], DiskBox[{482., 71.}, 0.5], 
        DiskBox[{215., 101.}, 0.5], DiskBox[{910., 119.}, 0.5], 
        DiskBox[{206., 142.}, 0.5], DiskBox[{219., 71.}, 0.5], 
        DiskBox[{940., 106.}, 0.5], DiskBox[{267., 120.}, 0.5], 
        DiskBox[{200., 129.}, 0.5], DiskBox[{940., 88.}, 0.5], 
        DiskBox[{387., 62.}, 0.5], DiskBox[{829., 102.}, 0.5], 
        DiskBox[{210., 83.}, 0.5], DiskBox[{575., 154.}, 0.5], 
        DiskBox[{664., 129.}, 0.5], DiskBox[{217., 135.}, 0.5], 
        DiskBox[{146., 92.}, 0.5], DiskBox[{730., 66.}, 0.5], 
        DiskBox[{553., 82.}, 0.5], DiskBox[{603., 66.}, 0.5], 
        DiskBox[{531., 100.}, 0.5], DiskBox[{1005., 117.}, 0.5], 
        DiskBox[{839., 84.}, 0.5], DiskBox[{715., 76.}, 0.5], 
        DiskBox[{392., 107.}, 0.5], DiskBox[{256., 122.}, 0.5], 
        DiskBox[{69., 189.}, 0.5], DiskBox[{474., 98.}, 0.5], 
        DiskBox[{479., 83.}, 0.5], DiskBox[{159., 151.}, 0.5], 
        DiskBox[{195., 101.}, 0.5], DiskBox[{271., 114.}, 0.5], 
        DiskBox[{55., 73.}, 0.5], DiskBox[{956., 145.}, 0.5], 
        DiskBox[{41., 75.}, 0.5], DiskBox[{537., 134.}, 0.5], 
        DiskBox[{450., 119.}, 0.5], DiskBox[{458., 100.}, 0.5], 
        DiskBox[{725., 154.}, 0.5], DiskBox[{598., 84.}, 0.5], 
        DiskBox[{421., 147.}, 0.5], DiskBox[{225., 135.}, 0.5], 
        DiskBox[{838., 64.}, 0.5], DiskBox[{430., 122.}, 0.5], 
        DiskBox[{844., 111.}, 0.5], DiskBox[{897., 165.}, 0.5], 
        DiskBox[{890., 65.}, 0.5], DiskBox[{537., 124.}, 0.5], 
        DiskBox[{790., 197.}, 0.5], DiskBox[{33., 186.}, 0.5], 
        DiskBox[{499., 132.}, 0.5], DiskBox[{486., 109.}, 0.5], 
        DiskBox[{378., 68.}, 0.5], DiskBox[{837., 96.}, 0.5], 
        DiskBox[{273., 106.}, 0.5], DiskBox[{554., 80.}, 0.5], 
        DiskBox[{94., 105.}, 0.5], DiskBox[{253., 159.}, 0.5], 
        DiskBox[{725., 138.}, 0.5], DiskBox[{826., 151.}, 0.5], 
        DiskBox[{907., 200.}, 0.5], DiskBox[{70., 126.}, 0.5], 
        DiskBox[{23., 120.}, 0.5], DiskBox[{940., 124.}, 0.5], 
        DiskBox[{157., 143.}, 0.5], DiskBox[{156., 107.}, 0.5], 
        DiskBox[{834., 159.}, 0.5], DiskBox[{70., 182.}, 0.5], 
        DiskBox[{529., 106.}, 0.5], DiskBox[{880., 70.}, 0.5], 
        DiskBox[{595., 129.}, 0.5], DiskBox[{953., 74.}, 0.5], 
        DiskBox[{952., 88.}, 0.5], DiskBox[{708., 131.}, 0.5], 
        DiskBox[{93., 188.}, 0.5], DiskBox[{437., 113.}, 0.5], 
        DiskBox[{1015., 132.}, 0.5], DiskBox[{589., 106.}, 0.5], 
        DiskBox[{835., 124.}, 0.5], DiskBox[{847., 141.}, 0.5], 
        DiskBox[{883., 159.}, 0.5], DiskBox[{454., 129.}, 0.5], 
        DiskBox[{224., 154.}, 0.5], DiskBox[{307., 89.}, 0.5], 
        DiskBox[{56., 137.}, 0.5], DiskBox[{439., 154.}, 0.5], 
        DiskBox[{861., 158.}, 0.5], DiskBox[{96., 186.}, 0.5], 
        DiskBox[{690., 160.}, 0.5], DiskBox[{99., 105.}, 0.5], 
        DiskBox[{242., 81.}, 0.5], DiskBox[{442., 114.}, 0.5], 
        DiskBox[{861., 60.}, 0.5], DiskBox[{216., 83.}, 0.5], 
        DiskBox[{319., 101.}, 0.5], DiskBox[{370., 111.}, 0.5], 
        DiskBox[{160., 187.}, 0.5], DiskBox[{571., 68.}, 0.5], 
        DiskBox[{425., 137.}, 0.5], DiskBox[{732., 105.}, 0.5], 
        DiskBox[{783., 134.}, 0.5], DiskBox[{776., 161.}, 0.5], 
        DiskBox[{374., 152.}, 0.5], DiskBox[{840., 117.}, 0.5], 
        DiskBox[{327., 93.}, 0.5], DiskBox[{317., 159.}, 0.5], 
        DiskBox[{535., 107.}, 0.5], DiskBox[{419., 154.}, 0.5], 
        DiskBox[{962., 104.}, 0.5], DiskBox[{1014., 92.}, 0.5], 
        DiskBox[{213., 149.}, 0.5], DiskBox[{657., 99.}, 0.5], 
        DiskBox[{775., 132.}, 0.5], DiskBox[{101., 169.}, 0.5], 
        DiskBox[{236., 72.}, 0.5], DiskBox[{219., 108.}, 0.5], 
        DiskBox[{892., 151.}, 0.5], DiskBox[{980., 78.}, 0.5], 
        DiskBox[{226., 86.}, 0.5], DiskBox[{194., 105.}, 0.5], 
        DiskBox[{706., 84.}, 0.5], DiskBox[{334., 71.}, 0.5], 
        DiskBox[{107., 150.}, 0.5], DiskBox[{330., 103.}, 0.5], 
        DiskBox[{580., 104.}, 0.5], DiskBox[{561., 148.}, 0.5], 
        DiskBox[{40., 173.}, 0.5], DiskBox[{955., 103.}, 0.5], 
        DiskBox[{30., 176.}, 0.5], DiskBox[{452., 67.}, 0.5], 
        DiskBox[{886., 201.}, 0.5], DiskBox[{713., 129.}, 0.5], 
        DiskBox[{103., 86.}, 0.5], DiskBox[{64., 192.}, 0.5], 
        DiskBox[{451., 92.}, 0.5], DiskBox[{219., 109.}, 0.5], 
        DiskBox[{897., 92.}, 0.5], DiskBox[{29., 182.}, 0.5], 
        DiskBox[{856., 156.}, 0.5], DiskBox[{42., 81.}, 0.5], 
        DiskBox[{577., 71.}, 0.5], DiskBox[{373., 144.}, 0.5], 
        DiskBox[{39., 92.}, 0.5], DiskBox[{56., 133.}, 0.5], 
        DiskBox[{218., 111.}, 0.5], DiskBox[{905., 197.}, 0.5], 
        DiskBox[{849., 133.}, 0.5], DiskBox[{90., 161.}, 0.5], 
        DiskBox[{372., 154.}, 0.5], DiskBox[{454., 63.}, 0.5], 
        DiskBox[{50., 187.}, 0.5], DiskBox[{170., 139.}, 0.5], 
        DiskBox[{314., 71.}, 0.5], DiskBox[{1024., 105.}, 0.5], 
        DiskBox[{45., 145.}, 0.5], DiskBox[{81., 176.}, 0.5], 
        DiskBox[{944., 89.}, 0.5], DiskBox[{905., 79.}, 0.5], 
        DiskBox[{777., 107.}, 0.5], DiskBox[{470., 83.}, 0.5], 
        DiskBox[{501., 115.}, 0.5], DiskBox[{99., 166.}, 0.5], 
        DiskBox[{553., 135.}, 0.5], DiskBox[{893., 168.}, 0.5], 
        DiskBox[{901., 136.}, 0.5], DiskBox[{565., 76.}, 0.5], 
        DiskBox[{48., 196.}, 0.5], DiskBox[{165., 122.}, 0.5], 
        DiskBox[{112., 116.}, 0.5], DiskBox[{1018., 96.}, 0.5], 
        DiskBox[{1022., 145.}, 0.5], DiskBox[{235., 65.}, 0.5], 
        DiskBox[{72., 125.}, 0.5], DiskBox[{481., 105.}, 0.5], 
        DiskBox[{836., 97.}, 0.5], DiskBox[{996., 149.}, 0.5], 
        DiskBox[{85., 82.}, 0.5], DiskBox[{945., 131.}, 0.5], 
        DiskBox[{87., 148.}, 0.5], DiskBox[{150., 123.}, 0.5], 
        DiskBox[{874., 152.}, 0.5], DiskBox[{262., 161.}, 0.5], 
        DiskBox[{708., 79.}, 0.5], DiskBox[{719., 65.}, 0.5], 
        DiskBox[{324., 126.}, 0.5], DiskBox[{279., 137.}, 0.5], 
        DiskBox[{683., 154.}, 0.5], DiskBox[{844., 98.}, 0.5], 
        DiskBox[{767., 152.}, 0.5], DiskBox[{903., 206.}, 0.5], 
        DiskBox[{260., 70.}, 0.5], DiskBox[{58., 64.}, 0.5], 
        DiskBox[{213., 104.}, 0.5], DiskBox[{45., 178.}, 0.5], 
        DiskBox[{499., 151.}, 0.5], DiskBox[{850., 141.}, 0.5], 
        DiskBox[{157., 102.}, 0.5], DiskBox[{248., 120.}, 0.5], 
        DiskBox[{1006., 78.}, 0.5], DiskBox[{228., 61.}, 0.5], 
        DiskBox[{707., 75.}, 0.5], DiskBox[{220., 155.}, 0.5], 
        DiskBox[{910., 198.}, 0.5], DiskBox[{474., 106.}, 0.5], 
        DiskBox[{475., 106.}, 0.5], DiskBox[{469., 80.}, 0.5], 
        DiskBox[{966., 132.}, 0.5], DiskBox[{882., 121.}, 0.5], 
        DiskBox[{848., 163.}, 0.5], DiskBox[{250., 147.}, 0.5], 
        DiskBox[{726., 74.}, 0.5], DiskBox[{762., 69.}, 0.5], 
        DiskBox[{998., 154.}, 0.5], DiskBox[{152., 161.}, 0.5], 
        DiskBox[{604., 80.}, 0.5], DiskBox[{491., 120.}, 0.5], 
        DiskBox[{165., 110.}, 0.5], DiskBox[{510., 151.}, 0.5], 
        DiskBox[{331., 73.}, 0.5], DiskBox[{652., 132.}, 0.5], 
        DiskBox[{108., 86.}, 0.5], DiskBox[{786., 77.}, 0.5], 
        DiskBox[{209., 114.}, 0.5], DiskBox[{780., 148.}, 0.5], 
        DiskBox[{389., 81.}, 0.5], DiskBox[{556., 98.}, 0.5], 
        DiskBox[{998., 143.}, 0.5], DiskBox[{73., 125.}, 0.5], 
        DiskBox[{555., 84.}, 0.5], DiskBox[{784., 205.}, 0.5], 
        DiskBox[{164., 87.}, 0.5], DiskBox[{488., 127.}, 0.5], 
        DiskBox[{331., 120.}, 0.5], DiskBox[{94., 89.}, 0.5], 
        DiskBox[{1004., 80.}, 0.5], DiskBox[{962., 82.}, 0.5], 
        DiskBox[{503., 159.}, 0.5], DiskBox[{997., 78.}, 0.5], 
        DiskBox[{146., 75.}, 0.5], DiskBox[{836., 69.}, 0.5], 
        DiskBox[{238., 75.}, 0.5], DiskBox[{783., 136.}, 0.5], 
        DiskBox[{156., 158.}, 0.5], DiskBox[{530., 123.}, 0.5], 
        DiskBox[{224., 116.}, 0.5], DiskBox[{910., 68.}, 0.5], 
        DiskBox[{427., 133.}, 0.5], DiskBox[{147., 187.}, 0.5], 
        DiskBox[{835., 78.}, 0.5], DiskBox[{956., 121.}, 0.5], 
        DiskBox[{88., 126.}, 0.5], DiskBox[{776., 206.}, 0.5], 
        DiskBox[{561., 123.}, 0.5], DiskBox[{382., 116.}, 0.5], 
        DiskBox[{891., 174.}, 0.5], DiskBox[{498., 162.}, 0.5], 
        DiskBox[{273., 114.}, 0.5], DiskBox[{40., 95.}, 0.5], 
        DiskBox[{960., 77.}, 0.5], DiskBox[{907., 171.}, 0.5], 
        DiskBox[{20., 84.}, 0.5], DiskBox[{575., 155.}, 0.5], 
        DiskBox[{33., 137.}, 0.5], DiskBox[{388., 141.}, 0.5], 
        DiskBox[{505., 134.}, 0.5], DiskBox[{147., 72.}, 0.5], 
        DiskBox[{310., 83.}, 0.5], DiskBox[{679., 152.}, 0.5], 
        DiskBox[{486., 123.}, 0.5], DiskBox[{760., 196.}, 0.5], 
        DiskBox[{762., 145.}, 0.5], DiskBox[{661., 93.}, 0.5], 
        DiskBox[{494., 113.}, 0.5], DiskBox[{836., 96.}, 0.5], 
        DiskBox[{376., 146.}, 0.5], DiskBox[{787., 69.}, 0.5], 
        DiskBox[{253., 119.}, 0.5], DiskBox[{169., 67.}, 0.5], 
        DiskBox[{904., 169.}, 0.5], DiskBox[{145., 71.}, 0.5], 
        DiskBox[{112., 117.}, 0.5], DiskBox[{142., 93.}, 0.5], 
        DiskBox[{71., 127.}, 0.5], DiskBox[{558., 152.}, 0.5], 
        DiskBox[{143., 137.}, 0.5], DiskBox[{87., 120.}, 0.5], 
        DiskBox[{265., 152.}, 0.5], DiskBox[{554., 147.}, 0.5], 
        DiskBox[{71., 190.}, 0.5], DiskBox[{44., 114.}, 0.5], 
        DiskBox[{776., 97.}, 0.5], DiskBox[{488., 113.}, 0.5], 
        DiskBox[{832., 152.}, 0.5], DiskBox[{221., 113.}, 0.5], 
        DiskBox[{240., 112.}, 0.5], DiskBox[{212., 153.}, 0.5], 
        DiskBox[{897., 197.}, 0.5], DiskBox[{777., 194.}, 0.5], 
        DiskBox[{359., 153.}, 0.5], DiskBox[{97., 101.}, 0.5], 
        DiskBox[{554., 93.}, 0.5], DiskBox[{40., 81.}, 0.5], 
        DiskBox[{665., 66.}, 0.5], DiskBox[{38., 167.}, 0.5], 
        DiskBox[{34., 91.}, 0.5], DiskBox[{584., 78.}, 0.5], 
        DiskBox[{542., 96.}, 0.5], DiskBox[{497., 162.}, 0.5], 
        DiskBox[{877., 68.}, 0.5], DiskBox[{478., 124.}, 0.5], 
        DiskBox[{907., 175.}, 0.5], DiskBox[{90., 152.}, 0.5], 
        DiskBox[{788., 83.}, 0.5], DiskBox[{478., 63.}, 0.5], 
        DiskBox[{471., 86.}, 0.5], DiskBox[{207., 86.}, 0.5], 
        DiskBox[{899., 107.}, 0.5], DiskBox[{707., 74.}, 0.5], 
        DiskBox[{93., 87.}, 0.5], DiskBox[{647., 120.}, 0.5], 
        DiskBox[{91., 88.}, 0.5], DiskBox[{542., 109.}, 0.5], 
        DiskBox[{57., 183.}, 0.5], DiskBox[{779., 74.}, 0.5], 
        DiskBox[{170., 111.}, 0.5], DiskBox[{154., 86.}, 0.5], 
        DiskBox[{892., 72.}, 0.5], DiskBox[{534., 88.}, 0.5], 
        DiskBox[{989., 70.}, 0.5], DiskBox[{142., 96.}, 0.5], 
        DiskBox[{654., 120.}, 0.5], DiskBox[{566., 160.}, 0.5], 
        DiskBox[{787., 136.}, 0.5], DiskBox[{969., 61.}, 0.5], 
        DiskBox[{551., 118.}, 0.5], DiskBox[{325., 111.}, 0.5], 
        DiskBox[{390., 82.}, 0.5], DiskBox[{791., 140.}, 0.5], 
        DiskBox[{311., 135.}, 0.5], DiskBox[{43., 112.}, 0.5], 
        DiskBox[{99., 171.}, 0.5], DiskBox[{765., 129.}, 0.5], 
        DiskBox[{260., 120.}, 0.5], DiskBox[{551., 67.}, 0.5], 
        DiskBox[{266., 149.}, 0.5], DiskBox[{967., 150.}, 0.5], 
        DiskBox[{852., 141.}, 0.5], DiskBox[{790., 185.}, 0.5], 
        DiskBox[{885., 120.}, 0.5], DiskBox[{32., 119.}, 0.5], 
        DiskBox[{105., 163.}, 0.5], DiskBox[{162., 134.}, 0.5], 
        DiskBox[{985., 81.}, 0.5], DiskBox[{148., 74.}, 0.5], 
        DiskBox[{973., 65.}, 0.5], DiskBox[{1024., 90.}, 0.5], 
        DiskBox[{359., 158.}, 0.5], DiskBox[{320., 121.}, 0.5], 
        DiskBox[{369., 80.}, 0.5], DiskBox[{97., 167.}, 0.5], 
        DiskBox[{435., 145.}, 0.5], DiskBox[{782., 112.}, 0.5], 
        DiskBox[{376., 145.}, 0.5], DiskBox[{544., 116.}, 0.5], 
        DiskBox[{770., 110.}, 0.5], DiskBox[{1022., 112.}, 0.5], 
        DiskBox[{49., 71.}, 0.5], DiskBox[{48., 65.}, 0.5], 
        DiskBox[{320., 84.}, 0.5], DiskBox[{461., 104.}, 0.5], 
        DiskBox[{25., 147.}, 0.5], DiskBox[{491., 90.}, 0.5], 
        DiskBox[{39., 83.}, 0.5], DiskBox[{265., 117.}, 0.5], 
        DiskBox[{508., 137.}, 0.5], DiskBox[{591., 151.}, 0.5], 
        DiskBox[{934., 110.}, 0.5], DiskBox[{393., 94.}, 0.5], 
        DiskBox[{549., 98.}, 0.5], DiskBox[{105., 109.}, 0.5], 
        DiskBox[{658., 117.}, 0.5], DiskBox[{62., 67.}, 0.5], 
        DiskBox[{887., 185.}, 0.5], DiskBox[{889., 178.}, 0.5], 
        DiskBox[{651., 84.}, 0.5], DiskBox[{606., 118.}, 0.5], 
        DiskBox[{222., 136.}, 0.5], DiskBox[{246., 76.}, 0.5], 
        DiskBox[{1001., 158.}, 0.5], DiskBox[{1008., 120.}, 0.5], 
        DiskBox[{325., 90.}, 0.5], DiskBox[{379., 144.}, 0.5], 
        DiskBox[{262., 112.}, 0.5], DiskBox[{563., 105.}, 0.5], 
        DiskBox[{580., 123.}, 0.5], DiskBox[{500., 152.}, 0.5], 
        DiskBox[{767., 101.}, 0.5], DiskBox[{499., 107.}, 0.5], 
        DiskBox[{391., 120.}, 0.5], DiskBox[{166., 71.}, 0.5], 
        DiskBox[{734., 97.}, 0.5], DiskBox[{647., 101.}, 0.5], 
        DiskBox[{884., 105.}, 0.5], DiskBox[{849., 60.}, 0.5], 
        DiskBox[{42., 79.}, 0.5], DiskBox[{966., 141.}, 0.5], 
        DiskBox[{893., 71.}, 0.5], DiskBox[{659., 96.}, 0.5], 
        DiskBox[{478., 104.}, 0.5], DiskBox[{22., 69.}, 0.5], 
        DiskBox[{835., 132.}, 0.5], DiskBox[{480., 91.}, 0.5], 
        DiskBox[{390., 105.}, 0.5], DiskBox[{234., 121.}, 0.5], 
        DiskBox[{362., 163.}, 0.5], DiskBox[{872., 144.}, 0.5], 
        DiskBox[{574., 114.}, 0.5], DiskBox[{891., 94.}, 0.5], 
        DiskBox[{729., 107.}, 0.5], DiskBox[{896., 197.}, 0.5], 
        DiskBox[{311., 113.}, 0.5], DiskBox[{728., 130.}, 0.5], 
        DiskBox[{77., 172.}, 0.5], DiskBox[{857., 64.}, 0.5], 
        DiskBox[{152., 93.}, 0.5], DiskBox[{20., 117.}, 0.5], 
        DiskBox[{882., 93.}, 0.5], DiskBox[{385., 104.}, 0.5], 
        DiskBox[{382., 107.}, 0.5], DiskBox[{148., 89.}, 0.5], 
        DiskBox[{31., 160.}, 0.5], DiskBox[{904., 92.}, 0.5], 
        DiskBox[{370., 159.}, 0.5], DiskBox[{20., 88.}, 0.5], 
        DiskBox[{157., 159.}, 0.5], DiskBox[{901., 138.}, 0.5], 
        DiskBox[{646., 141.}, 0.5], DiskBox[{229., 153.}, 0.5], 
        DiskBox[{214., 97.}, 0.5], DiskBox[{1022., 118.}, 0.5], 
        DiskBox[{46., 191.}, 0.5], DiskBox[{670., 101.}, 0.5], 
        DiskBox[{542., 111.}, 0.5], DiskBox[{904., 76.}, 0.5], 
        DiskBox[{42., 144.}, 0.5], DiskBox[{774., 78.}, 0.5], 
        DiskBox[{1031., 110.}, 0.5], DiskBox[{685., 148.}, 0.5], 
        DiskBox[{226., 67.}, 0.5], DiskBox[{764., 64.}, 0.5], 
        DiskBox[{53., 189.}, 0.5], DiskBox[{253., 71.}, 0.5], 
        DiskBox[{769., 98.}, 0.5], DiskBox[{498., 117.}, 0.5], 
        DiskBox[{1020., 119.}, 0.5], DiskBox[{98., 114.}, 0.5], 
        DiskBox[{963., 68.}, 0.5], DiskBox[{256., 152.}, 0.5], 
        DiskBox[{958., 105.}, 0.5], DiskBox[{368., 163.}, 0.5], 
        DiskBox[{1013., 133.}, 0.5], DiskBox[{97., 83.}, 0.5], 
        DiskBox[{777., 68.}, 0.5], DiskBox[{18., 89.}, 0.5], 
        DiskBox[{595., 151.}, 0.5], DiskBox[{568., 86.}, 0.5], 
        DiskBox[{103., 170.}, 0.5], DiskBox[{356., 160.}, 0.5], 
        DiskBox[{653., 84.}, 0.5], DiskBox[{105., 119.}, 0.5], 
        DiskBox[{32., 163.}, 0.5], DiskBox[{843., 160.}, 0.5], 
        DiskBox[{278., 113.}, 0.5], DiskBox[{894., 131.}, 0.5], 
        DiskBox[{938., 111.}, 0.5], DiskBox[{554., 124.}, 0.5], 
        DiskBox[{98., 113.}, 0.5], DiskBox[{279., 138.}, 0.5], 
        DiskBox[{66., 140.}, 0.5], DiskBox[{790., 188.}, 0.5], 
        DiskBox[{476., 113.}, 0.5], DiskBox[{613., 135.}, 0.5], 
        DiskBox[{373., 85.}, 0.5], DiskBox[{141., 188.}, 0.5], 
        DiskBox[{1013., 97.}, 0.5], DiskBox[{397., 71.}, 0.5], 
        DiskBox[{940., 121.}, 0.5], DiskBox[{663., 119.}, 0.5], 
        DiskBox[{395., 62.}, 0.5], DiskBox[{958., 127.}, 0.5], 
        DiskBox[{604., 120.}, 0.5], DiskBox[{49., 191.}, 0.5], 
        DiskBox[{41., 115.}, 0.5], DiskBox[{667., 122.}, 0.5], 
        DiskBox[{223., 121.}, 0.5], DiskBox[{763., 163.}, 0.5], 
        DiskBox[{874., 74.}, 0.5], DiskBox[{538., 126.}, 0.5], 
        DiskBox[{655., 109.}, 0.5], DiskBox[{316., 108.}, 0.5], 
        DiskBox[{781., 70.}, 0.5], DiskBox[{985., 160.}, 0.5], 
        DiskBox[{18., 69.}, 0.5], DiskBox[{219., 115.}, 0.5], 
        DiskBox[{903., 133.}, 0.5], DiskBox[{1023., 106.}, 0.5], 
        DiskBox[{535., 120.}, 0.5], DiskBox[{729., 69.}, 0.5], 
        DiskBox[{546., 87.}, 0.5], DiskBox[{970., 144.}, 0.5], 
        DiskBox[{311., 79.}, 0.5], DiskBox[{114., 96.}, 0.5], 
        DiskBox[{582., 63.}, 0.5], DiskBox[{449., 74.}, 0.5], 
        DiskBox[{379., 162.}, 0.5], DiskBox[{152., 129.}, 0.5], 
        DiskBox[{844., 65.}, 0.5], DiskBox[{214., 99.}, 0.5], 
        DiskBox[{1023., 139.}, 0.5], DiskBox[{722., 121.}, 0.5], 
        DiskBox[{109., 90.}, 0.5], DiskBox[{648., 95.}, 0.5], 
        DiskBox[{889., 143.}, 0.5], DiskBox[{87., 167.}, 0.5], 
        DiskBox[{78., 144.}, 0.5], DiskBox[{61., 176.}, 0.5], 
        DiskBox[{893., 192.}, 0.5], DiskBox[{713., 83.}, 0.5], 
        DiskBox[{576., 107.}, 0.5], DiskBox[{89., 148.}, 0.5], 
        DiskBox[{985., 73.}, 0.5], DiskBox[{319., 85.}, 0.5], 
        DiskBox[{468., 73.}, 0.5], DiskBox[{563., 139.}, 0.5], 
        DiskBox[{671., 143.}, 0.5], DiskBox[{198., 129.}, 0.5], 
        DiskBox[{872., 84.}, 0.5], DiskBox[{258., 132.}, 0.5], 
        DiskBox[{236., 78.}, 0.5], DiskBox[{594., 69.}, 0.5], 
        DiskBox[{549., 157.}, 0.5], DiskBox[{423., 160.}, 0.5], 
        DiskBox[{558., 98.}, 0.5], DiskBox[{76., 85.}, 0.5], 
        DiskBox[{1032., 115.}, 0.5], DiskBox[{147., 158.}, 0.5], 
        DiskBox[{34., 66.}, 0.5], DiskBox[{592., 147.}, 0.5], 
        DiskBox[{34., 194.}, 0.5], DiskBox[{1015., 72.}, 0.5], 
        DiskBox[{488., 89.}, 0.5], DiskBox[{382., 79.}, 0.5], 
        DiskBox[{828., 126.}, 0.5], DiskBox[{1010., 109.}, 0.5], 
        DiskBox[{963., 145.}, 0.5], DiskBox[{647., 79.}, 0.5], 
        DiskBox[{313., 99.}, 0.5], DiskBox[{987., 80.}, 0.5], 
        DiskBox[{1017., 101.}, 0.5], DiskBox[{563., 140.}, 0.5], 
        DiskBox[{946., 81.}, 0.5], DiskBox[{155., 191.}, 0.5], 
        DiskBox[{882., 172.}, 0.5], DiskBox[{33., 68.}, 0.5], 
        DiskBox[{607., 82.}, 0.5], DiskBox[{314., 78.}, 0.5], 
        DiskBox[{83., 147.}, 0.5], DiskBox[{944., 118.}, 0.5], 
        DiskBox[{727., 135.}, 0.5], DiskBox[{654., 70.}, 0.5], 
        DiskBox[{649., 158.}, 0.5], DiskBox[{390., 98.}, 0.5], 
        DiskBox[{72., 194.}, 0.5], DiskBox[{849., 77.}, 0.5], 
        DiskBox[{257., 136.}, 0.5], DiskBox[{49., 82.}, 0.5], 
        DiskBox[{234., 106.}, 0.5], DiskBox[{246., 159.}, 0.5], 
        DiskBox[{552., 127.}, 0.5], DiskBox[{263., 117.}, 0.5], 
        DiskBox[{20., 98.}, 0.5], DiskBox[{558., 138.}, 0.5], 
        DiskBox[{620., 121.}, 0.5], DiskBox[{58., 120.}, 0.5], 
        DiskBox[{165., 190.}, 0.5], DiskBox[{773., 99.}, 0.5], 
        DiskBox[{24., 154.}, 0.5], DiskBox[{967., 160.}, 0.5], 
        DiskBox[{309., 62.}, 0.5], DiskBox[{156., 146.}, 0.5], 
        DiskBox[{109., 150.}, 0.5], DiskBox[{95., 149.}, 0.5], 
        DiskBox[{705., 146.}, 0.5], DiskBox[{275., 127.}, 0.5], 
        DiskBox[{765., 128.}, 0.5], DiskBox[{110., 163.}, 0.5], 
        DiskBox[{576., 68.}, 0.5], DiskBox[{539., 114.}, 0.5], 
        DiskBox[{871., 162.}, 0.5], DiskBox[{213., 74.}, 0.5], 
        DiskBox[{32., 134.}, 0.5], DiskBox[{542., 140.}, 0.5], 
        DiskBox[{780., 134.}, 0.5], DiskBox[{27., 79.}, 0.5], 
        DiskBox[{164., 163.}, 0.5], DiskBox[{395., 108.}, 0.5], 
        DiskBox[{108., 75.}, 0.5], DiskBox[{790., 203.}, 0.5], 
        DiskBox[{648., 84.}, 0.5], DiskBox[{93., 167.}, 0.5], 
        DiskBox[{265., 109.}, 0.5], DiskBox[{96., 102.}, 0.5], 
        DiskBox[{329., 104.}, 0.5], DiskBox[{41., 172.}, 0.5], 
        DiskBox[{646., 157.}, 0.5], DiskBox[{202., 80.}, 0.5], 
        DiskBox[{386., 107.}, 0.5], DiskBox[{661., 83.}, 0.5], 
        DiskBox[{942., 95.}, 0.5], DiskBox[{692., 146.}, 0.5], 
        DiskBox[{329., 153.}, 0.5], DiskBox[{100., 166.}, 0.5], 
        DiskBox[{763., 131.}, 0.5], DiskBox[{703., 143.}, 0.5], 
        DiskBox[{788., 156.}, 0.5], DiskBox[{831., 152.}, 0.5], 
        DiskBox[{963., 69.}, 0.5], DiskBox[{144., 154.}, 0.5], 
        DiskBox[{225., 152.}, 0.5], DiskBox[{49., 183.}, 0.5], 
        DiskBox[{367., 142.}, 0.5], DiskBox[{886., 90.}, 0.5], 
        DiskBox[{110., 164.}, 0.5], DiskBox[{480., 131.}, 0.5], 
        DiskBox[{838., 151.}, 0.5], DiskBox[{835., 128.}, 0.5], 
        DiskBox[{55., 141.}, 0.5], DiskBox[{947., 95.}, 0.5], 
        DiskBox[{710., 136.}, 0.5], DiskBox[{771., 206.}, 0.5], 
        DiskBox[{655., 148.}, 0.5], DiskBox[{954., 115.}, 0.5], 
        DiskBox[{25., 122.}, 0.5], DiskBox[{980., 68.}, 0.5], 
        DiskBox[{68., 187.}, 0.5], DiskBox[{452., 76.}, 0.5], 
        DiskBox[{970., 87.}, 0.5], DiskBox[{447., 83.}, 0.5], 
        DiskBox[{216., 133.}, 0.5], DiskBox[{907., 119.}, 0.5], 
        DiskBox[{387., 89.}, 0.5], DiskBox[{164., 105.}, 0.5], 
        DiskBox[{241., 73.}, 0.5], DiskBox[{709., 64.}, 0.5], 
        DiskBox[{377., 138.}, 0.5], DiskBox[{67., 131.}, 0.5], 
        DiskBox[{855., 147.}, 0.5], DiskBox[{145., 99.}, 0.5], 
        DiskBox[{42., 104.}, 0.5], DiskBox[{713., 98.}, 0.5], 
        DiskBox[{265., 69.}, 0.5], DiskBox[{660., 149.}, 0.5], 
        DiskBox[{819., 113.}, 0.5], DiskBox[{645., 162.}, 0.5], 
        DiskBox[{843., 151.}, 0.5], DiskBox[{720., 140.}, 0.5], 
        DiskBox[{317., 81.}, 0.5], DiskBox[{317., 117.}, 0.5], 
        DiskBox[{536., 118.}, 0.5], DiskBox[{37., 137.}, 0.5], 
        DiskBox[{242., 153.}, 0.5], DiskBox[{890., 110.}, 0.5], 
        DiskBox[{839., 129.}, 0.5], DiskBox[{248., 149.}, 0.5], 
        DiskBox[{220., 116.}, 0.5], DiskBox[{103., 84.}, 0.5], 
        DiskBox[{198., 93.}, 0.5], DiskBox[{156., 187.}, 0.5], 
        DiskBox[{778., 159.}, 0.5], DiskBox[{447., 69.}, 0.5], 
        DiskBox[{827., 113.}, 0.5], DiskBox[{144., 64.}, 0.5], 
        DiskBox[{19., 164.}, 0.5], DiskBox[{535., 113.}, 0.5], 
        DiskBox[{671., 123.}, 0.5], DiskBox[{1028., 90.}, 0.5], 
        DiskBox[{54., 66.}, 0.5], DiskBox[{150., 203.}, 0.5], 
        DiskBox[{465., 83.}, 0.5], DiskBox[{79., 129.}, 0.5], 
        DiskBox[{213., 86.}, 0.5], DiskBox[{1029., 107.}, 0.5], 
        DiskBox[{438., 150.}, 0.5], DiskBox[{967., 90.}, 0.5], 
        DiskBox[{55., 127.}, 0.5], DiskBox[{1010., 152.}, 0.5], 
        DiskBox[{161., 136.}, 0.5], DiskBox[{513., 162.}, 0.5], 
        DiskBox[{379., 132.}, 0.5], DiskBox[{716., 76.}, 0.5], 
        DiskBox[{557., 100.}, 0.5], DiskBox[{966., 82.}, 0.5], 
        DiskBox[{250., 152.}, 0.5], DiskBox[{361., 145.}, 0.5], 
        DiskBox[{159., 155.}, 0.5], DiskBox[{268., 142.}, 0.5], 
        DiskBox[{310., 66.}, 0.5], DiskBox[{853., 81.}, 0.5], 
        DiskBox[{762., 152.}, 0.5], DiskBox[{360., 145.}, 0.5], 
        DiskBox[{82., 74.}, 0.5], DiskBox[{326., 123.}, 0.5], 
        DiskBox[{709., 100.}, 0.5], DiskBox[{897., 159.}, 0.5], 
        DiskBox[{99., 139.}, 0.5], DiskBox[{784., 124.}, 0.5], 
        DiskBox[{854., 165.}, 0.5], DiskBox[{261., 78.}, 0.5], 
        DiskBox[{994., 156.}, 0.5], DiskBox[{570., 148.}, 0.5], 
        DiskBox[{770., 90.}, 0.5], DiskBox[{439., 130.}, 0.5], 
        DiskBox[{651., 115.}, 0.5], DiskBox[{29., 165.}, 0.5], 
        DiskBox[{718., 76.}, 0.5], DiskBox[{19., 90.}, 0.5], 
        DiskBox[{86., 122.}, 0.5], DiskBox[{21., 132.}, 0.5], 
        DiskBox[{583., 119.}, 0.5], DiskBox[{54., 127.}, 0.5], 
        DiskBox[{202., 86.}, 0.5], DiskBox[{335., 94.}, 0.5], 
        DiskBox[{653., 155.}, 0.5], DiskBox[{729., 120.}, 0.5], 
        DiskBox[{956., 149.}, 0.5], DiskBox[{1021., 113.}, 0.5], 
        DiskBox[{455., 114.}, 0.5], DiskBox[{243., 155.}, 0.5], 
        DiskBox[{770., 128.}, 0.5], DiskBox[{264., 126.}, 0.5], 
        DiskBox[{667., 138.}, 0.5], DiskBox[{893., 161.}, 0.5], 
        DiskBox[{92., 96.}, 0.5], DiskBox[{1004., 133.}, 0.5], 
        DiskBox[{233., 70.}, 0.5], DiskBox[{890., 87.}, 0.5], 
        DiskBox[{543., 103.}, 0.5], DiskBox[{206., 93.}, 0.5], 
        DiskBox[{834., 106.}, 0.5], DiskBox[{719., 92.}, 0.5], 
        DiskBox[{597., 123.}, 0.5], DiskBox[{259., 113.}, 0.5], 
        DiskBox[{238., 144.}, 0.5], DiskBox[{437., 156.}, 0.5], 
        DiskBox[{933., 102.}, 0.5], DiskBox[{1002., 65.}, 0.5], 
        DiskBox[{1016., 144.}, 0.5], DiskBox[{457., 72.}, 0.5], 
        DiskBox[{149., 144.}, 0.5], DiskBox[{351., 141.}, 0.5], 
        DiskBox[{656., 97.}, 0.5], DiskBox[{579., 155.}, 0.5], 
        DiskBox[{898., 136.}, 0.5], DiskBox[{142., 64.}, 0.5], 
        DiskBox[{680., 153.}, 0.5], DiskBox[{946., 106.}, 0.5], 
        DiskBox[{994., 143.}, 0.5], DiskBox[{543., 127.}, 0.5], 
        DiskBox[{80., 142.}, 0.5], DiskBox[{102., 107.}, 0.5], 
        DiskBox[{71., 70.}, 0.5], DiskBox[{867., 165.}, 0.5], 
        DiskBox[{899., 140.}, 0.5], DiskBox[{982., 150.}, 0.5], 
        DiskBox[{18., 96.}, 0.5], DiskBox[{707., 101.}, 0.5], 
        DiskBox[{724., 100.}, 0.5], DiskBox[{148., 132.}, 0.5], 
        DiskBox[{722., 66.}, 0.5], DiskBox[{455., 87.}, 0.5], 
        DiskBox[{210., 145.}, 0.5], DiskBox[{102., 156.}, 0.5], 
        DiskBox[{729., 95.}, 0.5], DiskBox[{843., 68.}, 0.5], 
        DiskBox[{267., 119.}, 0.5], DiskBox[{327., 105.}, 0.5], 
        DiskBox[{141., 82.}, 0.5], DiskBox[{992., 64.}, 0.5], 
        DiskBox[{956., 70.}, 0.5], DiskBox[{836., 157.}, 0.5], 
        DiskBox[{720., 88.}, 0.5], DiskBox[{1007., 107.}, 0.5], 
        DiskBox[{938., 97.}, 0.5], DiskBox[{646., 134.}, 0.5], 
        DiskBox[{777., 144.}, 0.5], DiskBox[{458., 111.}, 0.5], 
        DiskBox[{494., 116.}, 0.5], DiskBox[{952., 110.}, 0.5], 
        DiskBox[{96., 120.}, 0.5], DiskBox[{704., 136.}, 0.5], 
        DiskBox[{164., 69.}, 0.5], DiskBox[{483., 121.}, 0.5], 
        DiskBox[{394., 144.}, 0.5], DiskBox[{1012., 151.}, 0.5], 
        DiskBox[{729., 67.}, 0.5], DiskBox[{431., 155.}, 0.5], 
        DiskBox[{883., 161.}, 0.5], DiskBox[{104., 71.}, 0.5], 
        DiskBox[{264., 129.}, 0.5], DiskBox[{972., 147.}, 0.5], 
        DiskBox[{906., 123.}, 0.5], DiskBox[{870., 70.}, 0.5], 
        DiskBox[{1005., 106.}, 0.5], DiskBox[{656., 78.}, 0.5], 
        DiskBox[{847., 144.}, 0.5], DiskBox[{484., 88.}, 0.5], 
        DiskBox[{952., 134.}, 0.5], DiskBox[{67., 181.}, 0.5], 
        DiskBox[{833., 93.}, 0.5], DiskBox[{93., 124.}, 0.5], 
        DiskBox[{896., 115.}, 0.5], DiskBox[{1004., 159.}, 0.5], 
        DiskBox[{906., 191.}, 0.5], DiskBox[{597., 111.}, 0.5], 
        DiskBox[{56., 73.}, 0.5], DiskBox[{81., 129.}, 0.5], 
        DiskBox[{860., 66.}, 0.5], DiskBox[{319., 156.}, 0.5], 
        DiskBox[{479., 109.}, 0.5], DiskBox[{40., 83.}, 0.5], 
        DiskBox[{375., 121.}, 0.5], DiskBox[{772., 67.}, 0.5], 
        DiskBox[{446., 83.}, 0.5]}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->800]], "Output",
 CellChangeTimes->{3.968324190123514*^9},
 CellLabel->"Out[2]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsvWd4XNXV9z2PXECyiiUZY9Mh9Gp6J6aE0OEmjXTSG0kI4U64wZZHpoSQ
BAKhQ+id0HvvlqbI1pxzRm64995lWZbsd/3WWntmILmu9/n0fLp1XbLk0cw5
++y91n/9V9lrn/uDy3/+k1//4PJf/OgHu335sh9c+vNf/Oj3u53+28vkpQH/
J5UafHUq9X9G7ZYaKL9vTaX+7//5cyr1v2/63zf975v+903/D9/0Zf3zwMHJ
uNRZxXGpU+TncfG41KBR8ktqwJHx2NToyeNSX5af9v6j/n+ud6r+uXrge+NS
B3aNS03KHla/rm148z3tOzTPjMalcsV0KhenU5PillSqaqK8kqrplH875XZJ
1JKaIa9vyJ9Yu6Ztu2HPte3VODZJp07pHJcaIX/X6x/6H+//gL5YUyvv2lO+
j5E735cbVb94QnPz79tGNJ8T22v8rSbvV7rdPjN00rjUaTKCdGFcanruiLre
9r0at7bv2NyTH127WUa0Ub5XyPeARQUZct1SeduqKJ1aL5fskY/1575Yu6Vt
x+bN+ZNrV8mDTZHX5ueOrbu1bdiwbWeNS1VtHedjPPg/jvxufbGO+efrxOLY
1A9lHf7YlU79OWlJ/V1ev0Pm5G653eb2nZq2ymXXTBjRnI9ZnjT/Dv6D/Hux
DOssufVR8v7dJlc85Y162Z158u/LXN4j1/xY3rdQnoin3NK2Q3OvfH6TPBJP
ukrutUweoyjfb8n7s7ou41Kz5XuJ/G2Bvsfe2yuvbZDXFst7+uU6q2Vsz8q1
/hC3pnbheR7Xew8YLuu3x1QbV6pe/x2wU8GeV5/7dxUzc4n+OohVeTqzW+M/
5JrHi/Cd3dVaOWt76LuG85Rc6YvR2NTXZTS/khFfI1e8W2ZwYu7oulcy+w79
REY6S74/lb/P9CdZJKNenzuhdkNmv6Fb2nZu6u04v3qNvOc+Gf0l8vdtyhP7
HfnvGfIAR0R2K9ZUh3CtDmEPhnCC3PJa+fhzclmEeaZ8brZ8b5SJ2ipitCV/
Su0GGdpU+XtGvifLN3+fK5+bKq8zae/L9ysFW+gfdo5JveOL0CYLNkvewySv
kyH35L9Yy1AnyvtukNculJ/108alHjZpvqptRNMikfp3cqNrZ8pt3ort8o/K
R1j7W+R35GqgPmHD1fLyTfJ9r4z6SXn7h3LFpbnj6pj2XxRbUi/KnW+Sbybl
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
nLM+66iaVPI2gAD0bWXaUf1ewAlhAZiMWjq/B7DB/E1T6ZLMzYXSL3igUj1/
pGdXSet5lnt0lC/oioGLY2ddY6DA9qVnTtRgWb206MrmiZcJLDxtn+M9r2tl
oYIVh2exZdqp01ysUj/B7eWTmz1CbMPi82jMPxNsExGwd2BszzXW1/OjxHkt
IgIwbnVlWeyxus9o3l4+w1ZL1Q3CW9aNNp48EHjmfvvSPEKhDjFRkv8T9aA9
q+w0v0cpH/xZ6flQA90cm/Ojn66f/2atBonWNCJEvhHY3GWGw7OV84SbmC0E
CxA1AKezpBhmnqIkBL8GXpMRhSV4mZril2n3HA1heHL6cGmjmJ/4NdNs/qO+
ydWd0VtFYsQ8Je8xreIlrURenn48Em2QLsGB4bSm1XoiJady6SSbx9nWdcSI
PeJM3yoYTINNJfOOZruu1LeJIeG2gi91NvL7dPRIMsdDIosk0sNJMZRv21IE
tdmi8mIv03UHtW7suaz+v2c5BzXHQSKLDLvB2tRNfLvM/MryScMfNCoPL1kR
jKKpSB2BGnxliMUONalPU5lug4CFMfynPnaPi/kXO44htQPMeBa+tqgj7h0u
Org7l98jXiLTTusOf84FkMkhi3OL3pzABj19Ws1ZmMClCuk3CY8QqMD+gIee
V2MHNlJo07Dp2vyt+HnextLYmf+b01+YelstF02GNfpGLPtaVyye5fQXKr1M
ZeC3yvT45ijnFwRRcDt4Q++fd+h2YVEq2S+WMgaki7XYNWP0Bum+lnh3I+Z5
Z+fYNqrV4fHImuFtacZldhvPzN46zoVG7Adlm1AY3Jp7nGNISOEVHtarLBcS
5JUZybxTjjxgG5iBI6eCMDU3nbTtINCxLfSjMydbIb9berIw9WoC5o3r5Ro5
xpjy4pWoElwvnPKSGqABZYTTHi5OiC1/JDRi5HqPMEfU91H3nfL9tO5Nyh0o
uGF+gGoVM3Ckb5THN2O9V6Yd1QH9dcaAf4AtGIQTkcSLMyB7/nBD9ylGYfPn
/ql103JQ/5n+oosoiuc/TnzyCdN4c1qMEXu0OAFMsVDRIqo5WWAOaAkmOX7m
VHMkbwubv63/XtPn0Qy4AjouupOJIXAGL2YFV1PQ7bLTByf6VPnYlu2ZN1/x
b3KA5KS5LSumJW5l39LNkh22BYdaOUZZllk3GMOhH/NAsZVS0Tu9F5lOrcp1
62597euJZ3fRPUzAkTMmVVfAhy99Uj97QmVSxIqfU2WTDOId+aX1ysb/VUgM
WUReIgv1ZSGzcVLL59KamNILemOjMTUiN+Sc8TJ8UarmKnvTfu/ZtvaaxHtl
mOxbq7ge9GarpHLosSmHP7+aPmokC2VMfod53uVvI0T+YYZhfg5lNnaNanum
fFzL6n5nAyboXKvIEEF9WGoOhKfnBvXE1+KvqBTPlHMIolUf6gIVtlejwj1C
ekgLfh3jjelhiBb9tUqGR4at+Ehgz1vl8cPLne9pmTvbTWhmGcYOy0csVXCT
pD409pQabl6VeSI0kyXHsNviU/5xoHxYtNcGUOYoFnWfYahuRc85TQxPQZNI
ARv/QZRI0xhCHLg/FvrOlkkK8GzX13t+A81hC3ouarhYnoIi/YtSAktpuNVs
wmpGGES09CtJHzACJWFju1M3amMnyTdfEDvOAu6Kj4rwjEZPn3qxEjgwV5Ah
TCKKSjz5WuJ9CpZyKJ/RvKV8WtM7gkl36PtvrhSivFecOOrRrlEjZ5eOHU4X
xNq0Qyx6HVZpwAr1ZI4Glpj3FRO3Tm1pGomaKZZksm9KPYRXC2RMANeOhQxR
0wRGDJz1Zu+FDatyWe/s/uAw+sI2dI5ppWrLvXOgwXHDbitkCXft21rGo/XM
NOK50XTSRCSeOSPvd/RmBd5skZISVqTOY7qZOaSyzWzyxhgogjIaFKkLwR5i
Hjn/c+YCkAdQOySjQEMo2W0zZe6WNmpBk5OD+gCw+YsZvuiSxWiWErCWzGau
f1ceI7KnzPoQ03YraeEJJ8vW2t40odCIlj06Hg3SipJM7aL6y2Y7UNyVYw1n
/m3XzhenT0L5CTkXqSTzhHLKWzIfMb6vdFhrhIanJQVzIT+3uud9jUuDMERS
1q84KbrVqguOcqPGz9qwmYZ35ktWwAX3Jd6WwutSRqIrjmYjpBODxvuhZQyN
EPfhcenOYbWvh4ZfZAjdyD3zr3qp4u3EK3udSIAJ7F25AVgjDAF49Ed0j4Rn
2yIbh/39Q35BeEGgju2WTjwnva78PoNu7JC2KkHmnCII1y159AqfeBQePzZn
iuEJDMcbNM6Xz21c2vO+JgMASbHQEoK0pToOcAoTnqgOQHdOf0d1cOWVJNIu
HVZEp0OOrjnyoz2pL+dbr/zKXIWtCCsZuF/JLUY3EdKTyMjhF3YKnkLmWVtJ
4r18t7anymYqmbJWtvl7+bOQc+U5SM39UqErdtqMoMeGY+kAotMdYPOW8rFA
V3wE2I/KF9TYoIAAVG9mBZPXnq4D2/L/tdr25fy8CKPZV4UonqjBZNmXEREb
fkdEUc6i782Nd8kkPaREmeG8pN1mlujJ+0exYRB88vdukTnjv6kYLdY5klEh
dM6EaMAJraqSAqXBlvhAzuiT6VTrVNkmB4IhgnyCe4puE+LQhTKp3C1ZIu4d
ggYjtsudBpCHTmogOxkkwhLOnZ9fndvKl7sOGeGxYbVwiFVIyqc2G/FLLsJW
b04K5qVlgtWrlEGh7AE+xf9hO8kcdkw7bASvSzZgndSIv0vDNWEvGcR/tA4Z
aDFHIO9mEk6yXGfmGszfGSif0jxQPrWJWjWljnb1oVD2YVU7/Bh7ymea716S
OkvKJvk9vA4WZXePtzEmPRc0GLfqPzkqOFgFNNTm9mSvOa+9I0GHbucAp25P
PKvyeVkg1B9LecDca+yaQJX08n0ncUYqX6DuPnqlYti1qY9yckab5N/JuID1
zcrm0ZPnDs8ys7BJoHtA50rUyPDLrfl1Aql+mENFmA5uk1MI7F8bDQLvgK/T
xGNMarUzdb5Bcpt8r/HjJr4g4vT8LpxjY78vCxr0KhH2C6FaUGzQDHGspEDX
iz/IXFrqCbgt1QbbetuaoUFC0pEI8ryKk2yilFasc79yKKdtjaWKTZen3hoP
6OYfbgcSrPmSOFKX+LDNqXOj35K/AQYSw8eCrUtmubG0HbSpdz9Qpv+lyqkB
6O19FkVKYMiReVD1fbk2po+soTuNNawHPwffY3lCM7mS3aXjW2wst3xiSy0E
Nt/e5YvuIyq2FtzUN6ZtlVmFQQ2PbIMF2VW2ivXx/OuuntVh2OJFqT0nNciX
49GLsLh0/PC3Syc1z0mdioV2KrU6RpsjQ2c4n5uyYoEogYiiP3JPKDhAl7RA
7Ahl6TidB/fJzxANgsfXSVgsnVrxmmhn6kc5L3UAainNzDutXku9yRZWlm1d
Y9rm9JzZvEwBLldmjHSJKwYFDQCp9U9n3jwT3SDOLtkhcnFPthNJKvq7Ri5x
rfAX6TTM4dOSNNw1cPIzCkhJNCPcoIgYzABG1kR/D+jQLpjpH/NG6h4T7wrO
CjotckrG+5L/c8qsYrq7Gv3JrKGa5OvjYsg6cG8kVEENW+X9N9E/KzFZpIyg
l3O8vkf7EpSl1JOAn1bBbrLvOPpvoz6epz8HezutNDHRljlzqnfmJhYzT2iB
ifldWvSWoQAoY4BHvOa/5z9Hf9pbihChO91RPr4FhEC/I+LODCpt/ca6q+o9
0vOivJ+ivTG2vS5xGqTNuesBJK5W9jc4buiLQxJILwLXQQdUy/sy7x0hAuQ8
j6s5T9wJ0bdHfIdGaeTypJgKXZJ7C1A71NA7YoN5/u8t8mhvZg6Unk29aPuu
pAqPg4LggHHugDES2bdo5g1zeIHMI2LDrz2FeOxpOt3ZwheYNPgIHlGgtk7G
ILa0GTd/6Tg72YEZvozhXTlifnZV6tVQjEHMjS9IPDFKnf5BwW2MCvlzFtBi
Bqkgxa7BC+cUAajtpfJZsbrD7f9HYiVeqHjXKXkqWjbwrwsTnwebY3GQPy6X
tlwRwhx95OcFjbGs8G75SewT69a5L9yvu4/BIAEmTqixUiQ9qLWuPgr+H585
xTxZJE2u1zdYg4mXws+2nRiJd86RmAA0A7CDBcdqmwK/HAQZYlRnII/835Q4
cZAwdH1KCRzUH6QB+AZ4fUtGEbVG7S0Zknn+co6sTu1QrfdNtu+1iYQLXpd5
q3IscN2exhRtMNS4+NM2/44aVTDpmBF/3TGfqhSk7BHS/c9cd6thl93J+KxH
lywNssHFYa8Rb7RrbeZNlFiHSeJnc5g7+gv66O/M8ipPsJpsTL0RCvP+msTQ
RruEazDl1srJCadeU2VB8X2pT2fa4PNgzrKuEY9+R+KiCX76iXAYWO854VBc
RCWdUseEuWYGMe3Yh34pGhSz1ZWRufgACOhHJDKhlzdG/illxNIUWzuRv469
kqI1XoOoCJaQd1UL9W4WL4O8IU9HUIoAfk950nvVJ8zrAHeNYj//XNvQm161
10rNiJ5mq0V6kdK8y817esRHn93H8wgqbDklErSUqMiG7zJPwLyZeGdNlPxf
r3ikaB0uGKc+Z2qI9Qe1AmlcyKnYZvT+UO7Fpl+u4vY+lx4+MzpjUMboocMX
UkTwmcGWd7ULkNckiCKlDOZ7RTE9erY48eq7NUH0a/2lHmkQ/dx1+/KfxEF4
XOJlIyjZZ+84jn13xFzkEYm/MLmUSF+QWvJ1S9XGcH9SlEpq4ri203rdvG/V
KUJnSwr5vsTBMY8PnnlEwPltYZtwJ5+t+MY049D0vVnj+pNiQh2V31bpMBbu
2DJDHhmSrH+f0173mGwxHZIPZ76LbIekgTWH0/TnGFGUhpiRIOqEytS6S/4+
hrtf9hgrhBOmtQkhn58Wqy2xfDhaQtTpaYe5pOhuWT99TBtomn6H11LXY8D7
/ZpToopUG7sFCu/QZy0WppL3Hcu1fTiZYvGR7evI//3qLBdOwu7o2iE3Nn7W
95wNCiXL3OKShyO/iR34vQS0ak1zZf9CZVJd3RWOVygJEQ5T4yC0v1pbmSOO
c8s5loLd9ZIWvN8XdcKwJoSuXaXJMszQzTL0YC7sDdLykvg2fNUUXXqTzXPv
VPAhavdDsUExn8ufk1Uh+cVYdGwRZe4ktsqhZ7hQ4iz6LL6aeVUYEHNl6rsx
AB7zE63i1WbQx1UgxEyukss9bM4PpDAHT5TfWiABpBIcjn+c4h3+HWVRRqr5
2VggZ6+FJVY7x3IlFLjN51MviAAnUQ5QNzeAP3ZQvl8k3Z9RqhjXB3KzUEsl
xEZ1vcxLYmLGR4ttcVf+8+xOt2FdejvVnhoxB4L5J+V0blEI6R/bEPQ6X5O6
AjjuYaRT1BrIOgu9PeBs5InQYdxaqERwqOGc/9Z27mN7m+o9zKWM5b0UOxSg
0CINArojqWYV9kd5eWDOiFx4bHrBof8q8eyJTRUnTu4+qq/gBaAv14ocagbl
963CoSDu8wKBuAKIQAjHEQUM0uzUW/u4hPv7ffJmSeI4hHYdMj0k2TBkL1fc
zeFO3tDv4dKw4bdm3kNy+hxPiiGmFGFWKGkWk2fRoGHjKJmDkFhjHIlCRucx
8IywoHqyyRiF15PCQ85LfMiaI2IyC/v7vLQSD8dfjwWcF+WPFU0Ilmf0SK4R
mw/+JpJDPugXSRN/bHo4gpbh+1IJbZsMg3BvpYYj1Q3J/tzOP2umxMhLBBb2
1LREbxY2spnrzG0gqYNPiogG+MbrEFYjq3XN9ttHxffy2aT/Hku8YzEI2mfD
H2sS5yU3NJJ0QGQvkBoCOeJc4t+odGKbH1UQa0maTqcQ45kRbsIK8lVLpVa/
zTxrwPvz2ef5DQ1RvMXHghXI0tKe6owzLgCr1cHN11rPeubZ71kSAAwGhBpx
1NFEEIUE28vjBuzQSyTsGDKO/RfCN2RWAesxqgb+211xLkLCEdKKTBpxBCgk
0dOvKm4fkawuIQPix6uzgiJgknAW1oT0mccox1mhN3MTjHDSvg/hHrsfIDdg
2QsZm1VCrcxK7ak9Zfa2JQ4o7s6hHUlupIJuTgadWH9EYWCSPNYtuZCGTjm9
g8M0NiMiFeSwOH5+9jJJKBK5VxzXRqRym2To4cQ7OUpKrWNt4AWABWVN+eTh
XV2HtzwtOSUV/iM5Si7ufxj5dr9urN/R7ozXMCvmp9T0dO/7GveoZEApw4ch
P1bPRcBxGmo2tdaCNXgUyOcwpIdDZH1d/o2nruq92EbuV/VeUg8WsebE1Oei
lvec1bS0++wmECbPzIkSQ7Tr4igLYqE4ZS7XiDqU7/yZeoosAymBjGk32+PS
c14jzhsrWH2PnsvrSXAYlXXqQ80LFPfYAGLiQclAhPCdY9tmlk9tZnDGIKy/
55jjsiJZ8Q2N/dqwbOqBxqr8Frfkf4+tBXwe7V2hGK/KBAanNSl+22GWPy9/
H513lseGVn0NOIY9FnhNushs/U3iWQJS1KLI+rksUWx4tK1x+aeulxVDZlE5
iguA3gdlGay3iAnk1KfbnHxwH9qdB7pPaV7Qddzw1jcjcBvGQyFPizQL9+vI
08/wxBf3zLdB4agn+yQZFWzX65JN5Jb3X1k+u4le2x0WNU+285+bua2MdSsh
LwxGkbEhixMr17/OOcrGYaPvMxnxJDaU/9wFh7ZihpcLmbKlyv2aMg0YEhiM
IHChr+6e0iGtBJvfUikaRrXAt5SjODHrAEu0qCbxFeP4hLdS7wLtrvhA1MLU
m2G4id3l05t3lE9vMjrO8vgWsyilE1tsDptdTD2nDAeUQu+FTzlQ/Q1YBXQe
YxaLzmJfHNaLaj1BpgdvY+7sObnZ1qX2XFYPFoXOG/DCOkESyNeqSob72KZ1
hgjIHqW395ROaAnqEfYPzUh83R+dl0OquZ5qAHeXnPZ/KWk1S4Dubonmy8Iu
iw3StteRiP+bAO7Ae/MgkfCdfjOyEtjEF4WjbLFy6qE+v6Ywtyl1N/CfiU88
0uCF9bD+tMT789B4RsKtYzF/jVioywkPMtlu4QIRyHvUgA+WeLfiDZO2ZyPx
ta8YHC6T7OUNMkoYvEvt6Q+qJQfnLqJfsVt7xZd1v7eJPa1pz+nNxEZuX9zu
zFBMtaj3goYtneNa+7o/PIzf5y2flI1fV55gfWHIKcOR9LvoFoaEHJBICY79
4pIajLMz9f5r3hnAD3jFAb4sdwI/u2to86Q8cI7Nu3SY/FbaivRdn042bSGv
uk2WlBVMIJiPe4wANyrKx7n+RcFbtQDnvUzjjqpm1d0YRsMMLjOy1ICUeLHb
hRGJ4zfkCk2qj2b+VakP6+5QPy105DG9QnFtEFi17uBViXvyrdpU806G5Ztc
99vuCc3Qwz6fW8c7RXlJdwIZwLkCJrZlIvEmuB/lb8/sMTZ7mYLIZRqr2qiv
5RuBsthGd7EHE6oElRAHyWBJLNq4UEspIgggr44wk6WgbZaNTfA0b7Weusnm
mmzGRu0uiBe4qcoQLKzGKSpoC9fxhAKtdfpvQ5iDCxj47RyjEEVZh1LSrqE4
b3YAPZBgjIE4TEq08T8m61ltuNSapmgC+kRSQMPL5DH4DG7lB/3tUSM8JDQI
6WXxS1Av0KyxsXNU25LyWU3RLMCapI2Cp5AZGxV29xnNe7oOH4EpY1UAZo21
kb/Jf03B6wZhqtMU08Z+D7NB/nzNkYD9Yb/nkbEn1AVO1HURr9Fgyjt8fNbk
qkc43sM2CrdBgYet4BbJ/WByaCoFyXJrc1WkZfnd5k7v3VtBMj7zLOITalTD
lLGs9oW0cGwUuSJhE7EOZhfK6yBr2h4GKL2qLrYH0J3pDtRhK0LOhrbJAi0H
V3PFrQgj1rOidNjixNsQuKEYw4Oohlvnv3+f/xmCi/7cnFsP7B8IwmtYwzhg
3D4RG7LNP79O2sU97uTh1SKAC+S+n9PlxOr4mq7LMRESoTsEyjwuJ2Otdp1j
bJXgjhleDEJQCIoJv4g3cFj8N5cIBCOy/JQcFpeNax1uXzOcyA7tf00ZNiw2
/UjB2I/xoc+JQwbHo1Nf1eOIPaOVEAT7iQ49Ims+L1Ae3l8yznKiHWp/pTr8
U829vSTf5tHaSIDnt2SUCOr+OyNDPcXDisTDizVS71f7vGeFR7g+9YYBqn1k
lgArsMbJf6C1UYbgf0Fhqu3jQfLMQDEzzYN4m7pxN+f2gpiFNaokeNf2XFK/
s+K6GGhtvtAt+o4UXdE3yZgTkBp0kodjRJzBEZwwV0PC9w9q5sGG+FOMPzC/
vVv6rqr+VWJ9Cg083bdEcpAm3thHIwkDBWYW2G0lJEMgQ2nwzcwz3lGo4O2o
rEYgBHtor87S69lFR/QSWdinpRgAeg4r+oSRKnDBe/cK3aKYSLvJDbqVJxXC
RQcT4dvG8inNa8qnNGFFMMYPKFv2smTcwjPXg32HSJ/CbzQWxreRt1qvyZtd
MpDblT64Mwxzf5FS8+TKGXz8vPw+jRZxxsUNoO3X9ZibhKNm5OhkeeoULuA+
hIxU23/mhwOxWIy2PZy4IKLChOZ4zLeT2i3VHrExIIQ+ESPSIkkadrsKWxhJ
Sum2Ki9x8msuhJD/ucSbN3o190W+kueBnWMHK1k6x7Ut7HlvE2Vlxx2WxP62
3p6eUlpSnpIzp4RnS7Nz2YnGDW6LU8VKALwJdCgtTlUlHFu+RaXIh1RFCgQe
c9oErbaeRZ8P6EPU0WMeDauEmP9Cdj522eK+3siDYnxJjJRRgSdvyhHvZxZm
PyZHWCn8HZVLtmuxl8UNHqd9EhhlpEb5x/9C9QNeF+xCcWxO4lDMXOC8QhWw
ZLavJP+zXj3CwjSWiHplk4kQW1aRWzBIMG0qVwmbm7RhpaOfNN1kIxLhqUEM
iUAMRSobPkg8GGFomKNCIjBx3OqrSZE0OiN3BM9qppOYvLs7j5cS51YjpRjO
AGfzicTjOyLhe6wO4q2WT6jtBxOyIo87Hyi9Z0SUWaurEkAT5TObWJkQ8580
QsV/s1GHsyAuE84mt48i4FsuF8iYJL3nNTCbeG4XkCGfzbwiT1xELA4InlwN
4W0xLfhhINn7AXjIpUlRTMWLLlTl4CVl8RCIms1FFqZdL7jGE52ch1/P6RKe
lDdEDWOJPSlmZPbSv++XHP/HrkNafavleY0cGpTZyxQjcbibKw6Ead6jrxvX
0NXzoWH8ObsmHlSlw1LSadH7EHN4AAyi1cj9fm5ukbh9Qr8PKwutG9vIgPRO
bMSyEeAHmx6CgJ6TnPmYi3WgSy6DhMmOxEvr8PRQatyqIPjtnrObooMA6giv
BI7CZrOKnpOEmJh2xahWkhJiu+qyrhOb8RhoK28xMS1Gd74kESbmqp3N8Qsa
hpHhR34rbAnzPQEPMB648xeRNZABlIAMp6AYG1yJIJ/X379CGsCBLkydRxqN
pcIB9jeM7qcy5NYcb/y6a+xIukBYmIhwQL3iyK0eCebL2BL4Q8kE8vETvY1v
9LKfPfHjiVMrYySoZg+op2t9frAo8+25LA30FOuoIiG3uOJheyxq5s43dJ/c
vD73gpwkfxddwHYHKgT5vWfe1XaZZDUwgiSCsNEPSAdIM0zXnEnMfpLcWZM/
12bJEcfuzvQQTDye7J3Uu0Sg3AjKB0x4FBIhv/nXvnbbRMhHEKS9VTqhObbf
4MGMDjd1+E4jAG6CCg6RNead+BP3gtiTR1WkNuTb8pTR+oHXLZjnD+YRids3
51FDf/fpzZzyegV1pAss9ZZ4e+oPhfowrxR7OJ2j88gcNUDujsjcEyIw8C1h
rwiI4EajU4+kycbOsa3ffn1sm8dnhyHKnAAUOV7BcNAZmuMDTZ7tIjYEw/Uo
4EFOrXkpj8+YKXy9NGF4b2lCM8EPExm3VTyW+pLUgn9iEWuHFNljS5P9RmD6
XyXfdCV/OnG8yPAxaQ6MxWcV2AAQPT4be3fnga29dKipTEbMRWy2ttft1Nqe
S+vxvTzyLDkZ8gpLcj/8ZOayWa54wg0MuSHxxAIhKzkPXzplDzqyVejsVoUA
96ocQAF+c6+TcrMJe3ev06Qv6/lowzvaccorcHsx8Eecp5IaaRR83XylrYC9
mE38HYkEY3hI/K0RAsDeVI0wE4o+mgVXWEc0GY79nFDbTSoGWayRQ9jF3Wc2
PZuHptZanx8HIHaCOqp4yeg+jS6uaCrh1bmxC2Sx+Lm6fe3m2ojC38lt7C4t
JaZqiZqWBad7El8REXn1+/Qd79f6azwmaSCbWvUa25Go8bfkIhiHe6R01AiU
oLvfhZl63i7R33LkuAowRyTDXlGUQjz7UOrUu6BXG5+YcUn9hq6xrUt7L26I
cQm6w7ZqsfKqXESeT7wKixUmPWjh+UR7ttHRYAM2w0KTIuDPafhc2XNO02bl
hl/r90otZ8B0/m/VvAPSxZQuykWw06rFUwyfWZOoA4+DIgsbrrpRGhSjjCwm
IcgmpHleLp/3pVeePOKFc6628RVQ8yZbLO+ZFcgFY3wCBxjDn5Ab1g0iZqsb
xzPSzwGEQB6xc3yn1UDrvC6KpoY7Ry6RH+A35np2xfNonIF1D6nFcU/iYyJm
YUBFxrExdnPqrEPBSAyUuy4/0p9WJln8tEwFexwdMBInSVAJ4xRu3RodsmLi
/wgdVcRRYLi9Q7dWJPEGhWhXyvlcp7fhVH+tRlCCiBWpc23FBj54aZAqaNt9
eG0fLieqo+i3m4tGoiRL9EXABh6VnCKfcJrHPWNmPGA7/cvJ5Lod6mNYkxtW
PLVNWuOCumJB2rhWjhgWAqrrsYiJF+AaQEtcKymfOVKJmf0esG+XuONjgE1/
THytafSgbRMPyLbECbgpydFWSoo0FimQSefVsJY9QpjBAo15ejJxCluiKENb
MksXpEVam2cGrTIKslkzxhvkgLhrSmmEGZgBrGesaoWwx96t4k0RnANqRrHA
sJlPLx3MxeJbEVXbl5fGesYO+30zN3XedoI1vlaX/6KWFdMfSNlohYJZzpZC
CJPrpFO4OtQWYcKlYwLIEijdxW/9LveBWC0ip5rorYGEH9aeatU0vTJghiTF
ffl18PMcm6OE83grpJpKO94cLE0OEcBBPQOlYlUeACXaW9nQYqWV1CvpSEcU
1py724Mx4o5VFTcIzoLnHGe3CoWQ5rlvtv99ujU5pYmzvf9tvrQWgkwMADEK
MBXDeav8I38PrnYgRF/FU68YLLoqX6z4Moq37LTHtVlXZurKssVSB6I3JTnl
w7VDI/Nh7NdpsUGVEj9q7NC1nkvB9z0qDQ+Y+Ts90m3chhdix/+PaAdeVjMC
P2fztfZKU+y1B+Ko02KUGpYZLAFZj02p40xgBAGB9ccK+d+SFDU/hIb4mbDt
a0G2lbiPwp9gF+jltlHszIkLrYzSX/gChw37nNAzyfQEPSWZOQiYXnck6MGW
OYjWc5v1Uh9iZmN7DkoIMgHqa4SMVyrIwkRQ3OEN+HZqcI26UC8pOf24LYie
5QlqqrYPVbybGKFDjiFOYQSWenUU1Oou96A1IjYQDfkm2rbWyqysTr07GVsL
+Hot8XnSSMBhxq1K7/rVyOeGN8RDUZQi4YILWaqRDMwaqs22UIeZh7OxN9gL
jMW6zhty+LFfyqHflBWrYD4hp/d/04K1DfB1nSwX2ThwJyoLlQevfaNWmSN8
xqGfBwnoGeEaR3R48sO6y+xTBxMAQA+woWvUyLpBmMC6/eYrC4Y3BmthNIlb
LPx3l/O+QO4Y0dul5ji/3yjCbNVpTVAeiVwP3sw6uzLfUUsaCj7xGYmXN1Aj
DDa/pqXrhcSJtjGe5JkeTVxuKS9gOoJnC0LRqP5yU3BP89/BejJOZb9wyDis
G9LJluXbLOu3Wxy+qYZO8J2XCZeq6HYI1AbvygNjCofUSCdhKis0iem4Hptt
yPz4qXTNkxnZkcZyaccnmTQAAw9G/NMsP5+NSbHnnHWBUrpxn5TpxPFsVHol
+rp4HooYrF+IFX5gYipdbFMCs25Ki3NGOxcqfwZlpyGMiju7fUxaG56SSbhL
uwKAZmTKASW74TLPlfqd6aPbzrQHGBPovZR0KPfaocKp6xab2IkUkAZOjf8m
osWMYOEwxChBWKtPSNhpiDYqU3uqkUSVqHLkQ8E+sTbu27p0fo/AeIYOFiHF
J8QgZy3Dv4dy49ZNZ2nY6DZkImg0eMIAQ9tzrL9UoMHWVugOASkLBARtAY8w
JjEBgIJYBLf1NX2tv0XbL3UIcRhRl9qifrUB+tV0xpvy38NEswL+30Q19z21
MON1IpQL5tJMeAH3ED34/9Tng0gP9OdXXimG/AjxUBUwbSXzaPSaAjM1hOv6
sb4P1aZrF3xCsE3/B2rq9an9IqnzF7X1MXfzv+oLVcQ2hlMAqF6osluQMyBq
b1c0r0nUknnTJr4BiAUl+r+qFoAhtHa81GWkL/EBJ6CRP/kIFOLL+jGQFf4d
GrjuPm/cma221DjlbbR0JO4OaAmxvn0fRBnBIxDsgEIxPDu73KWtzxUMh8mf
w++6OHWXgqItkJ3HOEK6o5rb1z+rxDr/g3SCWXhOfJd4PmnIp7mdei/B5izh
J3KVNwiF8rPbhA5Jx0VDO8f8GaFDbpfeib+dfuPIKIndIQROxZ+EOEEc5Q4+
IzbY814QHWJEID4JfAQYYVDgt5kH12fPLppVrpJEP60rBNj8XFJL/g/Cymf0
Mxj0M+dOrvJ4oJ/ThCgwHwMKHPk+jCZGCjcV2AvzwlmDPW1njQIcQBH3y51s
EqLHvJAM4Hkw5oA0zomMFmcI0EK5GfP6rpxYcIYE47IGeyOSQ3Lxk1zlJJke
pDqojh/KvIsTOx2jqkBLbPCizK8NH+xtwyM4nagmYfwMxNdIlG1qxXT3d1SH
wJiq/bRCZOYX1Ea4Hy6avixueHXvx4auLx/e0t51VIu3zlmofeKTPecNW9g1
rvXO8lmNvrjLW1M+PnOynRABKsFodNBQZuGUAEiLyse3QMG2us8nddn0/Ps8
gGDD64LEebxtEjfxsZNNFQdd89KrqgsCeT4s9JryhOGLSyc08zn9FYcRdwuC
UlUoJcUygW9WFXzf6H/3RbHtYt23WfJWW3emvwaieENogSwV6BhbwSNwU0/p
cfial2TNmQ/EZE5w14Z/maKkDlEmeIv4g85mnCbEA8DVczJfXgeA4s2mCyCA
6+Z0n9W4pvu8YThisgiPqCQNmPBL2xecQj4NB4vqW/7rAvsz6438Wep7WhaI
umyLQiDm8R/WY92QVHHameT2IGh/3vIAThbzdunEZnzU7u7zh+3uOX/Yltyp
LEyL3kOCWzAS/ZCkvjE7mKKgGHwqv/hFSrH/WK1YlE54HtSd0cE5wmWYXczX
bFnt2I4Deo4mAJ73Z+IdoG+Xz8GPwpr7WsV5JVYkzoUAftrZ/aFh2/L/1Q3C
y9bVhymATWZ1+eQmNrdvT7x/ClRB9VebWZu39zttFIIMHZbdbeYehKu1niz5
6SgZkQn2UO1AGileS735ArbrKD/S/kxjwoAdqxP1zes+o9kKztnkaq5jbRUy
ePMifVscCT42CMYwFzR7Y5kGYYLrmn+pSsGnhIW4Eeory1V9BGGSEeT2mKQk
/VKz/I5IjQvnMO40u84G2w4jkUYb39SfYV8Hej8+dHfpmJbdvf80FJtqm3QS
L8Zy+a/nmgoC/JO1rTjDUGS8/lG4FlQDBA9QAA/0fGjYnq5jWkjvv1Aa3xKp
eJ/TGo68k0PEpfLItlM88YQPdtNbTXy46Va5POSoppnnpFZT1Y4qS1BMowCG
usW++FriY4DIAQkeZCD2bZAiOEJ56xsl//DiQRFYy47AP7itJxPvz7s98WSW
8fklztGHwSJWAX6+IKPGvucxlk6ZlJuBDtPJDeVTm6zU73HZCKBtX/m9TevK
E4fF8vT1ij/mq9vlN0qHhGtHDyn7B+1cjJfHSkTOguumi5b3IoM4QanD22Si
eEbcLykb7gCXuVQ07hhz/NfKxOFT0KOSkLpVW67Q82cliejUiWbEi6URjDT+
l5Tms1mxzEDP2oIIsd/PVtRRNOo+p3Fr5+i21aXDW9fmphM7lAjWA1kQN4pN
vHdjtfg5tF3Hz2MySPUpTb2DhTEzmrfiSQA6v9ObfDHziBMVNZ7bqsR5TMMb
zkgctOAvOhXR7lA0dU8OLKV0o7Dk3DaJJpRork4ckMOKJxpBpglwsJt1a64Y
W/L/LU6LJpCt5VObn+48oHVFrqylWW52BuHQ6loQ4JhrCqFE7RFi0in0khAo
OnFbuxUIt864Yuiu0tEti3surXcY0xoZDOY6gqp/tyBesHFZTK7z5olnV5yz
Jks9WV4QioyL/OoFug48W2CHSfr972Rx/R1FJ0Cd79x+RK5jhsIp3uj/k5jc
KCOISHnENubOzsNGrMw1hCck70QJHW6v7p4LG7aWjmx5t+djQ5FEcukz0mLn
xWJBCUw5X7Umoav/5Oa/TG9rm6kwlxk5D2nqQWQoyV9TTwvdX3E8/9FcUGf2
XFi/vXRUS92gHfnp5s6ofFTLhtyGPqceLpIOgLzYZWilSPcmTRgBEFavRIH/
ZqjKBFtRGIoeuypqauNDj+q7ziQZoluauH88y/vOTu6fZN/reGJsBG8xvUn6
ifTqzlzSdua+/xWFxFfKjn5LtgqkRAs0Ad7vuw5sCwhDMeBHurRTc1tnNSPP
j7TRxICT2yzUleiz8Ux0uYKucHrY0l8L+mCnb0kKiuSX070W97XwKjzXdXKM
tDMtKZ/b+GJpQjM2DVe0rsebNN/JRRvx3pQfP8l/2k8c5w5HBq/Nf3k7jMnK
36MdFIkf6f7AsA2lw1vW9l4+FIVmmJFHQQk32YkbzBhM6YoSvSUUJ7oA0u8W
5NmMJn1D04a4DBR6Rw6xgDTM5JcrDjL/T+opsjsydw0UmOd2n50jw4nDjMlD
N4759Hj5CATw10InyOUflIVginuhAtKSLC9kan+R4CDHILDnuyY03zbtwFbs
EWvvrFc0DyBpXEB36MMGwPJ3EbpPK4EIsox1ZDRGgJsRZN9NfwIOCHNGxYdH
Il5eZHM95zYSm261waOJhhvoqaEJCqsMTDfuERkaIhkbXkzELUeXYS58JOTo
vLUKXeoNXAhYVGGwBHTQPJIU25X+WmNxEDxuKyIqMh0Rv73H/n/0D4QTMDRB
7Uv8FkvouyS/YEMyVTvEZ9ad48+om/HzWHt86RHKGdas/2hB5aPr4ErpkWW9
Ek1Qp95GsqrnnEbycbSE3qZ8ezGbPgR7emvFqx44FXbdfTmJxPLgSXqSmpbN
4y/Rk/OGpO/OUOMTB0SODVD2jYqv1fxCfjjzS8e29JeOGb5EzQi2EZVQLnEf
tlZ40y+LhjHfmsCQC7LyaurNMnThbcgN0/LySc0bK54ufDL1iAAjN1dmns/C
m/OcqryP/ULqK/pWSijoF4XcFfSDcHBCNGtlEjaSF2fMvKbKYkbVmNt7XNYB
i8ZRLU68gX7Ugvy7TvLvuqzi40tk+RAgugCx/1gPbh7k/wPp1SxBduJG1Bt0
eND8q83gvpx6lvolharPCP2ADnV9+/676gokMMyP7ykiO6QHYI5f2pI40uL7
+AygiwWPiRffZNkPJwlKqZAVETu7nQB/h/pdKTXSW8tinOfLH2i8XdI3VfN4
Lyi6XJWbHRJOb+RIs1/w6DWzMz5FtDwphpR8ptUJdxFBYhKk08shx/M6kY/l
f/cnxZAauRXAN7MJ7+T6vDEpllRvV1RkpKpJwRW8O4+e1pVObkJ8tiZemWV9
fcwfxDL6AZVvCH4jKW9gX0l4HMvl/VPtCDn2Gv+7/4/FA/LnGtQyrXTC8AdL
R4xgW0UszCaae6f7fU1o3TRNSkbRDUjBcRMAY/2levvjHPncl3XdODCaMBBX
TGhwQTsznnidpXKXSXQQaf4uULGmX/JY4jkn63AuTOzwY6qQL5fztYJhHrOt
yw1LNKFuF7QlR7ZDJILb1GALke387jObyLicG/uV/v9iujpnAGPvFKK6U9T0
K8vnNNE5YaLtAV0ThvBOnRMBHQORtmXIDJ+XCZi3IhizLW2FyoyJJpe/yER8
Rff0g35P3eCaFogPgGf89Ex3VYhqkJHQV8g5cv5k1E6rocTXBBEu4tfyA7yi
7yO1om/TCrERksrkf/wc+AfcTI3FWb/ajZtvR/fpTdSoNL/X3Ci7T4bp7swz
Tn2K394UCiVFSUryJS2cJQnvtZcTkJDLNFyEohE2giTJyFJKA9BiuJlUuFan
hKECV9hK6MxDaWD6euUd7KbJ3NJTkPkK+05LeUy2VwKuAbGuyX/9J3Gf3Cj8
zabw32grRdDlAQoIZq5LY8WrCwfPG5vIX0q8hgSxGqzi00onDR9kSfVjsC3Y
f1jv+Vg6sTAUdJT/H3VsYYPBKNhNTofY63VlVBEOUp983RnK4hD4TEmLNakI
wjopwDYlrckC8PcxCpBAE0A9kngLLceD4jxaOmqE61s9jUe4lFUzLjbn/2SO
bzCBmOQlasasG2TrMA8OJj6+kkLhPAVRO3MBof8UnWVua2G/56p5lXNzFHru
3CnWLRmx3I2yTQgYJ0m0dFPiHUbwnSzpd/oMfgZd9I7K1sD7nZaz8z4vSP12
KY2zXrL35zwo5rJJj/Nzr/d7bIdAnViN5wafkf3dwF09kD94DS19l7qVxZEi
hxcXP9uAXHDY5H25YLgeTpg9da82PC7P47kDwCTU8zlEMASHQA3+Jmka4vS0
YDMZDNSBYkIsf/qJjCZZCMZeZnYd1fI7qQTaSn8LqTWYwqKRHQD7x8QruNTp
r5Mf3iDcg4GKMUsO2+l2vJgIFie7IsM89r9kRfrkR/luSKP4PUAqDSngJP4N
fgB/HZnjB25ioVSUaYv55eOHo6JYB96Vi4cpyVClZ3ZHxk2TRblaRJw891aI
qCpFmI0ufHq2WxaEZjv9Et0TDf//qXx4K+cL+nWrs8+XZWsnyDf5KbXx22TT
t6aOgsj5REzJn1Gv581I1kf7DasI71Iw9KRciA3riUDzMlG2gNRo2OJNiTDO
mXOVzapza8tyZEIYsMYmuDuMTpS35Jag4kJ77QY8VB9OLgKhxaZzWiBODJXx
AScdZr9BVliUnTO8Zba/54KGf8slQ0HdQVCKRR6M/sMord0pKcHFYlDp8ee9
nkydgJKfuzM/l6DcJuE0UbeNqoKk+UxuBEYPXDxn8JW06MC/OvGxnzd7LmxY
N31029KeixtAwtxop9Sdfu77JPFEa1W+LTe+h5L/m1Y6cTgx8cb83IxHWG6x
N3P4Upahx4yl+jWfTcxMtoRmPYJgvpOc6BppxHpZUxvwh78PwlB1a9OCj5X1
vsqDY7CWveoECzE3BgfMxtzi7RSyAoFQ7MXA8zUA/nK/G/mg0BiYcUk9A2RZ
flWYKGiZQvywmpF3IlWwV4C3D+r9vAQSgZAR+2nFSfH4H+iYsHF+Orm6enPV
9FFtdfV2J23flr9H44j3kDH6Xvg7RA6xFM0gTeYtcMwROaO9R1I/q3g6SNrb
cEAesUDSyvkvUT43xgZrIzlPrRx3Zm5EHk2CYLLD6g2herVTDJ9R2IjBBDXO
VSAV7PFbdcagR5qfzClKnB+rOK0baB11ZoUghhH2rLeE3ljukMjAoYYLU49F
EZPD5lwdMRyQhSLZNn01f+UFlSwHFCvyKuQm7kk7qvbxj5LSaQJssZ8Fewtl
WSLogW2rO9Gj6+hE8q4Ml15itm4FH9EXgNYv0u+jrV8VrJJAjNNiBkAeI4dG
FZoG64/4yNRv++PERwI5AVCXL8IYjHjxY/ajDfb/Q3gSxgGpRm41K99hrl5B
u7H1J17UUWB32LmVKWZGQfAx+IpGEW0wIBnccBCiWok59XlnzCVGHuCDPnw5
l5mXNP0NyOpVgMedQVbxSuqjJNw9i97IrCDSxvHrpZRjAGCkSKj2ODGqoxYc
4i51TKJCwAoa6DANRELAiZgVdb4nTNckS4LHBKyvNpJdqIkGOarlugnq0EGs
Clj8pTI//JoWcQ/kRgGAbsr23lBCmi0aFyi4Rlvx+sQ71RYJCb0ltdiWOJPt
Er3iNdXYdmirGrkQI5wflT7EiSEGms0G+Y1/Pj4t8doJQMkJqVxBXtTD10Rx
tvwr82Hv+cL03AO/ZjkYJUzrqKUzJPVz2qFGxRWJT+zF2nYbiIHlv2t0W8z3
Amo5DNzkYX0/+LtI7p8zN0Gxc9HYL/odYNlGII/iGhFt4g7bAZ75Tm/uD1hJ
ZwZ3RuR4meqZolMM9sdbkmLAq3a8mMr0M8ItnDtGmj9DTAmq+xTCkAwH23PC
BM0x+nZ2WvV6I/kzlLYz8+1zu1LvfLdFy4nQSeoz8zeLaTYYiDF1yySOPIeV
LhweXp4UvTMdMklIIX+Nj4Aoi1Ai03+juVAk/iK6tEjZeBr3UIAABUe0INZJ
Uq69W4ntP85yOSMBfvhcNySAoVeqfTDeBbJR2tivWADN+KPEniO0OR95AsAG
zqRonxvGVyJcKDG8Qg+JTzP6JUHh3xMXgyhtTsLMfaPiZGg4HC6ZrNVU4SIM
B5mvJPOVH5GqjWwY+Av8wKNnqWMLIrOH5H8v0PpXpONu1So5arQa5gzSAsza
OgV2h6WDoqEegHCLsBBGgXQADg58Aj+OFG4Mz/xAjQHFx3OcGL+l8sOLdLQr
1V+BwHNN8/SZK2QCovHZeL3AejmgcQTdxEkD7oGKCCUBg5GdpC5sQNCSslbY
OAP1Ct+QNihhZuqIgBHo/g5RUk7XsXbJsQHbmAu9X/x539F6B4VvQYqDvigb
vd9Rs4phEYQRF0Ra+WO5uwhL9tHEl5n5Uph2s2B0mHDC1BTaBTtUhgNsIwRc
PFkD6mNPK/LnyVC5F5RGxUogkxN12fzeowrpHpOweB1rqiG7YvviSBwBMod2
8u8/Jj4GQAEFjEqkBtgpCZRgop9OChqgDrnrH0ol3HkchJEiaCRgSwXdiXeZ
Bg2/w1Nx7YgZkfit2q5pWwrkD41JhbH4xCcXXhOw4cA4QLBpqI9w3bDAbSyf
eClxSOpENp7nIflLTyffXTeI2kldA0YNedioETFcDHdOZhODiPXgqNzo7I84
0mbyu1lTzAditumg5jHGZEUjLN3LL8iYgFiCJ+R+Hclj+rdZCSc/2A/R/oXy
KFTnOG1mNK9LqxHNUNAznRP3pK5Fa6U1aBNRjAdug/kxLqVmCM28TjAvcnHk
azE49+aiikkPFtY1uYvndT7g5utD+R+/KNDzmrIEYOr/zN8er04hcG7mThT7
hO2ib/tf+r0li7d8RTErEf6k1FsaEQ6CFFK4XCqPQgznyjYc80KrCTpIHTvM
zEDn2Nb5Olj0/0Zh972okn3/w1Go35UypZgaZIEDI3sKIWpkfdcok7uq0m7T
8sYoUsVVnpkG6ESrBibxN+IfJ2ycMNNLuST0ibOyiuP7CH9s+1VyVXXcZBDg
rG4kOVHbCJvxaFOq5DBZ6skusDmObUPNR22ePq61Syd1YA0Zl61o97sP7iH7
57Ta8G0UIoHvCI5R/gnmJKMEy5xWhREiWwms0dcfl45p4RuJvy+RQn9OPg6J
d6qLllLPecPA0X8on2ErgmwlS/DVwfDCGtz8PGFLoAJQkueHIRadczWu54ko
OIT3IIpGB/aqyXnwcCxZiwekS8/KTQSWCXMQkSBNtVCrgx7Zjbqpc1zrHaVT
mlepWwPmSXYYLOu+uGGbvpulUEYTnTjpMR4W7MWWOb5rvrqINgtM8HcIQbCg
mDkbYVMc94POMa0s4Hoqj/C3pO4h1/ZeXL92+ui2R2ac00je9qn+dlNM9kbb
e2Vel8Nr9qrT52fKXFBrJLE0Lw/jkYsrp+fe2eO45vGaNF4pgITFZtmMU2l7
0dhIf1OnQvhc5vbL3VpDY1YYe2K5/xDVUpa4MjPPjz0R0c0YBcggTKQXLKIh
TWMwgDXp//b7Vms2eOCyhprMNEbViOLZslwm0K8rZk21g0O0bpIn5FAv749O
jNGE5vw1KKXW9ZxrfIRAf+7iofxcls24qIF9Fi93nzcsts1ggykOgY6iOh3u
KppLnzPXQNmo7mjegq82Kv/UWVPoyCRbh5KhQRPkPS8W0AQb4C7IxM3p/XDD
ys79257L7zs4mt/tPrtpTvcZzZAS4XGJrz1G6jDTE5MsfO9jiReiQGHE45gv
FsWx71E2pGmXuCMGMh+YJzWMlcZvYCeANPin20XM9KWZ1YLdCbbTSWABO0J2
78Wsw5sT4SJNnJSMcCYxPZrs09oyh0FcBnSaK/NILuCsZIrZI6wE5/EdYwLN
Za7nfY2/7Bo1kgxlZwZSnVztuEM+u7tPGs6ff2pGQaCGl6EIRbxh4N8N2giW
2cEMOK/nIw07dPfABoQTMzxP5nt311EjdpaPHkEmiXCPNA2NlovNpxr74JDl
CtkoTm7qeX8jgYd1uxhYH474ICKo3QuJb4SwbQzmJTqqVNtgspJMETGN1fyc
c7GBaBF3bcumEh/eYo9cRnpaQ1IgDtEgBc0V/46iAScUzo6+iEv7ppj28tef
y9xCvtnz3iaoEF5QlBeRYWP29/RXwS2GXaebYYESWDbWhjfhneoaGaXEdf9Z
cI+ICGH5eeajWY9XPKlPvoKEv2+7awR4hG+C1iLsMMsKqTWQJ+ej+EhArJ/1
aago8Af8i2ggPniHj/RNNnOORfi9znl1rvqvlE8cXkmLJQuIKZ9k7TUVL2ug
xpDjsYcSDolXeiYOeyt1CmlEeUXqxMzYNpLrZAH/Odu70ct4I+p8KIx0XNRO
qRUjPqjmxsTrU6g+z25tCfZag0n6EUIaxaZs5lGzip5t+rUftU4TdLbugErF
O5IXz/hIA96B3XN8BR7ieeEpXpt7ph5KFccI8vL/zawUo42WZ5dcTMu1C+Bj
TF2pVwHt2wah/4NQmrrBEEr8tvOAthrscAwfMNB7ibH1bYPWMQ/OcB+0LqAH
tmYkdfWLrLONgCqwI2Hbo1+zghQrj2wBcXDH3CsmNMbUrpCokLzH1T4rcAJ8
/td+N2tvKxhBZzzYG0FS5haJABYJS7sdvmKhrJVqKzDqEFl9vMij8uofLKDy
4JiEsPE3RyUjgMToYtJ7fsOaHOT8oHRIK4+AFadgZwvLyqc33ZL7OpwWj84I
9c35cfEKiFXdCa7f3A1W7T49M17lhcSzqdQPfp2/JmMPqAPPx7gq5odMLsdN
9xpRZyCb2vYCzsGeW0zT6LsRlsoqcvQBZp+3IqN3uAFc+fygzmPP4YtJ0Wbp
TuMQxJjHijXNDwrkUN16zhymT8/O00eSUQHALFdch1ND7MMB31YpprEIPf8q
R+1ktq6B5yd7lWRODmB3VeYgGWlYqr07r2fO/hfdGzEeui7zV6ctIOiZQTCY
RcxpOPJ/ys3qlVJJIu9nZVEgUWRly9TykSN4N8a9Y6EEfx9jR0D/cBKrpb0t
HrsZiffII9rFOJAZBVD7nd4ZopyYcLkjK6YxsTjBU8WzPaVreqP79CaglWtL
h7kL+n4RVZfaxpjRRsJ5vBv7O6oNRVzH1l5fOgvrClL/fvtr48mTlRIvbnUq
6MOd1zLhAqNITG0UowJ2+Vv9fhJXy8T/VF4CZUNRbsqmVIe3kB5ugxOLvBrL
y8Io0thKpDUgqlmYQqPj/CfZ3hGf+81RIDLkGdeMSWKig0tfl/oe1e2qUS7v
+Wh92IVNMk0gdrI3POIV6VS71CGqfboqHUnSBm+CjJJNiaD/OaO6O7B1dX6I
G9VV5aHTQa072NWX+HYw6gMbak4siuDPKpP5Uv71b/ZcZOSO6/KLQdX5Pk7+
nDlFs2FkTwFZMn+K8JpPlAii7aRHsAzRsPlBJS7ZLEfMuUuPijXycGosUhYM
VEhSbdAHe4mviTuwFSi1yza0HKoNLYfa71nEpwz75tTTI0TZr+Rv/PX87UYv
vLbac239YVlH1QdjBEkCRIjnd3o01xv70oFeFNMQQQbvbpDtvSrzDhdmrFDO
7UplbO5kAZjvbo+xVP6MiM8MUhKdjO02aGd+M3O7ahNsKZtTcqhR8VwYeJHG
CyJClFZMtOM2dI2rMjJsT73rJY4GtgZ+HfyJdPp9cpa/CwZrfeKZnCmKXPFf
nYpIgumBIebTZ0yR+2iECJpAZ0XiS2ZI6eKlEXu4V5akkw1w0ySJfHo6pOER
gdMwf4gVYGuuYgZM7ZBqlXRfrM6Tgt7orA3CeVA3dEvuAGkkoCC7Rk7peTJ5
qa87GmJ5rUZgWFYjEvw3Eohu4ebxk0tUtKNA4oWOw7CrSIIfwbg2amMDUmO+
CftXkS/hyPAT5IFB3dGsVLs2i4chEMIPdakQghW5PfE2AAK75VrEA4rnM1Su
Pmpd/v1cwYrOUW1PJk4CGQSq18qCdSVOMz6zv4gGvp/fAXX1bwoK/FFKaYGc
ECMp712q6wUh72ar//hYnTWtVNqr65yfF6o8ruqORx+TFMwoV8uo8tFeguqw
5iiO7i19PSd+S+Ls6bFuj5+b1e/lqgETI58qUDKxjTJof9KuHY6j2shb4HJn
K61OszrhAE3q1Aj7hGyOkvF4MPOh6tuKpsvjlk4fOdLXyBzSurPGEvN37614
XBzLEm1TtuwVG3xxAs7y5QPnvkje2/AeFisX28loVKVUAESJrTykhdF6q0T0
e9rXyMATn1X6Wf57T0ovLuqfHPEbDO7LEg/PV6Tevm1rJ3MdwH7hEUASmhOJ
Sh3/i73W0VQBGKATi2Q0Bb7r+71DG1iLHaC93/o/8q/rz5+G6DmARiznwfko
VTMSHjjj6ZrV4UXu1IugKxQS4UJRS6QDxeAzwsUCLj6fTKquGIb/0AO4iRGC
fkqoPLz++aqEkfoF3l4jOIpOYIpxPmAehO1FXSZTI6g9SRJOiVFRdHC3JvS3
JN65anxOqSe6MBX4SPQcSEzQXhDfHGQLD3m92GMbvFhcNkAmyOOjUGqdsIrg
8HBEGyTccY7U+3EH25ThspXPHrnxR5erSqLbPZLbuDhxIHStsqmYE5qmg25i
be4s6U7AhD2jo8BrzFeASySyWsEjr2pENYnjMj4LPVrfuf9IjomytA/n+9QP
ZovMOsFnkDUJBoxjLSbNFAiqtadWvFsCfQGa0z74YuLRIzocDJiLlG/mGJcp
57VbpAhcDbCGqAlTS5++WKwRqGdlfbHKhPTVsnLm1pVbwqrS96lYDVt/V+ZF
IIwyp4KBxnIFR+caaTmZJazI15TxI4PXWAQD+wyp0bUh1QymkROxFn5XMEtM
d/fDgdoqcF6Qfqn8oJ/RZsm7dDl8jUX87m9HXiNogCz9VdCAnyVJx8Gx5wqC
pYh7fiVjjOoRqsMPAo1fh9yfP+JgwBYAyyJDdaw9nfmmHiei9oLfdRJlcrS3
VjzHBYUb6IS9d8iXde25TzAGyuiN5GcILVieaZasx0MtbH0Qp2PPjei30l5l
HTxfYYQu+pCxPdfYBXMMbHrCml0tit1nBO7DLRKeoW68ny2D6/fcKmW8FVJX
H0DwEgzsRUv1TLjiboWBvINFsg12NqMjobNJOrZq+ui2xYk3+Xfqu5Gs2Gtx
R+LFfiLtsg0wuB8A6/D7MXFbU0+oJ4JAB5FGdK2sqydC5l1sqtjvbyiwAghy
c7/rK77xxlz/vtvnANph19AIwX6jxsevKUYiJuKVB22x1Eu/ELv9c657SUYi
l6jbCs6wUyou45F+wo7zxFgWNB5hpKByTVI0GhMB8IYAoqvUNYsAs25+Rep5
Jn4WfUSVueW/phqzzNyqGR00TUjpZO0H9rnFAFlayHDE/KtsecBCpRfmpj6q
vLvz0Co8BvtghIj1L9fjW2xrqNO14Cik6z6Bpg/2FSMStfPiR1cmGUoJ6pjd
uXMg0Nqi5MRypfRwCiCer8kB8XeZrUSS0AyCsMeVf8ECo0lknSMEDefFQ56+
V6yFmyHfzd8ELMdeOOQCrguefnv5dFt0gA0Gm9Er7afV9IvSKU2rug4dsaL3
Y0Nt7qP79Ga4AvaU8/+VjhkBx73FVD0fHrar+0PDtluC0IgXhvn2U09mgQhp
N8D64FKWqVRFt5eJthYdcoA/VbcXPwuq/LXaBIkyf6tWPtQD1eC5tpSObFnW
87GhC1U93dZ7xdAdpaNalsy4rB7DHO1dmbwoVvEXyumReAYaYobWdPselfnl
M5u2CPmSB8cy+uMdgI1fQnxeOrploPfyofyYNWnlX8nvbez9+FDwjdGqp17p
STOvntgi+8yRHB3v3Wqes0WJCSkEp2Hg8ZnMqxvv7osjQba3JA62p+l43sof
c1Pn/kapwFFSA7c+HTfckc+5MKsayH3JG6E+qCIXjSOOSIr+fn6+S/6A2EaN
tY0470X56ezoOX9YTG91q2wOliLtV9uGrWI+2Tls587e83PhOH/YnNTtNvJH
VxxZYU6Di6b4oLE57gU4b1FI93nDthrxh3UY1y+e5Y4Yc0lzN8YjcrK4FJ+X
NgV9f0RY5GuAKxgScHBf4qQNP5fbWaqlWg+VjhxB+Sg84FdkvFAZLh43iGKi
UlzKlxkd72xr49/IMH+GaQe8fkGfQXA5I/9c5rXZs/5qn58sP4M6fkM9Y/SO
0aKIZzYyscpV1YV17L21qCtxuORLBvzfNJ4/oEzbvQIX7mFP5FFuUomUH8Pg
8THgFj6KmyGYxDsAhLsyjqbDmhCoMoHv6cFnMnKt5Bl1+h95Vi773+f4WBae
aln5/Y2ze85u4rt6pZ4IiOWuyU30TBw20P3BYW/L3vHY0Egx9/qGBKmx+vgN
nOrq0mEjtuTqQCKI21urTM1Stf0wjDqIufa6Q4Ltdmfqg4PBQxcLDjAAv1f+
4FFBpH9JpthlfmT2ZINCqAbxIlq5s3yaDe+syr+av8spBi9du1SL+qUZL+ea
HEa7hXWJpf6dvoDjQ8M25UKM0UMAaCA1/+zCPri2iia9af5E4j2QYKxIIga2
IgIDT0CqsitXR94Z7Is3dRLgAyIKop8wxqRAit/LHP/yiJvLpzYPlE9r2qVf
z5cnDDJSIipCiNOSoiDHZzHEsFzCQL2q7mJ75DNil3qsGuCfaDnjOQIMEKNG
vYoMRjhLnB9QCJ2kSB9wDShP9Z0rA5phgXht2w0hqGbPnnhIQaNOv7qqLPKa
cbnxX2yfccVQ3BvPPaBwBTBDJ3V0cdFG7H1rHTZaA4HBEDMlQ3+S+WbrgZ5z
G6GTY9cH4QQtbdhcdw+HD9Fpf1UXyBvM7f1o/drS4SMgqPiDCovsk6URFq0n
FvSRlfbqxPsLilKiu8HUN7e/s8tnN6HpKxVsASXe6XP7G0KEZXKzfcxjOdbL
uo4ejsrgqWwFbuYRy6LUWVWeUzjJ16KF5FUwQrPVRr5IB9VfPqvpidIJw2cL
G9NvuyhzTPs/2dU5dvdKkJFapN5bEEEWLoHH42ARstczL294oNVynApdb+jN
+MpbcmdGWGoNPkls6+2wPtvPaeTvZbkRd2CDI4Nc007WymXwJNgcRGBnDgvS
3ovqbZWa6ouY2w095w1bn2spb84gSqrCDNqGX1WM9Q2VLX+me+Munsg8EOi1
WoqPe3JgPD1PSVxGQx0JGwDXEVkxQuXgewQN5dZCkj/dX6aPtPZ6hBn9f6TP
ezGJZ8+b7SMh8+TCGfXAehsdpJvNEf/e723+3Cl5pN8rFYedIle01ETHO2rX
6JHZ3sP3o7w2v+4netAVswois9OEoklZoLg8EykUtrYFkucGbpGXWJp6rsuW
yKk/I5aLBXmfXW7PBwx03VU6uO2arOq8D+VZrpQjxRjhyCfK64yfVdBf1zri
yZ1HtPxWaRlu2PbbC0xQekKl6O4hq010QN84ngi2TqMrFzYp0tFDAdR0D8yX
mkAXEDv0iJa9Tl7Pk2KySLS+nftB+EpiCyBvck5RU69Wu36UFH/+gVmTDdet
lo9GW2FF5q3PcVHmr03rOrQVJPGQrGSk47EzWHZaJNig8lkFq9uFJv4gPAfr
5D7WfDzyKMX0zOIQP26S8v1aYJgXjk3IxJhw7XCmRkkooo53u9/XxPwl9+DV
+Ib3zvOKH0aSBQrw4mD9XmeKKz9uLJ/hJ0dsUSTCcKFEuJ/I/EeEbJkHwi4N
PT2e6+rG0nta3uq9bChzaDRM0zfwkkjWyZDiqYvRr2YEhxeL1k+c+PX6Ssoo
/DgKMDX1CX7AAIqgUOoIv7i7lFr4YlZk9MkmPqfOklj2xDExuuQh1NhYt0es
St893Hv2o91nNtHHAofdtvLpTWTBATqb+zuqVJexlbLKAZ7jMjZRvpF6oQCJ
tnLVCA+f+C6YV7HCi2TJe2d3WBsDEo9lAZeZQUqdJgpxfs0aSD3k6ddBYch6
Fdfzd6ap+fhMds3UOYk9mT2g+PLus5q4h035fdChSJvuzeUThjOpjQfw8c8D
iSPulXAtz8/agFpSrAF7WMiediHKTusqnsXG+gOobKwx94MvlMe3EBIvTt2g
LEp9pHmefs1Rgj48gmqiu+/OroPbwHF9mRNTcHKvlsYPJyeyOvfqkfhA2mzr
hBuAwTer9P9ZpkXFs0/Q+qxsDOES7MvKt+x7o9jTY/r1fwFJ7o8PwHZim5fK
hxId0mN3j1gXQdJ/UowE4IpiNvaOlLNNU1S8TZhb+25WdF09p2hygUq+0rA2
tCkaVHhveFvoK6WHNOm9oAHzwGfDl/KVyj9mt+HftFTINjdhsejH5PmxVuCK
V/T8QJly6aTh5IVv6xw7EhBpsLTVLSV+6PH8zB+fPqY1trBHGEm0MsX6Bm2B
w75MifDcHj1PtqBHyYUGZp7Xyx4B6sD7iJERxiY+T8RQn5dyTjSCn9QLeXOl
HDHAOSDzhzt9OfP4EFEx+J54q+HuzgPatvee12hcwRUvREBIeIoy9l+c5VfC
q2AnWFHJYX1LCAA3yev8QVJqHSGpp9hJc6OYXOETgkjAMpyGP34j3fx4VDAJ
JgfUFRnwLXpzPKzRpeR/zTcXHBhBUaSc1grSkIk5Kz9QToTgO6t4XpmPvlNC
CffV+orTh+7OgQn94d150PGj/snVtB0mIHpJQGK+D6wJA9+TFVYMrAjuiLb0
GHt4TWlnGztzfdvnb6tSrnLj8cPASVsDXoFq2udOUBWS7Yg1pGAs0gHaED/j
3mGwYAUrjoWV9BEbAV+eSIO72QcDWKqO/Ta8mXq8geiRu/pw7qCjkyKInU5L
imrN3KQYe2U64yK3HjH5hh+XM5oQjUHj1R0fGABWgODmgyIaVrv4KjAsJ4UT
J1QCTGLP6SCmq3r2jA8O2yUZoI8A0UJM5yUxb9xuiJ4UWWwv53FJLcCzSTQ5
K399NLm3psEHoMF3AWa79Gsx5H23BqDhLzlh0rZzuk9vZgCTnp+6kQ4kMSKA
uPC5XuRsry53x5D9kzIvJOxpUyPR/ycxYNjWvoq7tehHQZDo+6S+QcsMBu2G
HGl8P27mLA+CFpSObdlcOq1ps5JNHAWJc7SMtJu5OWH5GDZm9J4jmpf4RDBR
4ZeSoh+MkOAVNUUTXC2x4Mo1d6HS1df2FQGQmaCkKK0CUHn2M4ogCFWCEWG1
qWmHNS5SooEckCbSJ0rHtCxIfBKtwhH1+40QIiJFDtnHxJjkUbOK7rHPqSRB
CwWngDrOELwz2vVcP57uZ4nIFAsnbIOP4m02uLFM/trOI0Yg1wqEPi0vx6X8
WtAYBH2vqHkSeUe2Ad40y5OOyNG1mpK4Mi1SC2A/0QmiYe+t6d6CUGyg+7Sm
lSq88MQ4UAodk1KnbSVrwB0FXemjsktakDkCjQWtz0nd8PDnlAVYv8doIC3F
W6BM6JnYyLwdef8HM+/IRV6PnzkpjNPBP1P8R9rfVmPU+ehkbFijuASw4Jlm
955vC40X9V7cQFPALjWsh5pGY8POSmT52Dj8fqM1ZCt9bYDjSHIE4vK7Pm90
4XWwoc+olwBVQruXpC6y3AaXGVvoOfUjiorkMPwyq5j/K794ukXf7dy/7e7S
6c2wfN6jRNA1cZT++vtdmRZj2dzyj/sc3VmlX4M9JEytc9vsn3uviHj4XySC
mNUm7sJSYYlwT6gFnQTvs7/WOkSZlG3l04zuDPJ0UnhfE8wIK3KjwjbSDqBD
lpzRs4VwkjvywZ8RRIFkHgZ639/4ePnYEc8rGrUcPP/OUdFA1zjbTLxaHSm4
fqfMOs/iubr97dEabrXq+ciRL5VOaLlGq1wIB0MQviU34Ad3zJeT4uWfUvRo
ezv3FNmwCHsurgmmcQv4V2wqLRer87cDMAEyv5kVg54G+Op81Y9tapLNZI0I
fz5VbWjEi8goXvQ+gU3+fK84Z9iPpdxA0vuTgiiEcNqWq6U+4f8f2JgWd4GR
1eBtyN1wpSAPByL1nHO407dl5TamQQbQbnFO/hac8L6cN0uwuGqquJZhdUfS
9G8aYENq5vQ5DONzYbPksZFEgA01RO53lmUU+Ja6UQQVkCO8pgwVRv0V9acT
QP/YRKnDRGaKkm/AMPyhrYxQv95WW4TmRPknVKaq4cL2amKTpknpKFgPVHwo
B9s1J/MsAgQ/K1LPZ2Ozlvd72A/a3Jx5xw5NTNgDSkPAPKw1cpMqPb9EpT++
0wdyhxFwk0eZoTeplizzf4ICgMKa7eSo0dVI1ka9f7Iu/5t91RryvhQraHwE
NJM7oeIrNGMUlQ8pigzyOyCBu7UDUQKkuBQRWsXTjzMSh/qfT7w9hfCLSyGr
gdnBXHmqy0f7jXVEQSkWFoZgGimRTYJhhksKhbNNTT9QuweGHMONtYwJRQY0
Y00x8NznvIZdn3pS/0kLmLwPFv4T6g5UkH6merD17I21rxrLATDseoOeHlSJ
aNwsDeJAKOx7StHbn2Kjxo5M9556Rh3qOZL5wdECuSbsdTHOfppEfWPqtWvE
kmKDM+t5ZZXsN+72NTkEODl4fpzA/ZInqIGIeLZVvLjxqWyqGXPvJxryI4nW
xBr0WsxuNt6QuN19Rd3CKCAiRhqJu3ir4ikjTgH77Q9/PABovpi+CIWA1diD
JcYG4R4Ah8hHRI9Y5D526VAI1chaM5pEkIKO+uCsO//FiZclnpcCYieCHjH0
l8Zl1jfQyH6xIPwX5U6wCdbH5pzsw5kKYjjAWDbzw8oyB7DkXnAvl/R53g98
/EcZ7ouTvQa+967w+O8dgXxerWQHn0dGgPnkmAuJtTBW0ZJQxCZ74NlTEjQ8
8WxlBKIwxvkt1/NiV+lgeaXPKSv+rGfEy9KISg4Sm6k2JeRms8IFMO6F/tux
RRXzVjCuNwVPhlFy5P9Ea8EX9GOBRUFzXP7nCpjwHrzb5MxrLSScYnLaGgsT
t5pYx1lJMa/DC/Lfb6VOysDLQqRoGpM61+XO0hEjSOmAX7sEgRA00uBkADFj
GISP5/EcF12z33zI+BqahEgFYUbH2B+PQ+lJI2Bd+VgQEDYFU0Yg/TtBEH6v
X04WIGi0IVmsYXDEzp8RcOOk8Sd7hCfQOo9b6nmyBxMPnIHXhG9gVRqR1lc8
9K8bhMbXDV2pHNgapQUWqOxLNQ0l9us1pn2Gk+hb7aI3q9JRHR/nY5cLOhhv
Xv4xV+qt+KjHKnkA/BzJrMETdd/2jyu3ZadfkQJj0SpKs4EyYKfh5f6S+USB
sUolXopiZBl2BaYWuA9/0jGf0DWcoYJadcg2LUhwMGIYZz6OhB9/9oC8EAdm
7E8ZRrK9qvvMqQG0PIwZSgMZKsiP4wqAB5XU06EA6EH4j7oG1AJBxdngGgg7
IjKPFk4kw92ldUt8qUaOvlDxAjkKjGAwa4b8opDsx3CV2JeOSbANN8IlEoTE
EpJ/k6vjnR4yZ4Rq+KLajWoP2GOtvuPauPxX5Ym5uZ/UQDOCcCz5eO3+DeCI
bD+sv8ObiSGLP+bH7654CgDt2yVNZdrFwN0gvriunmIO2bLVSsJxPbFV638V
KEQ+gP++tG+yBRk8Kp8NsOiTN8fvAsspgdyh1yZWxzcDRkhOMu19kzCscaRg
KmOkYvq41kVWaPQMvZVfPCG6L7kGJHW+fLMRUas/5rSkyO4A6a2z5B8EMcgN
UQdJUFuxkbjUb5a14judIcxC2v+Q9PJK3FS/4BvO8QeKzWCiYF6fyQvaiPdo
OyEhKl4JbxGRDAAImeTPbZNjUizGst4FXRHEpbFF5O3Epzg2WqovV+PRfsUo
XWSd0LL3VopffzViOa9cHRuZq+9LUm6ToZ9QI2Fgzvg1wA9Ju08BBPkMvA4e
D+/F7/2p4n1A4Tn5BwPztBKxlLb5B3MYFV5AI99FvvgldVJh1A8sevcVyzQQ
cbG3Fp+xUGHx9NQRly+9AER0qH4y+oq00OaFecjJCe8oHdZKq4SdZOrFCBKp
2J3o3YKoY6niBASBSe7dXYe3rs5v8eqIYUbZdxz1WNeRI+jbIkG2QmYBgIjd
+rESTd/MY5gnUs/toli4P/wNfoeseaeMFJIBfqW6SecoLs+q+ml7FfWDGbDs
sIMzV7a+99J6bMZbMn5fzI+H03X9OBiYgomBDnKraB4p9FkDQeJTNHzkotTR
H7w1+J9lyq9Fmz50kbt7PtiIjdgu783pI7jdWSQqXBEouHgcs+8jXUeM2NDz
/kZqC3hIq22LWhbVBHhSz2Bs5YK0UFdkDQDSWM0ZD/6KDsBUR6OGF+Wo5rWK
e0tKN/yaf05Kp5oHIOaIzrmP55fgYcwhfBNYKYYjnxDOmq32EaQRlo/QkJ8m
rmUwPyBDL5ZPaKEys0TB4SKF1dQq4RJdV35fIy7ymdJxLVTjr1TLmXXNa4aC
wu7DwhNTBW1s3/mMS+sxykt6L2ogdGL4AdiC5uE7+RygGrYfaHZlWkuxtF9s
/ZtTOqaF2jKsGRgsi3EOsq8e1Sjow2FfJ8UnDf1H5WJJSqJhxK+gsB2KSaKu
tyPxZmo2F5IH254fyeOlY0W2fEBkU+4uHdJKCs5K17kMEApvzn88KCwXJuIy
SZ0YfqlxOntDKNoyVxV03wDmvLiZLpPLNU4ssdvWxjbY6E/q1QI2fUecKnTI
8ao/Sn0n5abuc61fodx9ynB+voZc/ng8ardGtAgFF0hzgz1olTw7eS7UyarA
XYePMM/dc14jlDPMM5RLJw/HjlNU5liN9C31Bhg+89X8exZXvM6VKnAm7bCi
5yKrvG7u/Vj9Mk0N3ireJzQ8eJ2MS9MZy21i/LH8fVbnKJQiFws8QCDvyn3D
0EA/cIfqoCCin2fFbrIhRU7x72o3LrjjffFVbjXKpzcxk0erBxYBhtiNsh6r
e96XW5qj7Ch2d+dHkUYrn+NFwN38VIzmAknBQGljJOVTmx+avn+rxQkVtyyI
xB8FgB5R0yyPj5JWWbnyfxhXwGphoaDv8I3p+/DHEQ4UIHrC+UnhIswq9RQt
36eItCXSgDhKMvE4RJwXWY7XBfNIfi7ovaCBusW23osbwE448NWVjipdvEHb
tGimQbjxYjNrhByFWdUzcdiS8llNvCEK8RdRBiCgt4pN6zrptIId5DaqUwF3
eMwD3RFGJxsGBVccqzdwdDgTyrHv5r/fX/H2sC6pGKp4c41JRuU4qZ+Vj255
Z/rItklUhRwajaKRgL8DkQQWiJI5Lv9toSnuFbgyIGSJSoCu3hZax/0DjGNY
7KtCb27YRsztPq0ZTb21a/RIRGZL96nNa0unNG3OvAyyQRpJxnuxfDnc6fjm
Uvnk4QYM3f6fgCzMl1Hjkliai3iRKe8rn9IMwf3vFV5usEHrsW095VOGB3MW
YJOUNBty6QClmv711Ck4ED98CPkM3NIulZtheWEyaqUdr7dA4nznavIDP48z
JdTiZ1bN+KhR1b/Rc1GDdR2oVgPxFxWB1amzi4O+8CEM5fJvimw/FfejWcqK
c+wZB3aliPz593ur3Gf7IyEXpEVzKvKNAOGyMKLWVKCIDyOGt8Xw0EHKx3y+
f6rhAJZwLe4a30y3ZW3N5s7U0zxvyhBFS31c3Upd1/beiY3oCENI+DKaZC1V
762b43h0InkM/dcVK7yg4Pbm3KgTIyyQKJBLYwtJbolaLL5hLj7/fQwzvGDR
rrOyNMEYcbAyTBLYvgZ79ANRMQK+mGDhRLk1QhrcICocm4U2C1IZqpNQGzVb
6vPO+I1Kz/kNW7rGta7s/Wg9US5HSQkskhOe8NwXlgnjLEj9463JS+0qnGYY
Mm7Lyu3K4dRGNSxUf1rg8Zca4+Pk1ykTSkbRbKZnKEZGvgdAil5iywFIpJCf
qEk2AY5wqc/JklFUoVEo9qOB0xqr7qINLxoGlP/NyA97Ze85TevkDpi4tS60
IG3LL4n0z+bEE57gLFwDK351K/UI62dqPpNH/78Cn9UirUPEgyOt9XNlwiMC
iSLOOVmxUplfAyE53oelj5+ZU8ytnpdONp23UlXWUc0RjtfUcZdS2hyBDDNY
OHSK3C9OFr8xyAghB38pq0m+uLpErPOT7iNaIH2B3J5c7G9EIUWMs1tahDfy
kk3jkJpWho9VpuR269xGH3Y9rHVN6eQm5gHM0+fvB2XGfr60kdhgS+5tWbv6
g9xXeRy5b2C4X00fNfIuyXjdvpZPPnjlzIvqkeFNPZfVL6l45hSGBFItb8mo
85MPSg+Q7x5hmpdlGfk7nNSS1BcHPSPKxbmVYgE0JobS2BlZLb3IIfySfo+e
THFftxf12F2DT5sh2X4p8fiQBCsfSfTzVPnYlsUkWFJXYbzwRsWOtK6uz400
2QTkuyTI9XhWkxf1sKaZW/WmPGdcuSYpEASXj1FGH0AX/BOttgLp3xcGiYoO
WTyLqCvV6HwYcgiowIe8nvjmyS/JAvFzAdZJ7KridxIyEGMqoEPUlondFy3h
02FgJYqM/CziQwsnGQxokvYIoccSO+aaKvIzT2feqkNsQy57U37s/YnPi+Ar
KUqCOvCzlA8hXw2E+ojqd9P1uZsrzv2LJHxViD2WpJEzDaY7YxTMA1YCGV/X
Pbg2dtFxNvyi4hiJgSRLyqSi888fcV7Pe5tpW9iKtbNes8H0u5KRf6h85Ii6
mpiFLaW0DTCGgjeOavGO3FUsC7blpOh5Nm76zMMtTpoo3rYnpg79+PrleahN
E1q3wjC78X8Qs9iro6EVlwSCVl4VvcN33JZbnl+qhz+WNa3Pb+xBdRVHVQav
j4tdaKwkXklZIGDOsZBq5tkwIHtKh7fugWoCkJ7HK6FIETOsV/rLNh0lTsi1
ffoBrXf3nNmMn0MacPNcxY1yEpSlOINM6Ae9J77nVpEMlBKrSiVGBN2twOw5
pWNbdnQd6gEDaQaxgG7svbR+aT/cs5Mthw1qwvLSlz4lLVYoFHWMvQs0/nsj
+eOz9aMxRLU+B3ZkQxaUz6w6o1hcTXjG/CDHbEhBmzA29lxaz7EMwnjUjd2Y
FJIAQz35JEKhHTlWfbd0crP9Xv4zSzV3TtSIPlI+JQQKXtRgTcdcUCOncMjj
0Fwb8Uv01+B+OU1lRYKqz5s2HN7Gj35bP4pgRQoeX0S0BMMdKrlIj4Lx5YJI
i1Bq2zbD237fhrQ082Qnj7VaFZoNMvSo81a1CL+bC8hCpVB4rkkz3UTNkUXG
IUQj7VdrLKPvJjJdHoz5Ih9sinKo/cjwMFNEJdbW0Tm2dWHPhbZWJVOkwbEy
BP0JISKSh/YZH3AM+r9JkCA7O9S03g8Mw7tCyxQKHSscrY8nVzLa0KHJIGIi
lScM2oqZS0unNBMWvNt9bhO9lRu681+XTm/aaufiJTxb795zbmNv7l+BBvQD
meLm38N9eTSyH7ySUNjO7flIA8eKs0cqjIN5cFFge6V8/PANnaNGzug5tXlA
Zm5AQou/RO+wDyt6zm66t3xoKxkrIDlOyho9gL3512/pntiIQySKeF0Zq+e0
lqwz6bDl4uRfX1EZarrQT9VDeSTS8L2usa0QN0/v/uCwpbrer2b+3Pxd3oM6
yyA7u2HXSPiBx0gIeninpPIYSQM3fWVh2dswbdF+hFQ/JnPI+MJ0SdVzqoTT
JPLl2e4AKdDFGDTB2qHg55PtY0bfVz6taVMuQUBw20WYqm840URipd0G4N/q
PrOp1HPycKuJZx6Bg4FJf5MOojOHwArNwZ7YRtV9DCINXi0pXZVrhBpWWnbJ
7NoQQB6V7FZvqs1bs9Ipvx7cD2EFvasgsut19GD+A+zxDzzGAi+3G5wy3d80
pq3MFRZF3SLP82bPWU0gKJILSEFn5ivfscYXyDBwyK/ZQhgvEjM/wOvRLxMj
g4669uFSF8hekEDz394P0xJZ9jC6fLIFLHLPcNc+p0O6VhPyFM6orPK0yCL5
X+d5OuGcmrTTPRWvr2F14PP4hlwgon53MnkvKgiag9YlPtgwvq/oxEJbg8yG
R7uwhib0u7IWuCAS9rh93DlMVkBTkrEWOZbGt+zKXWRw8SxJC2IuCzYUmABk
IqMUrmmy0mscjQEdD4wODnKeAEnkqqLvCoDIM8dADWFCvA+FRXJgf7t9G8AU
zIZgYNws342l79ckG/x57jjq399ffBXT2lSr4P6kPfR7uZdvLDKhikjqV+fK
TiGKf7NuC8owyHqRYgwRrVYqvTRE0ejrqdfVFinbNz/1fhb8DADIUd8+8ETj
dGn/fX8lhP1ILDhbifBMTOsBj9C5KLJDtxzw5J2Kt9rGwP5GhRH8eaoCCyJI
tgBx7JLQk9mYkTr9FNVJpq6eygE5FUiq9WGOmTIaU6RHD+W/2xXe237A1DN4
QCM0hOf9cuL9UNi6xyo+iMOfgztITBF/7Ih4JHEvG1tgSBrhDsicYOveSAsy
XrychyKNPAbijzYRs/4uLRKaiAbVf/DFN4WzVQv+24Qh0sWdfWjOZJMgeCiD
xI1wslPOgNMLUhbo7x5TJpaOEI9CbFKdj4yBqgcUIEHMmKVOU/lLzefQtosi
sM1wtbJxA4ao2qs0+ORbwJExyQQ2RqTwXbRmv1xpN2PwQOLc1VF/xM3zXbZu
WUlNjDQrw6kzYnsQSaIXFE+9D7URRujbUxXvwtgipEARiBY9usRW6u6JITfm
8gl9OwkFP40JvLWnPLVGMvH+J769N3EyvXmpVwVQW+7vZp0c5o1qQNLn4rHd
6pBOIAQwibW3PCr5ECBu5DsiquB1qC89IzH8jHAlUQkoGlUgWbbFnklraRKn
0izoB4ahHUskqZtVB7JpmjRauooZZvUQ7MOvN1V8FwaaOIjoqW4MhqiSeuoc
sdpZ5a8a3UadAmokgmgCaCTb5jzlephgA2dMU+s2ZCJkmDgtz+50iE2sbYhs
5gPSYfzIO31F06DZde4y/ytsYXgzN0HkwGcrXxb3/y3DI7ZozPzZqQeKawgP
acSjmY9qTpesYlQAKHhaDHcQSD9lv+9GaIWSOJbxMiaZg1qt7U/yD6zGHnJG
z0v5SbZxXndlvjEBgYwBa/IpSArnhMDSFhzO8WXJfVdSrKTg11YS/LDb3zgs
3vCMavJucLSKfT6pRhfm46IfxpLqdT7MCaJF5YxHwFsPj0RAsakk3TgCGnDx
07H3A+BCxQOhe0PhJv9tzcXKL+6q2cJhkDL/ObgPSPrRCDpddnpu5tXsZ/Vc
tX4+SOjMqbk3G4rYbOgcY5/97vSRbYwa4wSPUTj5Ifux43i1cNEUU2kUGRD3
Jlkwq/nzSrZMbWwbN0LejYm5q3Mn+V3lP0FJ8AoBNUgftSqrdbCO+L7cAtLH
iGZ0iaWCmyUHw1ZSoDP9QNRAwHXWLJp4PQFiYA8mGpZPbzMfzQAAlAZMTHEz
fDU2GuEtwsdDeVEcFHaULkOqJm9WyLr6YZLp2ZpbG9SXLUvbpe5R0FtqcYOz
2PTVgHIs2hPWje2ZH+TQupcS90qcJvLqocT+8dQb8zvGJJcq7oUw+1E1oHvo
Wqn7wRLXP8k00PjwvHwtg1e1ESWRZiwekQy30JrykB6T6JTGixB/0hjk3vn+
J4L6LHVKO7AfLT4T/GNAuYiwc66GBjv8WJXsvXOTjBMuY54sBN5oKN8xCB2v
GwWYog60XdaQz6Oh2HtlO6odQfTM7ky82XggcyMcPfZdibNYcsr/rGquav4g
KWQAV4AmWXdm/lWY/A2piywfwWkjUgR0i4WcSNMRTIJqoComukKTUYtBhEJ1
+8aY9V6KpjoyThK5wl5hM0WTMCErJoOI+Y5Rov1XUoj7NQDOXjTu6Xm5hE3S
d5uwONM+a2zYKf73of7Jdm9m7/8fX+cBZmdd5f/7pJHpk5kQAkiHEOlFUBAU
UBREwXXVdd21rLsqq+6ubS2YDJOAdEQWBEQExCgdEem9ZubeuZPMfd970yih
JqSQ3uv//ZzzPfe9Ydl/nocnIZmZ+76/3ynf8z0t9RZaEnk2mi7x+AG54XHB
k/C4KNPftOCTS42SKeID9gC4D/CY9HPxenj3qnrGRU1Z5xwXpEvcnl24UYip
Fx1vkNpQnrnrq+cXCrt5GIVmhr8Bs18oagsbF4mUAOwPV6NDs6e+xRmyuD6h
POmpxxzY6bMq3on3HypTa2CKmrywvsc6qdAD5J48A+6GwNEKVsSr8c64vUvN
vkNlFXbifddHwev0XbpvFqq3OOfIHYKHNwZPb8bbrZtxZhPdyWsl11iUJ2re
PKfgoSVe67LMJsaEnD55rauTfNSMzaDXSs/vyMvBXFAdsbf9dQdPMqW41xgW
d9xZ+lDbHwQcID9WZxH45v6du4dKh3SskXYTnPYLHsmLHYXk8LWbMpt6R2bi
A8AA38DJTJn6qyKslxOvRLpPwS7gFt1DFX8uALxeMJBXx+NB2kLwBNMxUdLA
3xORklRhVA2rgGnvjMGcRAtEvBbyQ1arPgup5/m40e9kRxjpK0UMnM51Mq5E
DOjnVJ34lIrTY7HJYf8cCzTWU4dt5aTujxSW63UT/blUf74qJ4UbOXzu1Ho/
9e5zzw+6+rDGoowfVnPQ+59ahoBeYX85ZRDog4knujk1+nwZqbuKrhwbWLBz
9/LSsW3AJ8bsztXn0YFqE1cr59ZrSPjZPxITSLjAuEvi/kXC99REEDaQ+sKe
PF7121quHhc3Ox2NoQKVkLavPXVIuW7wxFb2onA8NPyAbNeXDut4LFMV2A45
7F2/n3olkNUYph4bbFbk81KD3GPTublRUkNmMZwvWgoh4Qi2ZthgWT/bpD7c
dn0WETGgiNcXizj2ZsEjNsVhcph8YMIxlJtijohye7Zh4c3BIVjv1wTPFide
J8eME48NDuGVZmSqjatjy+XG0nFt2zIwv3Ig06/Eu7GjWBY5Zc30AkXCMeX7
KcWVD6gTHH6AWXd/Gzi+dW1mYVgWwK3MqviCKrJ/eGUs+bWpF2dhtQidKK2L
GBXJYVDO4/oMlsf7kKvxJ+nWbLO4ORvvY6cLm5rbrYNnNTVO6/B5BJMtUvIW
HPfY92smDeQUU5ZtC0cS4cJoi/2VfO6XZvLnn9QaK3hsCigm3GpIUq894RO3
F9/faRFC/0Gd6r/bnYPE+PABLMBBpOeL7f16NXcjj+juVisbQ13It6pTfXXj
LC8H+qOWRmMs1g98qG1zpkbzi0e2Yx2gjiJCiGzVf4pHkFWIlndjbQUqY0kc
/+02O6+rYmqCd3712jBhur6+I40HxWGTAZosKIs9BoPiGysVL5ZgzJNNCkuc
QOwbOKkFCLZo4IwmEAJRhkv7qNhL6+sPnOS5uF6gPzwITvs1wd8GKh4samvN
PPEyZr9MWXk6AuXT5nj8sWDwdCu+XZ5JJU/2imUATmxdlv0HwKP+7Z3sz0jc
kUNTI6nbjScIbAEzRp6YhhNiovm6BD7r9MxnQ5vSKg7vaCFh1YEk2AcMKgMy
gmeGD3upfHrzidn3+Q6DvVjeAFMyqIwcdUWktskObCse0LW9f5furf372O/b
MntBAE+Rv5VloUwVz1uZg8l+xrbS8W0b+sZ2p/0Hd6AxbFUCdvAqP9DmSR7d
KDKf1DKeR2OBCcqLOyA7+JR6sxZlcv1ycf8xka4nOpimxlaodfjqFw2E9tg0
94BH/H6SnKrmLmOR7xJBQKEkMgAD3COkhCgTkONJIBifSDznhRJPjwErvsRu
PON3Xuo/YMwyAnMYgvJnm5g+AVyBx+AzsFuxD5KytOeKh3cQQcDwkZTEbn12
pptoEBgq83OZ65EYtkLX4ODHWixi6N9vDCcBst8sIEqcDmi1dtKKT3rk4jep
QAELfkHNO+73sae2/daR11ihHCXWmOK11QMfaR3GrRbGs8sJXzFbVa3cyRqA
TRb+3jt9967Y6k7kdlPqWVbmAcTOnx2Sc9kvoC4xDvQy9suhWAcRWjSG41lv
aYjO8MQ3ZK4J47lUOOrmzKhyCPgRudbuPRuiA6isWEi/qOJ7dJernOHqTEtu
lXXlYL4r5DtDYRYeXCZ2J2wQpdgxJx7jjzbumQcrLUcogQUwwqwiS9iVNzP4
asxR8dBOEtRWSjAMA10YviW7/8XFg7wQx5nrnbB7EVECsK4Q+j4pt5PWugSU
jfEc/6jpodjNL8uuEvHEMG5gMe4/IoFJlbxFUbrQxNwN5Bs7i7+EVAWNURFP
YPa9PDK2jByqjJWCEmSpI++4OZP553U+fKZFOx7yag5xM7hwXuoeijJxUqC+
2tzNO9tROO7OHHL2pt5l81QWQfJ02NO/iLTmpKIgixPS9BgcySVyDqT33Eqf
gL7Snv9waWInITWTXnF13OudFtX1WLFA9NwDdyqlo9pXZV9bLB7Zwae/IjOH
NaWCB5mk1IV/oyqW8k7OBXSIb7s08TKYDQICWOQ3FLLjn2KM9gEzJvlEAz0L
i8kh8ti8N5TZCvqpNgmzUw0LVrdlq4xoZZ5EzYlpXDa26uTZk8NhxcYt+/V+
F1esCaLDsmbA7Nc0z5SoHGsaKmRBn+fsdkF7SbKhzc8PfrSF9qq7B45vu05i
epFc90/kpJhMDTIBJcLZrM6MyhvZ19MEx8U9q2ew8MWB/a4TdZkvlD/asmb6
rl2v9e/b9Wr2PbdWek01k8Q50GVClZR+vpn9u3UNJ+fWi4TJZNoOkIGTWreq
zGDh4BlNi02M7yZJ0Y16ss6I8AthYoIDUsOU2lcyCPpgpppLqz3WykaZJ8+L
qBjznTlqPpdNPAYGvBiyNZA97P3K8hnWkZFm6gEzjimj04M130lxgg0Ddqt1
BJIydxAt2sOrTSs9dcbcsicVj82ZFko+kApaJOxWPQ4eilej+gBCsb94RAfH
aDGKDPCEl52i9UpCt3xYqlggRNTIQBfilivkqWzlQ+KecG7ijawEDnhBdl2R
Rzt3+t5d2tJ5b2aIk/4JHaSneONiFrfQ5LFo4IQ2hDIaRGzcTOqrFmqJz7Oi
0gkkjLFn5sMUgXRCN1jyPye+kRHE/YKU7wXRNcQafN00KedyhWtIlm2ZkqG0
TRTCEbcIj6q7eZ/WqlcGPSbgSH1c9GJWpZhkiV6reMo/mlvMeinBsTx1Agwi
jLLBpwcO7aBZMdJv1JpiEKKYhZD0CT2rdaU43GsLTM/3rC2d2LolM1Q2ECJT
dBzI+qpnvHBoXMl3MokqDCOUKTRjRHCknCPLlr4ApzjjU/VCm8V21RnYReQL
ozmaZ3W7KChUMR+3qHxCG1UVH3eL2trgVjFZamqPuuGe3JMcFItfyBLyIBS2
k3LDc89WN+a0hoFX381eBu4uERJbKSuJ9YM4B2kZKao8PR6ccs/rMl14tOp8
wbTMsx2XBZanZtb4B5piRs3HfFiPDPq8kgUoMC0IVZRM/8hB4L+JVUbWJmlu
EZUvixRURJ8WCegYN4u6RALzZ/m91SvzyJkeOnuSvVZsU7F0cZIz2JRLk6YA
JBqJlDiwAXPj+AOmI8MxQOKUasxQ3BOjQ23S3WoDmF7xRM3W4sGd2/t3Hru9
uFe9QG+FMM1yrQd7R0PzrAwtrEZmLKki4ZbwkTHHhNeJmJjXc+K9BWj1q2Sy
8fRxelSj0j72TvHINqSMERVW3OJ0WPMzClQo+4L8K5Y+1uLdjr2FU+b4pSBQ
QuccLIUnSxLvMISYiLwMSkz0R/kw6O5l8fm4IqK8tzUARo/bDTq/h4MeOLp9
Y/GYtuBVY6USiUwM072kNTKZCrCKOyIl9oTArI1J8cseF/vnABsxHvEHVe/Y
YT/CqoGj27h45LiU+HNCkDDxq8+8uK9DJswkwPq56gSc99ybjybuXjnj0/U9
gK9WvK0Jzwf4o22cHkNYNxofGLm6PovLsLdvCJTwkcRJ1r2eOGz6jfhQbER0
/GAEEJRnZRe9wKID3MhlP57hkFVZlMCSaq7zwnSSmWDMOLI0V6ad6qlq/8QO
c+qeyrZmiMC00XWFKnFSb9R6NKuTTN9k83JoKS4AUEFIcbHG9bwqTGahiypy
MNl3KjbDubI4fUQOyXtl6fk23nCejEx9T3bi01a1WGA4BVZrsoBo/+oFBTVB
7dTaUPJwfeqJSf5s4+VUk4upBP/MEOqMroKfyvLzPdEQFesYzfPrGa8UhDeY
rxopQlFIe8zyvIEPtcPsMLziohyKt2HMOAZee2pmEIGz4BkrYqnkcxu4aa7A
Zpoe3gjJR5DzooUyViz6tu7hXOz/ZBdiCND59baYxfuYTDkcAVNifiO5wocF
gqvz7K4uI0hJIHOUwvHUB7kH4Uso/Phh/lLDsTt8ecMe1QmglqjAtdFPidOJ
3PvDFS8g9qU9Dj24aEic1arsMWpUphjalEMiNYqHwf0Gy4yc2Zi61Pfwbenb
1aZWUP2/qeqUBhq7NPHBp8Pwy4XRVpynuOZNMa1BUGPXRKH/WNdxc+oRGod0
ZG1SfWlkRHu2l7DuZneO1p3I8VGA+nKaj+R6TgHFUOJlCK/oRVFIW0jYN647
Oulfli2QcjYj2Shc5CNJPfFOmxPPIdqU7iRGeO29TQMJsMrr0xgc4qyBjRmG
8lGlBGRoTOiHoHip6iXMUDdRoMCbo5jWdJq91v1CC1A5IM0ZgnfgEu7Btw2N
Riep++BjIN7QLegcJJTTOi7H1ZG1hJXZrKHKhAmxC4+Xb8TSSAJYmAS6rXqq
+PLNS6qTTbjP0ffwhJeKCYgQi9HsSOnkxCdWmrOXGGCdBsQCgXHeUqp8KPE3
nqELi9PjtTwqGnm+7pP7Iy2HCykMA6UUDgBzLleBNaUM9PHxWkTZswWtcGFR
wE10RpSHHECiEB+fqRSKdd1Unf1EiUjY3ijXuD7xKOjLMuCAhFsreZVIyCLT
4oWpd8Nx3Cnb8F2NYcWNxmAqwhD2/WG1WILAjucoZUP2sER+VRlQ0TQMBiPS
mIFf+/ssyP096VcDGCNpw7xQ02DRNPNBzi2NRgkpgaDUgtM3GG12wGXX7f+u
Cy1J1GO9AiDDnytQ4uLIcIQG0mGJQiD+VGCBY24TVWiaWHN0x4+OGR7s22ID
oipEhseIPzTQmQu3f4dEljh+wYKQne1Nff0iHIR1GKX53BPsFQVFB2fWhHfF
ITAe5u2qJx2wgUje6zVIF4cGNTmL2IEFsuZM8Oep/OoD0ghyJyAYZs+FLgbq
+W97yi7MKVUExMhIUixy4AyQHKIRIrfpSqxPk1LcIXMQsztiWeScHIEicGCv
qZqhQ7BILty2FCXOynB1+DEcFwHooihKS31epPA0kC3qcii5bbO/3iNm3Fyp
iyZ91ljxtb3qtWpwPKifVRpVnCNDnAlRYaV4GqrA4X1fE2rEkkeX5ANq1LFw
T6254VYp10GG+fdppiY9Jvqz5fSpRicnBbkC3X0PKLbfBRIGl/vE6ozwrB0e
Axruy8IBuEqCKK73On0kRQmI1z9qbwe1OC/o/qjDjIlqfL82+nLNGBuKxteq
tIfgFzy7purqQ70VNcW7zjo/qjkAfrcr1sUueLqhE44SWVwrMPZg9hNYdc/A
gdQSZl5cxLCHLUptYbaYM22taPZjxgPGwx+Q1MBq8O1vpE5kgH8w3ghR4zzE
1CJwn3Rck0F+sprDATgb6uZ8BNSIO9IebSDqNSjmL9HOCa5ROcOKzD7RzMJs
NrA0+5sBDDDzrwt8IPU8vJv3XfAeeJGpoi1/0MBF8y1ga/JXNohBFwdqw078
ZijPV0bJAz8L2qOh+mQkS44+31DtYvu4NRAsQOhlFVfIokLfJdUewzncDVr1
ZuKryaE9KOTitZig5qVClqSKKlIwNzeNdwmKE92moG+WXD9gBzGm9vJPiRf6
8b2n5ZtbRk5QTXBgbivecUS5y8kzJxfWa6gYGUwUPcYdfKE2xb7W+gmyXxSr
cEzeyOxbtNGPS0VqBRkB/jZs7sJe8O7BZiuGrbgzst4LFVZh/u9WSTLWUDgZ
fIsCzxUWAxKcIvSOL7QWs0JhB+o6FrCNEtOCNeT7DH97Xmw4T3ZIbOH0bOXR
/Kw9dcIxKpdHjflAsSuQNyVhAkh7U1wDfWbWNjJ4ZhNDs2YPntbMbMOFST5v
YFrFxzOgIQC3PnFt4PhpakqeXjqs48b+PbpJR5J9Wll10M3vGEzm32xT4zzd
RJbIT73EIrpArB1dMJkkENJzZfazI2o6SdYKzQTfXCODelS9NWGX2PwGbccj
UzoEBn2rfEbzo/JfLLoBgaPYqGd/4sKADbLVlFmcS1c6RMWKGWc0UeH50wwz
SFcPRYhBfzAPCwdPt3wzXR42rQTpoB098xtbKAIAylS9rQbqDn1hsRITjBGN
RD4DU0E7zlYVDyBZK6pe40OwygJVUnD4nRe0+tJG0WY/l20EXMVVQrF3Cg9Y
9eHAsW1cS+EjLj47ZKkdSHeDkN8Y/KTlb3gPOCAwO5BypgoxOW5cJpYfBf6Z
mA6GkwMVESlfDGE/c3fugXgO2IpCcoVflWIFRcY94d35mk/N9eCZewEJL6fD
avruXXPKpzWTK0GFavLy+NVN6jG8o3RcW9wL28X61fb8+JDTyUtT7wCKfA3j
urCnvxWW4p3wrY8nuV3FlIMbz6/6DBXeDWx10ZA/4x9TH5z4uuAuqkY129yK
rxt9UziMn/UTs49T6j6dqbc0I0D/MZO58Al79j05r6v0NRSCxBwZ7Dfj/1Ez
VC5qVn4tE0FNyv3ZPTACATncVDy4c1kmu5R60pUenUesYlk8fefuWzN5wI9R
XP5B1kR6uL1/I9x0uLwvfc20NMZYWRjvOxS4LlF+ZWbpqHaa3VEhRPLZxItu
CdcI6eaXP9GML17BpszEd3MsTiYXFlR6rOXaRuAoHJwnrGE91tljc81o/yn2
OB+ECQjuL2pyo12M/8e1Y+6RLm4X4/Ef2cmAsmLQFd/7fPmjLVQ4P4CWV31s
EtLNqbKAMNw+yDemZIOQl8ltkI27sbhHNygvNnk/p+8pK6bktEFlTwyc1ApW
fUgBED+TvjRgFfTQ46WJnbYd4SeuibzjdB0DbAY/G5dGMQXHCn/JNvLzoV3l
zkhkoWkYYXI0vEvjwvVIItC8EQ6C/yfgwkJUhEariVc1gMD4LN+N4lia55mp
aEAYmiOPLgE8vnbqQi5RHUejxebyUe1GJZSObccObtTEBDibRHpOgIX5/o5V
llplaDMVT5XA2dnv9Aq9T1lgg1Spj/gWDx344GxFt+Ba4gvKJUFhNu07exy2
EctNjEZI+gdPtvKfBeVPNQ0piACL0Jfu8Ln7amn4rNLR7c+WDu9YkHqbK1YA
B/WV7MdDvFKYwl2R+Z08y2sDK4q4eAuL5pzt6ggL/IviXl14gyWKV4hIGZBA
5zCoryJLjiXBCrwvr70dSYXAZXKEkG/288XWEklgcUlYkMXHGfNcx2sM+DSh
OEhlLOzz5VNagGMMi1NqeE+e8e3sGengxnrCqPUlnocESp8jpxtVp5dK/n8t
i3+/zgmrikdikB37Fe+rMK/fJ3m+nXlOjv9vAye2Qmggl/4K7bwqrzyrfGrz
Js0ppKXjqVr2CJkBe7x0cGcq8cRyIGw4F/cD4/AxjDIETP5Nt8V9nq+hbAQF
g+Kt3xRQjcnF71Pz9CMSBnzGG4q1BKNBV/smub20kaL+b13vxev+TELEj5kv
5VpayXfg1RSKAySBHr/pHzd2bxft42W3bpMX7RXQw+ZdmfbU107ZYJrhaKdD
wg9p50dA6Ki0u1Vez3aCuH1ojqiXvx8sHdFO8y+PyAk9JXTC/aojF0f+58SJ
hQV6A3hFZh5OkuP7j/qXD6/XgPDLoZ0AdRPnBk9i8y5YL5QJBv7haZW2GB3s
aNoGF/2y6uwT4Q0kXWGYRQKjrdMtyWeGvpt91uj6mGwQnt8At9Pgw/eenVfN
6Mn3gpLhR8FBnCMpeUaMJMWNp2jZwyWZLX5RfN4bNbXLqzWLgJACXqJX3Nvt
NiXWh5JT3HuFUMIkoSEiNusJVmFne7/T9twFlHIMKkMqNyQ7dMyNxL1ip8+Z
PaUe1uvEJ+ADrpOPa+xffn86ydop7xM9AMr4ho4xkDTIhnfGEuPnnlNpJG6b
Mwl/ie0m1cGwmX+xctZek0syN8aWVLy2OwYwU1XvCrsXu38f0Ki+N9J8tB/A
ZVPDcUbbHf+2suLxBeYN00sVBiBxQMU31s2W5m0fIBicD8sXMEuxfrwwjE8r
tBAc2CjC1EsbOCIqOHhF4rBLVDZh0aSfUNdPlQDYkDrDBzHO9zPsoi/19HOA
wDOVIvzKkANOpBjwjxi6hO4WSSbif6rXicM/neZ4mQJ7fmdQAt4HjhNVxEvE
oF8w8euJ81PMXHtZKIW/Q/t5BWf9DyHNNl9RIKGE9876KLSqwA70FbiOghDe
AH1F2B+u5sYogNlvxOA+KscEFiRhy3BvPgdHSa82sX6/ThmOdUrFKbKLpQwI
HOZ3pp5tHqxx9m+OlPf+ti7wbotEeusoOdbL9UgmmVCOjwzrH6R1Y3+NdS6l
nhlaKcELYaMnBTvZOG4YWsKT7/v+YNZU48O3VdwG/rE6xSbToCrezzfeqotm
SXVsMHXiRFd0Wz4tkxxj7emi20RdR+qFXAuEqj3udl9HULY+9cpOiN6THY5x
CXCCNwjt+nzo4ffpUwgNBWr2XieWCs8KrwcAfFjhD9H4RTJOD0tkwENFhYOU
sXJocC5nZ4aGFC4fGd3Gzwq4hDgCdCw3KaeD9vzCcSm9HHwraUqibhhXao7A
yhwa7B82ijoOnA4fARZHPOByn1cyi/vOR/iMCK+LSc33fnb+RDAh9obRdIhw
r0u9WZxy4T6heaws9Ad5LFQYCXCdGYEGX6+HBVB7jeJu4CBsX/SmWp4pcfzH
Zb0mG4qI45LAO9hLiBlYfWgoiKE+MRBgeNwZ1oAjRhW4Cke8h0ZJ5CSBFtz9
7VXHQ0ZiVBxc39iARmKYXCz3++/UO4+fltlHaKL6gt85R/4OUIEsk73gdSAh
gHdX69Yj92g8V+qGC7tL0fQGSZdVxzn87Yx2TfpgsQq8Mlq+UkkFJCuklnKd
e7N3ItjlXY/IrxmgBTLhPyh8lQ9HMx9aQ9HFXNETBEbkcXg7WDHCj60NI+I7
59cZtj3QKjQ2thRBO1g7Y+L9GZwisOZKhSLnpFGG4ElDsAjhPkFAZL4Q4D/V
8u0Dtg4s9Z9nbQ5etdoRzXycLjkUvE+x4glDnDu6h3UhuUHsHM2I1gGn+kmM
IIaPGyHVwC1RNUdH8ezUPdYiUSEEq2TgiOBoffl99ll/U086N/n0EBPJe61M
GrsQW84juDwsadhJr67R0EBsOhKBl6UJ6g2p2kaVwnK+i1WGxM2vnL7zWK9J
b0fNfm7jhByJ86PAIzfVXJdwTxw1+oMqUgECKSr+NErSHtaTNQzvf98owZog
wU+QbGG5Hsz+/KvauXVzw+9sfQ2Iw0dZT27SY/2FQMqAzhiYDzVUzUalxY6Y
9/dVf186Iqx7IvudRMKNQ5Pt0wyUagwKP5k8BHcEYgjGmPO9TZiXIiX1WO5A
JAvzRq999IRyRuqtHE4a5LPJDtPwhmOHPiefWRiGEhR2/kF2/XZyFTd9FMFt
zmLhhf0TO/uGfJg8qkQ/yxJlDuck+Yjoa6rvgW9d3Ns5QEQcRiy4h/Ux3kCT
VvkzIkNO6feZCIN8/FDfx+PzqAAl0Ezs2Q4+GYn9paJ/ehJ+XvVl2cgFs3Op
6bQC7oqL0quCDiRWSJSgWWjxBQoK1ZUFGPkuBcKJN7GD7FfD3Wan8LfSia2a
AY5TekDpq9VyBmvkXqh7N+AhqpiC3+0DH27b3rdLN914eH+qWulgsUVKVe+A
4edBS+6p7BEIw2qdKZJLfQY6M03Ac7YTt3hoB+0R+Pk3dQkMowl6kgDGcjM+
+37MH003HXXbrMCBk1v5MwgHG0pX4IGVqWYDcHpT0t76fnBOcr95v4jczK6Q
DZ+TnXxKDgwh5SSpiCXwgPKEU2RB62OqJqI2EAe6acZZTdir51KfDwin+KZ5
pN68dcH98qF4rFLitsWGhQs1/VQsAToEETdN7WVkYvCEXCEunygB4YwgEN+O
o+Z3HDXvTtD1mt4V+MBZE9Cs6D+4I+3fu4vAjoZzYDm4lxpylsTfJy+IHEDL
UpFhIbHX1e6EsQOa2DpLpRYC0Eq5x0O2YAwJ9u+q+qy06BylCGWxtb1B3x/a
uXHgpFZfJZYTS+uzMwWTUW9pK1PSnDPjnhzU7scfbW5G4tUR/YmPx8HNrSt/
xPqBOAorJqw49wSY4Gp/o/WTUYWwoHh0O321TxT3GxOTnrYIFFg3VOK0L3Y8
rbhhXZz4wOmG6Xsj/5z9jPV93d0P9+3TxVjKX+X2amJsnsX1INoYBNqRMQjM
47CdTeJL+Jlwv7H4YnbFWcYHVEAZ6mAxbzUfCMz4TB+q6FOmKazEBJ9Qzfvx
EGmQCLBjcPDklhXTx3f/sG/cWDPYw6w3aZcYygFPi531NXq9BnKu0NBtftbE
JO/S+RVtAombf1zzKQ2T5iMmMfpJWVzsPZDjGQu/vGD57WrexkgAAhcIjcK8
K6ARxffQKUQQx+QY+hp5GCCoO6Td+Ot1xQnWUrq5OLETJuLtNF+dCa8G+0fM
+qA8AMqAIGNSEexrFA7NkOSQ5786dQaFm8ArOco9JFIg0WhJZTZ6B3k5KKBM
Goa2JfQpyksv0u/EHCBjdDs6BMNuxCreL6VOnFvVrNa+4hXIkhIPkSoEh10r
8pL/B9naRinsZOYIX+7f3xo9HeDu4j2Vu3etHzyziWQo/ZaxX5dNKOuyj7mH
HEDt3PrsP06KSB69sfV62z2svlwZoUtV6SDTaiuCMWM4J3TPR1x5mMbpEj+Q
NZqrm8GkAj1nDJ7akp/wnjw1uIfH4wJ485k17004TyrxF2MJfJAlVoiBXqDL
KLXmBK1Mu+peB6sTySiyPsSwqBmWHlHN+387TxnKYdiNGZz6c2Zpbte4QUIC
m5bF8o+yO6HfNUy34HTczx51W6ZsGIjn+w/sJP2GfaUc9M+ylysSL1JZnsaG
ME+7cviDsudRSbmh9KG2jX1jux/u36fLyHUBJBQLuQFn79awTxOEF4jvO5I5
mx2W5GsZHxtSWXTqmfYYBLZSWHxB6bi22/v37XKI2Iq4/5dKqAAl3L1lmmU/
auLVsVG4DheJkTxRr+7l/Kh6cO+x17tX8EU1BmaGCIKPIh78J3lWKEfL72d/
Ple1hFsGaMwf1/1I3z5jCKJvl5iBRDFFNK9F4+YOVRSeUlC36SiSitf3j++m
HnR76RDrU9hWPKxzGOVChRH4QNpdkRSeut2+q4UfdLGOk6OMAWMBh6MX8Iic
Ox3xbhpYQ9W5vYidfyFhGl8XJptUglw2LEfd+TopvlnrlL7cqSZYCA7gbEXp
yPa3S0e0Wz2BbCIb6G8v7duFkQoqkp7eOgL2sqFRWPJvV33H3AKBOTylb8Ad
tUWOGEZoRdJjppJvd1szLoKP3wQkqsUcF4eJ/JnuzXTgqHaqAH6X9FqO0saD
Vb2BBdboK6k3AzyuM/Ozag8387iM+YOp42m+BENOTmZx5VxbvQgIRmMoyvKz
PIi7vqVvry5A2aY0b1eiao8ANFrArLy46vMdtmtqsg1NSFxR3tHNP60r45a5
3ROqrinrFIG8WD6t+c3s/zHO+BfM2daBY9q3lo5tY0IY9QrhJHqk0EiGsK8n
vcZ231s+rm154kkvw06q4Xyp5tHG/rIB+IdXJAJgv648CbcLmnW9Ti32b6M1
FfkXAiTid7qw5gn4UJq+SErO43JJMOKPywGET4txXY8NTOycMXB0O8+JUpDu
qsh08n2kVD8zO1L8o0mfVCsunayX/1LDSWBztMzjtOp5xjgsHji+bWb203my
5alXACKgG0rePsOlDCn8frLhTSOTD8SjQuCe/gljAumixhekbh1t1lQ1p26j
gIevieXJrGvDzP2rRTX+c/FTqyVQNhyQz6q4ewXi0Njke1F66pNoYiSqzMm+
NPdD+Ub1Lj+TCVOc4jwpK7YvKspDrS4TgvhMpoWMnKGBH17s7SxyWymBBgxt
1ruvGzypdXXm1PAEsEez5Y7nCPg4wh3FcGYjdujTShni3GvTItyy12uELbDX
BFYC5z8lXphwdwZkb1cJKnEEBQZ4W118E0mY21Ws+EzVy1I3KB6EXcNYRG4T
wEFADl8cqib9aH04M9sL+w9vRxfekBzjoChl4rHhc6gdhQfGoLhAtQRFxKW/
bBil1zjPCA8to5HIWQjHghZRGSoB5umCLZ9Nr1bqXQSzq9Ht4Spk67AS310i
HIu2gP7uUJjQMF92iREwPrAex4/IUBiLjeJwSFB4SXn7dQ3DPhrrtWGIyomX
Y1/I7kKVdPGt+WbRQ6NtKOZU8/84z+clEISp1t+bnc23FZZ/J80ddjhroCyg
jGsPKBukLfHEA3V07S31lEAwNeURla8TVzGuGw9GnUsl9b251lVeOqZ9bekD
bY8GYSz/Qs5+icSM+b/cYWz1I/FGNcZ/K1kWqx3BoBiCGBgaXVrENzwjdQjO
043hVAPl/6tKKUD4wNnoVQPOMrCHj90gyXtS32NRtA/fOGJvLRvCKdsWg8Qb
g86uTTGcc5VybpU0H5SAVSXoIFQicPlopqs4D5ga9HdO+YPtt9Y8/B1QZTDP
R9RNyGkrgwteUhPmlIrWq5PJ9cphyh3mVN1CU0GFk1uegdoXk956xovr017v
50qHdNBvVF++lv3XL4TzZgbBXsn+W6TE3YuaAUAw9EfVNMyQn+TfaT+GWJ3J
RrTsa0gHjDQ9H8vbE/uT06OcnKAZ3MpQTBD/ErlqlKum3+GkIOewbtbSI16H
whHtnYmNZxH9vajeRswDl4r7tCmS/uWxYf6iJM9TjBvKR1fjG/asc/62dhlo
yrGSCcL/A8AjDcFVsuSOMwgssSI7akZj0tIC4onBqLAVJLYurHg6hEeIWoWJ
jYi1nSkRq/vHGeXemIi2FTSJcldVz7wRnXxREMEplZE8IOYJoIPPG5dvsbQ4
m6MCuiK/2suwA5Mrdjc6qv9pZk+drY0gxH455mrl7z6kxjPi7QclQ48IQ1k1
T+JDN1EJt3E73aXiMTI98PB0vh8jrBmDODBEtyrKo9ggBtBvVOc7/W9bxfMR
fbgNmRAz2S9UeyP9UdEWx81hJxhgSvcX+6EfVgM27urfKjnOb5x5bu9f8Pq/
2E5hcbBgFXwGtOOvknz5O4aEHnEIYJTXD2wcV8s4bYptbctJ6lXkVrJQdTos
ZhzD3uHnKeilGcTmMSc+eZd2Y5o+YDEvrVeQtUdLHbv9AHdY/b/WCPx6dHhe
wTNFZulsach57ggjW0Zfw0uIdsV3QS5Xsnpx4i/27+Seqm79cJgESByORxnj
8D249bLA10qdCS78r4KWv696SmmeJAaDixmgUByak+i7sVQecXAkevAKG786
rpuyNdrkwDfrUi+Vx0LQeAAM+HAmUdE6V9bHYKuvT3JmZp+h8+xtbhEnj+0F
YyGZGD7ULbUGQY85EOiFqU81Dlb7Ql0/P5fr5uuozeAZhUVHnTh3ij0bz3pz
muNQtVvuX3UEwsehQ6SBShW/5oUKCAjoERuqpchIRfsloSwAH4ZtmgyrNQp7
jeRYlOMdkfZbUidoS1XVLac+5bBxhtF5qqS5U0QU9uohYwd8e8UwPrjQht2G
VMQobbMh8BmkTHpyPa301PfxMMPchoh6WfhoAAW3YZ2EiZe8kQ7/ahY85gvZ
hgcvaQPC3Vrt9r3EU5WIH0/GAA+cKR7nOr09+v51Ue+kPHHueC6bBJ76JYRe
AwS+nf05xkqChazvy80xPhdR9j4EnwlmY5xTB25rxehwQOepkNrWJ1joNJIg
ibuhbws0chYrsGRPo4XCfqluAKuDNQFVgT5teJ8RSK49PLlNlEy8XAOxhoDi
8T48c3IgUUz5xbKNRDdqEsEBwAtvNm7Wg2cIFYKFdRWf9MmLkRaBbBk/v+4R
Wk7S+UDIEQVHPpQQ4CaReZY2HKq3sowJL3KC3jSUEZ1+RsZrbuKl2TR+4xWj
kp/va5jpuluM6gdgXy8mD3z6F809JjV0k7hPMCF1DM9KcgFwbybeqY1zpL4B
gMTzFsVL83dYQncjTfhIFIS/vsjExftd36l5BuqetE7YtF5eccUDKJR0UXcO
9dgxoVzRlgsFC+5wSR7TqpKHYP4PnD3VbuORqvofK86YvGa8hCsUkQlfMzWq
B33WVQuyRKHB/MRtPZ2+2BNODVMIFpleUxuPP/a+IGgQE//2onrWjQ9i8U7m
GecKjdtIkuzEadNB4YGj0DTYGLQFrSMIuyaZrNmIPr6P1eJMG7StA4mXrIEP
X7SoIk+quWe0Hb43pt7ODXIZBtHhI/ifTXvqRU7zpCH36R6RJeQYX3GXFeP1
1tcLfV9+I0oGGEzD/6NloC+U1R1nB6JHTWDQ4+sFJaFB54oOXW5ZT8+sQjIB
7r6MaHtH4Gjulr5mzI2VsifuPSmDxNY7WdP0c32E7SAp7EjqYt2M2HELuOvZ
QiY3KAHHvD40CO/5N2FP4AIaTZ/irMRfAa/7jCJVHh06nRN7WCHFvMTr4m0q
/g4AdMzdxX3GbCzuP8bsuVGmni9GYcDlhAGz9aMtQql4vM9jYbAbisNH8ObL
U3f+TGBUYyZ26HEBUd7W/7r53RTqqAanFOrPlfr2HVsgzW1+N3uAGcUDbLgV
U3o4Exo5Jsmao5q4ZRAhQGV26QPtrNm1cKrb9Qfqsb94aAf92mv79+paP3BM
G/E5o3LwmZuy73mmb68x9j2qrI/Ck18IS+Fx+DvcAMlhSkOpMLC944Mnt/Yp
lKQlXa88NjJ6sWQEWfihUCqWDYVAsv+qZPLFAs7LE7+AaZpRcZk+3/dytnB6
LL1ePPDhtjly+e+IAKDVsjIkt2S8DYFfYffY5MZGuFLffp0vzJpS2Jy99j0Z
WqX9Ch9OO9ZkNbnglHFytwwc1U6SkxGo+HRIEZsCAeNFvQ1cUOJF/Hy9RV7n
+xFG4f+M8qktRMoV1S+sFyawytzUc/EYdmAPhTr2M7yNemecRLm4n11/zQgb
X6DzSzl1DEGSetgKAODnzRUtjKqcqWu8q9HpONIcfWff3mNgJW18ZtJT344C
63d13XjshA3CAq6q+FThpOrWl+nAheEW8rThK/FPc7Ifx7zVwcRVBuqMgl8e
nY+BiATf7J/nWUfyurwKFpHZrenAMe1q6R+Fktyusgj8HX0+GBsveenm1AGV
UDR3yCwCKrBL7LbclHoM8vKQZ6SYD0a1xF8Uea0sHdluOy2TeqVQx7PFQzow
5JAGQHtoNpwUkAAKBqNCdRfllRguEmzM8ZxnPhMZLIzhsx5IPfdX1Q39SYaL
ZMam8smtzDij7dW202fOY132eRtrPbaH99fADG8oNBqgLGBUqnlIZgvAEkeV
P6tOsWpQxbuht9ah5OhiXDT1YLrxb5fJ1Jwge4seRvUvNoU1VAgzgr2cfEzx
iPa5QhqktRibbf2HDvXQlQgsFWu1sNmWj0OnrlR9Cgn0DWk++cKC/Eq9lnYn
XG1N3uhVARz+xYbveyjRRNQzI3WwwylwKugj5v9C1bwUhmGYCiO5YSbWwnzz
tSRxhSFH8szoUCy+M51TAeoR1Xyv9F16rxOz770l8RE5bDy/r29cF/s2eJbr
5dpw9/+QegHEl2UuL9Ox83w3SsjJ9JD5cRzZFcb/85rQE4Tax7VtHpj7evlD
bWyF6Cse0YHFx0yhR1j+I6qNNbu7xo8jbKDI/VfCbFgFGhWxMEgp7LK3pTkn
iO7Q4kQWBmtC/ElQxKX/Ke2ts9RUCCgPOR6Hca9AEUFX5DAJd6GpcNIIIpne
cAaAO5ZYWH4j8XwBITFsGRPPIFc4Mcb4+Ct1IVzB4/Bj8GcfSJyH4YIekzDg
UzCq4DESw1ibQ8tT69UoXqx3GHDyDxp0h7WgqIO7PSzJp9HxEVwGPv9HQz02
wJfImboGa1SveVZiS6bJWBi6IVYKCzASbqGiYZLNaL9NDpMm88YxzR0ZXV/p
tQFnK4tHtfE8pOnp6MZzzZFA7FuHkrt/Seb8LwrKp+mgcR9EwmzP5LGWp5rq
nvprwWoSh9gUZrkOXpVS3iBfG/Fkw9gA66V8N7ZEfeaXDu7EgFKO+2INVXMK
BSCJELCFnjQHeOh7KlgQIrPFd88V9+ri+4nGL5D1OVNdjA2z4Ub/RO/AZ/Jv
jWWywAG3DrtFSI2mUQbEMeF+rhWopM6fk2ZB6KqKdzRCQiyV7IMQyMnN6p/Y
8bSOaI5AJsfKZARaTA9sxJQ2Pnhh+bg24wkGTlaRpVtnDhtPwO/8JDgD3+GT
yUqSDxoniUOttKBxO7QGL3pzZn5pmX+lfHozmvpfNR9aOl52CV6RJ0UL80nc
TY2s5wcaNCf+bN7hw24KH8iioVpxYgdaBFnUlef9R0W+hfO+NvXeAe5oZ7fy
11pb1rjuzcV9ukgMu+L1mv/dmKGrtcUPtAHkDXW4zZiwrx7h+5W8doA00z3y
5XiHjRrX+nzNV+1dljaIZMEH+MRj/XKopw4UOQU44Mv0c/n6AysMAp5SeH3w
tOZNdKgOntF055DDk8nVHNw6uJwATL9NtuU5xYcLxfAREIBzqc2CGZiu4lDE
5x2J1urS0W04OvbQzu8/pP0KK8z04he0hkfqquapjqcSbbogjskeY5M2XW4s
n9mElkab1EV+4iR8UBbqyRfrtGgGo3CYmsRZ5U82l+OC3Z+N/Ut2S/39+3Yu
kB16WgbjLdXCewPrGU3QqjMGPt7yQsWpMxDL51VD+YgIJeyiw8f9AmlA9tXK
pzYzMefVTEwBWcx8/I2BrZ56+wt/HyWpLOyaWf54CxceO55g40jkWoF59otX
fUysOxcaE7pxoTiMBzQs68wGeeVEqdWw7QbK5PB3DidHfrfqUHJe0lAN5/mT
bqrxX5fvYmv3GzJh/B6LYuCsCUhfS7x1t6ifBWm5qfiB9lnF93vg5Vhypz8X
9+zaqmQ07fH8fL4e4dG8kWaq2Kk4ZRjkS4OnN6+ShYguaiAAWehhXFmh9QnF
13w0bhoOA9lbWfYt2psHfaQtzomaGUeRnYdWptYnzV+fevIQr94nQqHP4onJ
hmEiFbL37Jw0VOksth9JRjTOS3rrTA02OEbVAOkmS1wA6F8REF5fOqp9Yxa2
QfpfrHqrqCDh62ziuwNWpA5iANvN6Lev4FoGP2Yd5pTGz1UNw8NVb4XGm+MG
ETU042VFWnhttstzUA9n5zwcn1noui/xLbavl33N6prBM5u2agbGuuzPm1RQ
zibgbaVDOikG3jB4lu2nZnjkw6WDOpmAKiwZSZPfyZpYtZiwJFtBYqfADzOk
/imZgSs0doQIZEXxyLZVct5zRS/FbAiuGsv4r2JaAH2YJxINM1I3O+imY8nO
2FuL/Q/CIVr5LxBuWDRwfBv5IYKQBRo4w8cgWY7od/++4ChY8tOz8oQKXCHN
XbNFczJCIeZPoyevSR+wSJQ189F83eOyy1cLepAHQhegr+UXmrtkv59LfRfn
k4k/EuKyTF4SEXNJ3Js3jQLzi3UIcMUIOC1b91W90o83AwLzC/Txz0lutcIO
86p8HY9I0Q+A8BWJz2ul49rgq0E+oRC8lruLQ8GS7DHlbazoOvXVbFHlRSd3
+GnQLsOTt2vytC2yS7xoIBY04UrelJHD0rC2k0Lpl8ofbNuUenZstfEFvYZY
Vqv+JOohmbe6rvSBNr6XzBsYM8bPEDSYbvuzjxtfzcNCjjDWGHxnlkcG1FCt
SfO5ezzbc8I0lHiAZ1JRcrHMCaETD/ZuLOkxexuHXikeMGZm/4TOGwy+TrFa
hUeNxfGKGliaVZkjZSCzjYJ0UmrEX/t3Nk/GHEXIIg8cm1Ao7hW0g1zE9Mgf
S4FQpMZgNdLjgo27R9R1hWyre6Xe+kB93MB2bQrnoOOyyLpwsOSm4NBWFI9u
m5X9/+0Vby5B1KlSxi4z/3tUTqcKO+6C0aO+FjbA9xv5HgccHtTfJ2RAiRfp
scAvp+KMlurRliuOgGTB9oBmiEELw4ioC22xJZNC6pBRHGSq13245o9KAQqX
NionZ5oaWcvvKukMNRAJZENkApJ835VSuSgpCMf8eckWUOh2xciUho5z5eef
IFGAM2xlwFku0+shgq9Uz7VBCG4r2kNysVMUHuCOfi3PZhtaUif75+qTeDJs
mcvAuNO0/pP/Y7r5k8ox8uA2Jis7cNrRIQIjq4PL3qKGQ3zG+VWfDPD52ee+
C0Luwo/nx8TclPnysYgM/x8RLrVNUeLKvaCnPPk68R+wSPAmJO4jgg7UgOkD
SeMl+X7reE566kUVPCIjiS7x80XiAT93ykCvTnzN6Ob6ANxx3WCvLvvyLiIM
DgNoxvJSnoSOKBZlgO23NXR78nVX65Cg8UICOLgP+uUHUuSMmBYUu8u9fmYv
ZN2TZvkOYhaQwqjdIdvEu8O80XRnZSWJEyP4w69kaJ4KQj4VG4WdBRXw/+zn
4Rffg0yC2rCtpGga+oZGoK6LBDDZyDUaIqcw9kdyxcim1WqJwophbzZuQwWU
K2Q5iiI0ACPPKvQjTscq+fnuCyNgMpp6NxVviQE7ddYUi2eerLgFjq5aToPb
BfJSQ/4N+UKadb+mMRj4TSa/k7OB+ykpuuRxyDhxmtZj3+e7a0GEJ9jjvJ8N
aPjNfik7jVMgO4oZIcaTBoAIGET9xs7JDYNBQ90xxPHF2icW6G5PRf7f0M//
gV7hqtQnM/FojVu9ATfhOSJjXbjQPubgY6t5ljVybEwXiCb8GNH+kpQNO06W
9LeiAWLfEWTOqr5xY9/I3ulV3dw8RQ1QAgCr7X35Uuh8QfSeXbGMzuqr2Syq
v7dCHq0ctu2KAogxNSo6oywcdoA4AjmLMteLk0lRJo+8UzeEHYEvBBPM1XGV
lO7CjiAl2BGIkdi9PUt++sWaL8slVWOy7j3Ztlg9Iu+T0rwIgWMGJBKsIaGr
ZUnxMxCNJMK53n/T97r33eW3gqUPZrf2jIrzeAROFRC+Vpl+I8pFplMASGwI
QvuDdaJ4i8lA6q0lq8y09dbBIcgLcPiwGXmnPObJbL6TeIMFr+D0x5449NPU
eMCpEHYulKVEQKK+/qB5+SDZc9J8Sd4eL56X/d1k0x8GdkbHaez4RXBiylsY
N0IjZ+j2Rt5h3diBZnWH2benKs+DooLEsR3uiXOVzEFfmeaLDDnB52R6qUO0
Du1KYBPtCO7bpXtNmBF9DuMhKVLxdVhNG4QVF6Vu7Ikqydzykauyj/xvuHd/
5J0hFVHb2+TyojbXixB6LTfEZZJbC8qDKMtWSiZ+qlzgJToNS72OfG8g6Jxe
6yhlffmIHwhakC8C6K/Tm3G3JF6wNi69O0W3JWlx7uAk2U4zRO5RRkXi/gml
nfgzAxWbrAR7tylishbq3MxppE7MEjtbd2XqqaP5iVeMYMXnS/nu10Qy6ga8
q8hzmMQOIBckn0/aAepZZoaA1S7Hp78P35A2pOUcch0IxcKLnZipP/ku5n3h
syMlsSVDmnCm9yovVhFdM3/wEzadc3X5M01Rcop+rEg9gFqTRTNIDbtbqEmh
RoXrNqhZ9W15k7JQhuoo0iLcDc8SUZaNRXCP0col3CT+maudoBlZOCROF0Lu
sdTHBKMNDvNa+DF/kRdekHjciNGHV7GJOQrkPjC7ThPvGlzflambDBulVWV9
fY9lcCHcUBjyGSSxkAWkjLFJBH74wgsyPAPqxFI6oefJrGnqRQ9U9UdldJaV
zzASjqGjTymqP2TWu4HezsSBoIO3FKKiv4ASZ9r9ZLFufCw3GMFYTLzFJOFb
L1a9CD86alQjvrVNQO4UduLGkUFuli7g7TS8Z4/5QvljLYXL3FLuKf/4UunY
tlXaycY+OaAamymvlrQ5EhnzU5klzA7t96sSN1vWijrjDOuDhoosVfNKQBT2
AaE8XPl7wbz7yse1wtY8Uz6lxUZIFJpIr1AdAn/0ZPnEVhDgk6WTWjEbN4pm
lE8Z9Qv5FKzgOZniHjH3XKu1HzbfLBtqxMgsXAKmAZGdI9t+a3QPObJrhv28
K1OXRTXPyvA1eE2iH+6aigESRV68O9ZqBxNPDsH1MN9+iDYdKCXuT3XgpIdp
IiN1xmAQDsbsSsVBOw6aSj0vwdjpt4I2WyTx1J7CWNmQRv/o0TzRW+XTmmM7
zR+SvKIdrK8qOm4vjh8hxwBeIaKwXyY+UqO+rvIjrWvKH20lOMLmerTWztm9
KjdLHBWFFqg9Ob4nBWWfgebL/p+/Jwvqsji+cTh10EMEeTtYCwHvqAP7rlXF
9tTPN017NaXCr4NHiGTyRTtGesy6D8b/2cGPtgDJ1mVyGdOfbsnCsdvlIjmE
YQQBhd0ZuAwWwfbRyg/d8krqxW91wip1zWStHYiPUg8GOMfW0fAGW5g6rJIh
DMNKUTMrMlmGWgm0F4nOqJyx4gKvVt0dFPxYBiCw31OzwyQMvGTIR4IF7foD
m9jpjgsaCSKYUyMCpe7vGYUptoii4lMZKQoYzODeW3ig0lHtM/smdKqZo976
/U314RMIj37KIeTTQhqgkZWieaCNeK6YXcdzvU9k4D9VfeEaxnRJ+XjLSUOw
rpPP3jz4kVbq2Fi4za2awg1NdjI29d4jCEQ+81kBM1tZmZ0tiJzkmiAfLgUZ
vV8awGu/ZplW31YIK2rCYl9uo2iQOcoS71Y3k+1pEEIkprgwOyFWpbIciCE8
nOKygePtk98c+HAbeGyjXMqmxBOxrPCOxEfsFbA9qG6mMbdgnrfNdAPkCwfM
z2RxQOWF1gJV8Rm/ZB+Zf1RKvNoW4eOiychzuQ+mUW7omA3zw55ZbDE/32b5
ZqbHuUAPPrmw5Tpovm6l8NiGTDCBieyHxEC8m/MjOUNcjSPH1SBMeF6KbbCk
/CxiAJ6buJj5JZi9lzPwgEf9dpI3V3H0o94b6jkCtLa1sGTR1nKLcilbFWUk
2SeTBxSVPQK7Hj+qgVUcJ+4G2G6JCTNHIweL+1uNFAEEJhw2qNBk/7bbrOKB
lqQGkCxXRT02Y5ngHk+wpOoz9mz+Sppvc4EXuDTxSWDAOrh58iaPiTuL1SFf
y75/B7g38QgxEpvl8G1ob/adZyc5Gc1t8DKg7W8lPgEGTwFGek6mCbSNUM4o
HtCZVH1Vx33Si5qYomcTh84EuthsTN7MzCmtykwT+actWl2NUlQTryGS08Hh
kI37/cBR7bbDIPsVFgzLJcAXieOYHk+MwFXw91Zdmjqisn3r2wPwtfKl9yXO
HjArA5GKBUix7QilpvwCfsQT6xOonAMePJg9/2sRwei2IGJJI+E4opEZXuRR
zZbCqZANZd81gOeN1Duu+PvYnxxlBjz9F2tecs/30vISVXCYJrRj7waCzwtI
xvGk/FUtwwXzWHBWcVKWym1mGdG2FqaLqRXEFwRKWzWgaE3muO6reRIIrACg
4sdriCxwiavgLEE6sbFue+nQTtq5cTyMO7/cv5y+z4HS4R3rM2yPFcO8MKoH
bE8hxLd0JZ6THIMhKw2c3AJDSLLrbaEQW1KROvsImEVbHlCYDkNNANSnnM67
ER8fEWUmSIbr6l6oegSSQdfGtPHGngyO+bA559b3IvN3XNXTVQ8y+bFg6jtl
PMtVJ04RCSbC0kiFKoB6wN8WTZ3qjziUGYZ5pYM7lslQgj1Q7BEgsMI4oomZ
iY+fQpNwhLgEbB3DRYiVqYdcgz1V3oYI4iHhYO6IujIeGYBFKPjFOuzrIBhh
DvXG0sGdQJa3yp9qjkpZnhRJAbtdkDrFwptO1UnFGGTuF5HAeOIeiDhg1j6W
xWqU190r04QevVL1/YvWx1t1wUf/MMDH2yPtxsHjnV7RwUevZcwowVswkpdH
5JCxgOA//u0OXQwFgLFKKBZ9N2YFuEh1Vuw1eJ4BNlasDZVPbUllniiDxDmh
2lgFi3Mute85KOQinMx9cmrc7z8rwvy1DM9NaW99gA2JqhWDZzSx6Hh5FgWj
xrSw4MRsN6Lg/wrthlg746wmEi6xcYev35hq/WySD9+3zpqK59qLNUdbfLYA
XzR0/IdOwkgG7463NUisE387U1DEsCLLHpD5HN0A3RO2wUuvDBZA40A9lytC
eVyn3yucgFFdknr7BKMZyCNTHxmz3KN455dJDkQRplg/ynJOnx2bgddhHHCh
tZz2WJctqosa0c/KSr+bhFGwkuvKYIvdu5cOntA6DJRXaLGNHJnKrMkgCidH
sgCZXKjlmja4puK4T9h8JP++SZDm2YHDOyxr50G/dZVjQe+VesGyvJn6yMMV
0h1QmFfijwbBkJ1CECw4zn7s8+UjOmxZBfYIF11oX6sHX5b98/qqHxqlYJg7
ItDoEkdbPq4/f7x+z+9Hc/4nUzqCCF548cCJVszA9AMebJ6RVW54X0kcP/y2
5uKO2YKNoGqBdBNUNNSSzdEZypNdBCbvDHy4lbblBeUP2zxDsukPJd6UxNFh
EqPbj8AGnLcss08UVQQ18W6ttlzbkFt17v4+pbxvSKYU3ih/0ogjAh/eCztH
a3R9vX3qSEWVMv8L5MltxUfyUYj954bcsWL/lg+e2IqmM0fMx4SPiAPG1BFi
OIJsRgqA/tXSgZ1DxQM7Iiqp0ohR8ZlY3JOR6oXd2Ym+NNOtxf2Ht2PaaZp5
WoQZcTaIa51MP6biMVUeQIBFZ3xYQ34n9YeeYZIgJh4dcnx3Aa1tOwC8w5HR
NPUdn9YamJ5rrMz35RDDQKJ+AepimPbziutQb2K63uxlbqy5gQXIQVZeIwA5
KHWFucH5cqUE6ogDP2Np6hG0d086B/+YaB0rOVAW482+nceyw9ey38qG77AZ
zx1ESxBuPNPZDZeEh/61sBwmxPZi7JLjPEAEpg03SJoAdguraYuLUrfEHD1+
zHHe+Demj7XkyZLMOXBbK5KcgLUJ9klPfZI2OM6GBCWasF0h27m30pe7dtsE
jbTXaMkoAnAf1Mpb/1WnCCL6q7icDfIpQPD/DfNGRe6bdrEV2ZPO3oEpao+N
R4gKBKRN2Ep76w+1OHupr1V6LSKNefH8dI+JRoPDPpp4nnVr/15qhfcx2mR+
fuX6wA0BMjjVilIXCCpD1WLBF5G50B1R07IsAPd02B5dL6syymbHpp4PQhGf
U1FWuE7gEe/3L5jzd6E7Mo6/Fpz9ft2zj+LEgtnhvxgF5+BvXCPA+2KSF13w
QnCpQP4BuQTElBwl3qgokGeUdfY7feNEZSxk414d1+3DJ90m2PqYMCJdKWgJ
U1b/YcihKo/wG+07nqUfFVhxQTX8vssDw1dYnsC4KA4ETu/LGlgSbxp7I60D
1lHeaIwgQrJNucDN/Xta8pqx5uwUcmXb9cMZqqJ9KiZuQKpgBcOWck8YCgQm
Vtb9ouaD6OaK4USBZqiuAHGYrfFPsN+MxJISTzyt6m2PfB0VsDEe7ptKtPxY
VjeQ3tOyd5Oy/0eR8RORvuUYA5ZjmoMJ/55U56syWhs1p3x5po3PqWoAHA0N
/Vytp97PgeB4XcJBUY31Ue0iJ0ZcKYIWEpc5KTyWzWDM/p7My0Opr73cIqVB
zLnBFUKWBC2X13wqw7a++Jo9u4Iy4ee/LUwCOFhVdxVufMjl09k5rTalbncN
Achm/lOjBHibVhPCjZCTlcbG323tV/4MF2qnkL6/Owar8JyMlJqsWZ/YVRYv
xLpESJJ/qXoHqxWmJ16AullZq++Rc1Ev8qfkF2LrVgBxMvl/lm22BQo1R8F8
/6vKLnq5b72Xa9cHxS/6XsZM7BDBmm+BplTYylVSD5TX6CxtMls1r5iKmTqg
ZMzMDBlw3G1DD0AzZwjGg09k4LP1Mutnr6r4fJ58ueUuiASvaRY5kyp8Q4xD
oaeEZUmP62qBoLFtC67g+YorcRwNSDgI7IZJYN3YLca0Gm9CQW2G+EjQcmWP
iGpN1S+9QK+GuKIx04Qc8FFoZWEY+K3QHUvdMSpo6v3Wi+AoztYB4beS3nr2
ntTc/WmUkrjXQfOBwfJOOweTh9r8SCL5/nSqaSvcKMx4STEcZGf4mK2ZSsBT
rlQHTIy2szU3ze+N8NziN+Oy4q9JkaP4BCdIFplF2iO4Im/bHoF9CbN5Sr0A
sL5i6oqhSXZxyA8HAW1HwS9VJzH3Rc5kdy4LmYQwnC8HsVCZg02zvLCFKI2f
g65RqMohvlpxjBTlV/QuIihfr041TwDc/tdMtkH/HAZMwo4wbw+84AKV/WyY
caYVCS8Y/FQTHjGgHeOgEGPE3npNsv+AcjhosuqoMuj7JJ3Gr5LcggKHoACo
gURNUeEI/XlURnPZK6SeoWPZ8FsW0PZaZQiyB+v5Ch0AxQmdawb/bjTqBOjh
pwAefDBFc8Q3aFoErf9Z80emwimmPjqoM9obqQbo8BbEAwOpl6vgmQmPkWzr
Z82e8tDZU+Pwdjl7enf3huIBnZtmfG70psHPjd6WgSLii001nwBDbQmlkwtt
KbjnGxcp3CamXZ99z/rs+6vZScdIIuLPhkmcbQxjvFf/BuD8etXxvLFYdlq9
NgGlEdpJe8xlX5X5pCWlk1pWlU9pwY9ya2gDcMFLJ1uZorpgxulNLKGlcWRL
9lgc8svZYfMjp6pQnbpqfrx6vYmc4RcjBOCpNs/83OjtpYmd20tHdmwqf6zl
6NmTC1f4l6N6/CRG5qPucCQkC2K7EhgGVO5JpC7gCL65lMVtm0sTOrfM+LvR
C20VV4/1FXGWb8oo42weUixqdRsDx7de27/LWNCxw7zRAfOgHhBqhBa1DfZO
bq+RvIvdAO+J8XQ7fD0ACpc43cy8Z425sT9n4HVtdpxsM3y5fFrznyV4Wkuz
D0wF4I5zg5/lVgifYo3gf8o8UMNGCRHAjgKyWuotJjOlIyw5xvYDDzbP8DWC
kK/zqapM/V3CH/Azv1fNiW+Bu/25nHlZRL6heHjHtuLEzs2ZREOxgcaw2xwb
9ZKxJyE6rU/Sz0fvz0/yzkJKXc6aM9m+bkAlHLjGWAjO111b9Tn71URLxiVm
WNTj7KeOvUQuCSvHX8eyDsoBYyJU5GAbQR4D+GL7FolSPCxfJ4vD04JJ/yK9
x9tCtgBCVmeWZWvxwM51mbxZH2v2Jmsz3dlc/njLepkQujhRBOG7MHgoAwcd
5oPNnRTu0kCNiAJVsc84V8rMgI8LBs8cvTEzAWuyj8Mk1Gpe6Htz6lUVUFVb
ssvgUhZmX0ssXhS7C0Pcn/jECEsy0apZPLgT4/10+eQWHPUtokBQe8/mjYp1
jvz3Sa3+OqW+pmivQHnoKskyDAVdSucm+ZZLADHqz5uTTIth/kbGVL0yhrDH
5iSCtDLxfqLmlXE22TrxEwLxrVP+8Zic1BvBXeE+YIEvqWvnBJDPbTpA/onh
h3S8UYNxTf+RHdhCCDcOBzuKgySZ+0PFdfOkpX26d7T6+wwppJig6kOvOby3
Bs5odsTiXo9XxlT+VK8YthrJJU+mZO5JwnnG29VcvOYkXu+9VsAJMOYHbQ3r
AxSwDJzcgiUn+0k5Lb1AZ2cxM+s16d9cX/VqNr4G6Blb2L+m6Im20agXw764
xZuIeq/o33fMhv7MeFa90uxNwTZMAw5ktSIFGyeQ+P2QrF0/49NN1NLA5BMz
EmAlVb/L+Zme2RKwii+ZwKFVRLjhwgmw0QA63f5B6TrU/Jdz/O5rKl1x/DQ2
CLXPV3LYFUM+QQyAlYVCt5bqln5uzH6P0JYxH4Dwf64fbsf/6vHNfkU1PFXv
P9C4b8SACt35Aye0Pls62lpS5T7r86BxcF319O9B0QmFqjMP/T4dTBQX39+A
fWIAAWvzeiUxSOGdmcsF75Ln3zLwkdZ5Ax9qB88TEuDRaC28TrbUJlek3jGF
08T+E+7cKo8HrwD+mSLlelpu7YBGhNdEtZlR/Em+Uwg+9FkVyHkvhenZqP8S
Rohpk/hh6GJ3enuGvYN94J/g6bBZqNPHRafCgR4vOBIqO6PiFM0CAUAbxJvm
o2F5mYA1yxVHXSTw/q0c4MXHIyXj5ZunKi/K++MrAfENAI8jeTjxl8KlIli4
t7WK7J7QNglCFyoSRd0dwI/j77G+McVxo213cJIJsAEgiXEVhDs2CC31Qgfa
enEuFCLEWKJJEglrBxb7yZRt7Cn/hnt83aJhf52Ts897D3Bnc4XwKtjYF/Sz
mYVvk5m3OxQHPHI0bG2NXX82iVWl9L9NvabrMbG2NGHEuniDDl4yOPwbiTcb
bLUkig0aHz4r4Ay/xOPxvaSdb0k8HHtKNVDYhBi1h8K374jxghdCCN5JtEU+
ceIZ1DNU85kUaBYIgZoxjtiSMX07d/s0oZ14GoIVJiT8WnD+XXlGm4pZH+Ph
sVrX/0XifV31enfU/JYuqTvOyRaAbxUVROsRYcMn7bvG8EdEHuyDrMaPx5Hi
1mNbyzeSSfVVyRwQ+v3nemxkjbCG2G1tZ0ORPtYQfd+rdl7dxLFhJ14xGsP8
aRzfTdTzvCGBj99t/nXiM9LIuh0lSuPaNB8uyS/0jPIv2ih/K7T0lIWoPuoX
gUUBOBbKZW+Q2vJn/t0olarbMkyz39hBWFUulQj1Sm2Nip6LmE8WsDVupRHn
EZPT8srjYy0gcckwExr2JH7UYUKhCkD9jyU+oJbHQY+jghjLw5FEM+ATcvbo
3sX2yQdHVz8RLacMLF1gb9ZrZNpg4mO6fqduLU7pBblPVOxPQsKoH6TAXywt
7JNKbCZG6l3Yz2TegX1AqCflgncKLHKS1jGTyX20ZIB9HlYkMV3YxJYse837
qEDsYXZ6BUKcbNo70B5/fb2ENGjTGOfGSTOqOgIj9Ok5I3N88EkEgH+oet/V
AiH2FXXs46X5S8XJxRQ5AgoHfCP50b9LnOS+XbJXGPYFTPEBXC4RM4aR0yC+
8U6/3bpiCwfyCr3KL8DjlTLKGGcw05MylicMucVBWNjfGlsnbcVP6iUGIcN/
k1HF4sA93S8LhbsLyIc5AfJx6lQZA7MfUoTKMyOMDZDvq3JVd2Qv9qrCHhKd
sKGDiQ9LplALuAfld8NMh+dYs2myRpfotn7eIJ+uTgfCGBqjlzjcAzPxYxB1
7MlQNe8Q4U2xLgQdYV040TT1ahjQx+tJPsdlvYikPkE6CN3nJY+WM5HluF4I
9VzVoL1iLmxKLE7erZHRi6D8l9W87vVrmfGuigymPBFGkdtL9DzAztXSIwIr
skhHyK3Homt009O4be/GgdzArxKNlxDGAPowNOgCWZ3Y7BG8vY2ZcDLgYFQr
5H2ccKUtth/yNBOToykm+ZPITozgFLGHZOc4Xr6uXwg8pirasszEufvVquR4
KfHpkbaKKPVIC7IU1J1W3fCiMJepcOXaqld+lHQUOyLAUf+khv/NBvB9AAcN
/57pG01bAdjn02n+hjahKWnMeNXBH1LNmU9TgAmrsMNYroKXP50v7fz3tNfk
h1Fbj/TtPob4Cvb65WpPfQzu8iTPhppXUjAM0nPw1xTig0PFdgVGZzfXAn1U
Ybzf/UXhJSp5yQpvZuVm0jZQ2tLy8a00C1KXG8gP0tGKGgf/fjS5TsYnbpZm
ghqJpBBJRJ82y6LyNTMrXpx/7Mzz64Pqf6c5VkaKZndFKRZ5EGAM3i6ODSD/
lvhd7Ci9wDsgPw+ZxtsGktQzfBi3r8/2HAjviqEK9Pc9ecC3y6fbciXquXEz
ic7lCu1FRk1BcxhgjKPjiGaOipMHmPKRWA1mWAP/uKW/Zq/Co//aTSGXfaH8
rW0VqHjxx1OJ40x+6MS6KexuxH6Rd3tcFntZFoxR6Hd3cf8xd8tXElJeJ4KF
QI5MB5Wf80vHtcn+WePTb8W+IbrITmz0hAOwBh53fJ3vBfoiU3K3auyvUmwE
g4VioTUcJPNnTnPV/7LiGwx/kGHxo7H0/P1Qaf8xNGdw9oxDYr8Ci0GwOT8R
U2XaVp1iZPdG273ldfl0WoE/o6uSCwkYAioa6/huvBLFmBQO/bGqj8B6q+pM
9NyqDxN9TJUfl1cm1ZWc7+VHoamQPOephZoTACwh5rhymHAs7vFaH8HrARli
YOwScXw/yj7LL2QEgKOoUWy0simpHueOrQ4ZwFD7P78vEN5Q4pzZU7LVFK7y
ck9LXxgXclvV+wbALRfIGQODkHFcG049FrYQRqBbNlg/8f4v9MrRXduoBleB
vBdLh3VQ5s9CgJhm+ZwwOtVjDPcuDCOMLLTxkaRQ31DODILbVqkl3mC3WU2L
dheK2ZWKbEXqY5T1w6WJnUv7DxhDoLZ28MymRDgE6edx871To95XySmGsCBI
o2e3dmoEdr1pLkCWAdOgG3TpDiEjBqQBx/lxPJfNLCz4+CbUluvjlteUjm5/
tXhoOwaUyARnxbxOnBJMNCTkxvJJrTTaay0fPpMcAxQbk5FvFDxAeF5NPInJ
ff8qmVJYMsNtFY6J+ydC5u5BQKT7+T4r5E3cjlH3SevmgwJqt+qwkLr55U80
0y29tPyZpkWq1bOkZerlBNg9ngVM8KzAHXytsB3WAHH6g8QL4LWg9KE2mqXg
ax5Pd0jbhmdCrb5c1fR8WVfehIEX9RJ5gSYcaIwyjC0tN6ovPTZ0GcpwfRr+
eP/ETrqcCBIKw5Djwr7hMGcQ+1S9fWSxxAznamnZGZ9uWte3a9dfSse3xXRl
sCe1gmxQuL/0/jHwfE/IVsNZIF9o13xx6LerqOLUGZPrSosYv6oIwPFdvSaP
kzlBHBKvdVX27U9k/ny9qvVfLx/XxoUwg/52YVIbhEETU//47ueKh3eQ4eVR
CqPMI43Fhsdg+FjeCXN9grAHW5eo0L4kEzYg9iwZA46aWhMMc+AX+EaNre6q
5ogHUdfo+mOreWWI0M8B/ISrJS44OJAwckFG4Bq5YBAythLkjcmn3MJaWjVE
mD+Ta0dzooSU78NpQrg/IxjJv2H+6Q1A/BEELOfNUhvE1bR5B5jXfgMtBQMT
O5M0nxO5WE4W/0wSEYAfBbNIf77GoKsR32FDfqeMPVz6QfNyf82vqL2lPvEm
KZS1FhWPbhv2toGIhcK8uE/q9iKVuo6JMgMfbmXbGy/2UfuBoyNhu68+4ZrS
IR30OFxbOrzj2Or5Qnbtl4tv/qNCxc8ojQFFMXvw481rs0Dm4YGPtK5S4SgN
PRyVn5R1XjAlbxM7lFOvxOOhAHiMel6WySi3mAxlYH3I26gBUr9SJRu3/u9G
b/vH362jPHWWL199VfEKiBtP8lXJMewtIJXRecgm+GLfuTnAc3y3OzJIGIWW
Ep+097tlx1FA4mBaw4VeqjBrlc51gRwRIRjXg40FTj2QOZY/2gIM3+eHal2R
U747zSqf2ozdBeduFTuCLTWG70o3iGAPgMF9kiB8KA6ReANg8ENFCu6Bxr4b
4TFwt1fyixGyQmXNBL7WBNM3qIZ0fXXWVBMbBl0Rt7sNHB3bGzmZm2vB7brA
ctht743vPlaZYuIfuXQAOwN35ieem0fLiGXpF+MlnMwbAYYHWF2hHlStMuCn
/x4Jyf5pVRbRvF48rJ2W1MGqL9kA9jFpCoFE4f5+aLINDX8piZIjX+TBGCCy
Vs9Veuqt6Mc3PLXDuwN4r9tksyl2hCtA6GhZgTYkohyoeNlOrGa9SToOpIOO
ox6Ul0OY6RFEh9hxxKS0R4oHdT5f8VZybjkqc0lHMXsWjzsr8QJjYKV1cXqe
aQT9C0gqz3B4GuNsR0UZBpg7aqyxpP7Pe8QMw2UDJ7cwC7tize5+QK9I7jH1
31bKjyubkj3hTzKzjpdCBaGGff1Ir/WEYhCRydjxFtOcye8Yd+VAb6+o9wVy
zike3Y47YvHeK3pLJqtUZLMYPwnEe125VlLE2DBiddwVYG+T0oYsr90kzwu7
znMykJV9Zwy9GZfPmh3NseCWbAy0TtXWCCtMcdfUHFCf/pOriu/vYErqDaWj
2gkfSDHuK5VTuW0j6APK/mN1x0JI4T6+A6ADsgSmfE/ApxH3jdju+VWbBV/1
mfIbSh+wXoBFCoAX6NoXqkCcg8EmCvdhZpdM37n7t8UjOhap8PU+hWQx7gWe
BK6wpv+3BJaG2v5Z7pvwi0KjF6q+dHG2SLab5TinyQQDum/JAh8gLeaaHB+x
AneJbEWtH3c2X2inqnOHahTuwxJjJRD86/TjaYg3mqZ8snWqMnNauC+CRn6f
qE9GYmcPntrMMLLNxYM7t5VPad2YeD7najkDpJCRj+dnZo8TeVD+LJgCq1oX
sUegxJu+lvpUGUg8Ks2t9yf1qjCiHIgxa7aQZNGAe2+aG7yXI/9ezgLsDPcl
mbN+OfV2yuf1uui/jyjstTI+vvd8meQAB3wtP+eu7PnVgd3WSOyBqKggRYvR
0iUVfz6CA45xbeZk0fTCMOS90IK9otLt7YHj2iC3l2XHzVngBb+p0jICExt/
YgM2Ci3MeH+xdEzbjcU9upmacFtFrfvbdwQn5sG89GFEFAhHO4bGyddLxkBT
jv72x8JfqsATx8uE36s0hASEhsICw7cO+uZqJnZu0TVsyQwBjDLFVDhmjEcU
52GUAgwRMW8e9IqdpzNDeIkQHZwmQ6wXqpH/y+/O5tqMZqr1i6nThZtTRxYc
/E8l2lwcl8/MV8907fFu8o444y7JbBwCbugw/R3tyw+p7pySoxkCNrw8pB13
yDrfhdnDgjFxpIsUdYO7KIounGSf3RQ9kp+SLMWiMsZ+wXqdNWdKdFq0/49k
NtJQMVMLO0ZdQiQ+5lWJe7zRh4BA+C5+dIyxYvvaenHJ1t+YPRqPu0AGh+pW
OOhrKz7W5KpabLX2DZMQEAAALAHIH6Lvcj3aJD0mGQfuF+fzpNA5IhzhXY7v
9oeHhvEHPPBj+MXFXStuDi+OKAAb8ZGICaYV+wjn94geC6fwTJoPO6tVPOgw
XlAniCD8jSEySppA+mI5GJsFQkA7BO8ovrskyffy/jKZVLih4mOoZov74dG9
HW3nd8M77NVhDTKEolDS4oy2i+RVSiygx53zXZG4AKy76a3bu1H7i8gbVFcJ
YREX5OPEOhqxHXtNALn36Pw5LMAr91COA1AobcUdXn03PtKMOBnUIMg7fCMu
lJ8JIIDzwNSwjuaBihMMjwiAhGpQowKpzKgky9Flf+/jqXaKQcfMpeBXeGcr
xvYB4934wBhtMEcOh+bTn+jx+Yi7ZvVa5cwbiTd5T6+6x4Dgo86MC5pprAAP
UOigimdL/67dDC6HxAMxUphITVlRJgjxR4M4prXC8WPL9SLxkYBRWAgYgEcq
GlLqEOKA2AvGe/D3cR0fUdXtC/q+zcX9xhDOr5G5xPcio+AqCDWsyQOWOOu1
WcuxApv3ptBlVeKzNPg6FizSIshQJH7O67JefC3pB+G73U+Tlf/sTEfNWJcZ
ivHBBH+oejv0WypOR/35fEx94xBI2upoJ4oBhUwQmAaQr/rYT9rTlWfaCYmO
zW5vKD0FrWFb/LQ4EqmGRqO/I7Y82hgcNXUiUpBNnOWn5bmimqMR1VGCHJqH
eXGPtQuw8QIpy6Uik4A/IDp6sAAWs6veBISBJuJZrIABmo30EhYL3QdUbFVo
ydiWgHSLMvy53ebh79q1Wl5sSDDtrcQrtd6SUhMPMWyQv4MXBQzcL5gHU/hU
1b2bXU/ipRu8+g3JZGMdYvzP5SKeCIHRTizxi4rWOGK0m7pxu7bEKzSx0Dh7
h3TWJAymwZFzy/gtJHJttceKtEHygGGrFNNC9tYGOhhsA17g8a7KoF/cniXh
M4eyIDm3nv2hbcLaEbL//13VF23T8UPwz7BULLoamNoeVsRiUTSSmjmelTVf
IA9vE/3aMXlmvtXfGG28y6OpT5MnSmIKTzRbY8IpLIisDl+NGMCKPpvkGBOj
x/tGRvOvuhqzH47pxjeSefwiOWs7tRJPMPN7cI1LhQd+qsqvmwWUbkrzNcoh
tT/WmTr+6uCocYAEaUBoBJ+YkdQjH83N4z+vznARvhujBqqxKfTajIsRiuvi
74X4uLWoFD6l3uRhA1ZCnTgAj5/2w7GQ/iDeJTq7SdHkhgB71XyjL1aBEJ5/
i79Dmxfpffk+G1qrKHG56LwovqNqCNVAbrygtNfUEYxOxLgj4mtjC8UdxX27
0BRg/jYNEiY/RlUE49XwU+dJi3DFqlhsaoR9UVv5j5kYB+l5g0FxBKLQ/YSC
UcSGx/pqZlUeqiiYrnrydIHEkesn3MCQvinDTrP7ooET2owicFavHsX+UGJE
YAhFt3HwrCab2JJ9Mi2EPk+lPUZ8Xqq8LbaV2its/VIb1+YT7DkKMBM288c5
+kutOiYDiMVDOo1rTZ1rtUmf2dORnaC4bq0iWS+E66kzexelvgVpmlq1opGS
f6e0DNe8rwKSKI95SJeOG4Yam6lJAl+svRv97YQ0zpG+f3K2l6ygAFeZbqOx
hd0pMWFzJ/EX6SNkCaK8Ks9ZksklimU6F4QlH40eGgtCmk+fQeP4sv69x5iM
Dn62iUuCkb1Zilb4H78kPFqM27lR0+hgCCm0o0/j+nSKpYJ3+r/hH7/C+bJE
FNHGLNhQrMTnqXOJMV/nFyJpeC08lMr+RzHNjllG/AzMyfnKS3kxW3vAv6vk
rynRZxTBO8LJ4Bs0GGcYxdKYFvVdRLLsmiTvYeDpv6Wgh5iJwOdPMpIxtu/7
6q27IsmruoySSHyjFwaWKkX6MLakHgly2PgorFOYIeO2Hfrt/yclawjYyQNw
8eQdTq9MNijEpWL0McxANngIxpHNKB7V7tm3HoMoRIp8P0aWFNvbA8e3LSiT
7PEjAuLwfFwmsIvOJm7EBEz74dBYR34jYjIFQes19Y6fCZER+bzahc9JPb2L
GM6XBmC+IPVWZZpm1ETa671Uqdf0rJPrNQ4p8YJgq2pOPCX2ktZbzRRgxUWi
ZbhU/t6IafUXc8mcpo/R2yVadhHL2MRMgPyL1EcDI25w1+SUSzKdmL4/4p3B
4AOHdbzaf0g7GobHXk0vVP8eXTeXPtCusoWdOIIHZPKWCls+IrAROC/ElzGy
W1RoszXTvA06AgDYW+KgEJynh7x/lfDiodTLBM8Um9HI3mnR9BcVNkLhczq1
DDBUK0760sO3IvWpX0BRBunyb4AB5BoC+I/a/mnbFAY+0N7Xt2+M0etkExOO
jWmYb2Y/q5r4jG3b5Jj4iINl0lpIoFnVc+vyS+LR0+G7bRg4uv0v03fuekBq
gfXG5XIL96Q5wgd1x5b3/YV2cclJ4uJOJITq4LQQY5LPPG6v1MThXev307y/
Y4HcLpwlzTRLEy8EiLHf2CfH7MNjOAdxdmxho1OQF9tUfH8n6G5b/57dWwZP
buUAZyRO33hPpdcbvaXUgXn6oR6Lx1jm7gBvr9sVIT5ZPKgTzqaSiRLfypdv
Kh3TvqV/nzGUfr1Y/mDb4qqDL9qqz0nz2uEoV/6QVoJhk/AtzyfeTEHoADG4
ROYQwv/k2fUl1aN4Y0gXGAruiqj2gBmTNGp4t3fzdvcXJ4zhUWvZ48UUeB6L
tyIn8KiKY+yHZ7/OU4T6SDVvP+Cev5PmlVrcrdOlo3Ah6PaGzJKxZ46nyqnp
4dHhZUkgt0ajY99L9GHwKxraLChwWwqOY1EBYJemIsJfJgvG7kmGmW4ztm7P
DHmc2YRjZcrNSgYlQd8PfqbpKW2lwP9jKp5Q6IyVWpsJH46Usm+mciLzS8S7
vZJJ2urSUe2Li0e2U+jOne3v+G0/x2DMLHprxuk2g2ZV9kmD2ScB0wlcD5w9
Sass7VCHnzbUsL7DbW+duvt8Q8clVxf8EmQAIUGS+moY0kJQzUB4/O0c6QbY
7nc1lxo02kdHufRgnNbWvKPQAuqT7LNbeJYI8Lk/TppU0WDNA3TCJ9LNtBvI
s3XcJER1TsWN2O9kMVCk1/R58+SsL23g0+yC/egmTC8d1gG5BetOEfEa+RGq
aTZJmm1hAb1B5C+qPr8dw36tqnHvVnCNMWcaXLH0sRbyrxQ0EypdYbyfN/7b
DMqB49qezT73l8LVffJBgXVAcl7qYFm5m7VVgOPnWMAZP5ahjcpzBOrSSo8m
5Pl07T82RKFLqr6+c7qs4q1KzWCko3Ey6kGxrGxo2Vb16cpvy7HftiOasyvD
smLAyfeC7kjpXJEoH5/4jGITMzW6viekc71sCgb2rOw6n1Xe7R25/TflrgvD
ELjCCEemPr2FMxGqe2Xg4E525a1U2SXwDMvtQ5rbMHWPlk9oXdk3vnt2+bTm
ZdmF2eqN8sktYJE64Zfk2TtBuj2DjZqiiIFAJ0oJQIlQBrBpDAnh50RvIbCO
cQKcDu7x+cTdKAPyHku8+NQ6MDPTsTozWKDzGNPTsBt2h44L76gd+WDxgM7+
0pEdWAm8JjJXGI4kFfawcqAskIFGWJD9TlRiI7syKA8mYojYswKxJNxv0++J
oD8nd7mSYrzG7WJTGB5G9zxhwIbMs7/ef2j7T2Mvgs/3GoE9gHLgGb6TQztO
BoKXKp9pApKeW/VilFsyeP5Tq9nyxjU+ggGUqNTrg59qJjpmFL9tn9dc4a3F
gzsJtozNyHCQbSHLDCdfy7EsTx3qAVgYZsbroxtUK63qG9/1w75xYx3ajWuc
j/6k8GxMkkNUcUJcIBp7/hBJtik28sMnmvYYxl1ePKotusZf1Yl6scBOmOsL
ZZBWKJDlgIz3cFTX9FRmuBcUD28HNsHNWFlP6lXEgQQLwzBJhVaqyxijgLF/
LTuddzJDiZZvmHlmEzMC/1Q6to30IhfJEuER1qI0Ci7bBh2DqjIEP3fgg+0c
0DAEqGB/5JPgQ/mSF4RbK/LIzwjzGnk3cEz7m6XD2jHX4u4Qeufl/MuBmX+o
9dZHR3P8q9Jz6/MWkLTIaBBbIAprhBmXZufJvzM3/suz3VSQ0ASFEXMQPyFO
v9T9NDL2JDzxVFz1XXLtVImt0h3dkfqGJgd3bT9LvOX9Hf03X7QflCVZZduM
kXrhVwA8QQKb3x32Iqb3o+u0bCKB9UVlGcJjsF10ePE7rALWmEr7txRd8vrb
MlswlFlhipAd5bXeoMqvJHsDqgPnlI9tv3jI6UDWZW4Vyruzb98xhg4cmIGQ
QLZnzJpsTb/4CdaYDAOhFUYtEj/7jAA0nv8T9f1OI7+Q+BSRheKovjmrN5af
7N7I2301Ow+G7ZFXXZ5dcbnqjAmeKnJysOJcG14HUPETvVBJE0MI2s2GV/NW
Y/AiZyC+1HSICCZG2T4tE2+VF0J3n268I68f2Sme9Z/ljRoLghu3RVBBgdN+
IfEwG0NHSR3QbgsQT0P9NmR/Xpf6ShOm/1gdpDzeYyrZgQeO7g2MN57vo9nP
x/6z+HqNlsvFEELAB3CR4BXNYjTv4xLrwHn+W9NiMeQUnsJIU+kEmsTZQv4D
WMNvgCXqw+n8iEYGzvtBNZ89HSvOvyFn7lsl3E3BqJObwvL9KfWd41wZr/rf
tV5rCikrJrJWN5mtDYL1xM8nO2aI9WXEsu9TFSoR3COCiLagsOLdoapM6oj2
D5T/EsE7H2Dn5YBAr2cUIeBN/7XWMD5UMO/4NJ9ijnF6SdUCNKpQIPWO8jRA
VZ9d5cQIN1tUDP2y6IRgV2llWpIZGpu3UPVnnK5no+CK0ZO2OSL1Ha7PK3K5
oub7PnOYtyeM9PMK+6Zk/3x8mjPNvDaCC810l/ml3vqCJ1YBQaTNrnleAqQc
CXRKYe7QNFQQeSqSj1vCCUGye5/tyI01p384Sere7OSuskdrpocY9Mdb8sTo
2n7zzjPuHTMO6P8gU/f/PwDPVaw9rDPLWLhwZCySY+E17kjzkQ5Yb0iK43Lt
f154dq1iYl6OsiJBotalfePqGf/YycYA7K/PzS3Kl0QfkjdzcLd3lGsRmhPJ
/E7dYrzJeY3TaAt56wXwGv/OxAgUHPNKkuW1ijcjQLYy8ZXSom02A2vX7lLV
CXic/xwZLzg7Z6XHW8lFJjHzhxwZwTryEXwUbbGIQLQTIn3vKGzsr3r9DBqF
N8ZmYv+4Lyw+Und/HUu2wHWiVA/KTL0jkPRK6j3QMXnF9g56kuNw3FxP1ZUC
IT927rn1cSlf1sckuseF1qLeW68tgfGO3cdPp3nZT7wKdbKkyVA+bEakOiL1
RbHou9eGwboDQtCEzfbv2dcxazrN140xbOgU3sER3s4gIChpsOlTak8fVNsQ
9hP7Rn7j8ko+05FbsvEuNY/deE5uD1Zq1/L5MZ/YGJCnZMQQUL6WOcZaC/UJ
fUvkqNeLtvbyEG95JJ/+atVluzHbQxi6reFYVvXv2jU7z9Ltxs1ynRSBxhCy
2EVrG1b6x3czjWNpxZMRb1d8zOGjqZtz6gcxFi8oTOb7gf1LU8d5lCeg9e74
D+DWHxfOu0cmF67ot4l3zyPr1tOSemIBuxSSYHmOqier0AO4kfk19x6cHgDr
9xXfKQ5xR+qFG3tAkfs/1PKMEkWheDL2PmufzahpNV8D8rzsXDhQrbvklFYI
veLY+GeYWwa0LNSN8ErnpO+1fWGX4KajVRxn9oTgIm+4MvHxBcgj5ULUgnBa
2EQIJgwOhODZQ5MNWvKEwAlUXttkxlyqWvhH0zyC4OcwtHGtGLieJOduiFrw
HjhU9NCaS335Txc4kNqTZ3WZq1QPRrHGt2bmr8jv6EaU619QcVTODZEhONih
QSOL9/WZkww0Yjag31H36DXkV8TyGM1o9ALV/ZusUfhwuHGhksbuuIAIygRZ
0SktqPNtVluvsfO/T/M568J+MSTPJt459mvl8EJkTqvm8T0Xg3P6wpwpNsnO
B0L3FIbZiOsuq6WruFgsEpuK1K5W/yj2Z6POE6/qYMGnZsVOi+/VX66DLdd3
yP+DGMER4HCuJgq2Nwl7wLmQxSU+tsKIHdBfO5nNpdPHdS8rf6bJrLaCjScl
vFiwnzeoMiQFTkFV0QH+rtTxnSC3RuxyTXVy4bXyB9sgFaDgSYRYBkEWiqe1
MQtRDaS/75eAga5sinMWl0I8XNo3sdME1dFfa9RunZ3ke2ORAASVOvDFUlvM
CY5Fw/9vVzR5dm2KXdM7IqzQchYTgUOjqgywFQNibHeeZ2xtzAoWCW8M+72o
fHoTFSZQPwCJ+VJ/ai0pZGOh1nxBe2PAxYYv08j79YNnNVGTzEBP/BqogX3V
TIYxP1A6vm1TFiYshyvJLvqJ1Os8Mcy/FpSKCd4Akjmpp0xZ+O5ueq/P6uJO
E3PEnqBHiwd1ctLrKx4x8ggbqAnP/MTs8ieblwgXASTvsZSEW7p5AoWvmAnp
rbfQMdjTBkNJ3nDVBnSudnN0f3H/MddMH2dT0mz0Q+olq4sHP9VEev3RLDq6
VBEdv/4/8K8jCiKuSGIbgZsZ2z6RnmsJbds6nng5K2pFmaT9bMeAozF1RFe8
N4QB5tCix2rjbg6rDJhePqlli93UmU3QSNuUcwIHQ8RwAxGcohQaiNzcOLsM
w8FtRhvnV2r5gjlV2eNeJglMYem+kEwxLMZpU0E3zALbZmSTWB0eji0yZGJe
1OFj1yk8+2IdCY7pKx3WsS47W8wLoTr1lWgPfpgWKT5pk/ZsbSif1QR7gYj9
j+KrL6X1MuNODCkv/G3VlPExkTnh7rDjRO8zs6h0QB0an0yn1KuYHQEegVEF
YhA7EKLROo6tsTG82d9t0lzAUvnjLcsSR/U3SCs5w2uU1iRfZRP4s//eULZi
TXZHpLXYy0ObBSLNq20tHtLJphAQ4LaZWiXGWrGqKm7F0vNngnO2utjMcy30
W5/dNxYBsfS9tyNw2vfo43mUYahKoZ1cAkoWmzos3VTx4cXMoYDrJwyiP5s2
x6uyC+IgfZTkKFIKUKiYEer6AD24XqVrkS/YVqIdG4hWcRWljm2RSEFbbJP6
+PtYSEh7Nu+2SedLDml5du1ARTLWI20907hfSJwJBUl6bR04udV7Nt1D8654
56mVPF8WQzQANXzvPRUPBFYLzuE3HfHth+ANpN4lRYRkQbvoHPC6LR3LbolC
TwzNEs0E2ZBpHVRkrfyJ5sirx5BjjNPVNUdonDWHBUjGjjI15SFJFxPHYO7A
JL8w0GvGcfRD4pefS3xFJGVnr5s0+qP7XOTOsypTzHyDt6ElpqcO80F1J2b/
hjdb2gAwaa/73ysZWqOuggwb5g1TOV950dsSN1X0XvMxHKx/22jMEMmzKRJ5
XpTkz5zyB9s5c+f2mmN35JBQ9XVmPKf4bvqEa51ihtTB0LhGyPelNM9C2K6A
wdOb6Ie5pXxMO9U0EAdnzJpi+h7VexSlIO7YYXhd2ymc/dlhXlOQZecnPnCR
G+NLeEdQ6efzlE1LEJ+c+Pd0k/zof5DH5g14I5rBgiEIAMJ/UJMN6aG2r1DW
WvGg9rZKXmrB77FGr6shVWt5a43mig4wXNRllcmFa2d5YwpARYtLJuBlMZNT
9R5gSDQe+siWi6aefCHFsDH1bSTvSG9hK5bpa+5V1g6yhOdvhHdIJikxzozS
EMANtV9MYSKDSFXdFnWA4iR+ludxfebv7t9UrjAKsSmojkqxR1PPxbDCA0Hm
FIKZ4GQvlERyElg9YoK/Ct/YuuMsGFwuypE3KAwj8VVooyhkoVbzvKY3NpCe
nmuUOJJtZYiKrSFaCqf4rTXWRQaCn6x6+G8a9vHP42cR1Rnt6im5jhim8IQG
0kDEMZMF2wJAQKjDvWIj/k7TmL/zLmzHzRBFEqtvEvHDSDoav3zPHISc/z3A
hZv7huIxoOjP9XkvaBhODFPH9qA4+ATaDR5JHMf9P7rOBMquukr3tSoDGWpI
VYVAIISZQJjCPNvgyNS2bdvt09bWtt/T7tbXttrPiQyVgCCKIoqAKIpMAsqk
IAJCCJBU1a1blbrn3Jt5JBOZk0oqc8I7v72/fc+lG7MWKySpqnvO/7+Hb397
+lPZnxW+M028UubhNEcKwnaNd8k6MDzmu9mzwwp9M/v95tSlj5LYlcYQOX+x
w2wcVrWuCWIy5ibx7AMl58wog3hSpOiqxHtLkQ2ea4NpVBZU1g3dp5hivZpC
OQpExYm9FoALcTr/2S7vksfnQLIYO2f+JvEqKW5yutiSKrRznW6KsqjYtHqn
bgP/ttjYvnZLsOAV4CiBGZy+G8Bhn+5zyoyDjKp+ql74O/y1UB2mlHO2mpvU
h/dvsbv3SVjcCVYgLAzcYaA6OGjukZ6LaPbEDU6ssSboi7/QcA7n1mSqxHCq
9Q+Aw+h2+658SF29pVqHLUu9CJ3Cd5JauxKHdTwOLs0hXSttpg5326s5Fz6G
c/xRZqJtF0vqOTC+jto/GCrsQ22RuBrKasex6u9G4m8+VZls12iUY8fYNgpq
cdpDa9JjFh+LmeKQGDXCRxFZkOC1TQ6JT1ULASSzOj/1QodHM/PKIh8IA5JQ
FFb8LHUxsepS7xA5CsFHtGaqqa0rciWap0cQF2sdqXvekfhsMkgU2xab+KpH
+3fVNq9RwE0nShAxN/ulAWVs2FDixRJQ2vhP2G8uZqHZO2xu3SBs3yx5KRFp
g8M+MA2AdJC3Ag2BUomxkZzsp9Pquncre35dKrhW9J8v//MdE4ACZ9nrwXV1
jbyezWzPvgHMD3aB9epM8vnrvAcaFWv8NCJzNJ7Kev0S91CgQlSFd+Uhr9fV
IgahA5+VF/UFR967BELBZju8O4MyHG6DPMdHZL4wWwPiHRFKBpEwLHihHPq6
JB/xyu+bZILBvtt01Jj035V9q3N0iccITkYrUehMcPRQDTbhdaHJOP6fqzkE
ReAV+Vyyhw7tWoFnbKJarygKHgQvEUVmaPMS88PtdY/35afx7jsZGmPKF/lO
ynGtSzz788zM2LC87bK5U+wNYWe4hG+XqjBoROA8EhsY9XDUcCwfLucf7eZu
+Oc0UmCFDpO3wOyh+agYlXMqGxiKdeCCiDmM/M1+57BcJIYTvxFkEQzQDcKn
gvYxjWtLvp9Y7Gd1eszDfb5SZm3iO6/gku/TFNkYxhkjHb+pP08s+9nj/r6i
WgAbLJL9+3/0TanW90yqOdzPqplG1qmRLFFMc4Ht+Rc5k6Br+L6h5Xwip7lR
j/uHcMK4/H/p81oRm0vjlaCn8Z5YJWASWWVSoEyZBS7AKSwVdfN7OR7MAXq8
XTYbQEe3MwkxUhBW313x+kvMBB3uv008/MOpsSLbx0V7cucXIt8wLNtF/+KB
oXYJFC5fkGdwHeFNxGh9ZZ5vWePj2WaHcSZfFEgP68TjUiBA9hWugprLX8qD
kfaicBoXNa/sOJ2tBAwi4bVRZyp2wLrMhr5swXQzVdAnGGJUqyAh55X3Z4Ej
j7y36/RRxPHPZ39+n99c+JobdGOfqEkc/20WqBTERCG8GDQrsJPTRnN5tKK4
xIX6OmByLGHEfyDFd8umv2vR0wk52ANa95X9Zjf1XuullcXrh/9ZendPhUjo
amuQXpcFoQ8keRI8Rl8A6Ai0qN16WNaHOHqabtq2vyvhzeyXvpIz3cgcQ4YA
kE8H2PPSZht7P6fslnOtgT4PAeqx7nXjS6kL2/ySj0WipAD3t6vk0T9x86qe
a0aQ2mPtJu6uX3ZhqfjD55VIJkT/N7tFZz4OZfF3TAGyJE/qlDYrSrxezxbW
YqHWFy9t3Jl9C7D7N5V21WH5YgcvXP2b4dZYUJpWnbpOyeOJ6Q2h57bhGFdF
ZvKbZnSn2GPhmnBJ/OzI1RI2PCbYLwtIliNGZ9yFAEH3VbxsPmYai1ppQvWJ
AV9L3E1FHAZAhFFAGPi+CxZMrw4pI4Z14Dccu/yQgqAnknxCPqpGwYSRxDbC
tq7tjD73Rt0C0vxoS3iWvIgU2bLtOd2Tmt/qOrtpnZh8FnmSaWPKCDbfhuN6
kWorEXisoLYpH9nPeu+CaTaKZpUgMa80V1Y1RsLiR2LJGK8j2BcQzhItgn2f
nevsEkaJR9mc/fdK4rQDqhglMfBVAi5t5HI3Z69BNZTVuia+SDpGPWxTxTJy
iLMGU81TXghDBxYBrr9mhphDqRvHn5+CK5vnqB+US+/G9xTHcXw/zmDjryrt
1qfDZ+0rXtDUX/BnYJUok+q9HvdKq6rGkNLnAezDakHmwDAggA77RuPX4C82
pz65pl+YxYP3duOSa2s0sDzILRIAP/R48cJGpmh0F9830sa7uss5PQPSfNte
ZvN1HuGjO3V6VwqxAQSsxyHx2XvxxMZDpr4R3XZtZ39PdLeg+6Im4AwrM1An
M3M+oGIQBBFRyPicX2mIHX+4ZUpQmHxV7Dp5FBE6QH2mSrqATYiwf9uwmNt3
X+oNexgcNyLtVkHj1XpteBLukpiKNzone+M+TREE5gBkrQODw83+TKxljrP3
+mqDHE0q7ow9Zl0v5cc83iFsikjDC6JS6+SM769x8qSeXJSHEr5hGGxOTtnh
EX7cR6batqE79Amh+1hAOB/iyXrT45P6yg77COAj92fMefl/bmzgAfBZkX1Y
mnp3zNELb7J/v36eWzGukggAnQy8h1nChjwt4QYJfEJd7GGKctw3jMLm12Wf
MQOdqUeDnDOJe4d8loAI2P5C8bIGKpSZNHaGxtBhUWw2rUnPYVwwIk00QUkU
8IMpFByloN8wDAgYeGHig13W6uY5oOMX3Kgf1RiDGGvpNt71dhGU+Giosn6h
uL9jn4rXQY4+IcnjS8TRGmfrfHLx8wK6wI2oj+brjqrZfEngEtTj5VVPcdg9
tgdx9Gh2+G5L3QPw1N8h6+957pOoQJgtBMTHgIgI0Dd0X9LI6MFfd4xvAxQT
A8WAOMJKYigLeZMIXLw0m8naG+T8oth1IPFhUEtT74RBnQbKWlpL5qFrQssu
WQlhPZfZiQ3lfOkC1gs8B6BCr+EEAu/1SfiIBO5ThVSXZP1Vff8CuVVcbqwq
fLjSXh1WT+0EB/m0nM7LqTOJrytOQoBjQM7OTKSCKeSSncwbcvF/o3Ks/lKi
xp1SnsYhDfT8teV4p3Qc12pa5803h5PlQ88g1pCD3p73jqQC676uc5tw83/Q
ReFQWLT8Kb0GWAzKeUaa5yj43Wpq/URPhi9ACJZJ/lYooQCBxrH+uey1UFSy
PJM4aQfqhynHYXIN2D8+i8+5URj0hlJMTvZuvsUlR0VAEaYdU2oclQ7U8L6h
5kDTEcd+p9A8PbPrzFExtJQUz+bEiwcwfDY0JHVSYqBwRcO6TKBxtAgQX7ek
7AkMSnIplX6kcFzr5pILWFRYQNIiBpREE1nzWXAk+3s/bCvAZnVfOXKJsk9k
fW3Ij6vnpwSvX5cfBUs+nk633/n4TeX2qn3GvnO15G32qLMPG/7tipu1vJeq
CUHGcTG8lOCEvZgIKLf7pmaF0yZHVur1wqTmScrTelg3EgOA/AOOjN2dN91C
Lg6jkEyrGh0TQq+0akJA0W6AmW2oLjmzvMw02Ss0Vkp4Y0WiMb1uXSmfYHgP
csth/FHqFUUbUAgkuNy2HA5xAXZ5QCZ+S/Hyhl8VxrWR0ycAJoCcrSHX+Lxt
hUlN+wsXNFKyT6DJAEqiKqZyYnEth+XQ8Ii/1azHP4tA2mJW2cMja3wpecD9
kiz87er4jobj76Y5K8ivCPAtaNcFcdj8eaZ6NjglRPuuDH7eVsrLMcaX8yAc
i6X1fnd2nd68K5OsQ53j2t7uPKHFdnMn7mDwsDYg1nfXT8CMIt3E1darkQGn
2d3nNMd+bnbJgq7/JGjKXuw1ieefCI1YMXhTOU8Hcgu/lyDsy4DPwcKFjQfK
3v+xV1X1TD0L0GUT0FKfQMYmKcpC+BnWDP0de59Gbp/y6fu6z22y1QWZfyVg
ZrwwEAVp4Lq/WPKNZDUwezC8BFAJy4JACidix5d2X9i4t+ukFh5jdabYwolj
7808wmOdJ7TaRiRyuh2ev34HTky8qnC9jgycuLF4eeMi3TDjctqFELhJvB+P
CONnjyesSNABorOi9ey4KDBfpUDGV4K2V/fC5PVAh0UxLvaMj9wgR2ntIs4Q
TsSmI/xA1zuyk2HR0zfmZqqW2an+Hp8VvEYfBeiPWXEI8cqKw40oPe4XpC4W
zm12mqPdThX7PSdVbX/3pY2/7hrfBlfA7UPaM4nqwxqiFMsYEPiviQHDwddT
DlI36N6khjZw1zEOuAfMo8aGQpqXu84YxYAqzGvUa64T+UMM9VLXxFH0P81S
2EcB9yWZvpIgvlG5LeZb/CbwXOI1y19PfTycLuWW1A0SQcAmOe5IaN6duocC
NcIm5uuvBtWCx0CP2L0uWQlbjJb4btxXdSDePT4MHx3D7vGhSH9Ue5xQ/QRb
tEyYEIASu0SnE8We/YXLG+7rOLpN6LGZY35GNmpj4s14UP3YxCAMaz8iMrHX
5nboMAItxAzSF+p+p8iCC9jb4YnttjF9094xvuXUBX5I2CxI4/8lWxf5mtqK
wQ9kd1MLK3VqQ3DL5Dz3dl/ZANYm4+w0Zd3JzHLGlhYU0+IL8RQMb7KxvpmG
MmcEYwRSeknFVTu7r2godZ3XtEh00P4sDiLX+IsM4kD88zU2ELKUr76riNvl
7CAakTvMJpaBecDEvIxIDaLQSe7TxpXcVhr5kXpa9D/16ig/IcV9JUcFywRl
H5c4o60vZt8TXMxP+zxyqR1Mw0zKqEwAKTGhFdtJIU5w+m/pUXlkSlwR+QCO
hvwcOTZHYh5XiNvk+bAuXCE1CrByqF/kDSAZl2gsi/JuRxM54YpIgaDtDMyY
LONH6Rxi5+vQ8wk34AufHNhuQfm4RdOqUd1PZPCCArlZLg90GqgS60Q93Qq7
Oi9b3yz272s2ktGnonB9rK27S3wvBvjzIY76udS3hipck4k8wTnFCLPme1r7
9xXftNMu3GT+0riLDFVXvPOI5w1UuSNDzrR7EWbzDITjyEBS9lJ9gA/PvzH1
JgNawAjhV0nUsMYbVcTgq8zGtAHntimksQ6kiud+XhBes4WBSZ56Jh2Gqg6I
7snn+Z0U254QB29mc/SCOMIz8zpGuwNgMYO6Nlozos3Gq5q9PpxXu6Hia6tZ
cYK9I8BmDxmpDq5+uRgqa5JMfbXNno4j2y6sBo0N+AgUm2+HAv9c32R7JFgi
WgPvV5AIDQlEdNM5HOX4f6r9ArtRhwTeisWBayw3j7WvGwyIef/CG6tFco4u
m2IsJHwSL0Y0AvTifB33TLUx8QxtJtrAYeP9vGu37ZXES/bZOMd1GyRJnJRk
+tIXNE5kraAW/8aV+JJNb+LhowD+ap+agIV8QcQnbwZpvlFnjkhi9UgSE+QA
45lOSWB0g0jxe6XOVlKY/Yr0jHWZ1Xlz2w9EXhKdz1bcSsL3W9nzjlniqtIu
NYwhoFZ47DBzYgzcfLvTOz7ARDvNpHl6Cibbq0jabaHabO0amSMVMoSdiT7i
vFhpRz4f3BPLQedIhV9PvVH7hzo7zvCnYqW4dRvBkX0OFOJBVXsfskBral29
bSccZjFX8CDZl8EP07WMlQOGOXM0IoRhJ03JSGv2hCgoU09grDhRvtwZlMG4
toeFxOhEVGnhx0yE2u0d+Y8P/VMpSgtbt885fDRWYiDJu0asMzr7M3EoSQQ+
HGtWqlGzZzI94JPQhcsyJ+wh/jhUZ7p8e1A5PCNGGU1EjXiCdeJYnkg8jU/1
ZmwZ4WTxxdEOC0aICUH4xjXKY/D3jjCP/7Bwf7dAKsmxzfZGvrfqzcTnGvSX
3FZutCysf00qkiOmoK1Op6oJxasfgG/gesKzNwhzy96kgpItUg2+rSYd4izH
L/QsYLMnyu1mK6GBvpT7jHHYwK+Wfaih5U7S9mrOD+mwQs7E8/8YKYTHd9KN
bUNRsaUDAnMIG8YSegmIRVgOAodBWKLE4GBrEx+J2ccV7yi5u8O1QppAZ/PY
0VZobnnQX8aSx/bcYIjHpya5G0A3GOcACehcjm3CqgVk0c/6SXk7C8tdeodi
BgBPqBk31t85ZjQq7kCm+bi5frk4O/gzOPyIXy+WnHxYPxb8GMMoz6/BkMhg
VBQvEyjBaVv7rw/caSF2ZZ4XHukxGNGyp/JvE2gK6xX0ZpxOWCjrn7ncsSOF
1lgXLhirUTNc/RROCbtP7n6uLAy1+6QyXxZWho19WicfeBvjT8UVw3QhSaCy
ou4EzoUcDE7+C+rpJWVKkBx5lzfLXnPGze1SqAWepO4VbCv46Mj92HPnTat2
3nUplYe8RPeQzeMqe7nHqsIZzYyUQsNXpqr7THwMFRNOgFK4rQeEhknUfqw0
2d6wU8EdpU87K/6EWTSGUh22R7b8QfVRPp7WoHRPMLd+RQQz0cHkzHexqwDf
N1fxzZbCOc37Ok8aFTXRBJzYaxiUKIO1gdumwUf8UI/Ia8cIK15/be81Rmxt
6rl+OOlutLGjMKn5h5XpVS4ae3h7FOMLKRP83RwqJNS4ObOfaPpGHW2gLS6f
Ao9bdWlgDgLGGElAMHG3sqb/qCOhqJHKBSzUI9mzrO6+pBHSmwU2u5MYu+Sw
ar4SaxBze0reRoeAAw+EGo8pFc5tYhQRwj9JFRWThTY6kpxSJqpY0H1B0+uF
s20YzZ2CcRh1mBeoOQYOFLrPbabkFfo6GJ4dmknB6AvKWpUAOozNYvss737d
cKASE88QK6tE8T1ubeOVh7nRCus9sc0zkUCEW6ZWgBqcL6dunVGC/t4YoXT9
cNvyKVNYV48K1I3crueBw1glPuJlIVbObKUI/n3Mk6/HNtcNogx3W897GkiG
xrzU17rOaCbdBysU8/S3Fy9v2NNxRFtXJoaxkQ+Z4vtQatnLZgwZckez0Cta
xQsOZcE7qZfIjq9M8uUsmGzuJvjJb3QdYYtj2KS3RxN9yEcjGxTVflYewZ3V
GLSQMQ3Y0r7s2pcUL27klZ/QLPko2Yhx52tLbu0JAijCwY9bE2rJRZivoZrZ
W69OwO0Q+qMVszLlm915/Ci+HL/F3/9BFGVkcWIV3tFzb/IZRWWvksAI4U0i
XMfEt4qU4iNhYmNNGDNHMPPhFmB6VBDycb2NkVPCjp09V4004FM4cxR8Gi6X
HBj+LEqKLtWjwZ3FitkLWLGceEH+TkbDpD7LDkC3URQnAuysbYZ/syBiZuJC
RXcnLhoAFeEzl/RiybEanT1M5dhTuKCRPUyIWz3Wom7YgAbF7xJ/j7yDH2+U
zXHs2ABRuSXzEWuK140AM5EyQKW3COFyQN8Wf5MP7ht0twzpF9BIzycOs+b0
snMHBA6Huq+0chEkiwyHgOQzXSe1bOw8thVB39Y1oSVsbcRo1p0tXAwC3CjM
cUnis0w5S0g6AUk+9ZsKHYIwgw2jvoYoPvYxYOKxT3CKT6UeuS4ruR16UvZy
hoDAV+QW+oS7EVgq19AJFTPeIi8HeIPHWV1yaaCuYH7xQktBrdYbDMiM4blQ
zUgdUTBNkzSYdXf3FdYoVyrlGw86xPuT2oECXVy4qBFuiGwEKk33AwJOtPNJ
dUoBQMEQ1HvjLpidNLfzlFFewn70G7I6O0Hu3Rc2Hqh40cDbdhFMH7nKG5tS
fx369kjk0Ry1r+zNCl7v7biRFCZYGC/HmsvHOk9qRe1/bZbas70AARz/72RJ
KSMCmtzdccRorBaJ9rBOlwo+xeKydwGVtg4Q6+sTizAnHog5dHVIhS4HTQdP
UjP/a1A041njr7bNkI1GYl6Uki3LFIoBh6HYXk836m7r9h89elX3ZY2gIkT9
PTVlhVaQk/2KplNuJUhSHL+qD/5LDUkIxB7Zamvitn8+HJHmBYiR4EyhD3Bd
ewrnNW0qTGqC/qbuhRfkZf5NB0itij2miipxw6g7pe11V/jBzJDVgdGlo71m
7vQp1woyvCH5JLJlgjCH4k2Ungn7vjY8YQ/OTxyCrMnc2PziRU13qByiUvzA
CCAQyw95RVwi+SV+dn/J9cIKZspevW8zFuSGCCGZeHWPDLiw5kS//kDvj8uc
c10ACivi8wM+DIzJHqvoK8IAbkwc3GhXZVtR6L5sjtOBCCESmbTlGSBCY9dY
js93De+xqLTdZibz+c/IRxyX48tRv8nUijzMa+k0La/x0AvLCug4VLjAR95l
73BI21a2ZEBmvtF9U8KmIUpfFna7TU4V+zZdrCAEOiwlduuBzCxiFPaqrJKK
O7AagwN/Jn/+3RovR0DCnwmMgtz2ksfh+IKtmRIXu98/crXdv5fQx8iWZ4B+
9RQq1h0daXsG/D1R8VJGlgGw8JS1i88rbucRYIoIMPeJfx7o+asGwJQNZUu9
oJ2TB+7RUQkhuK/rvCbmarR3Hd+iOiKrUgIMrDbTnBckw6RE63ivPDBGxWuX
j4QIQowifYmSxiovAP3X9RpzU0fAu2XPFndf1EjQimNCLOF+fY9rhvC6JjWt
7DyzCVxxu/1UG+wULXLf6nMKOUrBChUHl1DrX02czXhVIJnaW3w/9Ri/FGJC
M6if4f9jYATZgBXdl9rWqh2Je5RonsAUYlbJPlBhgsb+TLya5e68d60ZbZ+f
mTVr2lAlJz/rUNfpPiK268xRgGw8U6Ln/K/4GT4cqwWt/6meH2AP3xezAODz
0Cmr+0k8HUDQgK7dr9XeVqrt+jIMm/i6kKGtU8zekQqcp/ucind9aP22PABs
+qk1ZjYGdHOD1M4TT0XYR30UCwnJ21FUwO3V9xs0Ksit44v5dOwpCAwrgDp4
y9hxHxGQY57xxixy2Vk4rxFZ2JU4NELsHiy1G2l8s/yGrfis8xQ5T/2ofgZy
Fo6AzeQxTJfWX3j6OwXy8Ao8cV76MDRG+0L9R2Mt3sFnsF8A9jcKMfVVnAcT
Z4QIhantHKf28z8p5sJcgZp/L9Hk06m6BTT8VoXBe+cc3YoRIOBHeV2UpmfI
2WlXSIc1ie+H4E0QY665LO2gvuRAZur2dV3YaBNlUoemiBuxDuE+JY0oPHU2
iyRK2CXjegROuWuIDu5uYerm2EbUpk704RSJGL6hrnWBhq/rMij7Cc4dqw16
fDV132azwxLnNmx5W1JttpmE3+3OLnxvZn+Ic97UKyMnO/UKBzUScVHx6hG8
OnHRhUoT8xkPCYa2yydfKbGEqf6NwDNYjUtHy7EODyT5hOSPKyfMcXaVplpp
XDRekKaOXkvyBbAoHMn3BIK8wfYstCQmVP9eaAMJ4fG75bxuFPrt7/ERnkuz
28cVL5LG0IsDdUStAy5gg1hePhYu8xnjFB1OYKT4nIaZ02xBJJ7nWUGQj+jV
kGtyV3wm4yF/LYPBJLqdXedb653mjwBVoVYPdp3QSkkGgm25GJVkYL9i+luM
34TVqueL6gbH8BQsOcMnfZxlK1YUOobxgYQA+Aub419xX4I4wdTvSXw8IpZy
TeGyxlf1b3DJKPfQv4xPcaPkspZlZ4mYLZIXN6DgC0WHnDsvrxD9p/Qd/SuD
onPAUsj+dyOAdIDJn4htQJvB1RjmaBqnQMRx6jDfG4E9P2sUBD0TjemkjynK
QsLBO9U0vJ8YAhi/QMnwM6B6TpaQM7K7vMXfzp1iOz7M2SeRhnMOAt1+O7u+
Q50ntmKjqJ+LhL6DTEaXtZvi8Ib/KUkF71jq3EHrmZwczaiWRUy8ohq4x9/j
6GfKLmGRHxK/xc+AMqTuA1Aa/DLVY5w8GAoMxOnzLnz2DLW5dKSehEPSd/Ve
P5wpb6u7rx2B3SLXV5TIRYiK7fxlyePKe3QT70StE/ArkZEiGHpFfbX39+WD
wE+QE3gFbFOebopBohRMzgoLroLH/XZmigmwsBvIMPUgCxJnFSL3s13Il/pS
JjtgNs9eONk+B9gHWfI90Xbyxlb/uj2TmvVK6WxTA1T0N1q9duqZqnx22vhW
EAS2CoGF7fh4n6Cl4y/8IAs+/68gI0j2aZk+VM4GeyS+EWidzGxZr47VJ1lw
lMiUaKNFSqbLuzl6nRBZMFSPqOINocpYlbk09WGbPOltmQu+T2UOTwpzgSAh
YF/VoyEkAAosBBEKZf+cAjTUXXLZs1JvVF0s2PiOiXIaD4jlF2tgxB0/H0e5
RlXB3OCSxHtLQCMxMInP/yd5FYvSHH+NwqyfOX9y3VdKzuCTbieXu10Cu0JR
HN/P+yD8c6UkmIujXPc5uUkhAPXe3Ru9S5bWcVMyKIaL2S8rKKy3bgH787hP
JXnwG24NFMH9JIJYBD42eSn1BFK44aeFPlhGgn3sFSzDnbKO7jFmW2Yvxs61
XbLmTm4NZyfJQaXC2KL0hvrPoiQC4CDMOwojBawCzNARSypvR+1dQYWk7e+o
0CLdFr3nbunbsDdIIWgPRzxTATRviqPHaqPgC6R4eE6m5MSkTipSQIl2tq5w
tpuEk4Cjhc6r5y7rhiCtHBg3j6+pIUTGxv6heMuYJv2DNO+ah977tP6fIaVb
xT/9WWgcSf+dHpXoAek+McNHiIRBa684bPqIICPasCzxOlTi+O2Jm3dK7rAj
QK8AwBCAmkVGjHWLlIx7545/Zh4gT8LEQExQ5Ew1Jdq6JzElvHrMeEPhsNC8
nk89GIuzIqbHImGx+oUR4j6J3ak1oE0TMwOQnTB/RlUEf5N9JHf8ZYV2GH6m
NtjkiTlj2oqgwnq0tW4cbBpxPWQisoQc4SRwPNgbOi2ASpgvSl1WqRxmrwC5
NZuXHKSvU4YSeq0/9RgPEghQC9uDR3B1H4K84OfGqQyCALtuBNRf3RCM7TmV
GXV/lUyp++g831NbV2//NjjKKDgiftxn/U4bZEBxf0RlKFyl5EuLX1Ow8if5
IcScaPW4ahXnIDJIHBxsqbDMyAbhultK+eKpP/Z5nER5MuH6Wtl6QexjrxQu
JD56TrLxj2VS+lOsTJmIoLZ+i0lwr2dG+zbVav1eMPvX5Rxio6HflYH+tUql
yWTB/IJfOVwyZiGfiPo3ZacIVkmx4rZ+JVjo+6w9nbzOQFRNR48w9jl9M+yo
oifxgASQC74rcXoYKhi6LoqSmHBgZHfiNQbQakRTa8r+3jEIh+f/D43wsKxi
6i2dtysox+J8XbAU2wsevzPxGgOreE18Xyr6B8Fk+ycrvsbVwckE3Olj8l87
07wtGb+0rezcAJlgGp0SMd4AKiRlkSKn9UIdOzvHtBHQ2YI5Nh8lPq8en7lO
0Qpch23pzn7eo2UPXINeeVlmAVNRU635rhA7fD2igX4hXiAiK8GW4sSCZP7D
ktVY0VEBIyI7z7+R4eD6f66mC56TUCWcYqxpAeW4b7TJ/uFCqFjfK5XH7Nwx
1zndWNOHpBHLfk+uRU/SqnqXmH2zUfqHpUF4rVIo9X1jxHm8KQzNgOCnz2Cx
RRQxcHlW2Ufc8KW9+jH8XXem5nAZPwpA8R57hDM+Jx2wFejZI1ASME2jBAEk
FenaA/J0oO9gD+hYhl7mzWKY8Q9lry+VXnKAfAavNVPgCfoudpGSxcVGlGU8
ea1dJacNQeU8DzoNssYKClhrjBRvEtge5/O8npYsH0E/ex41eONwnmCOkMd0
QSTsKbYysgVPJz7wC4xPsA23Sp8Mg8cQ7V3d5zWtK5zdhMp82XK8fr//muQl
87b42v669RcdY9rWdV/WiGagBUydiuls0CE2Y7jixZCktGPy3H6hVowWHsyx
9FHYPih3gBxgB3+IU4uiuxdTn2eBPeW8iBVR1EW2X2Gq+iC84DESlDGp/rdJ
/vSOqU+1ULbjSMsOlvRtYMkVwkpg1zn6WMzUs9mTstjqd5l+PqOvYzwN7oIg
Mwp6yrIJmNU3E9+CFgT1xN7s0Mve2nGocGHTwc5TvB6j+4ImfmcMIVgPXXcZ
GPQ1BUNbLY61+P8w3jTg9LeltiALi2+95K2RZUXeODPBNvs+VDiulRNjKiHe
JOaI0rNJjMc8Au31bubfCp0ntFBz8NOKy8xjJefQqKugLunXXccahLh1XruZ
oEmKc+uOc4f1++xr+H7Qz72SdLwL8SNf551Illi9KHN+X9MyHTgMas3pAQQD
ajNsFMly77ep2Y8vZ+owl4aOkVrhTerq8dZ1R99Ynlqdm3t/mtda8wQUy2Do
rVtV2wo4LSOOk2mqN3MRtsVUkMpdp7RAQmO+oKxiBroVYTogP43MBjaJLAX/
4XAwZ7FfDvEPsuegJvWAI3gWngmoCqjHwH9MeGBK4hNROHkc0T0dY0f3lr36
gdD4V9m/X7zIvx6oYwn3xOMO6uuomiBB9Md0am1CZ/hHKjlliO2kcYb+n33C
B6dn6Es5xMG1CQBSslrDFkMtaGINI4M+YID+pjLFLXriUwjxgbCCmD3Kdpne
QPkgXRLqjcTj45Y+rKQ8AjAmlmy56xuPrHGbgH1gKiXR89VsQA0nNSfcKCdA
iExoTEDA95EVQbaplOTvusT8xf5dynYZ8cHT0HCPLcWqczN+EEMxyTwmQIQ3
jV4vrxr6EFU5q5RXIVkBMMAk7pE8DaTOJlPP/KLV10+xrFdgS0ZNcI/IOfQo
9/tq8T0jaY1YVrxmBBVQ3DfxBQVjGK7t2ZvvyuTiwc5jWxmHwzhfH2nmAGVb
kncOMToVCgXW8FDRm1hJWXkDvpvtvdrrgBkHLAH+CbS5BeSASBEd4oaQBYQA
no4TI6Sy4X2FCaPQfurxsV7Id91Q81Qt6AcZPQLCfZ0ntrCMbbmFYN7piWsg
Lw9dw6zexeIEv5WdGX0OBlo+befdFjUzDyc+YhhuJXrliL+/psRTjMgk6cNe
cKAJrTH83Z90hbriZhvrVDM6qliY1MwOivu6jm6jeJT3fUvkLDQWFBVni5Wr
jQG+K685U9wQosMZEjvSG7e652ob3IrRj9maBF1/lG2brV6MiAE471hkS/jC
jB783yoRQFh3+jZiVQROhDQiGOcN2REUFcy+NY2uWpeRl0v5IHB3POO/JEDB
j7d1UYkXy8HnrE7zDY6I95bidTYohjnBNows+7pDjEbO/CsFX74VIR9cg/Oi
aI3X5HEIkzgSa8ux921iYOxv1OodbaypOMo/9vl4POtXTv0xYO25RS8GOZYd
d0wE2pA6w0UednMytTqe1dYlVqbZ2jDwp+1jKLtuE6jfQ2Nl4eJGxpG8oEIQ
hBLSZksmvN571F6tcOo2gZtiYLOuHoRTN5RLIXMYyABbweX/ZX7dOmsB/hQN
EVRvSvIucjAR+Ih4VHNAEafYFB3Xpx9vfcH8HWZ7vIA5dhlVIcOCumJqjAAT
0Dtufp505Gf7YTbTwUrEamODU8/HYSV817m3EaAVNjsvyefi2rAUl8Zj0Tjs
78OJr2BkaEps5cRKYhVjQyeXhjawqYxqnGjuOtB1csshq9bRSl3BLA4aC7Io
jaU7vv4q1uVqwfURwakjjnymZYFS1xCr58x+LmW604WrPi6GByKI579qrheM
8OfP1BQG1rSQtnFs9ymcJGdAznZHz/Xetprd6l6RzHsSn67CswP58HOfk5xz
dkZWKRxwQvJYHr+aWOnzJBNfzu+M2yCSDeNHwMKCgacVpPdKXWwAWclHxUNK
YhhulrHiZ1lvAeRk4QLrwSZwP7M0oyohH9NQsF9K2rzi8syfarYjJwrXsKz7
gsYNxSsakWGmEvI7viWyouyR29VzZYMXxnm++d8yXxFceFTN35UElzrF/AqG
IkreuaFouTbgnviKB+wxdB6+E172r/t8ezePiz2EFDcGyVd+nkosFwWIvYln
SNbJD82XH7m55J9PhoYBMpsL5zQOqJBvceKlafemeU9q0E+xxA7/OWINOjzF
NAb+aG/FgwC2VHEOto8vkxKWEkTPHRbttNw0bMjw0oLMbdhIqMTZSgQMV3WC
TIP2NEILIgi7M5iF7mzKUAK5bATFFoBmv8BaPDkhi+0196b6w7kF/o0IbH3h
7GY8tO/R89rlWEUHPU1hHwRsrKu7VawVphzMdVZ416PtZx+GAaTBf29X9tby
Xni8H5vhNNs/5L90Q5fqhk2HNd6YGAeaE125U1E3z79cnuyQRnOsyHBgldHy
MSKn8bOmq4jrHt0ULB20ZCWLfedlxv7V1EceQ9V8Rl4R2gSBRwJ+kdR0bdZ5
hGlDValF7b1uON2Uy3quHXEgdam3ZHrmGvdnul+7+8xHX3trXszXsWK2i+zH
TuSdUTQkCfS+Q0zaLl09PAwefJvuxCZNaqMjhWk7+rygLaZCwozAGxA5dSju
tzb5wuWNSOhGIdXXLa2SocjiVSNpuurufd9IqC6YRiR8QeLlOrMKZzVzrx5M
jPi87Aew+jk5LhvjkTpZyreh1O64BseUmi8papXxjKA0dhF+Rxbut2aQp1dj
61likmB62SXMgw1ogNgzWZiGz6sbZsI0FGiKB0YQcJ/HaQ+iNiogo9j02NSz
WoBhT/aO1u2Z+R5rYEn875YUL2p8Q2ywWg4bSmUvrZvddXYz1uNO2fPgbmIK
LtEoH+8eekgsTCbNgqGzQFIbvj8qY4narU194TjXuV6uY7fO2GZciETqErH0
vWp10WCc/GuJx6SUb/i43ePjDAgz8fWcI5ssqUlYnoWZwMo/lB1eupN1lOML
SrTQL1N+OrsPdsdyP98xcLASw2ZdWG2MRcm3gpAzvKdrUvPNdnj2iI2EqRE2
cKgcFAZhW+Gcph0qS1qfTq1u1fpeeXqE+Ef8oOT9spaMj3kQGUjYY3MbnEkE
j8ZcMZ5zoJCFFkzpJnNcigSVJ7T+OXtnoL8530/YTUyIdXu3lbxD6GUZHL4P
BYUcY5kbxuJhXbR7ZR/EGGW3zI/kF+EFgS3yGCkijMAPZdBWFi5qxLBSqb5f
lTg7srNDAO/WTngLNyrVcMPmwZPPpTjgRblGCfiR/BvUJlTar0u+kHGntHKn
jAsgakXJ2bhIe96k9/up3K5NCM+MxiuFM0eB338s1qbeGgmavmG9GtMNx22Q
j+hJfe+lTZPrvX44LcuvdV818gelfB2c1xAcgxl9WAlyC1JFxOwRQLBhivrR
FlQmToltk0VA0g7VSCIuaZ2gHo8ELoL0fU4nBC6vqzfHYjsoYoIU5pYTnq2B
pXzfEgVkz6VuGn9XcqcOk1ebSv6NIqO6ekBd3YmxxX25KmVte5e4T6vLAsz0
TavWS/1UKz/RUbJu/d1u0bZk57E3zSsivfFxqnGq4Vp2CpPFuM+ICpAES68N
+YtBRyvwHoKButRDNq/w+uFk35FmpAbphOL/YI3bqx2wBibl53pSYzjKQx3E
owo44OHI4cTIHatNlx+I0Trt8vR+mi0rdaP7VDE7kMn/trLfOKcHaKDVHmLm
YTEx0Q7D7zZRw03gMfgK+kgyRNu4NWm3lBcRXVkQDemxSWQByhPfeu8ThwKi
enaiX8CnszCpGcgIlOTn8W98xvrOSU3002kj++Gc0G9TH6ezW4rgK4LazRlw
45weOZvYvjRDt/hN/ZkytInl71RjOR1dC2rHjWNLZxkF6stKmPoIKLMWB30m
3NupWiv2H5I4IKkCPBUhj4zlbDwSlZyPJ542RliDncHZzLRiafOARxCTg7hL
qStILEDjWp5MnYGh/RrFoRaTIf4EzjwepcBfTfLCQBwgGT8+1wbPK7pgSCtM
CLE/mG2nJjoEqxYdwrwqpSLGLHUc2bZXn4PykULjmMGf31cghJsBr0JHIug4
YTAv729lFnVelfOY4lSeF8PDvt0ocsLcgylp+IrFc0zpVnRx2gky68SXsSKD
89whsaA0ptuyo95XTpMM+Iw0PE4+ijhtFanMMSJXkUjion+s8V+7ZDD3SFT5
t+VlNxjVbYiZO3kyzavzjFv1BuNq6nHTnMOtheC3IkZwBbFJFu3mDnjGrTJE
SWVatbEHtfhM9pm4u7uSfI21FYJ5bDK6ofzONXXcBynT1SW/L+6SZ44Z9dar
mTgnANOPgYaJA3NzX44kBoEaiYTMqnsqYwSv9zUhGCgLsrebS77vjKQfGxep
xvauV+uJ+XyST7YEp4LmntfNsWV6uTSCyXlryr5xuB5NqxuMkBJI3THPU1Cu
XhM5MzKLnA1WEchDz9WLgh9AKQYf2gOl3vByc8WrCOAa0B3axKL+28aUvu2l
0sCTG+e1Vxd2MAbCS0enVqePeFO0Q6EBQbmONF96fK9gjIcep5+VWQqa/hF5
qop2pl72uE2+GC5hi3yRL8V45yD7t6WWr9jOlSlGh9yZ5CWUnJIVTqTOS6BS
UDCUGPaV8uQp1SqEnNwbdcpYa1SbJi8ci9EuPjhn5AyhLIgIfmaoRoRGYOnO
7N9qmqUGRx/71KR2K8RRiE8kM/BJ11ZispbnEZ8s+5TTZfpIjurReUAHhy9Q
gGcL7A1VmdNEOabI6WDcDzORO46P4q/4J1AJoxhQ4n01+Azht/SBPhrGkpOA
lqbRF7xBIuO1she1ozhWKTnn8NG3l2dYs0CEXNQDPa5Hp2zRm/4HU4ofWVUe
yeOQsZPTKbYhDJHCY9KdSEK2T/cfaok5w1xxp4SmT9fgD0r0Y3Qkn4qqQ9s+
oXBI93E4PBPNl8/qoEnEL1eRTax135x4T80OnQqizIkRrvNWJEZma1TvwWRK
tCmP43sZdkHLc8gq1ZS8LgU1P+rLa6Q5htvLbtY/KpiKqhLPYpatz1Gmn0rL
azIZ5+vg0rZq9q9vhR4DW7o59Z0PPDa2gmAIS82sjVhZWEXJXHrirwnrjZeh
/w/xxrThlaxaz9Ec4lUd8O4pyKYYPkpMh6Gh9womHAddUc2YDeyuq6tuN6Ic
Uf58VeojkX8qroMqG9LcQAiyq/7i7QZLHqk4/PFp0bULho9pxTD8Y9JeDVd+
wWXUhCs/Ee8DIHe45v4SBQ3ti0mXH5o/3cA5YUrsVcFHoCb4AdLxPCPVTZbX
yy6Ez6TDiVCKQREI5iYTGGcqSxqBQ1Btiy2TfIoUtpLbCUP01pzRbV8W12u4
wIOWs8Zo6aSFl5pcwvfu08/hxjkHLEJ32e3tAgkPmOYjC/zfdspvH9DPQrBX
SK2ZhQ8Gw4h+aP4UU2OkwTprUmdHUSbGPfSW3b/06lwIXlgbRMsWwdUKBQlO
h52K37MxsKlLBzZzpVwD+g2x2aM4Cv3mSKHNEcw/qyCW118qwpNwD324Sx+9
XnEP+ztrd1KzGQl7TgIrym+55sgmR1fWX+6TbalWJ6kYmR+9VwUXlZLKxnmk
hMG+XvsG4iAQnhzzLN3yDSPfHmu1UXtSPyCeCGuUromIysaeeZzSZO1yKbZ2
XHXXEwLgCYwg+X2dC4f/p7KfziDbfTT4top/Uq8MqI9/GMt3bNZ3ID6cO+K5
VeL0fIVxjw4N9+kTsMFLKx5uI/LsQwZKMMMAEQG0lBUJmN9RhBIZH9+H4/gI
O0aG6IXEUyHQsMBmVIu2pPcuuLFauIo/JwIJqtRge02Ewt8xBBT19YkAPoUJ
74VPIbqiZxaYg0rgLCPysYYzRSjujk4M1Ph1PdLC4gdGUHO4onjNCFxC7Cl5
TG1FtA/T8U5tLoYPTTiqx/O7wVJHTwrRyZbU3Zmt+Um9cCFaj9F8s4iJTxlQ
dHIM/39/6kX5HA/5+IPVBkTPESAkuCqsF4QZo2yZNhUaz9/7xhuXQ4gc6tTo
6CDINWtcrqk9U44XpJ2KwEFkUDvkmQgkBlqTRf1anxNX0Bwgca+BOg3fwY9E
o0F4r0mjNxUvbejsmmQLjDFOWIY+CepCG5iSSVnPXxuhs6543XCkEoJ4Qdnb
G1Ihrt2GEHwzgo8+dNWMrBVWgxn0+6I8pviR4cU0n2xv+UwPToZZajT7PCbm
82ox7oqgiNS6Fh1zOo+aZ/XbRGlQgL9LpxuOjr1CEIjfyP6tokwR5SoqDh+H
Ubpcfoj4EKzOKly2Qk7vOrGFGwVIRNVExFooGH+/HXoh8ZiM8Wv8PxUIVCsx
7fDu1Ct+2BhLoZPHKieAR2PX3WaBgpVyVz+ruH7RyI9bZSHOR9N8flJBP+61
wlnNpHlg+TYIN+H6ojZ+qUJL2zmaOENgDAg57qI/jqIWIvPXZe6flcd+Rd4S
KAUJvLt4pa2VQGieV3T+iL5+mkIrqC0ivI/MzWuIUG1MzIJMf20tX3apPidz
qjGFthqh+OHhAzIRuwT9gp1fqVoPbsejljPYAIp32qygdLPcQX+SDwfHKfsw
cCcsNvdca/wSDNpB9awvUWsbJwYypNkcJEoISKkUsJ8jwNvxbzBlxlpq9QtD
Z0KtTfXLSmB3X9XATTAdEe/mBrgFCBeDZZhyCT/CR2NNeETzDYlXNrIFjK/n
2wMjmTVwcm9UjA/gd/6jxILHjLwcjr5fkYvvVp5arRCH3vYSK9uXhV9AHjF+
MenBw+wmkMjiwgWNic2VG9f6Vs91wyHlCESi6Bl7x/3AZlDrw6B833Bicwso
2eXLURr4tD3Z+SxT4oQScNz1v8p84RnwCu6treSB3OSfJWXkApUgb8VErM+w
2rLitSMIHNeoXRxztLzsaQL0FReN+YILmVm4soEAg4T5FZkNwCQ6FP34x9Ru
x0dRpE6McVxNs1bk4nEA/D0FGqt6PmSzIV4vXNq4TuUF0EYxWC8Vh8z1TRTt
xdiWn1QU30oK+1kNkLgUr+j90Ahi4dnd7x35gigmOGIcWpR/4pwCS+EYw+cj
ShQSoYRA5LC4xEO7E2VGUi90tDJvOUGeu6jfcahAa6KJyZIFKKdgUW3GRSb9
OGLGggFlsf7kqqA34Mn5XmY9E+NZxOJlqiNrA2RMLmILtoAC4dwrhfOasEn2
bq7p1cqW3+n8P1l2wjmRh+rU2Virot/lUQ3iq6mFWN99WSM/szdxp0zIA5JL
E6/jQUKJ7WyQUskbF/oTN04Hu89r8u7TC5uwKD+UXQWj4SZqIpx7JKUIsGV2
1WcSc3Qt6nE/fiI++7upY4slLKvOjhOM+1DhQhtiPlvXvqzHReFxTTWzkqQM
awAFMUKbBLN4LaA8UQdTxxZKFLboVay5oXiNTRlj40Fw8ybeXnBwNpalq+us
5reKlzfaQm0W8FB9k+ZzAkh5gE2w57yjvUeSs1T/Km9LygSRJGURS+TR0O1l
bwsg3UEDRU/251SJR7CcrUxSJGRESPcVDT/rHDuahZ6YEywkrDBImqp2DPM3
5k2tZvyJlvC+qwR/+VmIZHSuEdGi+USx1DkOCLTs1Ggi20WZwPgCh6dbLhUE
8VvRIZz5m2ZR/fkOFs418ejPfuffv6+itmCTEfdI+lUXwP7lIZPHkZohqIgC
casfFvR/M/Hak5irvDNTPVTwGx1j256VzwUnY5ZI6tVOfif+ISEAPuYzicKh
RO+swdfjqymdQZGXt43BHvucw8cSlSzp+eCIKA7D7zFWdG4SRQntbmgzMesr
fmAkR7RclUocI0T0QstkT7Vs1y87j2l7K80HKeCogBdYkjUaS0Ege4s0NuYi
8hyMGI1lqTayKRNXrouMGogIP82Y7xvLeTmmnPDoR7rGt1LeOSDG0yfZt1te
OGb0UnHFM+MFIvOF9f1ntYb8REnNidUqh2oAdL1uY3PmKdG4A11njGLUGsc2
kMEFbpNjmZv65NJYrmuDNN8ZAGEHo9caSiLmXvI7IAzEEtwV8fT5QsfY2Gim
56kpAYp5nQgBJQrs48BAAIkriZebsLdsuuIyYEdQhJ/N0zPj3q8YEKKqIq5g
r2aGcTsrhUFRvPlqdY91hhRJW59IMrU6MQ77DVCkL/xDFEgnHqDjE4zf99gH
9uWRREMzU5/jcOFCv6zr5k0xmeYUMeegIGzxecmMSMxwGvR7WbenmEsrMuwc
20a8YiBf3rJf/4/pDFKdyyM2oh52k7wDY9T3xhsp3KM+AROISjI6nbL7X2b/
za3491mrQeotDKhgVJWbKVZiZpbMS4eid6AzP9MGiijw+ZLgOt54nVhRXvkf
ZGZ4X6J1ZBiWBm/3pjy7vPF4zNQ3RaQ9K+yF596hzakIr71b2ZlfLwrzZ1sk
XbQYL2mvLn+NmT6vZlL5TJ/z1JxnjPJl56DXnZ0IMID8wavY8KzEo9ZeRR3Q
mF8U0XCj8ZNTDIL3yppvFg8HuQAixbOsSF236AlYmfi0492KKvBAVvGeeshw
MPXvhy9U7eUZ4E3gKIpBCPzL1GefY8IwOwRTSCCjWX9bmW7mhzAYzElIDMkN
awFfV0682yI85A0Cgygs8WhJGYToVpsn6SbZYgQQYKXcXgVmsbaXhNZ186ab
d7nQHvtM2nwW1xby63Z4jdiMyo+F24cm7auhQV+otFe3lwORueFdCuRCamKv
PRn1VyIRBj2b/c5kZbt1rW+KtCQxZpSvHdDzPF7JIyKV6baA77AzkCmkpyDP
uWL4fSw5VtnX0zlWhen+N2lGzAmOkCgKRLF5dGbCFsRYRPb3bJUX2SKgAK0N
EAGIwVu5YhzHj8TeoCD4SArb354zerQbgvGtOB+YZI4FBew1HmpqdcHIs/L7
pDXsZkseYPJaxYp/PHgD5UDiqdOP3iVSLs5BDmsQWrYZSWUfDIXOAx2tLcNd
ReRxMVHI9CaB20VSyc1pTQdSzUX36w2Q2c+oS8IClMRzvr0lRxr3pP9zFyAz
qc6dl6ObnTIZNHOhByysXCaHgIzj4wgmrql4jyKkn1dsNKPau9Wpbg0SiQeU
0/q88s+zGj57NdoSiRmOzMHUkcQSWC+yYZwQzBbxwhzCwOzPWDCzvOVp1Q72
GAxpU8a0tOIlhc/fL+drqClg8Y9pjS5MQr543CiuivpgcDp/1ysXCKYdW7zJ
8DHyNLQKGNreLRoKyf6RLuEXkuCX5N66Uq8EPKQx7yQMrOLHLcGEMGBhyycp
aczPKKmNyLb9JU4NIua0tnFBkZzmEpeKQymmeQ8xURdDlwE6DH6E04shWhuT
2oTQeGsLXyGqiMQIVKTCpRHAUnwOSQxu1Hg/zrdGwBA4P6YTrhRwIQ8SgsLv
KC08B72y8ffsdNslmQOaAiN5NYjxOZJ3AuXI6PL/QIFfVXzB5FKDnVOrO/We
TfPoRs2JuCxOCN7dlnuV3f55CsfpPypU8+EPLugttILjC3DTsL0f7ZtWlSRD
+4lPtcKPWSGcJGl7mu/FqxtkyzRG8v9WspRZJupT8EPGSaYucX2iS+E4Yq0i
Ed6sxANgGxiV0Jo3xd5xuazXG7qq55P2av0xSrIq8WXLmxWBxBl2Jm64IQ0Q
GZwEwxNnZD83wCowwnYLlrxK7FaVHXLdmLhgCeF58urgdwZIlznqQYI5Gqs8
TTz3CgLjONjGQaC2IM1zvpglYARapPnPI7A3D0qbCAyJXhAl8DNVUl+Wf1Km
nGqOEEqkwAH6OcXUnXRv6ofvxUdeHjIr+/9bRdXn+HF8697UWxVmi21YIJOx
v+Yyw3MzsXKboC76wxPG8u87BRTw9DRDUpC8SbFQzITZUHK9hRLg0p8suc8I
ItGsp+IhWu8oSCFVfUCoYLtdutrsLUBpt8/BoxI9BGbFWRCf/T7J19G73g7F
TNykSyR3HPnVeoS9bnicygFhBk6ONyaShN29cn4eDvmQFOuQj3Uz+2kxz759
a/Y70RY1PLYJ3Wt7BuGZ+LsvWte8/d0oXp4UFxUwxAj4bgphoXWY2bJY4Qi+
+H/LKP1An/f/MvfgEdDgmInLtHCUxsqBvFn7FIwJysJ53JD62YMy/itTCNg8
WmFsalv2O3EHbPy9eqw/S5YM/SQe8X1WLaJUVUQ4/9XyFGMZdytOxqiw885c
zALPp6CQNFwt16t4GDTxEyXnmb241IfpED5TQkjiFkPGIyFGAwKSfBRsA0q1
P4tf95emmIgCyGwydmYI+4t/1YAKkBUgaLtR2YDQaR4bF0Ki2UL+0tTqWBvc
EUQctiH2wbjJOoyDL5e9hYHTeyj1/Y/ExCova0EKb1ZJnO+DxJv5cJf/SvN8
M5Wa98mbQfDE146dd1NmUK3S9fho2uTRX1BuFEwAaYT2IVR3Fc5oZiFipfih
EUbKKayolrKh5SWvj9kt77hUDAavfij6CotXNFhIkkyrTjz9V6q8FR7F1A80
H1zDmAasBmplFHc61UoVX5NpzoGIF55QuR977mNxCnCuw6JFdwFbwr2UPOXA
15HB4PotZMpEo6frvCaJz5l3a7cw+zyxZoiLTSMrexXT3pL3XOIDnxSXgFRb
jqvkFq03+51yN2AnoJiEE+1L7NJGXGBsSM6ieLG9/nVFwL2yjvwcGBtcOPEA
jdTAS1bCM1WRctE7s+e0UtMLHBnFszMMe7/8hk0tojUn+++Lmle+SJaVs2T6
kZeJeHi2RxXKO5WsYib5kq6JzcCNt8rOpXDfaDlT4ZnNuN+yop6G2CmLXt1h
RwlJpnp19UhO3dAYLbox9b3tv1THps83GYUW4cooT0Is5mqXACQCcBdAhgvs
LnnZOQmwF4W2EW3n95oxkzdJIdESRp6wWpS336REJ1IxW50mllBKfFChtO4E
wASTRQe6ThvFiRzsoa3ZC3a2iuK1ysG0XetKp1oFPBpIxwrFw0giRTmPqaJr
rW42GnyJ2mi+wYZeldlP7B/B9SdVVoex8CzVYdagLwHZrdkAd3UeMdqCQ7U4
ky8CJ5Ky4xJggcmy/z7xWH+13LhN8Ow8YRSxEl8bgTR2sAOGPfGZ1lAZM2R4
lgj0sewSN4ix4N/wVu58RtpApsKkpvUdo9ueKp7fxKkuUm6WE2euNCdh5bf+
WmdwcYRLVHlN7zq2hVDvjs7Tm9cWLmmEtvh5ZkcWy3xi9QlO/nW+p7uj1pGo
Iib/wA7x+FGaulByeUgsVt5VM6HFIoyeq2xVKQwOSOLbpSnVic8kiPm5sXeI
cnLVVKJ2kMdJz/tHkDOc1/2hEdRMYL4SAZVNUIaZ+tAZbGwMHiQDQMyqRv15
Hfw0BbZQgvelHizw+FSSIdeDrYit4VWBWcDnLnVRrOq+1Lafk44kZQJsBnTb
/h6HPZ/TYfApVvlT9uLhl83gttuQd9AASUGS7gyzRClJ0NNniQEnRGOFOHtN
/M6a+bEghPdrmj7FP0Bj2MODavrcq6xxVEkAtVFgRUjDkXQ0AtsIHI/cYVR1
Ap/FEhyPRoAWVjJgIIPaG4rXD7+tlBexzCPp3ulJmG0KP2DVY9hA7F1Ao+4o
ub3GP0Ch0bpd6pzQDGKdb5rYbuvMf6xhIsiqWQWPjRqwCts6jm7r7zymZZcS
xHwmVPdTChP+mOaTn+vz8OhYCl+4aOpNKVsDlL1ZvHqEJUQ6T2lhmTKyucE2
Fri1WCg6cLb8A59B6T91wc9UPMswkAkWnPTSJJ8HR2IJH8G0AvMRjjfOHi/O
aLVUnoFm6M/7sjCqI43dpO3GIEPqFOXbsPegaPZl8FzLpFsIqpX+JS4Pd5Tb
DctAY16fycjG3mvMn7zZc90Ivm566qNcEUH08zvZ14MDok7K8p+lfBvVu8RI
R8wpOcflIaS3X0Q/0dbUd2yxq2N/j1cwrOm+dgRmEL97tZJFjEX5VMW3FL6u
AruNNiJqm/kpuvVot8e+UPiB/BBdeMw0KMrFMAkRML0hBhVwTNgFXRk7UuHM
wOP8/bae67xII1MRVIMPpLTlD9kVbFVkbK+XKfam4uWWzWfX9cLOic3AFtw2
Ivz3c33s5FFmDr0acrWI7qVySrjtzXLLPF9P2SEFV22Rc/Yr0ign5QFTG4tf
sFOU3WDDdhfObwxYghEC/kCI8L5RL8PnAtS/XvFOC8TQYgynLltikxZpFba5
0AxIoHSg92+GH+z1WIdOX4OVJTfJNmYtc8IMqfrgojxc8oHqx/Pj11OZkGnM
m7KPRUkLVptM+n9UPPYgpoSY5hFxXNRmMLzh5xoMCllto2VKSKLPv5+phhHY
MyQWE008+K0kbw5XzHRWMLO/goUV6gV9xe9cHccOwmZMjg3pKccYqCk2Tx+i
n5n6aKYRiyWqy/1rrVIy+9xbxBjemXjeA4/K0b8sa7q2cHFjObsyumxBlmAL
nADpoz8pdb4nO+6tc45o+885o0crbvrlnCNtdJGBu9QVjMSXz373fniCiT5x
IOwRW6z4aWviWWZfkzG+tb/418N9xsXRBhA5OkJFZk9HlWI47EkiPfGYntFv
t+QZ//99HTOvj0ThFNyODeOvZ8lZRvUdv1Mngb1r8S8jsPxd4hvEeVJcO37b
vjT7Fo0uhZuEz6DImG5NfGt7tRFn1HclOpC0iAC9YPwktJCkH8vDKcDAkfnU
iKl1T5W92RBK0QP2oasykHBQKVKGSMQySA+sG9H7NZoHGGsOovufEOdQr5fS
bMjMGuU7f8ccCO9iagD7Tpb+QRNRB1BQCyiTRuf3fMBwCq2QuGX/yDGQcZiZ
vsJ5TRER7TEVbzd8Cj7G4yB3vOjcxLeHYPm3izyL4SY2b1mnXxNMQbv0Z0fq
AxMz65XF2RwCmn5Q1aRYqpWGRVTTlTr+KGViDM/HG0FcUWdOLi1miwDQIM0p
seKI4fRiF9uDJZcpfpaRL4kHqFPUucndkRSOplQcpXVJeTB19t3WsDPGloQb
fZV4QRGUhu1AkBXFPGxMPBqxycfpVHNK3kPg/+ZTQrPjLVzQNNDllhSdml9x
kSOgszkK2W1zjP0KyNaIH7VgqkYSDsbzKFizs8x0D+yPSiuaOvmDsrg4OLAe
JuBxaQEhyi/U83c7pYUZuGLH3MbMNHDt/y5HDC0D6JkoTxP7PABV1PnF1Eqa
ncCZlISjD5XsXROd0R91b7b83YP/o34lHqZf3s/6uQAgJY/qIonVLSKT94DA
pEL4CWFY7ANkZ48S/cbfZt61v2Ns60+6zmwmUhzqnOgtisyeEj/A1ZNG3a/O
WMaJHFfNOI19Oo2BJO0WGP68z6FO+Dxu5VD3hbYgqHYYdbDu60VfRMfCy5mB
t4lAqTfL2myteu6irpU3wJEAhZh5S6oTSIa14xboClxRuLDxyQwi2gDGxGFU
beiUrzkYHYI7t/u8JqxiNDKCDEFB31NcDBon1MZAYf8wyhDba3qvGUFd8v7C
abY7zzt/RtUGTpaTpkor1XZ5AW4+hoan2N7zvwWEJ1YDp4lR8P6clX/6gFxW
DX+y5G2B4aEYSsOmPHBdDHYDI7PtiQHD1vqS+Oh/Dp2wBQ4JS/WYMOZdQSaU
nQfDjVhJc+HyhniF/WKhmQu0QaYDtfEIagz/i4t5VBEUv3g74HtP6tHSysSz
F5SbdAim/0mUHtRNVM1gr8+SFGsoGBwFX44PZ38gjvSAGRFvpn2i7PU70RCM
mHFqNUEUT4aNRD+OVKosAmO7BxeLFgK2p0S9zlVBDBJ9/IIbTJKQ1FV93gm6
SbN2JpfyJsSakbwjURS2PGLPdmXIEArWen1TLx8mCOpQ9ZW4iWNeYk114bxG
6snXpV5KskFIsqfPcy581ow0338VqQCbPFdyfwsrRD0C2oXGgU4jcKIkmZ/7
k8yuMm+7bojd2UjsF56wN/W0A0WT/KwfVLz/i5Jdvn9z5nNUonI2YfS9aVSH
u1ZfqWJZau8Za/FI1/Gt0ECLlRQjPzWg+UQEZdZTrTOkoo/C1ii45XfwwmtS
O/wDXPUd5Xwr0f+SR0dVZypgwstflX1+zNj5cOkvBkrj5qSq/kuBtZ5EggD1
sevOBW1N3RCCW/BlFMESOFPmQ+z/3cSlmXeMBihkZJkg6YGCMxwESepbRu15
nJoxR4Ni4CnCHwETx7JFLhI6YkrijR/7LWhydIGCPSc+10Sk7CUqVOGRCmWS
yF7B0+cMD3oMvKFwVvPqwllNvF6MwXlGQQ8IBVuxQmIPB7tBRp3XNEOeeqs2
BhsT90T02ma/olpuUh4wTYwULsYcToGFjTHZfl0p30m0WXwybh9GB0iyvfd6
e5dpc45rJb2ATfx0xdv7raov+0U2OpHNW1dzhbhNGw6Wusr1y5VyzdZmnnkB
RlPxOedWh4kr3TSM8JGGSIC6LT5OPTzkcokxlGnCRYCZjMCpx6HUtcySEwWj
AAs3pM4bYicoxAOXGV4re4iF/OJJvzDX3RHOWKHTqTHonrzugOQyJtYiv563
9YJkYCgXR76VbRRzdFnILPlWVkXbzLzELxnbuES2jmn1s6T/PfLO7MWyKgY+
jyYu2ozLXuIFPoGY91bSwchJZDvhKR3lHkFTMmysaX/ZtZiAL7rTsR5bRUls
1dX0p1OrqQzesraVkDpkrEJipw1uqhvE6eFZaybzNSJ+uDur502cjrHt06kv
PoS6mq1IijZiG8dkxa7+PkPRRU9NtduxYF5snLEDCZBee8Urt8AzS8R5vqeS
NyqFSkCRQWA/mky3csioWltjnbXO4fsux5GvpU5MlyVnbwro8S0EC/+n7OOB
ETr1lA+Kej3Yv7p6YPggW59LrFKPmagbHrMzDum/OFHqD3CZtnHUo6Vq1x3J
Gx8H5KQgdhi5qE1pH5IMrhd9j4yQ+NiuoghkBw9PyRJv+bR8S4f+jXLgtWk+
7yGmvduO2zwBfMZXyh5a9chHH6wZQBAdQ970Pa3aqG7vmx0brDLzNqArQJE8
BzcO1/t44mmP24VEThIERPZfT31yPM+zQfEZuoTcR1EdZZcd0n/mr3NuUBgO
kM6GF3skzRkPy+8knrXlR9HB3y23AalzMM0RDq/lI9qcuVgm19IlOGFtQrJ3
hAUHJOzk+FbI3WJm5ko46a3fpDxdle+vqdh5W9e6Zc6YNhNcX1nV8knlJWCO
MDM/mueUOVgwUrzILlcZJR/8vN1idHCRqr1oJgHPkOrfaKkFV18oexhDeU6M
cilLC3h3JN0U20OjiSxqhl7ZIb8IwLRZH8rDRkPnYmFeUjFfSDyhADD9Ttn/
H8WjLY/QG4wbz07DBeL3FS17g3+9LLvDvylNMZN6S8mpixcFm/4oyAguB3fT
ao6/81hp/MuVdk3w80TXgtQhfMRBWG9LRyZu83h0suJpySt6ItVLJWgsl+Q6
+bpYXoENogonRstNr0Z2Q4xg6Dh89HvLN1ZDIa0WPi6gN8PjMX8oPCdE3u0F
rbCBBuLHcsN/FsCCC8l3Dh0+2sBl6tK9K827i/YpAxBBbOy4BTjStaRCn3iM
muEQ4wOvYTcIfAjJoCX/pjTdLgXcSzEQJ7NeTn6jmFxO822Vx4HJosAdD4Bg
9ShmJnKE5gS/k6yeVfVlDY8brJ5iZiCcEjqJw1orPexNvcyBkMJZkVbSLZGf
4g1i6N69qd9/RyYaK0saT5I4awYyfExP9NmyVtTY3bWeIqBPbQISdac0zVe6
tHvlfeJZbCSRzAeNb9Gouid1TfN4aBg/gsW3YHHsFQA0wJptNfSXACagp+QD
6IQMIcMz/UjfWmuLehPf4/0r1WhQPGPTST0aulS+Or4c7oAfi2sFvnJ7WGbS
H4qGbOz6nJKXKDCDh48DdtbjrOvGYDlXSZUATwjFdFH7vxIRi1rxNeFQovz2
JbOaUbHhJUAMrcrrlkZ+UcMO6DDCwJGExwAvkBowkG576hkLJb7auMVF8kG8
6QfnOh/EyDxrMeigpLLdhuSgRggYqW8sAYcLBwWWQc4VKAxDL7izTxvd6PMl
dqVe587fO2fQGKEQdFNMVQSKMjyepVXtaV459N9CoGMhSgFl/Xo9QlvbEJd9
70GBrwGFo7Q2g685WRu3kfh0wkUK8DcIr3fKzn5yvmcCons2RhiReZhq4M3R
C+E11Be0pd5pMPaef8XacDMn5SFRMOp0CRDdodFWEqgJ1eYWVHITDUK439qJ
WMhTp25zlmgRRP7qBTeaCAfztlERO/q7Vkq3WO4Vd2oLsVMv6OMVyWkRruEK
f9Q3pTp4JRAV16CQ6PQIifid+g3rJ8uO/UCSl7oXyh4OUc/RVQGreqNV7cik
3cplLcu+llkYSC26dW+fV3Vai0/J/QtECdeJBP9a5BdWcYd4uzVyYft0jjDI
FmI5lldX0klo990CfdGS2G3Z4SkWZX2x7NEUr8YRcOOfVd0wx4wh/7Fem26C
bcXLGqjMgWT+fcWb9z8/1/NP6DJK8UkVauB1b9LVgciB4Zobd4eCYhuDV85b
bXZoUc0CWeZuDU79TKndCr2tgKnkBd/84o3xopQOMFhjWfdFVkpg7GXinIzV
vcI5lKebFYc3p+GApnx46gWJdyFSGBWlkiSA0fXdPdcPP5Dd4A1dx7bqZM8g
o8iWBuK19d2XNoKhN/Vc0XAwyRurBsSd782OGZ7deHcVk8HN9Pd6v9m27Oev
E77mmWmggK+ILQkf/m8J5NhgwtDZ++fmy4TZCIYHmyxbiDRRykgq7+SaQOnE
4g2WaouJaRAMcDkeKA3BAYAkMPabdPx19VazPvZ5EYIQf6QXoKbeqCrt9Ay+
s3L1hBaEnL5iJAcyGIV8WDAeKQDPOXfdbhwF+X1Sa+/Lwl31udtEbeLSnuIH
Ru4RSjlYVu1L94U2MZIjrefM64Zj/gLI2JcqXU6OCB9vEZM3Y514ZDmfbvd/
sh/3c7FRbCnhdniUmPd90DI7DleB5kQbKzIJixGo3HRZOO6H2RFgopEkj5am
2qpDhj9uU8ke8H9x4p6E4nw1bE5E2bzO1Qf5bp/rFZwsbYjdx0BfL2mYWv0z
cx4OdF9ly9exNYsVroA5fdOte6mvmeOdYjw81NLakjeiYUc2GlGSOdeuM5vT
zgnNr6bOSOCgfypbi0ZY9717gepcK345YDmbaBue5a1MIWw4M2tExFgxUchJ
Tk/G2g5Nu8ULG2OGJ7aDJAgRyrzEC+thmxYq7N+jSsGVhUsaMRabZW8CdluL
sfCrDW1KFFSWhHE1gJsrHei5zhJ3DCMwIOvR00lcg00UUNDI295Q8bwhSIpB
gQSRpFJI/kWlzm5FhU8r9/D32feT1ItiefAOMGpx12mj/tBxZOtCEZUcNaQq
A6ohWXGVnBXFcURyY1w6JpRmVOuAKfR5IzwBdfvdFzTBRb85r706AOp3Qmz8
eAp0nkrdE24vnNO0oPO0ZkhHlHuTjdjwVyCoo3qL0OKjaV56fqfscBwBLAqS
+opChIq8KS7Dg6gJxFfEeMwO4jHfkkOeU/KT5c+7C+c1re46s8nmkCd52wRV
69T7FiUFmPCBwiUNezqPbSFEeK1wdjPYluDMKiFTr7WJRmo8GKTOJIFz8PGs
wunNeCtD6I2Opd4RxtR5zTES/HkFZNQzkW+hahyqblX3xY3bMq+H6Q5Jervr
dMsqkVRCmvd0nd9oU3VSbwcBh6GYvCNBIkV1VmRT02cyKYb2AqjizCPXhAGF
twak82dQAGWZnaVp1cF7eP5Y6Yl/OZhZA7AtDBtAjRf6Xtmh9oul2M00tTq0
Cl9CQe3N7PTsm2xg9E1FAMv1Eoh7jNhFDqG0bJdgFpOcb09/Cq4HQ4s/AOXj
K7o1EXtH97lNy7vOaII/2VG8vIFzfCJzoWTw6GGGko+E1LVJvhklrExM3OXn
I25WJZhZGGrLMIRmBVJPNZNr2995XAs0EvN2aqKpl5TZgFU6NckhKwjCmX1b
EBJNcgj0lzLAAAEFM2JJ/TITM9otLOSAkBDq/gnnX1ZExddbIsPRcUOrGBS+
H/vEZeA9wULE+a+UvcINTEXhhZiIB0veqmt6XHICZ3bZd2dxqNS3Osr1csoe
mUlQr1Vhpe6YQdzWmJn9PULN1CoOHpnZr+FvKyVfeT9PA+HQszrbx1Mf0kXv
KVYcnURUo82WAZseWY1BBRcmHoIjMdBBP0ydNrJmisxvkp7EYNMyStk49Exs
EuIN2LGKWvIIiEPefTj0jpIvpBkQBcOtI3l+fSPx7P8o8igmbMFfPp44GPmE
xgvUBFVj8LgDFQ/DbXMshf6ZodmEoqtOgeSqF7h4Yd7usjPi5JH3ZV9bLlzY
tKgE9J1igRTtHaJLnhUUZWVzDJPgiSNLHSXR78gz1eWFbFZL6gHVERFQbUs9
+f4LwUXgpY9cbFe+xGmWWBaGJ436QRaY4F0wI88IIuJ1Y2n6HUoprBPQ2C7w
Ei0ottwz+++BkpsIvgbX8YfK1GoabWbJ81z8RGLD9+tdrCvmnfHU+1XQ9oJi
H6NSMZuZycBT2ZCJsmMqlMeiec2g2tvjjtcWv4KJKj7YD/PADc7uPrt5oahK
BwJ+HJ1pzpjflfgGbOJCyruXKSLZrzjtq0zGVDzlg7hHoM9WX5XmI1uWK+uA
d4NdYTeGl+/bcBxsPNsDgQ/zus9rsvnXmeysS91cYON5KhvOmrgjohkG3Ucz
+Ddyxfwc3+lxDPiYkWd/zkQUTmBd9yWNSfGCJvzomtTnQi42YDvFCKtHhK56
BEAZpIjhQxXeUAp6l0R/V4ZE+Dm98zxyxGIZL6ytEPhaokRjblKfmBByzqO+
b8F0q7baIvP09+B6l+EzsYw3qZZhYff5Tay/pEINuYL+m5cd0abea4fv6Ti6
tVB8/8iYIrJfl/p619nNGJVbZe74vs1ijioi5piYCqdB5Pnv2edNKE02SLNK
gJcUCfzX7swgvVm8pPHa3skmmxdVphjBRwAeabl81ZPHT4cd23OD2dCXBWmL
sp0Wo3lH+uFf192FH7UN1AIZzwrYkKqE4npLSo09X1LycfhvFy5qxN5QAwRh
fVd++MNwjDRQ2YzW1JURr0Z4DsBpsE9qBbfQSx0j2ImZ7Mcq1DbMoqFBPmvO
s6XzFWJjnAmaFDMF88i1/2fqXaQ2zlIW8oAqaCA51ygijYY55jpCwxPXBFeB
5yLELErqOSVQCSQh0wFt5yBQUdl6Hok3tNSCx0yn8hz3aXLa9tQXimwUu8z3
DcgcrpfLIn4DPhBP7ZOeI1o2LLFzXOszWfxnKYHs+8j03inkxHu/mjpB2S9b
w+dtSr1iY2fh/EaaRx+WyUNzbTOmW/vAEzZmyKnnIXgALpCCPTqTWbelzXSn
MvUBYAbvuV8Txw5RqNTt5Vm87ixJOgUbeAOc1h+7Jo5amHjh4caCx2D7VRW0
Q3MhV1aceGeEFaTGtuz3SMjtUSp3t8Ld+HumoyGwD5Z8/8rl9grHD9XJcFp4
7sf15lSpRvMXtW1zE098IRXsbwODYvf8kdzA4OxOEgAcu+ImVSRlr5+BOWpy
0COYv+fErvGZkP119VvMheK04vuVeDodu/sH1WT2lzwXCW7iddjsxQK1qHSD
H+JrAa02kSbxFihbr6hnQLKphl+TegDDjcccSXQdXomAhNZ98DFFeiAXSA3O
BSNMqgZsMltoB/RpDn9ibtQ3d4xpW0izooo3uObXhGXKhs2z68l8CFXs+5VS
sDkjFd8WjxEk3iOZCPY7kIWWUVO0PTN42CbOCgm1Zgp1AURAZFveGt/5dxYk
Od/ePF4EdnRZU+79ZhYcAbgJYXdL62K1jzVaZjbtYBbq19VDCNQdBu40QKEK
A4AkXJfZ0PocJAVLo2UwZ/17mhfesAEcp3SnzgZ7TPIQCsLGFaTekLhNgGlH
4sOPmP/s2zxdNukB43OZJA+oof5jYQb715qGOwVBrGX1q1nIv3PO2NaHs8Bi
uxwQlmWb4qLVqbdzY7lekF+g6s61/uQ/FE5uearr5JZVMSle2GlfVxazdF9g
5WS7KJ+l5KrwVw2oiq9C9HVnsHBDhRsjDcQvwBTjdtjCtMjA0+X2M9B+fiaI
pCdxo2VX0Xl8C/++OoufxN4cxs+YIxHj538pqZmo7LmmE67uyweQgR2+KQMJ
3bBZpBKWYq3UH7Xm6+5MfZoT7u4NiX1Qmr4DwtEUZuF5MSf8/Xtq+k73K+Z7
qPPYVo+QzuDHEJj1SgN5LDYd4bapGX+j3G6MLlCZ7W/w728U3zcy8rgcPexI
l8rtQWFRrcerzlR07T7L2RXildiIYkxr6vmyF8qePn9Vr0i49J+pR1bgSFrk
lXziI/hROxWI2/Cksv+dFbApoMNVYUiZ5ohymFAnnl6DzK6ZoDgW9eDP/5z4
xB/baZP5hOUZsqKZH8XBhSMxCOTl5XzUHEHTyermfVIGJ5FAP5V6WqFm7N1o
jNSWjiPa3uy5dkR1OmUNDIjiWgua5L/WZYqzS7TlPvXUb+t5TwPLYrVtiJ0k
JXlqUIYme79LDmrI16VW0ctoelCTdEL+afhZWPaVODGuKjwa4ORASTFT4i6g
UHFaHR3BpDNqg599tcwkZpGb+5gyI5jx1wReSBHs7jyqdV0WmPCGyD+8xlcF
4TB181Wegpt8ULCf+ZWAGpi+2Axgw6s9SDo5gqR/UG/it8o+TBHvTXHVwa5T
WmBQwepzS542wMUS7gJW1qmmYn7q5Y6rE6d20FFSHyAEwpABS0UcbdObvUTI
53VCBYEjfyD2co3FibbsfvB21b8AAB/oOrZVMZKrZgMn9q2ykxdrZWyJOp4q
e4szahNDBPJWZxuxE91oEAzfrXhAiQ1OwogoUEANaJyk+Q28MFt4m7i/ZpP6
sTFvifWctr2aJSWZ+BI4oCapag7g1LAcYOqXhTjJ/35Z/jQKdebpM24tT7av
tSVmJdd4BuIhMP8kIymBbbhVz7ZVQgDjYS1eiQvKeqXnfijD6LJ8Ssg3VWR/
UOx2j9n66VYChVbHKB1ej7gFWAI6JIczQ7NUiHdmln2+u48zdBgFrUuW7nXZ
2D4ZMmLFHQqWX1S9z0GVE/LzpIbE7c9ZJUe7DddjE8T/CJWwTIQvpNgwxFDH
NuC/yWEkVwW9yfVxJRwnvZbMQETnoVXQSyrHtyogQJ6RIvJPG9K8gmW/fAxS
R8YS/Tlv/gyDX5wFJSRs/IJv5AmBC0a/OtxpYd8bAQCQhVyTWbdUeadkWnWN
BDaEdyGUg+smZnpU1lUd9yeeMi8vXT+vZ4o5he3iUSwmwxomHhRtkQiBB6wk
LnEz+EKGuNeXfV0Qn+nJdO1xSZ0wsb0QcX9lFykQPuJLJoMRXuozm4BqATsp
97MBWCV/VyviTBwi2Ra1tL26Aply07TiZddhP6OkcGumRuuUmMZz/EbUG31r
qIitF9HoEDDPZok9OIPnhdacXlLSWtxYYAxrX/K6vAmU0S9NPJ4lUIxnifGA
yEAk2X00k0N37pk2cIidfj07ckzvL3L+QNlXRm9QsGrp6NIUi4UjOIx3JVVL
gMldrxB+W519nfZCDNmfOpTlLOght+mPHiqdhO/4kTw6lg/Z/Jc+r5Uzl5f6
EOF7Mwxna8GS9moD6iOpT4bZmDivc4dqRDgTzJOljVOvpd6s78MuQCPFeKll
iQMY5IQ2iCPtsRq/XZpW7ciyNRapI1mOeFVmybYlnpgjJl8t0aqr5wXqjpgr
rIN74Wo2W+AI5ePXwaqoHsXzRGszS04hB+eO+25QOSKIHVNEuTmb5WU+BtWm
ZwSejgprznqgAXENuCb2STyYehJwVeqj9NerqpVnikEVqAtRHEw6VNU+mQ4f
L+ft1hyR1dwp2Rll6/Zr5LtERg5VxrSWfatODH+D4SEXaxPNoVgsWlN3Vzq1
KsIx4u5Q4ltxyN1y7dhXaCvHeOdH2vqbQv0xqjrQ+PfkmLC2SDXI2QZtJL7V
CQdqWwbKzgEgdSQCY8AtVZqbRTgukZPF4vC4HHOfqsvQ3ti8GVrHhDXqBwdK
LkqbUq+YXSkIjUXje26TRSSS8cBjFD6finPavDgpDNutcm5Ahiho2iawxmO9
IsmC2/dLGk2a64Pz8pXKZ86fbOkOnoDG7z7Tg7zkZJNcOeIM4iZ2oReLj+Hy
asIivpWwKDYGcwGWmvKsw4mxKjhIHqs1l8sBrvmBuAlbJxMZ6S7MHKpKPgQk
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
o9v5aFAmiBW0xp8fTr05lzo8uARPRoSE1waNPp8/ouPX8Pqm3qAL8c1qBcUI
VkWFNusaVKrEqFnpU7Rdep9onC9XRkfhsoHTbRMQTXAg1pPnTI6deCNoCUUr
rx84rp08HOkX25tnrzLyp7LKrxdObSV0p/eaWzTF63TcQ3b+MilxefCjTd4T
d1HjFhl9Qv85+VPbHhF4di+556eFuVET2I2+mLmdR6UCyxXCrFYKgDd5jGqV
HPJtcmPnlf30EbxoCGNILyK4IHLk8SLT/d9KnL4lOLZT4cgbukmyJCNqMD0i
uGsU3d8lvlyqN7H3N1U6jXJ3NUIbaSd4Roz6/mbgmLblfaO6f5s/sW3pjPOt
QnNt/qh2onxADDrEMdBhkQ6e0wSImF38WFOqIh2nd6fyz3jbIekR3RBYaroh
NgnyTxWG4XjnlrxLCtC0tXBCG9Z8TeH4NiMATN3Sk7KD1ZMQilFpiOhhImW5
G3k0Ejr3V7xX7TqZWGBrnM1P9Tvv7pFaCyZ3UFgQIfpxFlrclDod49VprdgW
EZrHzPtH4RaIidulyYZPfbFcozgE0v/PkMslMJK3Rg2wf1AFE1vj15BTVAyR
3zjj40YS0tu3fyfWCacDtgFSWqYhUx1QxSX9Y7q1pbYV3IPgbZMAIpQbdON9
NhLhCU5+fjU4UyPFh+f4OxT1fSRQX08cpt6huhhbpZnHB+kwogEoD2Z3wgrC
poPmifk08fckpy3kNAILfrusLnUWWxhU5W5pOb4yxT5yg6IVQC63cW3ZA71o
mcNSYZW827YV1aDbhYr9drU60bmKkXlbT4/2v09wdlDcHr4VxrhgTubfYjoa
mUSGSUFjDcjEYzDvl0qTLUB4yDJYF2/mExhcnTN4flNwbpL33azXmj+rtxry
bra6z15dl2aWCik4zi/yc0kwy0zUQkKnACTxwCW8VTyzlUdDRci61/Umj35v
dDaiziTw6LANMBcTzv524ELZU8PPJrXGMiJ8XufSirsgdy/D+GOwDARwxp7C
UcmPg0IKezq3eF5TRGK7vX+A5tfejfniJW8Z8oVbwK9guVxf8vyYTW0gVWXf
rWM5ctbH9Y3rWl78eONWjSFkgTBPeZLl4WZ8onFT9v9fLV7Q9JriIzo1yJ5G
YylVX1IWmGKcGtiCWi5tbp8sI73e1/ty4j0Ty0oeTG/W9ptFxfGt1gVITXbA
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\
\>", "ImageResolution" -> \
120.],ExpressionUUID->"4f02ff28-03dc-aa44-a240-0650e2a61b12"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nodos", "=", 
   RowBox[{"{", 
    RowBox[{
    "e", ",", "g", ",", "a", ",", "h", ",", "b", ",", "f", ",", "d", ",", 
     "c"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"grafo", "=", 
   RowBox[{"Grafo", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a", ",", "b"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", "c"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", "d"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", "e"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"b", ",", "g"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"b", ",", "h"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c", ",", "e"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c", ",", "f"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c", ",", "g"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d", ",", "e"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d", ",", "f"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d", ",", "g"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d", ",", "h"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"e", ",", "f"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"e", ",", "g"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"e", ",", "h"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"f", ",", "h"}], "}"}]}], "}"}], ",", 
     RowBox[{"pesos", "->", 
      RowBox[{"-", 
       RowBox[{"{", 
        RowBox[{
        "8", ",", "4", ",", "1", ",", "3", ",", "10", ",", "10", ",", "1", 
         ",", "4", ",", "4", ",", "7", ",", "6", ",", "10", ",", "7", ",", 
         "1", ",", "7", ",", "8", ",", "3"}], "}"}]}]}], ",", 
     RowBox[{"mostrarpesos", "->", "True"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Kruskal", "[", "grafo", "]"}], ";"}]}], "Input",
 CellLabel->"In[5]:=",ExpressionUUID->"cda9aa97-0fc0-e743-b142-7bd3b0b829d8"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"T=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"d", "\[UndirectedEdge]", "g"}], ",", 
     RowBox[{"b", "\[UndirectedEdge]", "h"}], ",", 
     RowBox[{"b", "\[UndirectedEdge]", "g"}], ",", 
     RowBox[{"a", "\[UndirectedEdge]", "b"}], ",", 
     RowBox[{"e", "\[UndirectedEdge]", "h"}], ",", 
     RowBox[{"d", "\[UndirectedEdge]", "f"}], ",", 
     RowBox[{"a", "\[UndirectedEdge]", "c"}]}], "}"}]}],
  SequenceForm["T=", {
    UndirectedEdge[$CellContext`d, $CellContext`g], 
    UndirectedEdge[$CellContext`b, $CellContext`h], 
    UndirectedEdge[$CellContext`b, $CellContext`g], 
    UndirectedEdge[$CellContext`a, $CellContext`b], 
    UndirectedEdge[$CellContext`e, $CellContext`h], 
    UndirectedEdge[$CellContext`d, $CellContext`f], 
    UndirectedEdge[$CellContext`a, $CellContext`c]}],
  Editable->False]], "Print",
 CellChangeTimes->{3.968326988879442*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[5]:=",ExpressionUUID->"5a0a95f2-a346-d249-a239-369ca0c59767"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Peso: \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "56"}]}],
  SequenceForm["Peso: ", -56],
  Editable->False]], "Print",
 CellChangeTimes->{3.96832698889069*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[5]:=",ExpressionUUID->"719319b1-a5d7-b849-8f6e-f49e3106d971"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{VilCretas`Private`Gi13$$ = 7, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"sin t\[IAcute]tulo\"", Typeset`specs$$ = {{{
       Hold[VilCretas`Private`Gi13$$], 1, "Aristas"}, 1, 7, 1, ControlType -> 
      Manipulator}}, Typeset`size$$ = {360., {106., 109.93304755063659`}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {VilCretas`Private`Gi13$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      HighlightGraph[VilCretas`Private`GGrafoAuxiliar12, 
        Cases[VilCretas`Private`GList6, 
         Condition[
          Pattern[VilCretas`Private`Gicontador10$, 
           Blank[]], 
          MemberQ[
           Table[
           VilCretas`Private`Gi14, {
            VilCretas`Private`Gi14, VilCretas`Private`Gi13$$}], 
           Part[
            Flatten[
             Position[
             VilCretas`Private`GList6, VilCretas`Private`Gicontador10$]], 
            1]]]], VertexLabels -> "Name", ImagePadding -> 
        OptionValue[VilCretas`AnimarGrafo, {}, VilCretas`padding], 
        GraphHighlightStyle -> "Thick"], 
      "Specifications" :> {{{VilCretas`Private`Gi13$$, 1, "Aristas"}, 1, 7, 
         1}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{646., {135.3544921875, 140.6455078125}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Print",
 CellChangeTimes->{{3.9683269889524546`*^9, 3.9683269940196953`*^9}},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[5]:=",ExpressionUUID->"67bead5c-3223-9d43-86a1-96406accb79d"]
}, Open  ]],

Cell["\<\
OptionValue::optnf: 
   Option name VilCretas`padding not found in defaults for 
    VilCretas`AnimarGrafo.\
\>", "Message", "MSG",
 CellChangeTimes->{3.968352449205818*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[1]:=",ExpressionUUID->"3c015c10-e94e-0341-8254-30db5bbede7a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Prim", "[", 
  RowBox[{"grafo", ",", 
   RowBox[{"orden", "->", "nodos"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.968327182361925*^9, 3.9683271940637493`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"ccd92463-c04a-834d-9000-05f4f96eebe8"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"El orden de los nodos es: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"\<\"e\"\>", ",", "\<\"g\"\>", ",", "\<\"a\"\>", ",", "\<\"h\"\>",
      ",", "\<\"b\"\>", ",", "\<\"f\"\>", ",", "\<\"d\"\>", 
     ",", "\<\"c\"\>"}], "}"}]}],
  SequenceForm[
  "El orden de los nodos es: ", {"e", "g", "a", "h", "b", "f", "d", "c"}],
  Editable->False]], "Print",
 CellChangeTimes->{3.9683271953662186`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[8]:=",ExpressionUUID->"d78be01a-4383-6245-aa0d-9bece26e61eb"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"T=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"e\"\>", ",", "\<\"h\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"h\"\>", ",", "\<\"b\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"b\"\>", ",", "\<\"g\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"g\"\>", ",", "\<\"d\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"b\"\>", ",", "\<\"a\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"d\"\>", ",", "\<\"f\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"g\"\>", ",", "\<\"c\"\>"}], "}"}]}], "}"}]}],
  SequenceForm[
  "T=", {{"e", "h"}, {"h", "b"}, {"b", "g"}, {"g", "d"}, {"b", "a"}, {
    "d", "f"}, {"g", "c"}}],
  Editable->False]], "Print",
 CellChangeTimes->{3.9683271953736916`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[8]:=",ExpressionUUID->"864a3431-aa9f-7748-8c79-d0e534aaf554"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Peso: \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "56"}]}],
  SequenceForm["Peso: ", -56],
  Editable->False]], "Print",
 CellChangeTimes->{3.9683271953811455`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[8]:=",ExpressionUUID->"bd3040ff-7c10-1642-8c60-19d29ff19d08"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{VilCretas`Private`Gi13$$ = 7, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"sin t\[IAcute]tulo\"", Typeset`specs$$ = {{{
       Hold[VilCretas`Private`Gi13$$], 1, "Aristas"}, 1, 7, 1, ControlType -> 
      Manipulator}}, Typeset`size$$ = {360., {106., 109.93304755063659`}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {VilCretas`Private`Gi13$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      HighlightGraph[VilCretas`Private`GGrafoAuxiliar12, 
        Cases[VilCretas`Private`GList6, 
         Condition[
          Pattern[VilCretas`Private`Gicontador10$, 
           Blank[]], 
          MemberQ[
           Table[
           VilCretas`Private`Gi14, {
            VilCretas`Private`Gi14, VilCretas`Private`Gi13$$}], 
           Part[
            Flatten[
             Position[
             VilCretas`Private`GList6, VilCretas`Private`Gicontador10$]], 
            1]]]], VertexLabels -> "Name", ImagePadding -> 
        OptionValue[VilCretas`AnimarGrafo, {}, VilCretas`padding], 
        GraphHighlightStyle -> "Thick"], 
      "Specifications" :> {{{VilCretas`Private`Gi13$$, 1, "Aristas"}, 1, 7, 
         1}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{646., {135.3544921875, 140.6455078125}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Print",
 CellChangeTimes->{{3.968327195440071*^9, 3.9683272022323046`*^9}},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[8]:=",ExpressionUUID->"d7adbdfc-e8d2-3d4d-a436-f031c6351570"]
}, Open  ]],

Cell["\<\
OptionValue::optnf: 
   Option name VilCretas`padding not found in defaults for 
    VilCretas`AnimarGrafo.\
\>", "Message", "MSG",
 CellChangeTimes->{3.9683524494027386`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[1]:=",ExpressionUUID->"8da37d03-a7d7-8043-accd-bd50a8cff156"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"gr1", "=", 
   RowBox[{"Grafo", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a", ",", "f"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", "g"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", "h"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", "j"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"b", ",", "c"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"b", ",", "d"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"b", ",", "e"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"b", ",", "h"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"b", ",", "i"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c", ",", "e"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d", ",", "f"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"e", ",", "f"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"f", ",", "g"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"f", ",", "j"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "j"}], "}"}]}], "}"}], ",", 
     RowBox[{"pesos", "->", 
      RowBox[{"-", 
       RowBox[{"{", 
        RowBox[{
        "15", ",", "3", ",", "16", ",", "49", ",", "32", ",", "41", ",", "43",
          ",", "3", ",", "1", ",", "49", ",", "25", ",", "28", ",", "9", ",", 
         "11", ",", "48"}], "}"}]}]}], ",", 
     RowBox[{"mostrarpesos", "->", "True"}]}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[9]:=",ExpressionUUID->"253ddfe8-13aa-8d46-90b9-9bd442476267"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AlDijkstra", "[", 
  RowBox[{"gr1", ",", " ", "a", ",", "g", ",", " ", 
   RowBox[{"all", "->", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.968328080400938*^9, 3.9683281109548264`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"575fad39-ce00-bb41-8a60-b7adec48a977"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Tabla de pesos del grafo\"\>"], "Print",
 CellChangeTimes->{{3.9683280921032066`*^9, 3.9683281115368137`*^9}},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[11]:=",ExpressionUUID->"169dea41-b8e5-0949-a9c5-f18fc8b677f0"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox[
       StyleBox["a",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], 
      TagBox[
       StyleBox["f",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], 
      TagBox[
       StyleBox["g",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], 
      TagBox[
       StyleBox["h",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], 
      TagBox[
       StyleBox["j",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], 
      TagBox[
       StyleBox["b",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], 
      TagBox[
       StyleBox["c",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], 
      TagBox[
       StyleBox["d",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], 
      TagBox[
       StyleBox["e",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], 
      TagBox[
       StyleBox["i",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm]},
     {
      TagBox[
       StyleBox["a",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], "0", 
      RowBox[{"-", "15"}], 
      RowBox[{"-", "3"}], 
      RowBox[{"-", "16"}], 
      RowBox[{"-", "49"}], "0", "0", "0", "0", "0"},
     {
      TagBox[
       StyleBox["f",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], 
      RowBox[{"-", "15"}], "0", 
      RowBox[{"-", "9"}], "0", 
      RowBox[{"-", "11"}], "0", "0", 
      RowBox[{"-", "25"}], 
      RowBox[{"-", "28"}], "0"},
     {
      TagBox[
       StyleBox["g",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], 
      RowBox[{"-", "3"}], 
      RowBox[{"-", "9"}], "0", "0", "0", "0", "0", "0", "0", "0"},
     {
      TagBox[
       StyleBox["h",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], 
      RowBox[{"-", "16"}], "0", "0", "0", "0", 
      RowBox[{"-", "3"}], "0", "0", "0", "0"},
     {
      TagBox[
       StyleBox["j",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], 
      RowBox[{"-", "49"}], 
      RowBox[{"-", "11"}], "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"-", "48"}]},
     {
      TagBox[
       StyleBox["b",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], "0", "0", "0", 
      RowBox[{"-", "3"}], "0", "0", 
      RowBox[{"-", "32"}], 
      RowBox[{"-", "41"}], 
      RowBox[{"-", "43"}], 
      RowBox[{"-", "1"}]},
     {
      TagBox[
       StyleBox["c",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], "0", "0", "0", "0", "0", 
      RowBox[{"-", "32"}], "0", "0", 
      RowBox[{"-", "49"}], "0"},
     {
      TagBox[
       StyleBox["d",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], "0", 
      RowBox[{"-", "25"}], "0", "0", "0", 
      RowBox[{"-", "41"}], "0", "0", "0", "0"},
     {
      TagBox[
       StyleBox["e",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], "0", 
      RowBox[{"-", "28"}], "0", "0", "0", 
      RowBox[{"-", "43"}], 
      RowBox[{"-", "49"}], "0", "0", "0"},
     {
      TagBox[
       StyleBox["i",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], "0", "0", "0", "0", 
      RowBox[{"-", "48"}], 
      RowBox[{"-", "1"}], "0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, 
      "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$, TableHeadings -> {{
       Style[$CellContext`a, 
        GrayLevel[0]], 
       Style[$CellContext`f, 
        GrayLevel[0]], 
       Style[$CellContext`g, 
        GrayLevel[0]], 
       Style[$CellContext`h, 
        GrayLevel[0]], 
       Style[$CellContext`j, 
        GrayLevel[0]], 
       Style[$CellContext`b, 
        GrayLevel[0]], 
       Style[$CellContext`c, 
        GrayLevel[0]], 
       Style[$CellContext`d, 
        GrayLevel[0]], 
       Style[$CellContext`e, 
        GrayLevel[0]], 
       Style[$CellContext`i, 
        GrayLevel[0]]}, {
       Style[$CellContext`a, 
        GrayLevel[0]], 
       Style[$CellContext`f, 
        GrayLevel[0]], 
       Style[$CellContext`g, 
        GrayLevel[0]], 
       Style[$CellContext`h, 
        GrayLevel[0]], 
       Style[$CellContext`j, 
        GrayLevel[0]], 
       Style[$CellContext`b, 
        GrayLevel[0]], 
       Style[$CellContext`c, 
        GrayLevel[0]], 
       Style[$CellContext`d, 
        GrayLevel[0]], 
       Style[$CellContext`e, 
        GrayLevel[0]], 
       Style[$CellContext`i, 
        GrayLevel[0]]}}]]]], "Print",
 CellChangeTimes->{{3.9683280921032066`*^9, 3.9683281115471134`*^9}},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[11]:=",ExpressionUUID->"328c8680-372f-c244-8daf-4dfff0eb6cb7"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Inicializaci\[OAcute]n: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "0", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"f", ",", "\[Infinity]", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"g", ",", "\[Infinity]", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"h", ",", "\[Infinity]", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "\[Infinity]", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "\[Infinity]", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "\[Infinity]", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "\[Infinity]", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"e", ",", "\[Infinity]", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "\[Infinity]", ",", 
       RowBox[{"{", "}"}]}], "}"}]}], "}"}]}],
  SequenceForm[
  "Inicializaci\[OAcute]n: ", {{$CellContext`a, 0, {}}, {$CellContext`f, 
     DirectedInfinity[1], {}}, {$CellContext`g, 
     DirectedInfinity[1], {}}, {$CellContext`h, 
     DirectedInfinity[1], {}}, {$CellContext`j, 
     DirectedInfinity[1], {}}, {$CellContext`b, 
     DirectedInfinity[1], {}}, {$CellContext`c, 
     DirectedInfinity[1], {}}, {$CellContext`d, 
     DirectedInfinity[1], {}}, {$CellContext`e, 
     DirectedInfinity[1], {}}, {$CellContext`i, 
     DirectedInfinity[1], {}}}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.9683280921032066`*^9, 3.968328111558468*^9}},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[11]:=",ExpressionUUID->"a3d67765-3509-0841-a5c1-2f5da9dcb5e0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Se seleccion\[OAcute] el nodo: \"\>", "\[InvisibleSpace]", 
   "a"}],
  SequenceForm["Se seleccion\[OAcute] el nodo: ", $CellContext`a],
  Editable->False]], "Print",
 CellChangeTimes->{{3.9683280921032066`*^9, 3.9683281115653286`*^9}},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[11]:=",ExpressionUUID->"c35ce74f-1732-3648-b8ad-d88dd55a2f5e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Lista actual de v\[EAcute]rtices: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "f", ",", "g", ",", "h", ",", "j", ",", "b", ",", "c", ",", "d", ",", "e",
      ",", "i"}], "}"}]}],
  SequenceForm[
  "Lista actual de v\[EAcute]rtices: ", {$CellContext`f, $CellContext`g, \
$CellContext`h, $CellContext`j, $CellContext`b, $CellContext`c, \
$CellContext`d, $CellContext`e, $CellContext`i}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.9683280921032066`*^9, 3.96832811157032*^9}},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[11]:=",ExpressionUUID->"5799cbb3-d5bc-f54b-bb3e-9ed1f7308047"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Lista actual de marcas: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"f", ",", 
       RowBox[{"-", "15"}], ",", 
       RowBox[{"{", "a", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"g", ",", 
       RowBox[{"-", "3"}], ",", 
       RowBox[{"{", "a", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"h", ",", 
       RowBox[{"-", "16"}], ",", 
       RowBox[{"{", "a", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", 
       RowBox[{"-", "49"}], ",", 
       RowBox[{"{", "a", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "\[Infinity]", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "\[Infinity]", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "\[Infinity]", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"e", ",", "\[Infinity]", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "\[Infinity]", ",", 
       RowBox[{"{", "}"}]}], "}"}]}], "}"}]}],
  SequenceForm[
  "Lista actual de marcas: ", {{$CellContext`f, -15, {$CellContext`a}}, \
{$CellContext`g, -3, {$CellContext`a}}, {$CellContext`h, -16, \
{$CellContext`a}}, {$CellContext`j, -49, {$CellContext`a}}, {$CellContext`b, 
     DirectedInfinity[1], {}}, {$CellContext`c, 
     DirectedInfinity[1], {}}, {$CellContext`d, 
     DirectedInfinity[1], {}}, {$CellContext`e, 
     DirectedInfinity[1], {}}, {$CellContext`i, 
     DirectedInfinity[1], {}}}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.9683280921032066`*^9, 3.968328111574705*^9}},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[11]:=",ExpressionUUID->"385f42d2-f5ea-c642-99a1-ae83958f2849"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Se seleccion\[OAcute] el nodo: \"\>", "\[InvisibleSpace]", 
   "j"}],
  SequenceForm["Se seleccion\[OAcute] el nodo: ", $CellContext`j],
  Editable->False]], "Print",
 CellChangeTimes->{{3.9683280921032066`*^9, 3.9683281115801487`*^9}},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[11]:=",ExpressionUUID->"8461c56a-86d5-de4b-8799-45a8dbc436b4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Lista actual de v\[EAcute]rtices: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "f", ",", "g", ",", "h", ",", "b", ",", "c", ",", "d", ",", "e", ",", 
     "i"}], "}"}]}],
  SequenceForm[
  "Lista actual de v\[EAcute]rtices: ", {$CellContext`f, $CellContext`g, \
$CellContext`h, $CellContext`b, $CellContext`c, $CellContext`d, \
$CellContext`e, $CellContext`i}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.9683280921032066`*^9, 3.9683281115826435`*^9}},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[11]:=",ExpressionUUID->"50ea2bbf-36ae-7d4a-aaa2-b448080b6a4e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Lista actual de marcas: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"f", ",", 
       RowBox[{"-", "60"}], ",", 
       RowBox[{"{", "j", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"g", ",", 
       RowBox[{"-", "3"}], ",", 
       RowBox[{"{", "a", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"h", ",", 
       RowBox[{"-", "16"}], ",", 
       RowBox[{"{", "a", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "\[Infinity]", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "\[Infinity]", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "\[Infinity]", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"e", ",", "\[Infinity]", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"-", "97"}], ",", 
       RowBox[{"{", "j", "}"}]}], "}"}]}], "}"}]}],
  SequenceForm[
  "Lista actual de marcas: ", {{$CellContext`f, -60, {$CellContext`j}}, \
{$CellContext`g, -3, {$CellContext`a}}, {$CellContext`h, -16, \
{$CellContext`a}}, {$CellContext`b, 
     DirectedInfinity[1], {}}, {$CellContext`c, 
     DirectedInfinity[1], {}}, {$CellContext`d, 
     DirectedInfinity[1], {}}, {$CellContext`e, 
     DirectedInfinity[1], {}}, {$CellContext`i, -97, {$CellContext`j}}}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.9683280921032066`*^9, 3.968328111588663*^9}},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[11]:=",ExpressionUUID->"deb21f82-0137-904f-a4bf-0ae31f14142c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Se seleccion\[OAcute] el nodo: \"\>", "\[InvisibleSpace]", 
   "i"}],
  SequenceForm["Se seleccion\[OAcute] el nodo: ", $CellContext`i],
  Editable->False]], "Print",
 CellChangeTimes->{{3.9683280921032066`*^9, 3.9683281115916996`*^9}},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[11]:=",ExpressionUUID->"d90c064e-83ac-0b4a-89d2-08a1c54b32ce"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Lista actual de v\[EAcute]rtices: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"f", ",", "g", ",", "h", ",", "b", ",", "c", ",", "d", ",", "e"}],
     "}"}]}],
  SequenceForm[
  "Lista actual de v\[EAcute]rtices: ", {$CellContext`f, $CellContext`g, \
$CellContext`h, $CellContext`b, $CellContext`c, $CellContext`d, \
$CellContext`e}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.9683280921032066`*^9, 3.968328111597252*^9}},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[11]:=",ExpressionUUID->"e7bb993a-cec3-5541-805d-3e0b60711379"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Lista actual de marcas: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"f", ",", 
       RowBox[{"-", "60"}], ",", 
       RowBox[{"{", "j", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"g", ",", 
       RowBox[{"-", "3"}], ",", 
       RowBox[{"{", "a", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"h", ",", 
       RowBox[{"-", "16"}], ",", 
       RowBox[{"{", "a", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", 
       RowBox[{"-", "98"}], ",", 
       RowBox[{"{", "i", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "\[Infinity]", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "\[Infinity]", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"e", ",", "\[Infinity]", ",", 
       RowBox[{"{", "}"}]}], "}"}]}], "}"}]}],
  SequenceForm[
  "Lista actual de marcas: ", {{$CellContext`f, -60, {$CellContext`j}}, \
{$CellContext`g, -3, {$CellContext`a}}, {$CellContext`h, -16, \
{$CellContext`a}}, {$CellContext`b, -98, {$CellContext`i}}, {$CellContext`c, 
     DirectedInfinity[1], {}}, {$CellContext`d, 
     DirectedInfinity[1], {}}, {$CellContext`e, 
     DirectedInfinity[1], {}}}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.9683280921032066`*^9, 3.96832811160124*^9}},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[11]:=",ExpressionUUID->"4dedc277-f052-734c-be40-bea41544af9d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Se seleccion\[OAcute] el nodo: \"\>", "\[InvisibleSpace]", 
   "b"}],
  SequenceForm["Se seleccion\[OAcute] el nodo: ", $CellContext`b],
  Editable->False]], "Print",
 CellChangeTimes->{{3.9683280921032066`*^9, 3.968328111605751*^9}},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[11]:=",ExpressionUUID->"4cdeb31b-3ed0-f145-979c-1210fc7c680e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Lista actual de v\[EAcute]rtices: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"f", ",", "g", ",", "h", ",", "c", ",", "d", ",", "e"}], "}"}]}],
  SequenceForm[
  "Lista actual de v\[EAcute]rtices: ", {$CellContext`f, $CellContext`g, \
$CellContext`h, $CellContext`c, $CellContext`d, $CellContext`e}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.9683280921032066`*^9, 3.9683281116097736`*^9}},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[11]:=",ExpressionUUID->"5f2e3794-eb26-324f-ac8a-b7acab8d7095"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Lista actual de marcas: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"f", ",", 
       RowBox[{"-", "60"}], ",", 
       RowBox[{"{", "j", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"g", ",", 
       RowBox[{"-", "3"}], ",", 
       RowBox[{"{", "a", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"h", ",", 
       RowBox[{"-", "101"}], ",", 
       RowBox[{"{", "b", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", 
       RowBox[{"-", "130"}], ",", 
       RowBox[{"{", "b", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", 
       RowBox[{"-", "139"}], ",", 
       RowBox[{"{", "b", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"e", ",", 
       RowBox[{"-", "141"}], ",", 
       RowBox[{"{", "b", "}"}]}], "}"}]}], "}"}]}],
  SequenceForm[
  "Lista actual de marcas: ", {{$CellContext`f, -60, {$CellContext`j}}, \
{$CellContext`g, -3, {$CellContext`a}}, {$CellContext`h, -101, \
{$CellContext`b}}, {$CellContext`c, -130, {$CellContext`b}}, {$CellContext`d, \
-139, {$CellContext`b}}, {$CellContext`e, -141, {$CellContext`b}}}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.9683280921032066`*^9, 3.9683281116153755`*^9}},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[11]:=",ExpressionUUID->"f11a732c-b18a-7442-bc4c-39040aff799a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Se seleccion\[OAcute] el nodo: \"\>", "\[InvisibleSpace]", 
   "e"}],
  SequenceForm["Se seleccion\[OAcute] el nodo: ", $CellContext`e],
  Editable->False]], "Print",
 CellChangeTimes->{{3.9683280921032066`*^9, 3.9683281116193943`*^9}},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[11]:=",ExpressionUUID->"00ddac29-c7d5-724f-ba13-b7aefa1d7053"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Lista actual de v\[EAcute]rtices: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"f", ",", "g", ",", "h", ",", "c", ",", "d"}], "}"}]}],
  SequenceForm[
  "Lista actual de v\[EAcute]rtices: ", {$CellContext`f, $CellContext`g, \
$CellContext`h, $CellContext`c, $CellContext`d}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.9683280921032066`*^9, 3.96832811162269*^9}},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[11]:=",ExpressionUUID->"8d4c9a79-508b-bb4e-9b76-440e3144eb19"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Lista actual de marcas: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"f", ",", 
       RowBox[{"-", "169"}], ",", 
       RowBox[{"{", "e", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"g", ",", 
       RowBox[{"-", "3"}], ",", 
       RowBox[{"{", "a", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"h", ",", 
       RowBox[{"-", "101"}], ",", 
       RowBox[{"{", "b", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", 
       RowBox[{"-", "190"}], ",", 
       RowBox[{"{", "e", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", 
       RowBox[{"-", "139"}], ",", 
       RowBox[{"{", "b", "}"}]}], "}"}]}], "}"}]}],
  SequenceForm[
  "Lista actual de marcas: ", {{$CellContext`f, -169, {$CellContext`e}}, \
{$CellContext`g, -3, {$CellContext`a}}, {$CellContext`h, -101, \
{$CellContext`b}}, {$CellContext`c, -190, {$CellContext`e}}, {$CellContext`d, \
-139, {$CellContext`b}}}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.9683280921032066`*^9, 3.9683281116294727`*^9}},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[11]:=",ExpressionUUID->"b34218f8-9545-cf45-8866-72c85f6238b9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Se seleccion\[OAcute] el nodo: \"\>", "\[InvisibleSpace]", 
   "c"}],
  SequenceForm["Se seleccion\[OAcute] el nodo: ", $CellContext`c],
  Editable->False]], "Print",
 CellChangeTimes->{{3.9683280921032066`*^9, 3.968328111633507*^9}},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[11]:=",ExpressionUUID->"eb93329f-ed9c-414e-8f05-71a562bd4527"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Lista actual de v\[EAcute]rtices: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"f", ",", "g", ",", "h", ",", "d"}], "}"}]}],
  SequenceForm[
  "Lista actual de v\[EAcute]rtices: ", {$CellContext`f, $CellContext`g, \
$CellContext`h, $CellContext`d}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.9683280921032066`*^9, 3.968328111637556*^9}},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[11]:=",ExpressionUUID->"a0226586-d84a-0348-80e0-bfda2624b9fa"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Lista actual de marcas: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"f", ",", 
       RowBox[{"-", "169"}], ",", 
       RowBox[{"{", "e", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"g", ",", 
       RowBox[{"-", "3"}], ",", 
       RowBox[{"{", "a", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"h", ",", 
       RowBox[{"-", "101"}], ",", 
       RowBox[{"{", "b", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", 
       RowBox[{"-", "139"}], ",", 
       RowBox[{"{", "b", "}"}]}], "}"}]}], "}"}]}],
  SequenceForm[
  "Lista actual de marcas: ", {{$CellContext`f, -169, {$CellContext`e}}, \
{$CellContext`g, -3, {$CellContext`a}}, {$CellContext`h, -101, \
{$CellContext`b}}, {$CellContext`d, -139, {$CellContext`b}}}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.9683280921032066`*^9, 3.968328111643116*^9}},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[11]:=",ExpressionUUID->"474d9161-899d-9e42-beed-5a4dd2da5612"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Se seleccion\[OAcute] el nodo: \"\>", "\[InvisibleSpace]", 
   "f"}],
  SequenceForm["Se seleccion\[OAcute] el nodo: ", $CellContext`f],
  Editable->False]], "Print",
 CellChangeTimes->{{3.9683280921032066`*^9, 3.9683281116492424`*^9}},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[11]:=",ExpressionUUID->"64505da1-26a4-c446-967e-73ff949c625e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Lista actual de v\[EAcute]rtices: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"g", ",", "h", ",", "d"}], "}"}]}],
  SequenceForm[
  "Lista actual de v\[EAcute]rtices: ", {$CellContext`g, $CellContext`h, \
$CellContext`d}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.9683280921032066`*^9, 3.968328111655262*^9}},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[11]:=",ExpressionUUID->"a09752cc-cfe0-414c-84f3-76d027c4e340"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Lista actual de marcas: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"g", ",", 
       RowBox[{"-", "178"}], ",", 
       RowBox[{"{", "f", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"h", ",", 
       RowBox[{"-", "101"}], ",", 
       RowBox[{"{", "b", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", 
       RowBox[{"-", "194"}], ",", 
       RowBox[{"{", "f", "}"}]}], "}"}]}], "}"}]}],
  SequenceForm[
  "Lista actual de marcas: ", {{$CellContext`g, -178, {$CellContext`f}}, \
{$CellContext`h, -101, {$CellContext`b}}, {$CellContext`d, -194, \
{$CellContext`f}}}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.9683280921032066`*^9, 3.9683281116607246`*^9}},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[11]:=",ExpressionUUID->"074a194a-ffb4-af4c-b5d9-ab13a353b1dc"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Se seleccion\[OAcute] el nodo: \"\>", "\[InvisibleSpace]", 
   "d"}],
  SequenceForm["Se seleccion\[OAcute] el nodo: ", $CellContext`d],
  Editable->False]], "Print",
 CellChangeTimes->{{3.9683280921032066`*^9, 3.968328111668585*^9}},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[11]:=",ExpressionUUID->"5226698d-9c17-214d-b307-2c49f739c954"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Lista actual de v\[EAcute]rtices: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"g", ",", "h"}], "}"}]}],
  SequenceForm[
  "Lista actual de v\[EAcute]rtices: ", {$CellContext`g, $CellContext`h}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.9683280921032066`*^9, 3.9683281116747913`*^9}},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[11]:=",ExpressionUUID->"cc523a0b-6961-d24b-afea-4179557efa54"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Lista actual de marcas: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"g", ",", 
       RowBox[{"-", "178"}], ",", 
       RowBox[{"{", "f", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"h", ",", 
       RowBox[{"-", "101"}], ",", 
       RowBox[{"{", "b", "}"}]}], "}"}]}], "}"}]}],
  SequenceForm[
  "Lista actual de marcas: ", {{$CellContext`g, -178, {$CellContext`f}}, \
{$CellContext`h, -101, {$CellContext`b}}}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.9683280921032066`*^9, 3.968328111685095*^9}},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[11]:=",ExpressionUUID->"e701f3c7-9739-da48-9660-fe3fa8584db4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Se seleccion\[OAcute] el nodo: \"\>", "\[InvisibleSpace]", 
   "g"}],
  SequenceForm["Se seleccion\[OAcute] el nodo: ", $CellContext`g],
  Editable->False]], "Print",
 CellChangeTimes->{{3.9683280921032066`*^9, 3.9683281116896915`*^9}},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[11]:=",ExpressionUUID->"437abb65-c6f4-9a42-8704-e9be507582d7"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"La longitud de un camino m\[AAcute]s corto es: \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"-", "178"}]}],
  SequenceForm["La longitud de un camino m\[AAcute]s corto es: ", -178],
  Editable->False]], "Print",
 CellChangeTimes->{{3.9683280921032066`*^9, 3.9683281116933117`*^9}},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[11]:=",ExpressionUUID->"bf20d8ca-84a9-4248-b84f-b3db7aae4866"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Lista actual de v\[EAcute]rtices: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "h", "}"}]}],
  SequenceForm["Lista actual de v\[EAcute]rtices: ", {$CellContext`h}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.9683280921032066`*^9, 3.96832811169713*^9}},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[11]:=",ExpressionUUID->"c6cd8afe-8cac-8249-9628-61310c2bc3e6"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Lista actual de marcas: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"h", ",", 
      RowBox[{"-", "101"}], ",", 
      RowBox[{"{", "b", "}"}]}], "}"}], "}"}]}],
  SequenceForm[
  "Lista actual de marcas: ", {{$CellContext`h, -101, {$CellContext`b}}}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.9683280921032066`*^9, 3.968328111703804*^9}},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[11]:=",ExpressionUUID->"1ade148b-7ec9-1847-9056-db0fa8eb2466"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Iteraciones: \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"a", "f", "g", "h", "j", "b", "c", "d", "e", "i"},
       {
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}]},
       {
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "15"}], ",", 
          RowBox[{"{", "a", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "3"}], ",", 
          RowBox[{"{", "a", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "16"}], ",", 
          RowBox[{"{", "a", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "49"}], ",", 
          RowBox[{"{", "a", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}]},
       {
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "60"}], ",", 
          RowBox[{"{", "j", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "3"}], ",", 
          RowBox[{"{", "a", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "16"}], ",", 
          RowBox[{"{", "a", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "49"}], ",", 
          RowBox[{"{", "a", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "97"}], ",", 
          RowBox[{"{", "j", "}"}]}], "}"}]},
       {
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "60"}], ",", 
          RowBox[{"{", "j", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "3"}], ",", 
          RowBox[{"{", "a", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "16"}], ",", 
          RowBox[{"{", "a", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "49"}], ",", 
          RowBox[{"{", "a", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "98"}], ",", 
          RowBox[{"{", "i", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "97"}], ",", 
          RowBox[{"{", "j", "}"}]}], "}"}]},
       {
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "60"}], ",", 
          RowBox[{"{", "j", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "3"}], ",", 
          RowBox[{"{", "a", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "101"}], ",", 
          RowBox[{"{", "b", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "49"}], ",", 
          RowBox[{"{", "a", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "98"}], ",", 
          RowBox[{"{", "i", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "130"}], ",", 
          RowBox[{"{", "b", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "139"}], ",", 
          RowBox[{"{", "b", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "141"}], ",", 
          RowBox[{"{", "b", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "97"}], ",", 
          RowBox[{"{", "j", "}"}]}], "}"}]},
       {
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "169"}], ",", 
          RowBox[{"{", "e", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "3"}], ",", 
          RowBox[{"{", "a", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "101"}], ",", 
          RowBox[{"{", "b", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "49"}], ",", 
          RowBox[{"{", "a", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "98"}], ",", 
          RowBox[{"{", "i", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "190"}], ",", 
          RowBox[{"{", "e", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "139"}], ",", 
          RowBox[{"{", "b", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "141"}], ",", 
          RowBox[{"{", "b", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "97"}], ",", 
          RowBox[{"{", "j", "}"}]}], "}"}]},
       {
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "169"}], ",", 
          RowBox[{"{", "e", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "3"}], ",", 
          RowBox[{"{", "a", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "101"}], ",", 
          RowBox[{"{", "b", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "49"}], ",", 
          RowBox[{"{", "a", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "98"}], ",", 
          RowBox[{"{", "i", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "190"}], ",", 
          RowBox[{"{", "e", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "139"}], ",", 
          RowBox[{"{", "b", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "141"}], ",", 
          RowBox[{"{", "b", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "97"}], ",", 
          RowBox[{"{", "j", "}"}]}], "}"}]},
       {
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "169"}], ",", 
          RowBox[{"{", "e", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "178"}], ",", 
          RowBox[{"{", "f", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "101"}], ",", 
          RowBox[{"{", "b", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "49"}], ",", 
          RowBox[{"{", "a", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "98"}], ",", 
          RowBox[{"{", "i", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "190"}], ",", 
          RowBox[{"{", "e", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "194"}], ",", 
          RowBox[{"{", "f", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "141"}], ",", 
          RowBox[{"{", "b", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "97"}], ",", 
          RowBox[{"{", "j", "}"}]}], "}"}]},
       {
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "169"}], ",", 
          RowBox[{"{", "e", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "178"}], ",", 
          RowBox[{"{", "f", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "101"}], ",", 
          RowBox[{"{", "b", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "49"}], ",", 
          RowBox[{"{", "a", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "98"}], ",", 
          RowBox[{"{", "i", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "190"}], ",", 
          RowBox[{"{", "e", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "194"}], ",", 
          RowBox[{"{", "f", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "141"}], ",", 
          RowBox[{"{", "b", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "97"}], ",", 
          RowBox[{"{", "j", "}"}]}], "}"}]},
       {
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "169"}], ",", 
          RowBox[{"{", "e", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "178"}], ",", 
          RowBox[{"{", "f", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "101"}], ",", 
          RowBox[{"{", "b", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "49"}], ",", 
          RowBox[{"{", "a", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "98"}], ",", 
          RowBox[{"{", "i", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "190"}], ",", 
          RowBox[{"{", "e", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "194"}], ",", 
          RowBox[{"{", "f", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "141"}], ",", 
          RowBox[{"{", "b", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "97"}], ",", 
          RowBox[{"{", "j", "}"}]}], "}"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Iteraciones: ", 
   MatrixForm[{{$CellContext`a, $CellContext`f, $CellContext`g, \
$CellContext`h, $CellContext`j, $CellContext`b, $CellContext`c, \
$CellContext`d, $CellContext`e, $CellContext`i}, {{0, {}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}}, {{
      0, {}}, {-15, {$CellContext`a}}, {-3, {$CellContext`a}}, {-16, \
{$CellContext`a}}, {-49, {$CellContext`a}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}}, {{
      0, {}}, {-60, {$CellContext`j}}, {-3, {$CellContext`a}}, {-16, \
{$CellContext`a}}, {-49, {$CellContext`a}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}, {-97, {$CellContext`j}}}, {{
      0, {}}, {-60, {$CellContext`j}}, {-3, {$CellContext`a}}, {-16, \
{$CellContext`a}}, {-49, {$CellContext`a}}, {-98, {$CellContext`i}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}, {-97, {$CellContext`j}}}, {{
      0, {}}, {-60, {$CellContext`j}}, {-3, {$CellContext`a}}, {-101, \
{$CellContext`b}}, {-49, {$CellContext`a}}, {-98, {$CellContext`i}}, {-130, \
{$CellContext`b}}, {-139, {$CellContext`b}}, {-141, {$CellContext`b}}, {-97, \
{$CellContext`j}}}, {{
      0, {}}, {-169, {$CellContext`e}}, {-3, {$CellContext`a}}, {-101, \
{$CellContext`b}}, {-49, {$CellContext`a}}, {-98, {$CellContext`i}}, {-190, \
{$CellContext`e}}, {-139, {$CellContext`b}}, {-141, {$CellContext`b}}, {-97, \
{$CellContext`j}}}, {{
      0, {}}, {-169, {$CellContext`e}}, {-3, {$CellContext`a}}, {-101, \
{$CellContext`b}}, {-49, {$CellContext`a}}, {-98, {$CellContext`i}}, {-190, \
{$CellContext`e}}, {-139, {$CellContext`b}}, {-141, {$CellContext`b}}, {-97, \
{$CellContext`j}}}, {{
      0, {}}, {-169, {$CellContext`e}}, {-178, {$CellContext`f}}, {-101, \
{$CellContext`b}}, {-49, {$CellContext`a}}, {-98, {$CellContext`i}}, {-190, \
{$CellContext`e}}, {-194, {$CellContext`f}}, {-141, {$CellContext`b}}, {-97, \
{$CellContext`j}}}, {{
      0, {}}, {-169, {$CellContext`e}}, {-178, {$CellContext`f}}, {-101, \
{$CellContext`b}}, {-49, {$CellContext`a}}, {-98, {$CellContext`i}}, {-190, \
{$CellContext`e}}, {-194, {$CellContext`f}}, {-141, {$CellContext`b}}, {-97, \
{$CellContext`j}}}, {{
      0, {}}, {-169, {$CellContext`e}}, {-178, {$CellContext`f}}, {-101, \
{$CellContext`b}}, {-49, {$CellContext`a}}, {-98, {$CellContext`i}}, {-190, \
{$CellContext`e}}, {-194, {$CellContext`f}}, {-141, {$CellContext`b}}, {-97, \
{$CellContext`j}}}}]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.9683280921032066`*^9, 3.9683281117163982`*^9}},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[11]:=",ExpressionUUID->"f6d11889-3fcf-db44-83cc-78728571b3df"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["gr1"], "Input",
 CellChangeTimes->{{3.968328126351984*^9, 3.968328127550749*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"8a63ed64-feb7-3045-a3f7-37ed6f2ef107"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{$CellContext`a, $CellContext`f, $CellContext`g, $CellContext`h, \
$CellContext`j, $CellContext`b, $CellContext`c, $CellContext`d, \
$CellContext`e, $CellContext`i}, {
      Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {6, 7}, {6, 8}, {6, 9}, {6, 4}, {
       6, 10}, {7, 9}, {8, 2}, {9, 2}, {2, 3}, {2, 5}, {10, 5}}}, {
      EdgeLabels -> {
        UndirectedEdge[$CellContext`f, $CellContext`g] -> -9, 
         UndirectedEdge[$CellContext`b, $CellContext`c] -> -32, 
         UndirectedEdge[$CellContext`a, $CellContext`j] -> -49, 
         UndirectedEdge[$CellContext`i, $CellContext`j] -> -48, 
         UndirectedEdge[$CellContext`a, $CellContext`g] -> -3, 
         UndirectedEdge[$CellContext`b, $CellContext`i] -> -1, 
         UndirectedEdge[$CellContext`e, $CellContext`f] -> -28, 
         UndirectedEdge[$CellContext`d, $CellContext`f] -> -25, 
         UndirectedEdge[$CellContext`b, $CellContext`h] -> -3, 
         UndirectedEdge[$CellContext`a, $CellContext`f] -> -15, 
         UndirectedEdge[$CellContext`c, $CellContext`e] -> -49, 
         UndirectedEdge[$CellContext`b, $CellContext`d] -> -41, 
         UndirectedEdge[$CellContext`f, $CellContext`j] -> -11, 
         UndirectedEdge[$CellContext`b, $CellContext`e] -> -43, 
         UndirectedEdge[$CellContext`a, $CellContext`h] -> -16}, 
       EdgeWeight -> {-15, -3, -16, -49, -32, -41, -43, -3, -1, -49, -25, \
-28, -9, -11, -48}, ImagePadding -> 10, VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], {
         {Arrowheads[0.], 
          ArrowBox[{{2.757652935519234, 1.3841336671538076`}, {
           2.1487490599333277`, 1.3162018405380287`}}, 0.03200969988426604]}, 
         InsetBox[
          RowBox[{"-", "15"}], {2.453200997726281, 1.350167753845918}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{2.757652935519234, 1.3841336671538076`}, {
           3.250545918081796, 1.8233395115790532`}}, 0.03200969988426604]}, 
         InsetBox[
          RowBox[{"-", "3"}], {3.004099426800515, 1.6037365893664304}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{2.757652935519234, 1.3841336671538076`}, {
           1.7835822654018525`, 1.8992060564175632`}}, 0.03200969988426604]}, 
         InsetBox[
          RowBox[{"-", "16"}], {2.270617600460543, 1.6416698617856853}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{2.757652935519234, 1.3841336671538076`}, {
           2.4675091338386643`, 0.4357415116692229}}, 0.03200969988426604]}, 
         InsetBox[
          RowBox[{"-", "49"}], {2.612581034678949, 0.9099375894115153}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{2.1487490599333277`, 1.3162018405380287`}, {
           3.250545918081796, 1.8233395115790532`}}, 0.03200969988426604]}, 
         InsetBox[
          RowBox[{"-", "9"}], {2.699647489007562, 1.5697706760585408}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{2.1487490599333277`, 1.3162018405380287`}, {
           2.4675091338386643`, 0.4357415116692229}}, 0.03200969988426604]}, 
         InsetBox[
          RowBox[{"-", "11"}], {2.308129096885996, 0.8759716761036258}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{2.1487490599333277`, 1.3162018405380287`}, {
           1.4206252185559496`, 0.712283410445965}}, 0.03200969988426604]}, 
         InsetBox[
          RowBox[{"-", "25"}], {1.7846871392446386, 1.0142426254919967}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{2.1487490599333277`, 1.3162018405380287`}, {
           0.8830726382429711, 1.773537654130057}}, 0.03200969988426604]}, 
         InsetBox[
          RowBox[{"-", "28"}], {1.5159108490881494, 1.544869747334043}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1.7835822654018525`, 1.8992060564175632`}, {
           0.8811710168027888, 1.0903054728808907`}}, 0.03200969988426604]}, 
         InsetBox[
          RowBox[{"-", "3"}], {1.3323766411023206, 1.494755764649227}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{2.4675091338386643`, 0.4357415116692229}, {
           1.481415705308577, 0.}}, 0.03200969988426604]}, InsetBox[
          RowBox[{"-", "48"}], {1.9744624195736207, 0.21787075583461146}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{0.8811710168027888, 1.0903054728808907`}, {0., 
           1.6145589524679584`}}, 0.03200969988426604]}, InsetBox[
          RowBox[{"-", "32"}], {0.4405855084013944, 1.3524322126744246}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{0.8811710168027888, 1.0903054728808907`}, {
           1.4206252185559496`, 0.712283410445965}}, 0.03200969988426604]}, 
         InsetBox[
          RowBox[{"-", "41"}], {1.1508981176793691, 0.9012944416634279}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{0.8811710168027888, 1.0903054728808907`}, {
           0.8830726382429711, 1.773537654130057}}, 0.03200969988426604]}, 
         InsetBox[
          RowBox[{"-", "43"}], {0.8821218275228799, 1.4319215635054738}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{0.8811710168027888, 1.0903054728808907`}, {
           1.481415705308577, 0.}}, 0.03200969988426604]}, InsetBox[
          RowBox[{"-", "1"}], {1.1812933610556828, 0.5451527364404454}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{0., 1.6145589524679584`}, {0.8830726382429711, 
           1.773537654130057}}, 0.03200969988426604]}, InsetBox[
          RowBox[{"-", "49"}], {0.44153631912148555, 1.6940483032990077}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {
         DiskBox[{2.757652935519234, 1.3841336671538076`}, 
          0.03200969988426604], 
         InsetBox["a", Offset[{2, 2}, {2.7896626354035, 1.4161433670380736}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.1487490599333277`, 1.3162018405380287`}, 
          0.03200969988426604], 
         InsetBox["f", 
          Offset[{2, 2}, {2.1807587598175937, 1.3482115404222947}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.250545918081796, 1.8233395115790532`}, 
          0.03200969988426604], 
         InsetBox["g", 
          Offset[{2, 2}, {3.282555617966062, 1.8553492114633192}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.7835822654018525`, 1.8992060564175632`}, 
          0.03200969988426604], 
         InsetBox["h", 
          Offset[{2, 2}, {1.8155919652861185, 1.9312157563018293}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.4675091338386643`, 0.4357415116692229}, 
          0.03200969988426604], 
         InsetBox["j", 
          Offset[{2, 2}, {2.4995188337229304, 0.467751211553489}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.8811710168027888, 1.0903054728808907`}, 
          0.03200969988426604], 
         InsetBox["b", 
          Offset[{2, 2}, {0.9131807166870548, 1.1223151727651568}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0., 1.6145589524679584`}, 0.03200969988426604], 
         InsetBox["c", 
          Offset[{2, 2}, {0.03200969988426604, 1.6465686523522245}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.4206252185559496`, 0.712283410445965}, 
          0.03200969988426604], 
         InsetBox["d", 
          Offset[{2, 2}, {1.4526349184402156, 0.744293110330231}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.8830726382429711, 1.773537654130057}, 
          0.03200969988426604], 
         InsetBox["e", 
          Offset[{2, 2}, {0.9150823381272372, 1.805547354014323}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.481415705308577, 0.}, 0.03200969988426604], 
         InsetBox["i", 
          Offset[{2, 2}, {1.513425405192843, 0.03200969988426604}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImagePadding->10]], "Output",
 CellChangeTimes->{3.9683281278693943`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"324b8ee3-07ee-5949-8a52-808971f15384"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"aristas", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "e"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "d"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "e"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "d"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "e"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "d"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "e"}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"pes", "=", 
   RowBox[{"{", 
    RowBox[{
    "7", ",", "5", ",", "2", ",", "8", ",", "3", ",", "14", ",", "6", ",", 
     "2", ",", "6", ",", "4", ",", "2"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"gra1", " ", "=", " ", 
  RowBox[{"Grafo", "[", 
   RowBox[{"aristas", ",", " ", 
    RowBox[{"pesos", "->", "pes"}], ",", " ", 
    RowBox[{"mostrarpesos", "->", "True"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.9683527745365524`*^9, 3.9683528017780113`*^9}, {
  3.9683534415715733`*^9, 3.9683534772154846`*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"388b9657-4995-374a-8861-c3753f70fcfc"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{$CellContext`a, $CellContext`b, $CellContext`c, $CellContext`e, \
$CellContext`d}, {
      Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 5}, {2, 4}, {3, 5}, {3, 4}, {
       5, 5}, {3, 3}, {5, 4}}}, {
      EdgeLabels -> {
        UndirectedEdge[$CellContext`a, $CellContext`e] -> 2, 
         UndirectedEdge[$CellContext`b, $CellContext`c] -> 8, 
         UndirectedEdge[$CellContext`a, $CellContext`b] -> 7, 
         UndirectedEdge[$CellContext`c, $CellContext`e] -> 2, 
         UndirectedEdge[$CellContext`b, $CellContext`d] -> 3, 
         UndirectedEdge[$CellContext`c, $CellContext`d] -> 6, 
         UndirectedEdge[$CellContext`c, $CellContext`c] -> 4, 
         UndirectedEdge[$CellContext`d, $CellContext`d] -> 6, 
         UndirectedEdge[$CellContext`b, $CellContext`e] -> 14, 
         UndirectedEdge[$CellContext`a, $CellContext`c] -> 5, 
         UndirectedEdge[$CellContext`d, $CellContext`e] -> 2}, 
       EdgeWeight -> {7, 5, 2, 8, 3, 14, 6, 2, 6, 4, 2}, ImagePadding -> 10, 
       VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], {
         {Arrowheads[0.], 
          ArrowBox[{{0., 0.6036428791280587}, {1.006943513923487, 0.}}, 
           0.021554178270612873`]}, 
         InsetBox["7", {0.5034717569617435, 0.30182143956402935}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{0., 0.6036428791280587}, {0.8294432880449293, 
           0.6024873029730559}}, 0.021554178270612873`]}, 
         InsetBox["5", {0.41472164402246464, 0.6030650910505573}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{0., 0.6036428791280587}, {1.008260262516205, 
           1.2072356645553475`}}, 0.021554178270612873`]}, 
         InsetBox["2", {0.5041301312581025, 0.905439271841703}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1.006943513923487, 0.}, {0.8294432880449293, 
           0.6024873029730559}}, 0.021554178270612873`]}, 
         InsetBox["8", {0.9181934009842081, 0.30124365148652793}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1.006943513923487, 0.}, {1.008260262516205, 
           1.2072356645553475`}}, 0.021554178270612873`]}, 
         InsetBox["14", {1.0076018882198459, 0.6036178322776737}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1.006943513923487, 0.}, {1.8707672937283246`, 
           0.602648036371213}}, 0.021554178270612873`]}, 
         InsetBox["3", {1.4388554038259058, 0.3013240181856065}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[
           BezierCurveBox[{{0.8294432880449293, 0.6024873029730559}, {
            0.824773855474999, 0.26170721488764553`}, {0.7309760561795013, 
            0.1786595389882823}, {0.6483377655363951, 0.16201861729436356`}, {
            0.45769534541094736`, 0.304804014066867}, {0.45042109306041794`, 
            0.3887867063789051}, {0.5037339409287508, 0.5021563843229309}, {
            0.8294432880449293, 0.6024873029730559}},
            SplineDegree->7], 0.021554178270612873`]}, 
         InsetBox["4", {0.5297072398172842, 0.20228947515177098}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{0.8294432880449293, 0.6024873029730559}, {
           1.008260262516205, 1.2072356645553475`}}, 0.021554178270612873`]}, 
         InsetBox["2", {0.9188517752805672, 0.9048614837642017}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{0.8294432880449293, 0.6024873029730559}, {
           1.8707672937283246`, 0.602648036371213}}, 0.021554178270612873`]}, 
         InsetBox["6", {1.350105290886627, 0.6025676696721345}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1.008260262516205, 1.2072356645553475`}, {
           1.8707672937283246`, 0.602648036371213}}, 0.021554178270612873`]}, 
         InsetBox["2", {1.4395137781222647, 0.9049418504632802}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[
           BezierCurveBox[{{1.8707672937283246`, 0.602648036371213}, {
            1.9594587896717088`, 0.7933329949412784}, {2.158399899259812, 
            0.8495078995446549}, {2.285504840240576, 0.79040934757283}, {
            2.285085948897063, 0.4139641884924916}, {2.1578497983945297`, 
            0.3551486559165923}, {1.9590341991633948`, 
            0.41176616640326835`}, {1.8707672937283246`, 0.602648036371213}},
            SplineDegree->7], 0.021554178270612873`]}, 
         InsetBox["6", {2.370766984172526, 0.6020916590688775}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 0.6036428791280587}, 0.021554178270612873], 
         InsetBox["a", 
          Offset[{2, 2}, {0.021554178270612873, 0.6251970573986716}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.006943513923487, 0.}, 0.021554178270612873], 
         InsetBox["b", 
          Offset[{2, 2}, {1.0284976921940998, 0.021554178270612873}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.8294432880449293, 0.6024873029730559}, 
          0.021554178270612873], 
         InsetBox["c", 
          Offset[{2, 2}, {0.8509974663155422, 0.6240414812436688}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.008260262516205, 1.2072356645553475`}, 
          0.021554178270612873], 
         InsetBox["e", 
          Offset[{2, 2}, {1.0298144407868177, 1.2287898428259603}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.8707672937283246`, 0.602648036371213}, 
          0.021554178270612873], 
         InsetBox["d", 
          Offset[{2, 2}, {1.8923214719989374, 0.6242022146418259}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImagePadding->10]], "Output",
 CellChangeTimes->{{3.9683534561528664`*^9, 3.968353478219557*^9}},
 CellLabel->"Out[39]=",ExpressionUUID->"50bd8ee5-2020-c049-a040-39bd2679f1b1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Valencias", "[", "gra1", "]"}]], "Input",
 CellChangeTimes->{{3.9683533524875145`*^9, 3.9683533555110016`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"6497ebc8-c28c-b34a-9a8c-2a855abd2506"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox[
       StyleBox["a",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], 
      TagBox[
       StyleBox["b",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], 
      TagBox[
       StyleBox["c",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], 
      TagBox[
       StyleBox["e",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], 
      TagBox[
       StyleBox["d",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm]},
     {
      TagBox["\<\"Grado o valencia\"\>",
       HoldForm], "3", "4", "6", "4", "5"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, 
      "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$, TableHeadings -> {{"Grado o valencia"}, {
       Style[$CellContext`a, 
        GrayLevel[0]], 
       Style[$CellContext`b, 
        GrayLevel[0]], 
       Style[$CellContext`c, 
        GrayLevel[0]], 
       Style[$CellContext`e, 
        GrayLevel[0]], 
       Style[$CellContext`d, 
        GrayLevel[0]]}}, TableAlignments -> Center]]]], "Output",
 CellChangeTimes->{{3.9683534589695683`*^9, 3.968353481737114*^9}},
 CellLabel->
  "Out[40]//TableForm=",ExpressionUUID->"b149a956-a9fa-8f40-b667-\
ff30da3173a8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "MPGrafo"}]], "Input",
 CellChangeTimes->{{3.9683528142422085`*^9, 3.9683528214262943`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"22b182a8-ff06-ee4b-b122-def228c5af87"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Recibe un grafo ponderado \[OpenCurlyDoubleQuote]G\
\[CloseCurlyDoubleQuote] y sus v\[EAcute]rtices en un conjunto \
\[OpenCurlyDoubleQuote]Nodos\[CloseCurlyDoubleQuote], devolviendo la \
correspondiente matriz de adyacencia de pesos de acuerdo con el orden de \
\[OpenCurlyDoubleQuote]Nodos\[CloseCurlyDoubleQuote]. El comando brinda la \
opci\[OAcute]n \[OpenCurlyDoubleQuote]table->True\[CloseCurlyDoubleQuote], la \
cual permite mostrar la matriz con un formato de tabla, a\[NTilde]adiendo \
encabezados en filas y columnas con los v\[EAcute]rtices contenidos en el \
orden del conjunto \[OpenCurlyDoubleQuote]Nodos\[CloseCurlyDoubleQuote]. \
Sintaxis: MPGrafo[G, Nodos], o, MPGrafo[G, Nodos, table->True, matriz->True], \
\[OpenCurlyDoubleQuote]matriz->True\[CloseCurlyDoubleQuote] brinda la salida \
como una lista. Por defecto, si el grafo posee aristas m\[UAcute]ltiples, por \
cada una en la entrada correspondiente de la matriz, se muestra la suma de \
los pesos. Si el grafo se gener\[OAcute] con \
\[OpenCurlyDoubleQuote]Combinatorica\[CloseCurlyDoubleQuote] no acepta \
aristas mixtas (dirigidas y no dirigidas).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"MPGrafo", "[", 
                    
                    RowBox[{
                    "VilCretas`Private`GGrafo_", ",", 
                    "VilCretas`Private`GNodos_", ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"VilCretas`Private`GGrafoAuxiliar7", ",", 
                    "VilCretas`Private`GVl13"}], "}"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"VectorQ", "[", "VilCretas`Private`GNodos", "]"}],
                     ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"VilCretas`Private`GNodos", ",", "Null"}], "]"}], 
                    "\[Equal]", "False"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`GNodos", "\[NotEqual]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"BooleanQ", "[", 
                    RowBox[{"OptionValue", "[", "table", "]"}], "]"}], "&&", 
                    RowBox[{"BooleanQ", "[", 
                    RowBox[{"OptionValue", "[", "matriz", "]"}], "]"}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"PesosAristas", "[", "VilCretas`Private`GGrafo", 
                    "]"}], "}"}], ",", "Null"}], "]"}], "\[Equal]", "False"}],
                     ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"GrafoQ", "[", "VilCretas`Private`GGrafo", "]"}], 
                    ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"Sort", "[", 
                    
                    RowBox[{"VertexList", "[", "VilCretas`Private`GGrafo", 
                    "]"}], "]"}], "]"}], "\[Equal]", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Sort", "[", "VilCretas`Private`GNodos", "]"}], 
                    "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    
                    RowBox[{"AristasMixtasQ", "[", "VilCretas`Private`GGrafo",
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`GGrafoAuxiliar7", "=", 
                    RowBox[{"Graph", "[", 
                    RowBox[{"VilCretas`Private`GNodos", ",", 
                    RowBox[{"AristasCombinatoricaToWolframSystem", "[", 
                    RowBox[{
                    RowBox[{"AristasMixtasWolframSystemToCombinatorica", "[", 
                    
                    RowBox[{"EdgeList", "[", "VilCretas`Private`GGrafo", 
                    "]"}], "]"}], ",", 
                    RowBox[{"dirigido", "\[Rule]", "True"}]}], "]"}]}], 
                    "]"}]}], ";", 
                    RowBox[{"VilCretas`Private`GVl13", "=", 
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    
                    RowBox[{"PesosAristas", "[", "VilCretas`Private`GGrafo", 
                    "]"}], ",", "1"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"EdgeQ", "[", 
                    RowBox[{"VilCretas`Private`GGrafoAuxiliar7", ",", "#1"}], 
                    "]"}], "\[Equal]", "False"}], "&"}]}], "]"}]}], ";", 
                    RowBox[{"VilCretas`Private`GGrafoAuxiliar7", "=", 
                    RowBox[{"Graph", "[", 
                    RowBox[{"VilCretas`Private`GNodos", ",", 
                    
                    RowBox[{"EdgeList", "[", 
                    "VilCretas`Private`GGrafoAuxiliar7", "]"}], ",", 
                    
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    "VilCretas`Private`GVl13"}]}], "]"}]}]}], ",", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`GVl13", "=", 
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    
                    RowBox[{"PesosAristas", "[", "VilCretas`Private`GGrafo", 
                    "]"}], ",", "1"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"EdgeQ", "[", 
                    RowBox[{"VilCretas`Private`GGrafo", ",", "#1"}], "]"}], 
                    "\[Equal]", "False"}], "&"}]}], "]"}]}], ";", 
                    RowBox[{"VilCretas`Private`GGrafoAuxiliar7", "=", 
                    RowBox[{"Graph", "[", 
                    RowBox[{"VilCretas`Private`GNodos", ",", 
                    
                    RowBox[{"EdgeList", "[", "VilCretas`Private`GGrafo", 
                    "]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    "VilCretas`Private`GVl13"}]}], "]"}]}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"OptionValue", "[", "table", "]"}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"OptionValue", "[", "matriz", "]"}]}], ",", 
                    RowBox[{"MatrixForm", "[", 
                    
                    RowBox[{"WeightedAdjacencyMatrix", "[", 
                    "VilCretas`Private`GGrafoAuxiliar7", "]"}], "]"}], ",", 
                    RowBox[{"Normal", "[", 
                    
                    RowBox[{"WeightedAdjacencyMatrix", "[", 
                    "VilCretas`Private`GGrafoAuxiliar7", "]"}], "]"}]}], 
                    "]"}], ",", 
                    RowBox[{"TableForm", "[", 
                    RowBox[{
                    RowBox[{"Normal", "[", 
                    
                    RowBox[{"WeightedAdjacencyMatrix", "[", 
                    "VilCretas`Private`GGrafoAuxiliar7", "]"}], "]"}], ",", 
                    RowBox[{"TableHeadings", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"#1", ",", "Black"}], "]"}], "&"}], ")"}], "/@", 
                    
                    RowBox[{"VertexList", "[", 
                    "VilCretas`Private`GGrafoAuxiliar7", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"#1", ",", "Black"}], "]"}], "&"}], ")"}], "/@", 
                    
                    RowBox[{"VertexList", "[", 
                    "VilCretas`Private`GGrafoAuxiliar7", "]"}]}]}], "}"}]}], 
                    ",", 
                    RowBox[{"TableAlignments", "\[Rule]", "Center"}]}], 
                    "]"}]}], "]"}]}]}], "]"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"GrafoCQ", "[", "VilCretas`Private`GGrafo", "]"}],
                     ",", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`GVl13", "=", 
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    
                    RowBox[{"PesosAristas", "[", "VilCretas`Private`GGrafo", 
                    "]"}], ",", "1"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ListQ", "[", "#1", "]"}], "\[Equal]", "False"}], 
                    "&"}]}], "]"}]}], ";", 
                    RowBox[{"VilCretas`Private`GGrafoAuxiliar7", "=", 
                    
                    RowBox[{"CombinatoricaToGraph", "[", 
                    "VilCretas`Private`GGrafo", "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"Sort", "[", 
                    
                    RowBox[{"VertexList", "[", 
                    "VilCretas`Private`GGrafoAuxiliar7", "]"}], "]"}], "]"}], 
                    "\[Equal]", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Sort", "[", "VilCretas`Private`GNodos", "]"}], 
                    "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`GGrafoAuxiliar7", "=", 
                    RowBox[{"Grafo", "[", 
                    RowBox[{
                    
                    RowBox[{"Combinatorica`Edges", "[", 
                    "VilCretas`Private`GGrafo", "]"}], ",", 
                    
                    RowBox[{"vertices", "\[Rule]", 
                    "VilCretas`Private`GNodos"}], ",", 
                    RowBox[{"dirigido", "\[Rule]", 
                    RowBox[{"!", 
                    
                    RowBox[{"Combinatorica`UndirectedQ", "[", 
                    "VilCretas`Private`GGrafo", "]"}]}]}], ",", 
                    RowBox[{"pesos", "\[Rule]", "VilCretas`Private`GVl13"}]}],
                     "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"OptionValue", "[", "table", "]"}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"OptionValue", "[", "matriz", "]"}]}], ",", 
                    RowBox[{"MatrixForm", "[", 
                    
                    RowBox[{"WeightedAdjacencyMatrix", "[", 
                    "VilCretas`Private`GGrafoAuxiliar7", "]"}], "]"}], ",", 
                    RowBox[{"Normal", "[", 
                    
                    RowBox[{"WeightedAdjacencyMatrix", "[", 
                    "VilCretas`Private`GGrafoAuxiliar7", "]"}], "]"}]}], 
                    "]"}], ",", 
                    RowBox[{"TableForm", "[", 
                    RowBox[{
                    RowBox[{"Normal", "[", 
                    
                    RowBox[{"WeightedAdjacencyMatrix", "[", 
                    "VilCretas`Private`GGrafoAuxiliar7", "]"}], "]"}], ",", 
                    RowBox[{"TableHeadings", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"#1", ",", "Black"}], "]"}], "&"}], ")"}], "/@", 
                    
                    RowBox[{"VertexList", "[", 
                    "VilCretas`Private`GGrafoAuxiliar7", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"#1", ",", "Black"}], "]"}], "&"}], ")"}], "/@", 
                    
                    RowBox[{"VertexList", "[", 
                    "VilCretas`Private`GGrafoAuxiliar7", "]"}]}]}], "}"}]}], 
                    ",", 
                    RowBox[{"TableAlignments", "\[Rule]", "Center"}]}], 
                    "]"}]}], "]"}]}]}], "]"}]}]}], "]"}]}], "]"}]}], "]"}]}], 
                    "]"}]}], "]"}]}], "]"}]}], "]"}]}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"table", "\[Rule]", "False"}], ",", 
                    RowBox[{"matriz", "\[Rule]", "False"}]}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"VilCretas`MPGrafo\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Recibe un grafo ponderado \[OpenCurlyDoubleQuote]G\
\[CloseCurlyDoubleQuote] y sus v\[EAcute]rtices en un conjunto \
\[OpenCurlyDoubleQuote]Nodos\[CloseCurlyDoubleQuote], devolviendo la \
correspondiente matriz de adyacencia de pesos de acuerdo con el orden de \
\[OpenCurlyDoubleQuote]Nodos\[CloseCurlyDoubleQuote]. El comando brinda la \
opci\[OAcute]n \[OpenCurlyDoubleQuote]table->True\[CloseCurlyDoubleQuote], la \
cual permite mostrar la matriz con un formato de tabla, a\[NTilde]adiendo \
encabezados en filas y columnas con los v\[EAcute]rtices contenidos en el \
orden del conjunto \[OpenCurlyDoubleQuote]Nodos\[CloseCurlyDoubleQuote]. \
Sintaxis: MPGrafo[G, Nodos], o, MPGrafo[G, Nodos, table->True, matriz->True], \
\[OpenCurlyDoubleQuote]matriz->True\[CloseCurlyDoubleQuote] brinda la salida \
como una lista. Por defecto, si el grafo posee aristas m\[UAcute]ltiples, por \
cada una en la entrada correspondiente de la matriz, se muestra la suma de \
los pesos. Si el grafo se gener\[OAcute] con \
\[OpenCurlyDoubleQuote]Combinatorica\[CloseCurlyDoubleQuote] no acepta \
aristas mixtas (dirigidas y no dirigidas).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "Recibe un grafo ponderado \[OpenCurlyDoubleQuote]G\
\[CloseCurlyDoubleQuote] y sus v\[EAcute]rtices en un conjunto \
\[OpenCurlyDoubleQuote]Nodos\[CloseCurlyDoubleQuote], devolviendo la \
correspondiente matriz de adyacencia de pesos de acuerdo con el orden de \
\[OpenCurlyDoubleQuote]Nodos\[CloseCurlyDoubleQuote]. El comando brinda la \
opci\[OAcute]n \[OpenCurlyDoubleQuote]table->True\[CloseCurlyDoubleQuote], la \
cual permite mostrar la matriz con un formato de tabla, a\[NTilde]adiendo \
encabezados en filas y columnas con los v\[EAcute]rtices contenidos en el \
orden del conjunto \[OpenCurlyDoubleQuote]Nodos\[CloseCurlyDoubleQuote]. \
Sintaxis: MPGrafo[G, Nodos], o, MPGrafo[G, Nodos, table->True, matriz->True], \
\[OpenCurlyDoubleQuote]matriz->True\[CloseCurlyDoubleQuote] brinda la salida \
como una lista. Por defecto, si el grafo posee aristas m\[UAcute]ltiples, por \
cada una en la entrada correspondiente de la matriz, se muestra la suma de \
los pesos. Si el grafo se gener\[OAcute] con \
\[OpenCurlyDoubleQuote]Combinatorica\[CloseCurlyDoubleQuote] no acepta \
aristas mixtas (dirigidas y no dirigidas).", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, VilCretas`MPGrafo, {VilCretas`MPGrafo[
         Pattern[VilCretas`Private`GGrafo, 
          Blank[]], 
         Pattern[VilCretas`Private`GNodos, 
          Blank[]], 
         OptionsPattern[]] :> 
       Module[{VilCretas`Private`GGrafoAuxiliar7, VilCretas`Private`GVl13}, 
         If[
          VectorQ[VilCretas`Private`GNodos], 
          If[MemberQ[VilCretas`Private`GNodos, Null] == False, 
           If[VilCretas`Private`GNodos != {}, 
            If[
             And[
              BooleanQ[
               OptionValue[VilCretas`table]], 
              BooleanQ[
               OptionValue[VilCretas`matriz]]], 
             If[MemberQ[{
                 VilCretas`PesosAristas[VilCretas`Private`GGrafo]}, Null] == 
              False, 
              If[
               VilCretas`GrafoQ[VilCretas`Private`GGrafo], 
               If[ToString[
                  Sort[
                   VertexList[VilCretas`Private`GGrafo]]] == ToString[
                  Sort[VilCretas`Private`GNodos]], If[
                  VilCretas`AristasMixtasQ[VilCretas`Private`GGrafo], 
                  VilCretas`Private`GGrafoAuxiliar7 = 
                   Graph[VilCretas`Private`GNodos, 
                    VilCretas`AristasCombinatoricaToWolframSystem[
                    VilCretas`AristasMixtasWolframSystemToCombinatorica[
                    EdgeList[VilCretas`Private`GGrafo]], VilCretas`dirigido -> 
                    True]]; VilCretas`Private`GVl13 = Select[
                    Flatten[
                    VilCretas`PesosAristas[VilCretas`Private`GGrafo], 1], 
                    EdgeQ[VilCretas`Private`GGrafoAuxiliar7, #] == False& ]; 
                  VilCretas`Private`GGrafoAuxiliar7 = 
                   Graph[VilCretas`Private`GNodos, 
                    EdgeList[VilCretas`Private`GGrafoAuxiliar7], EdgeWeight -> 
                    VilCretas`Private`GVl13], VilCretas`Private`GVl13 = Select[
                    Flatten[
                    VilCretas`PesosAristas[VilCretas`Private`GGrafo], 1], 
                    EdgeQ[VilCretas`Private`GGrafo, #] == False& ]; 
                  VilCretas`Private`GGrafoAuxiliar7 = 
                   Graph[VilCretas`Private`GNodos, 
                    EdgeList[VilCretas`Private`GGrafo], EdgeWeight -> 
                    VilCretas`Private`GVl13]]; If[
                  Not[
                   OptionValue[VilCretas`table]], 
                  If[
                   Not[
                    OptionValue[VilCretas`matriz]], 
                   MatrixForm[
                    WeightedAdjacencyMatrix[
                    VilCretas`Private`GGrafoAuxiliar7]], 
                   Normal[
                    WeightedAdjacencyMatrix[
                    VilCretas`Private`GGrafoAuxiliar7]]], 
                  TableForm[
                   Normal[
                    WeightedAdjacencyMatrix[
                    VilCretas`Private`GGrafoAuxiliar7]], TableHeadings -> {
                    Map[Style[#, Black]& , 
                    VertexList[VilCretas`Private`GGrafoAuxiliar7]], 
                    Map[Style[#, Black]& , 
                    VertexList[VilCretas`Private`GGrafoAuxiliar7]]}, 
                   TableAlignments -> Center]]], 
               If[
                VilCretas`GrafoCQ[VilCretas`Private`GGrafo], 
                VilCretas`Private`GVl13 = Select[
                   Flatten[
                    VilCretas`PesosAristas[VilCretas`Private`GGrafo], 1], 
                   ListQ[#] == False& ]; 
                VilCretas`Private`GGrafoAuxiliar7 = 
                 VilCretas`CombinatoricaToGraph[VilCretas`Private`GGrafo]; 
                If[ToString[
                    Sort[
                    VertexList[VilCretas`Private`GGrafoAuxiliar7]]] == 
                  ToString[
                    Sort[VilCretas`Private`GNodos]], 
                  VilCretas`Private`GGrafoAuxiliar7 = VilCretas`Grafo[
                    Combinatorica`Edges[VilCretas`Private`GGrafo], 
                    VilCretas`vertices -> VilCretas`Private`GNodos, 
                    VilCretas`dirigido -> Not[
                    Combinatorica`UndirectedQ[VilCretas`Private`GGrafo]], 
                    VilCretas`pesos -> VilCretas`Private`GVl13]; If[
                    Not[
                    OptionValue[VilCretas`table]], 
                    If[
                    Not[
                    OptionValue[VilCretas`matriz]], 
                    MatrixForm[
                    WeightedAdjacencyMatrix[
                    VilCretas`Private`GGrafoAuxiliar7]], 
                    Normal[
                    WeightedAdjacencyMatrix[
                    VilCretas`Private`GGrafoAuxiliar7]]], 
                    TableForm[
                    Normal[
                    WeightedAdjacencyMatrix[
                    VilCretas`Private`GGrafoAuxiliar7]], TableHeadings -> {
                    Map[Style[#, Black]& , 
                    VertexList[VilCretas`Private`GGrafoAuxiliar7]], 
                    Map[Style[#, Black]& , 
                    VertexList[VilCretas`Private`GGrafoAuxiliar7]]}, 
                    TableAlignments -> Center]]]]]]]]]]]}], "SubValues" -> 
    None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {VilCretas`table -> False, VilCretas`matriz -> False}, 
    "Attributes" -> {Protected}, "FullName" -> "VilCretas`MPGrafo"|>, 
   False]]], "Output",
 CellChangeTimes->{3.9683528218512936`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"a6c2b35a-0aeb-2e43-a8c4-1a2e2bb8774b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MPGrafo", "[", 
  RowBox[{"gra1", ",", " ", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e"}], "}"}], ",", " ", 
   RowBox[{"table", "->", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.968352842208948*^9, 3.9683528608067017`*^9}, {
  3.968352978220545*^9, 3.9683529813413525`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"6f5f2fc6-29ad-b540-aa1b-a1417933fff1"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox[
       StyleBox["a",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], 
      TagBox[
       StyleBox["b",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], 
      TagBox[
       StyleBox["c",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], 
      TagBox[
       StyleBox["d",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], 
      TagBox[
       StyleBox["e",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm]},
     {
      TagBox[
       StyleBox["a",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], "0", "7", "5", "0", "2"},
     {
      TagBox[
       StyleBox["b",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], "7", "0", "8", "3", "14"},
     {
      TagBox[
       StyleBox["c",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], "5", "8", "4", "6", "2"},
     {
      TagBox[
       StyleBox["d",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], "0", "3", "6", "6", "2"},
     {
      TagBox[
       StyleBox["e",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], "2", "14", "2", "2", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, 
      "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$, TableHeadings -> {{
       Style[$CellContext`a, 
        GrayLevel[0]], 
       Style[$CellContext`b, 
        GrayLevel[0]], 
       Style[$CellContext`c, 
        GrayLevel[0]], 
       Style[$CellContext`d, 
        GrayLevel[0]], 
       Style[$CellContext`e, 
        GrayLevel[0]]}, {
       Style[$CellContext`a, 
        GrayLevel[0]], 
       Style[$CellContext`b, 
        GrayLevel[0]], 
       Style[$CellContext`c, 
        GrayLevel[0]], 
       Style[$CellContext`d, 
        GrayLevel[0]], 
       Style[$CellContext`e, 
        GrayLevel[0]]}}, TableAlignments -> Center]]]], "Output",
 CellChangeTimes->{{3.9683528492203865`*^9, 3.968352861989643*^9}, 
   3.9683529818946724`*^9},
 CellLabel->
  "Out[10]//TableForm=",ExpressionUUID->"3beaa628-6f34-804e-88df-\
996102a5a4e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListaVertices", "[", "gra1", "]"}]], "Input",
 CellChangeTimes->{{3.96835287761866*^9, 3.9683528882762356`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"eddfcd71-c65b-a841-aa22-08385d42bd23"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e"}], "}"}]], "Output",
 CellChangeTimes->{3.9683528887496414`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"e55ea84d-164f-b343-b6e4-ef9fc8c03d05"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CantAristas", "[", "gra1", "]"}]], "Input",
 CellChangeTimes->{{3.9683528945875206`*^9, 3.9683529003799343`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"5b8b49f9-6026-4940-a43f-cab56811c75c"],

Cell[BoxData["11"], "Output",
 CellChangeTimes->{3.96835290093668*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"8c7793ac-74b9-7543-9efe-4cb82c053af5"]
}, Open  ]],

Cell["Matriz de incidencia", "Text",
 CellChangeTimes->{{3.968353200938221*^9, 
  3.9683532060270023`*^9}},ExpressionUUID->"99cc0cd8-22f6-3946-abd0-\
d1292d6dbcfa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "MIGrafo"}]], "Input",
 CellChangeTimes->{{3.968353023034815*^9, 3.9683530271485786`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"b38a5954-13a9-e646-a231-b86fb2eb0218"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Recibe un grafo \[OpenCurlyDoubleQuote]G\
\[CloseCurlyDoubleQuote] y sus v\[EAcute]rtices en un conjunto \
\[OpenCurlyDoubleQuote]Nodos\[CloseCurlyDoubleQuote], retornando la \
correspondiente matriz de incidencia de acuerdo con el orden de \
\[OpenCurlyDoubleQuote]Nodos\[CloseCurlyDoubleQuote]. La instrucci\[OAcute]n \
presenta dos opciones: \[OpenCurlyDoubleQuote]edgesgraph->L\
\[CloseCurlyDoubleQuote] y \[OpenCurlyDoubleQuote]table->True\
\[CloseCurlyDoubleQuote]. \[OpenCurlyDoubleQuote]L\[CloseCurlyDoubleQuote] \
contiene todos los lados del grafo, definiendo un orden espec\[IAcute]fico a \
trav\[EAcute]s del cual, se mostrar\[AAcute] la matriz de incidencia. Si el \
usuario no utiliza esta opci\[OAcute]n, el software Mathematica escoge por \
defecto el orden de los lados. \[OpenCurlyDoubleQuote]table\
\[CloseCurlyDoubleQuote] permite mostrar la matriz con un formato de tabla, a\
\[NTilde]adiendo encabezados en las filas con los v\[EAcute]rtices contenidos \
en el orden del conjunto \[OpenCurlyDoubleQuote]Nodos\[CloseCurlyDoubleQuote] \
y en las columnas con los lados del grafo de acuerdo al orden de la lista \
\[OpenCurlyDoubleQuote]L\[CloseCurlyDoubleQuote]. Si no se emplea la opci\
\[OAcute]n \[OpenCurlyDoubleQuote]edgesgraph\[CloseCurlyDoubleQuote], las \
columnas de la tabla tendr\[AAcute]n como etiquetas los lados del grafo en el \
orden interno que por oficio escogi\[OAcute] el software. Sintaxis: \
MIGrafo[G, Nodos], o, MIGrafo[G, Nodos, edgesgraph->L, table->True, \
matriz->True], \[OpenCurlyDoubleQuote]matriz->True\[CloseCurlyDoubleQuote] \
brinda la salida como una lista. Si el grafo tiene aristas mixtas (dirigidas \
y no dirigidas) al cambiar el orden de los lados se deben tomar como \
dirigidos, esta posibilidad no es v\[AAcute]lida si el grafo se \
gener\[OAcute] con \[OpenCurlyDoubleQuote]Combinatorica\
\[CloseCurlyDoubleQuote] (no acepta aristas mixtas).\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"MIGrafo", "[", 
                    
                    RowBox[{
                    "VilCretas`Private`GGrafo_", ",", 
                    "VilCretas`Private`GNodos_", ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"VilCretas`Private`GGrafoAuxiliar9", ",", 
                    "VilCretas`Private`GMatriz2", ",", 
                    RowBox[{"VilCretas`Private`GVl17", "=", "True"}]}], "}"}],
                     ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"VectorQ", "[", "VilCretas`Private`GNodos", "]"}],
                     ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"VilCretas`Private`GNodos", ",", "Null"}], "]"}], 
                    "\[Equal]", "False"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"ToString", "[", "VilCretas`Private`GNodos", 
                    "]"}], "\[NotEqual]", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"{", "}"}], "]"}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"BooleanQ", "[", 
                    RowBox[{"OptionValue", "[", "table", "]"}], "]"}], "&&", 
                    RowBox[{"BooleanQ", "[", 
                    RowBox[{"OptionValue", "[", "matriz", "]"}], "]"}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"MatrixQ", "[", 
                    RowBox[{"OptionValue", "[", "edgesgraph", "]"}], "]"}], 
                    "||", 
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"OptionValue", "[", "edgesgraph", "]"}], "]"}], 
                    "\[Equal]", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"{", "}"}], "]"}]}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"ToCharacterCode", "[", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"OptionValue", "[", "edgesgraph", "]"}], "]"}], 
                    "]"}], ",", "62760"}], "]"}], "\[Equal]", "False"}], "||", 
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"OptionValue", "[", "edgesgraph", "]"}], "]"}], 
                    "\[Equal]", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"{", "}"}], "]"}]}]}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"OptionValue", "[", "edgesgraph", "]"}], "]"}], 
                    "\[NotEqual]", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"{", "}"}], "]"}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Dimensions", "[", 
                    RowBox[{"OptionValue", "[", "edgesgraph", "]"}], "]"}], 
                    "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                    "\[NotEqual]", "2"}], ",", 
                    RowBox[{"VilCretas`Private`GVl17", "=", "False"}]}], 
                    "]"}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"VilCretas`Private`GVl17", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"OptionValue", "[", "edgesgraph", "]"}], "]"}], 
                    ",", "Null"}], "]"}], "\[Equal]", "False"}], "||", 
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"OptionValue", "[", "edgesgraph", "]"}], "]"}], 
                    "\[Equal]", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"{", "}"}], "]"}]}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"GrafoQ", "[", "VilCretas`Private`GGrafo", "]"}], 
                    ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    
                    RowBox[{"EdgeList", "[", "VilCretas`Private`GGrafo", 
                    "]"}], "]"}], "\[NotEqual]", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"{", "}"}], "]"}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    
                    RowBox[{"AristasMixtasQ", "[", "VilCretas`Private`GGrafo",
                     "]"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"Sort", "[", 
                    RowBox[{"OptionValue", "[", "edgesgraph", "]"}], "]"}], 
                    "]"}], "\[Equal]", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Sort", "[", 
                    RowBox[{"AristasMixtasWolframSystemToCombinatorica", "[", 
                    
                    RowBox[{"EdgeList", "[", "VilCretas`Private`GGrafo", 
                    "]"}], "]"}], "]"}], "]"}]}], "||", 
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"OptionValue", "[", "edgesgraph", "]"}], "]"}], 
                    "\[Equal]", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"{", "}"}], "]"}]}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"Sort", "[", 
                    
                    RowBox[{"VertexList", "[", "VilCretas`Private`GGrafo", 
                    "]"}], "]"}], "]"}], "\[Equal]", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Sort", "[", "VilCretas`Private`GNodos", "]"}], 
                    "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"OptionValue", "[", "edgesgraph", "]"}], "]"}], 
                    "\[NotEqual]", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"{", "}"}], "]"}]}], ",", 
                    RowBox[{"VilCretas`Private`GGrafoAuxiliar9", "=", 
                    RowBox[{"Grafo", "[", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "edgesgraph", "]"}], ",", 
                    
                    RowBox[{"vertices", "\[Rule]", 
                    "VilCretas`Private`GNodos"}], ",", 
                    RowBox[{"dirigido", "\[Rule]", "True"}]}], "]"}]}], ",", 
                    RowBox[{"VilCretas`Private`GGrafoAuxiliar9", "=", 
                    RowBox[{"Graph", "[", 
                    RowBox[{"VilCretas`Private`GNodos", ",", 
                    
                    RowBox[{"EdgeList", "[", "VilCretas`Private`GGrafo", 
                    "]"}]}], "]"}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"OptionValue", "[", "table", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`GMatriz2", "=", 
                    RowBox[{"Normal", "[", 
                    RowBox[{"IncidenceMatrix", "[", 
                    "VilCretas`Private`GGrafoAuxiliar9", "]"}], "]"}]}], ";", 
                    RowBox[{"VilCretas`Private`GMatriz2", "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    
                    RowBox[{"GrafoDirigidoQ", "[", 
                    "VilCretas`Private`GGrafoAuxiliar9", "]"}], ",", 
                    RowBox[{"Replace", "[", 
                    RowBox[{"VilCretas`Private`GMatriz2", ",", 
                    RowBox[{"2", "\[Rule]", 
                    RowBox[{"-", "1"}]}], ",", "2"}], "]"}], ",", 
                    RowBox[{"Replace", "[", 
                    RowBox[{"VilCretas`Private`GMatriz2", ",", 
                    RowBox[{"2", "\[Rule]", "1"}], ",", "2"}], "]"}]}], 
                    "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"OptionValue", "[", "matriz", "]"}]}], ",", 
                    
                    RowBox[{"MatrixForm", "[", "VilCretas`Private`GMatriz2", 
                    "]"}], ",", "VilCretas`Private`GMatriz2"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`GMatriz2", "=", 
                    RowBox[{"Normal", "[", 
                    
                    RowBox[{"IncidenceMatrix", "[", 
                    "VilCretas`Private`GGrafoAuxiliar9", "]"}], "]"}]}], ";", 
                    RowBox[{"VilCretas`Private`GMatriz2", "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    
                    RowBox[{"GrafoDirigidoQ", "[", 
                    "VilCretas`Private`GGrafoAuxiliar9", "]"}], ",", 
                    RowBox[{"Replace", "[", 
                    RowBox[{"VilCretas`Private`GMatriz2", ",", 
                    RowBox[{"2", "\[Rule]", 
                    RowBox[{"-", "1"}]}], ",", "2"}], "]"}], ",", 
                    RowBox[{"Replace", "[", 
                    RowBox[{"VilCretas`Private`GMatriz2", ",", 
                    RowBox[{"2", "\[Rule]", "1"}], ",", "2"}], "]"}]}], 
                    "]"}]}], ";", 
                    RowBox[{"TableForm", "[", 
                    RowBox[{"VilCretas`Private`GMatriz2", ",", 
                    RowBox[{"TableHeadings", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"#1", ",", "Black"}], "]"}], "&"}], ")"}], "/@", 
                    
                    RowBox[{"VertexList", "[", 
                    "VilCretas`Private`GGrafoAuxiliar9", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"#1", ",", "Black"}], "]"}], "&"}], ")"}], "/@", 
                    
                    RowBox[{"EdgeList", "[", 
                    "VilCretas`Private`GGrafoAuxiliar9", "]"}]}]}], "}"}]}], 
                    ",", 
                    RowBox[{"TableAlignments", "\[Rule]", "Center"}]}], 
                    "]"}]}]}], "]"}]}]}], "]"}]}], "]"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"Sort", "[", 
                    RowBox[{"OptionValue", "[", "edgesgraph", "]"}], "]"}], 
                    "]"}], "\[Equal]", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Sort", "[", 
                    RowBox[{"AristasWolframSystemToCombinatorica", "[", 
                    
                    RowBox[{"EdgeList", "[", "VilCretas`Private`GGrafo", 
                    "]"}], "]"}], "]"}], "]"}]}], "||", 
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"OptionValue", "[", "edgesgraph", "]"}], "]"}], 
                    "\[Equal]", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"{", "}"}], "]"}]}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"Sort", "[", 
                    
                    RowBox[{"VertexList", "[", "VilCretas`Private`GGrafo", 
                    "]"}], "]"}], "]"}], "\[Equal]", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Sort", "[", "VilCretas`Private`GNodos", "]"}], 
                    "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"OptionValue", "[", "edgesgraph", "]"}], "]"}], 
                    "\[NotEqual]", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"{", "}"}], "]"}]}], ",", 
                    RowBox[{"VilCretas`Private`GGrafoAuxiliar9", "=", 
                    RowBox[{"Grafo", "[", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "edgesgraph", "]"}], ",", 
                    
                    RowBox[{"vertices", "\[Rule]", 
                    "VilCretas`Private`GNodos"}], ",", 
                    RowBox[{"dirigido", "\[Rule]", 
                    RowBox[{"!", 
                    
                    RowBox[{"UndirectedGraphQ", "[", 
                    "VilCretas`Private`GGrafo", "]"}]}]}]}], "]"}]}], ",", 
                    RowBox[{"VilCretas`Private`GGrafoAuxiliar9", "=", 
                    RowBox[{"Graph", "[", 
                    RowBox[{"VilCretas`Private`GNodos", ",", 
                    
                    RowBox[{"EdgeList", "[", "VilCretas`Private`GGrafo", 
                    "]"}]}], "]"}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"OptionValue", "[", "table", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`GMatriz2", "=", 
                    RowBox[{"Normal", "[", 
                    
                    RowBox[{"IncidenceMatrix", "[", 
                    "VilCretas`Private`GGrafoAuxiliar9", "]"}], "]"}]}], ";", 
                    RowBox[{"VilCretas`Private`GMatriz2", "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    
                    RowBox[{"GrafoDirigidoQ", "[", 
                    "VilCretas`Private`GGrafoAuxiliar9", "]"}], ",", 
                    RowBox[{"Replace", "[", 
                    RowBox[{"VilCretas`Private`GMatriz2", ",", 
                    RowBox[{"2", "\[Rule]", 
                    RowBox[{"-", "1"}]}], ",", "2"}], "]"}], ",", 
                    RowBox[{"Replace", "[", 
                    RowBox[{"VilCretas`Private`GMatriz2", ",", 
                    RowBox[{"2", "\[Rule]", "1"}], ",", "2"}], "]"}]}], 
                    "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"OptionValue", "[", "matriz", "]"}]}], ",", 
                    
                    RowBox[{"MatrixForm", "[", "VilCretas`Private`GMatriz2", 
                    "]"}], ",", "VilCretas`Private`GMatriz2"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`GMatriz2", "=", 
                    RowBox[{"Normal", "[", 
                    
                    RowBox[{"IncidenceMatrix", "[", 
                    "VilCretas`Private`GGrafoAuxiliar9", "]"}], "]"}]}], ";", 
                    RowBox[{"VilCretas`Private`GMatriz2", "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    
                    RowBox[{"GrafoDirigidoQ", "[", 
                    "VilCretas`Private`GGrafoAuxiliar9", "]"}], ",", 
                    RowBox[{"Replace", "[", 
                    RowBox[{"VilCretas`Private`GMatriz2", ",", 
                    RowBox[{"2", "\[Rule]", 
                    RowBox[{"-", "1"}]}], ",", "2"}], "]"}], ",", 
                    RowBox[{"Replace", "[", 
                    RowBox[{"VilCretas`Private`GMatriz2", ",", 
                    RowBox[{"2", "\[Rule]", "1"}], ",", "2"}], "]"}]}], 
                    "]"}]}], ";", 
                    RowBox[{"TableForm", "[", 
                    RowBox[{"VilCretas`Private`GMatriz2", ",", 
                    RowBox[{"TableHeadings", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"#1", ",", "Black"}], "]"}], "&"}], ")"}], "/@", 
                    
                    RowBox[{"VertexList", "[", 
                    "VilCretas`Private`GGrafoAuxiliar9", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"#1", ",", "Black"}], "]"}], "&"}], ")"}], "/@", 
                    
                    RowBox[{"EdgeList", "[", 
                    "VilCretas`Private`GGrafoAuxiliar9", "]"}]}]}], "}"}]}], 
                    ",", 
                    RowBox[{"TableAlignments", "\[Rule]", "Center"}]}], 
                    "]"}]}]}], "]"}]}]}], "]"}]}], "]"}]}], "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"GrafoCQ", "[", "VilCretas`Private`GGrafo", "]"}],
                     ",", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`GGrafoAuxiliar9", "=", 
                    
                    RowBox[{"CombinatoricaToGraph", "[", 
                    "VilCretas`Private`GGrafo", "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    
                    RowBox[{"EdgeList", "[", 
                    "VilCretas`Private`GGrafoAuxiliar9", "]"}], "]"}], 
                    "\[NotEqual]", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"{", "}"}], "]"}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"Sort", "[", 
                    RowBox[{"OptionValue", "[", "edgesgraph", "]"}], "]"}], 
                    "]"}], "\[Equal]", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Sort", "[", 
                    RowBox[{"AristasWolframSystemToCombinatorica", "[", 
                    
                    RowBox[{"EdgeList", "[", 
                    "VilCretas`Private`GGrafoAuxiliar9", "]"}], "]"}], "]"}], 
                    "]"}]}], "||", 
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"OptionValue", "[", "edgesgraph", "]"}], "]"}], 
                    "\[Equal]", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"{", "}"}], "]"}]}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"Sort", "[", 
                    
                    RowBox[{"VertexList", "[", 
                    "VilCretas`Private`GGrafoAuxiliar9", "]"}], "]"}], "]"}], 
                    "\[Equal]", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Sort", "[", "VilCretas`Private`GNodos", "]"}], 
                    "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"OptionValue", "[", "edgesgraph", "]"}], "]"}], 
                    "\[NotEqual]", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"{", "}"}], "]"}]}], ",", 
                    RowBox[{"VilCretas`Private`GGrafoAuxiliar9", "=", 
                    RowBox[{"Grafo", "[", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "edgesgraph", "]"}], ",", 
                    
                    RowBox[{"vertices", "\[Rule]", 
                    "VilCretas`Private`GNodos"}], ",", 
                    RowBox[{"dirigido", "\[Rule]", 
                    RowBox[{"!", 
                    
                    RowBox[{"Combinatorica`UndirectedQ", "[", 
                    "VilCretas`Private`GGrafo", "]"}]}]}]}], "]"}]}], ",", 
                    RowBox[{"VilCretas`Private`GGrafoAuxiliar9", "=", 
                    RowBox[{"Grafo", "[", 
                    RowBox[{
                    
                    RowBox[{"Combinatorica`Edges", "[", 
                    "VilCretas`Private`GGrafo", "]"}], ",", 
                    RowBox[{"vertices", "\[Rule]", 
                    "VilCretas`Private`GNodos"}], ",", 
                    RowBox[{"dirigido", "\[Rule]", 
                    RowBox[{"!", 
                    
                    RowBox[{"Combinatorica`UndirectedQ", "[", 
                    "VilCretas`Private`GGrafo", "]"}]}]}]}], "]"}]}]}], 
                    "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"OptionValue", "[", "table", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`GMatriz2", "=", 
                    RowBox[{"Normal", "[", 
                    
                    RowBox[{"IncidenceMatrix", "[", 
                    "VilCretas`Private`GGrafoAuxiliar9", "]"}], "]"}]}], ";", 
                    RowBox[{"VilCretas`Private`GMatriz2", "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    
                    RowBox[{"GrafoDirigidoQ", "[", 
                    "VilCretas`Private`GGrafoAuxiliar9", "]"}], ",", 
                    RowBox[{"Replace", "[", 
                    RowBox[{"VilCretas`Private`GMatriz2", ",", 
                    RowBox[{"2", "\[Rule]", 
                    RowBox[{"-", "1"}]}], ",", "2"}], "]"}], ",", 
                    RowBox[{"Replace", "[", 
                    RowBox[{"VilCretas`Private`GMatriz2", ",", 
                    RowBox[{"2", "\[Rule]", "1"}], ",", "2"}], "]"}]}], 
                    "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"OptionValue", "[", "matriz", "]"}]}], ",", 
                    
                    RowBox[{"MatrixForm", "[", "VilCretas`Private`GMatriz2", 
                    "]"}], ",", "VilCretas`Private`GMatriz2"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`GMatriz2", "=", 
                    RowBox[{"Normal", "[", 
                    
                    RowBox[{"IncidenceMatrix", "[", 
                    "VilCretas`Private`GGrafoAuxiliar9", "]"}], "]"}]}], ";", 
                    RowBox[{"VilCretas`Private`GMatriz2", "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    
                    RowBox[{"GrafoDirigidoQ", "[", 
                    "VilCretas`Private`GGrafoAuxiliar9", "]"}], ",", 
                    RowBox[{"Replace", "[", 
                    RowBox[{"VilCretas`Private`GMatriz2", ",", 
                    RowBox[{"2", "\[Rule]", 
                    RowBox[{"-", "1"}]}], ",", "2"}], "]"}], ",", 
                    RowBox[{"Replace", "[", 
                    RowBox[{"VilCretas`Private`GMatriz2", ",", 
                    RowBox[{"2", "\[Rule]", "1"}], ",", "2"}], "]"}]}], 
                    "]"}]}], ";", 
                    RowBox[{"TableForm", "[", 
                    RowBox[{"VilCretas`Private`GMatriz2", ",", 
                    RowBox[{"TableHeadings", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"#1", ",", "Black"}], "]"}], "&"}], ")"}], "/@", 
                    
                    RowBox[{"VertexList", "[", 
                    "VilCretas`Private`GGrafoAuxiliar9", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"#1", ",", "Black"}], "]"}], "&"}], ")"}], "/@", 
                    RowBox[{"EdgeList", "[", 
                    "VilCretas`Private`GGrafoAuxiliar9", "]"}]}]}], "}"}]}], 
                    ",", 
                    RowBox[{"TableAlignments", "\[Rule]", "Center"}]}], 
                    "]"}]}]}], "]"}]}]}], "]"}]}], "]"}]}], "]"}]}]}], 
                    "]"}]}], "]"}]}], "]"}]}], "]"}]}]}], "]"}]}], "]"}]}], 
                    "]"}]}], "]"}]}], "]"}]}], "]"}]}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"edgesgraph", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"table", "\[Rule]", "False"}], ",", 
                    RowBox[{"matriz", "\[Rule]", "False"}]}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"VilCretas`MIGrafo\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Recibe un grafo \[OpenCurlyDoubleQuote]G\
\[CloseCurlyDoubleQuote] y sus v\[EAcute]rtices en un conjunto \
\[OpenCurlyDoubleQuote]Nodos\[CloseCurlyDoubleQuote], retornando la \
correspondiente matriz de incidencia de acuerdo con el orden de \
\[OpenCurlyDoubleQuote]Nodos\[CloseCurlyDoubleQuote]. La instrucci\[OAcute]n \
presenta dos opciones: \[OpenCurlyDoubleQuote]edgesgraph->L\
\[CloseCurlyDoubleQuote] y \[OpenCurlyDoubleQuote]table->True\
\[CloseCurlyDoubleQuote]. \[OpenCurlyDoubleQuote]L\[CloseCurlyDoubleQuote] \
contiene todos los lados del grafo, definiendo un orden espec\[IAcute]fico a \
trav\[EAcute]s del cual, se mostrar\[AAcute] la matriz de incidencia. Si el \
usuario no utiliza esta opci\[OAcute]n, el software Mathematica escoge por \
defecto el orden de los lados. \[OpenCurlyDoubleQuote]table\
\[CloseCurlyDoubleQuote] permite mostrar la matriz con un formato de tabla, a\
\[NTilde]adiendo encabezados en las filas con los v\[EAcute]rtices contenidos \
en el orden del conjunto \[OpenCurlyDoubleQuote]Nodos\[CloseCurlyDoubleQuote] \
y en las columnas con los lados del grafo de acuerdo al orden de la lista \
\[OpenCurlyDoubleQuote]L\[CloseCurlyDoubleQuote]. Si no se emplea la opci\
\[OAcute]n \[OpenCurlyDoubleQuote]edgesgraph\[CloseCurlyDoubleQuote], las \
columnas de la tabla tendr\[AAcute]n como etiquetas los lados del grafo en el \
orden interno que por oficio escogi\[OAcute] el software. Sintaxis: \
MIGrafo[G, Nodos], o, MIGrafo[G, Nodos, edgesgraph->L, table->True, \
matriz->True], \[OpenCurlyDoubleQuote]matriz->True\[CloseCurlyDoubleQuote] \
brinda la salida como una lista. Si el grafo tiene aristas mixtas (dirigidas \
y no dirigidas) al cambiar el orden de los lados se deben tomar como \
dirigidos, esta posibilidad no es v\[AAcute]lida si el grafo se \
gener\[OAcute] con \[OpenCurlyDoubleQuote]Combinatorica\
\[CloseCurlyDoubleQuote] (no acepta aristas mixtas).\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "Recibe un grafo \[OpenCurlyDoubleQuote]G\[CloseCurlyDoubleQuote] y sus v\
\[EAcute]rtices en un conjunto \[OpenCurlyDoubleQuote]Nodos\
\[CloseCurlyDoubleQuote], retornando la correspondiente matriz de incidencia \
de acuerdo con el orden de \[OpenCurlyDoubleQuote]Nodos\
\[CloseCurlyDoubleQuote]. La instrucci\[OAcute]n presenta dos opciones: \
\[OpenCurlyDoubleQuote]edgesgraph->L\[CloseCurlyDoubleQuote] y \
\[OpenCurlyDoubleQuote]table->True\[CloseCurlyDoubleQuote]. \
\[OpenCurlyDoubleQuote]L\[CloseCurlyDoubleQuote] contiene todos los lados del \
grafo, definiendo un orden espec\[IAcute]fico a trav\[EAcute]s del cual, se \
mostrar\[AAcute] la matriz de incidencia. Si el usuario no utiliza esta opci\
\[OAcute]n, el software Mathematica escoge por defecto el orden de los lados. \
\[OpenCurlyDoubleQuote]table\[CloseCurlyDoubleQuote] permite mostrar la \
matriz con un formato de tabla, a\[NTilde]adiendo encabezados en las filas \
con los v\[EAcute]rtices contenidos en el orden del conjunto \
\[OpenCurlyDoubleQuote]Nodos\[CloseCurlyDoubleQuote] y en las columnas con \
los lados del grafo de acuerdo al orden de la lista \[OpenCurlyDoubleQuote]L\
\[CloseCurlyDoubleQuote]. Si no se emplea la opci\[OAcute]n \
\[OpenCurlyDoubleQuote]edgesgraph\[CloseCurlyDoubleQuote], las columnas de la \
tabla tendr\[AAcute]n como etiquetas los lados del grafo en el orden interno \
que por oficio escogi\[OAcute] el software. Sintaxis: MIGrafo[G, Nodos], o, \
MIGrafo[G, Nodos, edgesgraph->L, table->True, matriz->True], \
\[OpenCurlyDoubleQuote]matriz->True\[CloseCurlyDoubleQuote] brinda la salida \
como una lista. Si el grafo tiene aristas mixtas (dirigidas y no dirigidas) \
al cambiar el orden de los lados se deben tomar como dirigidos, esta \
posibilidad no es v\[AAcute]lida si el grafo se gener\[OAcute] con \
\[OpenCurlyDoubleQuote]Combinatorica\[CloseCurlyDoubleQuote] (no acepta \
aristas mixtas).", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> 
    None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, VilCretas`MIGrafo, {VilCretas`MIGrafo[
         Pattern[VilCretas`Private`GGrafo, 
          Blank[]], 
         Pattern[VilCretas`Private`GNodos, 
          Blank[]], 
         OptionsPattern[]] :> 
       Module[{VilCretas`Private`GGrafoAuxiliar9, VilCretas`Private`GMatriz2, 
          VilCretas`Private`GVl17 = True}, 
         If[
          VectorQ[VilCretas`Private`GNodos], 
          If[MemberQ[VilCretas`Private`GNodos, Null] == False, 
           If[ToString[VilCretas`Private`GNodos] != ToString[{}], 
            If[
             And[
              BooleanQ[
               OptionValue[VilCretas`table]], 
              BooleanQ[
               OptionValue[VilCretas`matriz]]], 
             If[
              Or[
               MatrixQ[
                OptionValue[VilCretas`edgesgraph]], ToString[
                 OptionValue[VilCretas`edgesgraph]] == ToString[{}]], 
              If[
               Or[MemberQ[
                  ToCharacterCode[
                   ToString[
                    OptionValue[VilCretas`edgesgraph]]], 62760] == False, 
                ToString[
                  OptionValue[VilCretas`edgesgraph]] == ToString[{}]], 
               If[ToString[
                   OptionValue[VilCretas`edgesgraph]] != ToString[{}], 
                 If[Part[
                    Dimensions[
                    OptionValue[VilCretas`edgesgraph]], 2] != 2, 
                  VilCretas`Private`GVl17 = False]]; 
               If[VilCretas`Private`GVl17, 
                 If[
                  Or[MemberQ[
                    Flatten[
                    OptionValue[VilCretas`edgesgraph]], Null] == False, 
                   ToString[
                    OptionValue[VilCretas`edgesgraph]] == ToString[{}]], 
                  If[
                   VilCretas`GrafoQ[VilCretas`Private`GGrafo], 
                   If[ToString[
                    EdgeList[VilCretas`Private`GGrafo]] != ToString[{}], 
                    If[
                    VilCretas`AristasMixtasQ[VilCretas`Private`GGrafo], 
                    If[
                    Or[ToString[
                    Sort[
                    OptionValue[VilCretas`edgesgraph]]] == ToString[
                    Sort[
                    VilCretas`AristasMixtasWolframSystemToCombinatorica[
                    EdgeList[VilCretas`Private`GGrafo]]]], ToString[
                    OptionValue[VilCretas`edgesgraph]] == ToString[{}]], 
                    If[ToString[
                    Sort[
                    VertexList[VilCretas`Private`GGrafo]]] == ToString[
                    Sort[VilCretas`Private`GNodos]], If[ToString[
                    OptionValue[VilCretas`edgesgraph]] != ToString[{}], 
                    VilCretas`Private`GGrafoAuxiliar9 = VilCretas`Grafo[
                    OptionValue[VilCretas`edgesgraph], VilCretas`vertices -> 
                    VilCretas`Private`GNodos, VilCretas`dirigido -> True], 
                    VilCretas`Private`GGrafoAuxiliar9 = 
                    Graph[VilCretas`Private`GNodos, 
                    EdgeList[VilCretas`Private`GGrafo]]]; If[
                    Not[
                    OptionValue[VilCretas`table]], 
                    VilCretas`Private`GMatriz2 = Normal[
                    IncidenceMatrix[VilCretas`Private`GGrafoAuxiliar9]]; 
                    VilCretas`Private`GMatriz2 = If[
                    VilCretas`GrafoDirigidoQ[
                    VilCretas`Private`GGrafoAuxiliar9], 
                    Replace[VilCretas`Private`GMatriz2, 2 -> -1, 2], 
                    Replace[VilCretas`Private`GMatriz2, 2 -> 1, 2]]; If[
                    Not[
                    OptionValue[VilCretas`matriz]], 
                    MatrixForm[VilCretas`Private`GMatriz2], 
                    VilCretas`Private`GMatriz2], 
                    VilCretas`Private`GMatriz2 = Normal[
                    IncidenceMatrix[VilCretas`Private`GGrafoAuxiliar9]]; 
                    VilCretas`Private`GMatriz2 = If[
                    VilCretas`GrafoDirigidoQ[
                    VilCretas`Private`GGrafoAuxiliar9], 
                    Replace[VilCretas`Private`GMatriz2, 2 -> -1, 2], 
                    Replace[VilCretas`Private`GMatriz2, 2 -> 1, 2]]; 
                    TableForm[VilCretas`Private`GMatriz2, TableHeadings -> {
                    Map[Style[#, Black]& , 
                    VertexList[VilCretas`Private`GGrafoAuxiliar9]], 
                    Map[Style[#, Black]& , 
                    EdgeList[VilCretas`Private`GGrafoAuxiliar9]]}, 
                    TableAlignments -> Center]]]], 
                    If[
                    Or[ToString[
                    Sort[
                    OptionValue[VilCretas`edgesgraph]]] == ToString[
                    Sort[
                    VilCretas`AristasWolframSystemToCombinatorica[
                    EdgeList[VilCretas`Private`GGrafo]]]], ToString[
                    OptionValue[VilCretas`edgesgraph]] == ToString[{}]], 
                    If[ToString[
                    Sort[
                    VertexList[VilCretas`Private`GGrafo]]] == ToString[
                    Sort[VilCretas`Private`GNodos]], If[ToString[
                    OptionValue[VilCretas`edgesgraph]] != ToString[{}], 
                    VilCretas`Private`GGrafoAuxiliar9 = VilCretas`Grafo[
                    OptionValue[VilCretas`edgesgraph], VilCretas`vertices -> 
                    VilCretas`Private`GNodos, VilCretas`dirigido -> Not[
                    UndirectedGraphQ[VilCretas`Private`GGrafo]]], 
                    VilCretas`Private`GGrafoAuxiliar9 = 
                    Graph[VilCretas`Private`GNodos, 
                    EdgeList[VilCretas`Private`GGrafo]]]; If[
                    Not[
                    OptionValue[VilCretas`table]], 
                    VilCretas`Private`GMatriz2 = Normal[
                    IncidenceMatrix[VilCretas`Private`GGrafoAuxiliar9]]; 
                    VilCretas`Private`GMatriz2 = If[
                    VilCretas`GrafoDirigidoQ[
                    VilCretas`Private`GGrafoAuxiliar9], 
                    Replace[VilCretas`Private`GMatriz2, 2 -> -1, 2], 
                    Replace[VilCretas`Private`GMatriz2, 2 -> 1, 2]]; If[
                    Not[
                    OptionValue[VilCretas`matriz]], 
                    MatrixForm[VilCretas`Private`GMatriz2], 
                    VilCretas`Private`GMatriz2], 
                    VilCretas`Private`GMatriz2 = Normal[
                    IncidenceMatrix[VilCretas`Private`GGrafoAuxiliar9]]; 
                    VilCretas`Private`GMatriz2 = If[
                    VilCretas`GrafoDirigidoQ[
                    VilCretas`Private`GGrafoAuxiliar9], 
                    Replace[VilCretas`Private`GMatriz2, 2 -> -1, 2], 
                    Replace[VilCretas`Private`GMatriz2, 2 -> 1, 2]]; 
                    TableForm[VilCretas`Private`GMatriz2, TableHeadings -> {
                    Map[Style[#, Black]& , 
                    VertexList[VilCretas`Private`GGrafoAuxiliar9]], 
                    Map[Style[#, Black]& , 
                    EdgeList[VilCretas`Private`GGrafoAuxiliar9]]}, 
                    TableAlignments -> Center]]]]]], 
                   If[
                    VilCretas`GrafoCQ[VilCretas`Private`GGrafo], 
                    VilCretas`Private`GGrafoAuxiliar9 = 
                    VilCretas`CombinatoricaToGraph[VilCretas`Private`GGrafo]; 
                    If[ToString[
                    EdgeList[VilCretas`Private`GGrafoAuxiliar9]] != 
                    ToString[{}], 
                    If[
                    Or[ToString[
                    Sort[
                    OptionValue[VilCretas`edgesgraph]]] == ToString[
                    Sort[
                    VilCretas`AristasWolframSystemToCombinatorica[
                    EdgeList[VilCretas`Private`GGrafoAuxiliar9]]]], ToString[
                    OptionValue[VilCretas`edgesgraph]] == ToString[{}]], 
                    If[ToString[
                    Sort[
                    VertexList[VilCretas`Private`GGrafoAuxiliar9]]] == 
                    ToString[
                    Sort[VilCretas`Private`GNodos]], If[ToString[
                    OptionValue[VilCretas`edgesgraph]] != ToString[{}], 
                    VilCretas`Private`GGrafoAuxiliar9 = VilCretas`Grafo[
                    OptionValue[VilCretas`edgesgraph], VilCretas`vertices -> 
                    VilCretas`Private`GNodos, VilCretas`dirigido -> Not[
                    Combinatorica`UndirectedQ[VilCretas`Private`GGrafo]]], 
                    VilCretas`Private`GGrafoAuxiliar9 = VilCretas`Grafo[
                    Combinatorica`Edges[VilCretas`Private`GGrafo], 
                    VilCretas`vertices -> VilCretas`Private`GNodos, 
                    VilCretas`dirigido -> Not[
                    Combinatorica`UndirectedQ[VilCretas`Private`GGrafo]]]]; If[
                    Not[
                    OptionValue[VilCretas`table]], 
                    VilCretas`Private`GMatriz2 = Normal[
                    IncidenceMatrix[VilCretas`Private`GGrafoAuxiliar9]]; 
                    VilCretas`Private`GMatriz2 = If[
                    VilCretas`GrafoDirigidoQ[
                    VilCretas`Private`GGrafoAuxiliar9], 
                    Replace[VilCretas`Private`GMatriz2, 2 -> -1, 2], 
                    Replace[VilCretas`Private`GMatriz2, 2 -> 1, 2]]; If[
                    Not[
                    OptionValue[VilCretas`matriz]], 
                    MatrixForm[VilCretas`Private`GMatriz2], 
                    VilCretas`Private`GMatriz2], 
                    VilCretas`Private`GMatriz2 = Normal[
                    IncidenceMatrix[VilCretas`Private`GGrafoAuxiliar9]]; 
                    VilCretas`Private`GMatriz2 = If[
                    VilCretas`GrafoDirigidoQ[
                    VilCretas`Private`GGrafoAuxiliar9], 
                    Replace[VilCretas`Private`GMatriz2, 2 -> -1, 2], 
                    Replace[VilCretas`Private`GMatriz2, 2 -> 1, 2]]; 
                    TableForm[VilCretas`Private`GMatriz2, TableHeadings -> {
                    Map[Style[#, Black]& , 
                    VertexList[VilCretas`Private`GGrafoAuxiliar9]], 
                    Map[Style[#, Black]& , 
                    EdgeList[VilCretas`Private`GGrafoAuxiliar9]]}, 
                    TableAlignments -> Center]]]]]]]]]]]]]]]]}], "SubValues" -> 
    None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {
     VilCretas`edgesgraph -> {}, VilCretas`table -> False, VilCretas`matriz -> 
      False}, "Attributes" -> {Protected}, "FullName" -> 
    "VilCretas`MIGrafo"|>, False]]], "Output",
 CellChangeTimes->{3.968353027746975*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"2544dd6c-96a6-d14c-bb51-900e03a8764b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MIGrafo", "[", 
  RowBox[{"gra1", ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e"}], "}"}], ",", " ", 
   RowBox[{"table", "->", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9683530125299034`*^9, 3.968353019690218*^9}, {
  3.968353051035177*^9, 3.968353063244608*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"645503f8-01a3-884e-b72b-5d750801014a"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox[
       StyleBox[
        RowBox[{"a", "\[UndirectedEdge]", "b"}],
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], 
      TagBox[
       StyleBox[
        RowBox[{"a", "\[UndirectedEdge]", "c"}],
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], 
      TagBox[
       StyleBox[
        RowBox[{"a", "\[UndirectedEdge]", "e"}],
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], 
      TagBox[
       StyleBox[
        RowBox[{"b", "\[UndirectedEdge]", "c"}],
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], 
      TagBox[
       StyleBox[
        RowBox[{"b", "\[UndirectedEdge]", "d"}],
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], 
      TagBox[
       StyleBox[
        RowBox[{"b", "\[UndirectedEdge]", "e"}],
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], 
      TagBox[
       StyleBox[
        RowBox[{"c", "\[UndirectedEdge]", "d"}],
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], 
      TagBox[
       StyleBox[
        RowBox[{"c", "\[UndirectedEdge]", "e"}],
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], 
      TagBox[
       StyleBox[
        RowBox[{"d", "\[UndirectedEdge]", "d"}],
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], 
      TagBox[
       StyleBox[
        RowBox[{"c", "\[UndirectedEdge]", "c"}],
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], 
      TagBox[
       StyleBox[
        RowBox[{"d", "\[UndirectedEdge]", "e"}],
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm]},
     {
      TagBox[
       StyleBox["a",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0"},
     {
      TagBox[
       StyleBox["b",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], "1", "0", "0", "1", "1", "1", "0", "0", "0", "0", "0"},
     {
      TagBox[
       StyleBox["c",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], "0", "1", "0", "1", "0", "0", "1", "1", "0", "1", "0"},
     {
      TagBox[
       StyleBox["d",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], "0", "0", "0", "0", "1", "0", "1", "0", "1", "0", "1"},
     {
      TagBox[
       StyleBox["e",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], "0", "0", "1", "0", "0", "1", "0", "1", "0", "0", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, 
      "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$, TableHeadings -> {{
       Style[$CellContext`a, 
        GrayLevel[0]], 
       Style[$CellContext`b, 
        GrayLevel[0]], 
       Style[$CellContext`c, 
        GrayLevel[0]], 
       Style[$CellContext`d, 
        GrayLevel[0]], 
       Style[$CellContext`e, 
        GrayLevel[0]]}, {
       Style[
        UndirectedEdge[$CellContext`a, $CellContext`b], 
        GrayLevel[0]], 
       Style[
        UndirectedEdge[$CellContext`a, $CellContext`c], 
        GrayLevel[0]], 
       Style[
        UndirectedEdge[$CellContext`a, $CellContext`e], 
        GrayLevel[0]], 
       Style[
        UndirectedEdge[$CellContext`b, $CellContext`c], 
        GrayLevel[0]], 
       Style[
        UndirectedEdge[$CellContext`b, $CellContext`d], 
        GrayLevel[0]], 
       Style[
        UndirectedEdge[$CellContext`b, $CellContext`e], 
        GrayLevel[0]], 
       Style[
        UndirectedEdge[$CellContext`c, $CellContext`d], 
        GrayLevel[0]], 
       Style[
        UndirectedEdge[$CellContext`c, $CellContext`e], 
        GrayLevel[0]], 
       Style[
        UndirectedEdge[$CellContext`d, $CellContext`d], 
        GrayLevel[0]], 
       Style[
        UndirectedEdge[$CellContext`c, $CellContext`c], 
        GrayLevel[0]], 
       Style[
        UndirectedEdge[$CellContext`d, $CellContext`e], 
        GrayLevel[0]]}}, TableAlignments -> Center]]]], "Output",
 CellChangeTimes->{
  3.968353020688257*^9, {3.968353055650404*^9, 3.96835306372777*^9}},
 CellLabel->
  "Out[14]//TableForm=",ExpressionUUID->"b5b1ed65-8b1e-ec47-b7be-\
2aa46251f0f7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"arist", " ", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "10"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"gra2", "=", 
  RowBox[{"Grafo", "[", 
   RowBox[{"arist", ",", " ", 
    RowBox[{"dirigido", "->", "True"}], ",", " ", 
    RowBox[{"vertices", "->", 
     RowBox[{"Range", "[", "10", "]"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.9683532605278053`*^9, 3.9683533196531296`*^9}, {
   3.968353406392927*^9, 3.968353431009693*^9}, 3.9683536926871777`*^9},
 CellLabel->"In[26]:=",ExpressionUUID->"4a4e4610-e0d5-0b4d-a0d0-0b67b5b5baf4"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 
      10}, {{{1, 2}, {1, 4}, {1, 5}, {1, 7}, {1, 8}, {1, 10}, {2, 3}, {2, 
       4}, {2, 5}, {2, 6}, {2, 7}, {2, 8}, {2, 9}, {3, 5}, {3, 7}, {3, 10}, {
       4, 5}, {4, 8}, {4, 10}, {5, 6}, {5, 8}, {5, 10}, {6, 8}, {6, 10}, {7, 
       9}, {8, 9}, {8, 10}, {9, 10}}, Null}, {
      ImagePadding -> 10, VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
        ArrowBox[{{0., 7.}, {0.8725233584897296, 6.}}, 0.05338164251207729], 
        ArrowBox[BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQjQpkHI7LeaTu3njS/jVX2Y7HZ6QdOFi7vSKb7tjH
GxpPmtIn7VBWcCvZsu65fXSxea+Qq7TDkYyOrlOCH+3vXWhaGftByuF+UMmd
+RLf7V94ij4vnSDl0PFtw/I5l//aV9175xqtKuXwUFO+LGEhk8OUPv5jvOsl
HVxN+ULZNrM5mEWVp/fqSjoUz136Yb8ct0O8o5rWrQUSDjFZh4XcrXkcglKW
e3NWSTj8Svy45kogr8PJs9YSIr4SDh4t+vszkvgcjtY+7v8lKeHgfrHWkzmX
38GpZN6mPQ/EHWpU3qleshBwcNqY0xC1UNxhXanqY9UdAg7HTPx+Xo4Wd7C8
k3KnxkTQ4dw/J1lNAXEH2Yg1gtfXCjpE8Hu/idwn5hD18neTiYqQQxoYiDls
NeqtuTJVyMGo7OOv57xiDt+uzfT6xiDs8HeDh2TFLlEHmWuKb2emCjscFMsB
IlEHVQPVlP2HhR0al0d/Pqwk6iDydPH6NGkRB9tk8fX190QcXnyZe74/R8Th
i+d8IBJxWBAvfMRqu4gDWHmqiIOdKktv+m8Rh7AZwrJcBiIOB1wLtMQsRR0g
8SXiAAAGnrIE
          "]], 0.05338164251207729], ArrowBox[BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQjQpkHJLajWu39+22t5K6+qD5vLTDuc5O1gz7s/az
8tYbi86UdtBZmZ4lZHLdXv5v34/NMdIOQcelulMCHtifPFqsnyAl7bDaSpz5
TdFT+xknYm9IXpJymKunOXc+42v7Hlbfzw+apRymBa5YY1/3wX5pjWPDVn0p
B80zx2Yf3fjZ/rGudf30q5IO3OwfZidKf7d3k7T60FYq6fCo48uHdN5f9v/N
s5OFlSQd/jZ+aDv694/9zd25l3aflXCI/vQ4turNf/urSxxtGyokHP7mPLc6
nMPo8OnTs8UJShIOeXMinpc8YnLQWxbLFnta3KGx3dUkKJzFoWvf0pTSYnEH
U711itGnWR04bPbvWykl7tA5YdL6fjt2h+Vyq0R+HRBz2PMo5MnaJD6HfRdm
rNv/X8Qh0rRZfbcRv0MId7oOy1ERh0UmWxc9vsLvsLzTT6emTcTBp+Drqskq
Ag7bvP3XqbuIOMyWmaRw2F3AoT4wcxPbP2EHp/kGRgwhAg5Ms+dYSG4RdrD7
ceG+l6eAg7PGS4f4NGGHfvVizcXqAg52P/1O3xARdsiJ0pMTusfv8JX33PXW
/UIOaUJVij/t+B3SwEDIQXTTZK8/vXwOJmUffz3nFXLoLnFtl3nO6/B3g4dk
xS5Bh0OR/dcjvXgdDonlHBTLEXTYlVhovWU7j0PT8ujPh5UEHcp6Xm/S1udx
sEsWX19/T8Dhy82/tgc2cDt88ZwPRAIOZl4r7hTacDusAClPFXCwuvuqz+ES
l0PYDGFZLgMBB4bJR0N0irgcIOlHwAEA2Mf1ew==
          "]], 0.05338164251207729], ArrowBox[BezierCurveBox[CompressedData["
1:eJwBYQKe/SFib1JlAgAAACUAAAACAAAAAAAAAAAAAAAAAAAAAAAcQIKiHhC/
Yrq/aKbqb9bOG0D4E7RNaljMv1WfBXBflhtAECR3KJC61r/D6lAAm1YbQHB7
b2TgIeC/tIjMIIkPG0A1wQiE42Plvyh5eNEpwRpAVmMHc1Ej678dvFQSfWsa
QOqwtRgVsPC/llFh44IOGkBZXprfNg30v5A5nkQ7qhlA9bkxDg6p978NdAs2
pj4ZQBXs5cWlBvq/q0POKLf2GEBYT5/IRl/8v8qQjTWJrBhAveNdFvGy/r9o
W0lcHGAYQKHUkFfSgADAgKMBnXARGED0T3XJsKUBwBhptveFwBdA2GPc4BPI
AsAwrGdsXG0XQEwQxp375wPAw2wV+/MXF0BRVTIAaAUFwNaqv6NMwBZAGpEt
lCyaCMCamZmZmZkVQKoDKSKMkgnA5puwN7BAFUCkB7sWREgKwC2uq3L/6xRA
AZ3jcVS7CsBt0IpKh5sUQMTDojO96wrApwJOv0dPFEDwe/hbftkKwNtE9dBA
BxRAgMXk6peECsAIl4B/csMTQHigZ+AJ7QnAMPnvytyDE0DWDIE81BIJwFFr
Q7N/SBNAmgox//b1B8Bs7Xo4WxETQKQCCTm5CwXAbnVzl/uUEkAiAQJbJlkC
wGU4HB3jIRJAIww4yny8/79SNnXJEbgRQOQirq4CNvu/NG9+nIdXEUCIRmZj
3h73vwzjN5ZEABFAEXdg6A9387/ZkaG2SLIQQH20nD2XPvC/nHu7/ZNtEECa
/TXG6Orqv1OghWsmMhBAAKy2sU435r8AAAAAAAAQQCf9B3o=
          "]], 0.05338164251207729], ArrowBox[BezierCurveBox[CompressedData["
1:eJxV03tM01cUB/Da/n7SFsRWim2pL8wSKU42LA4wlJ6ohAgIjQTRqAynCCqo
y0Ci5SWCogK6YMZLdEqNAopGBcUA967NhsTWio08rBhsSZEyKZRXLArSn/7j
N/fm5JPce/44yfH87cjWBDqNRvOfu476fZaAIq3HYOIqUU3i/8YJnQiGx9u9
I1c0oB1Kl6DeChFs7grfya7GyKUx3rkxXgT6sdqnK6VtSH35vTzHUwQCee7u
o3HPUc52xwcPYE++LzzO0CMYLAkeLPEAs0mTFSPqQkTUI/OZEA+oGk0mNMcM
SHvWlRTYhFB+ob94mN2HKsodEUK2nBXwOd2IEiHN5xQIoTZG+iJsph/9BK1b
wocEsPRqTmxX1QAaL0udGi0XQPePeu31bRZ0P6xsdXrEnGf8JHe8PqBDMWLL
a7oALrL1G6dZI8izaZVkaQsfuvxLEmSFo6gjrWR+sIIPG5wMMytFYyjzfPI+
qZQPfPHDt0nNdBw1XqnhqHgQqN2a1hHNwG3PJCmhl3iwPjTQfqCHgWcjhmpW
7+GBsDQxZe0WAk+lq3JbvHjwqrn3ufddAtdFNE19srjBkceVy6JnCbz8mY5p
uekG5rPXdtVJSRw9Rjbm/eoGQb7WAslBEm/6d+eshjv3vj6veiiPxJPQ0a9q
XQQ07b7b+iISf50PF5Kb91O2OMYbzIUHrgcpBxabAopNHNCrD1M+V+AIBzSG
VMrduWvmDgeubMugLLcro+zKhRDml095ZNgRV9ClXqBMtQtwBR9BJWUfqsEC
qJj+j7KEijPYxDKr7RSJp/n8X4T5bGgIKWyU7yexoNeHZjSz4F1kPf2DH4kL
ck/8WbSdBakhN/RtVgKHMu2DotdMOCr+XfzuLwLvOnyHVXSICZ12LhHoTWDV
w0sjfS5MUDad2aurYWCF4e4VfqsTvEl4Gap0Z+AC44ybb7YTKGZH7z1KoeOB
9pPyNXInaDD1p9SpPyLVZNwbL8F8ENVm9XF8rWhgB3PjD3YCbOHaamFSD4od
y8xbPskA8ypbdm0mki1Uo789XBigXvxz/ronRtmidm2pexAdYnX12j/qrLI4
8tYBzul5EO/fwnu8Z0I2kR652NlCA8WJzRHu8+yyzhX/VJFJNKD5ZhR1PPgs
+7Zg8AVJuZ62
          "]], 0.05338164251207729], ArrowBox[BezierCurveBox[CompressedData["
1:eJxV1Hs01HkYBvAZGWYwl9+4zIxG67IZ1HYUUZv2+63MKWdH67K0jXLogiSm
m1YhScY6JUqY2WisbbNJIVLE782emrWitJtctjgSg6idoTQubXXO/rGfc57z
nue/56/XbltcwE4DCoXi8yEf7/8JsdPboCtqhpq8u8opePD+fPyu8OJQd1YX
2TwxTb+QNR/n6zyVWtYLkr7oCN9FPB8rRr1DqYpx8vizi2ny19Y4tWem937V
BOnFTvStzbbGIy5lvVvr9KRrw+y+WwutsWGV1RNFJQXCNC6Tp64JcMxvdxZe
CjaE1ux5f7kvEeBrzR09wRI6xN+Qs68W83H+VE+5UMKAYaXbzYrDfJwWOtNo
KTaBXNGm9bm+fBw/7cle62kKCVu0t7+z5uPoB1lFxfZmcG4lTTDXx8Pbuil7
3I2ZoGk8HZJWzMOhwqzD+gEmHHiZkzYa8qGf81Dr6lng2WSa68bh4XCxPsD2
JBvc8OwPWxqt8M1JtU9rFgEcdlP0+wWWONhm49KJNgKSzH/WVT+1wBIecarS
kAuD67rStisscMFzzlaaKxckqvAFpgEWeGWqb/ErPy5cdVoNZcYWeJnu3mZZ
JBfMnu6OFteZ4xSPpHT5fi5ENYwJO3eZY0eJTLT8IBeguenJditzbOeu8kqI
4YKlwahSQ3Kx7xytMcOeC0rFRwSurM3Yu5/BhROJTTaPvyLw8/N6Q804ASWu
OpOzAxw8UB7y/eAjAqZqFoX/mcnBFSNlLbE1BKSYxdjmLeVgSeDoXEoeAclR
UTk3Ktm4ZkjAtYknYIeUXi2msvHLS560dd8SUD1eW9rlz8Las96dWlcCYhce
ittXwsSDWf5jIZc54PaJKR4/ffJVyDEOBBxzKeIfNcF7GlpXbA7iwIHURFVv
GwPv4Fk2BzpyQOHh/GWGPQOrVt3F+Ro21BW67uYepuOI4pikY8ls6Ks945b8
2BgLw2w3RLDYYHTim7Mt7sa44VCfSlzAgsW0yEx9vhHeqLki/0zIguAVXXzT
9zSc0pDd8aTAFNw/7ZmHw73zqf5aE7iTylIyjhrgmkhx76YNJiDKMMsuaaPi
g6If414qGRC97gtLqj0VXzpeUMUaoUN6tczZPoGC1yeuLm1cTofpG+UKZul7
tInI9JtJMgaVjJzbunMOdaxNLlM3GYH+nFXqcpdZdI9jfcvW0AgYousOuW+m
UWuklO8VYgARn7xBql0eqDuSChd6zlsU0SaR1Gsq53ksBR5G8X/aV69DOhLZ
VfTNkXpmF2tArkUzpdL4uM4ZktfyTKqN/ge1u61xoN3Vk4tVzumFO16jA2E6
0d5fpkiZ9X67luFx1Ldkb9r1xDfkwc9tJnM9x5DgQt2K++snyKhQf3lB1SgS
Vj7wrjfWkht+Z3c+lo6gM0RV9hnlAOl3rb30kNUgGmKm1jrLmkmHBUfT1aJ+
FGgbdERe8QdKcXbtz7R5ivj+cUHapH4kcVzZ3p/XgXLyxyYjBGOofJmgO6/+
IWpkOvUhpEM+hap3vjw1ksV+LS0KfotuahJeSIS3UfdY2HDbIz2KvmyT/Hfs
r4hyMupU+/VZ9N8H+hcbzhh1
          "]], 0.05338164251207729], 
        ArrowBox[{{0.8725233584897296, 6.}, {0.3057486085583605, 5.}}, 
         0.05338164251207729], 
        ArrowBox[{{0.8725233584897296, 6.}, {5.305748618223731, 5.}}, 
         0.05338164251207729], ArrowBox[BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQzbDFTHrb69f2DGAg4WAY3VUyVfadffOhfW/+nRN3
KH84t/K4/wf7Q/xhyYzTxR1mlC71vrjjo/2O50eT2SPEHf6+jDZ44fnZPt2L
752AkLjDMruD6jzMX+3PmeszyR0Vc5hSfNXQ9sk3+/frNRboFYo5HO2Y4Vf9
9of9yU2/jjuJiTlY1XHVHZP7bR/tsLQyaouow+dg7QNyFX/tl0VobC31FnXY
UP+DUVP6v32519XYawyiDiU77ynei2Zw+PdRTcpzi4jDabG9Tm/UGB0s/WVf
nU0VcbgTPv3xvneMDhpJO86miIo4rKrJZQnbzORwRuvHEd7Dwg7GrfZLN5Yw
O6isvHP+RJ6wQ0Uh77GLRiwOBndT302VAPIdr6dte8vi8PHYZIXSA0IOJl/n
tMcvZXVIAwMhB3H+KXExYWwOJmUffz3nFXLoE/ykaPOXzeHvBg/Jil2CDrP/
bLv4bya7wyGxnINiOYIOVhce5S7R4XBoWh79+bCSoENuT+k3na0cDnbJ4uvr
7wk4mBjmZ88w5nT44jkfiAQc+vadP/NsOafDCpDyVAGHOpPpUhJCXA5hM4Rl
uQwEHBgmHw3RKeJygMSXgAMAB+a9WQ==
          "]], 0.05338164251207729], ArrowBox[BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQzbDFTHrb69f2DGAg4TBp39SY6APv7Rtu+brMPyvu
IKlq3WGj+cl+c/6kg00TxR0KtXNms1/8Yj9t/9nyVd7iDv6f7j7vu/7dXuvU
/zSxP2IOWyon5F6y+W1f0K/Rf2yRmMOCg806lxj+26fxe3zYZS/mwPU0Wuj4
REYHPq+4rs+XRB3aPcW0my8xO2TYZ8cWxIg6ePAVJsx1YnMoep+XaXhHxGFT
meLE+brsDi2esx3frBBxWMDqMytNiMPBpbPrzs8CEQeh3R+qP33gcNi4zsYq
ykTEgW06v5nzSU6HUzs3RvF+Fnaon7niRMRsLoe+VS9thdcKO1Qd2m1snM7t
wNT45HF2krDDD0HP8ks6PA4Ktot8xIWFHX63B0w2e8Pj8PaeUoXofiGHmLOu
S0vEBRxsxSRbFyoKOuw+L8hrFyLgwLKlefLJ+wIOTGc/bX7QKeBwrsrB//cs
AQejoy9mxuwQcJiZ5b/DLFjAwWPH530bgeqSmzecq+YQcHBfJqz84L+AQ1zX
cZWppfwOuv0ex55LCDr8iL/E5naFz+FX0aQVJ7QEHSa1Nzpz6fI5bAj8eLLJ
VNDBgPHqrYf1vA6+2qlaYpaCDmfPgACPg05fMpif/ubR1/PSPA7LOJLA/F+J
E40+lHA77J2VAOa36N5o0r3B5ZDnEg/ms/hvf9buyuWwizUOzK8+phf3fw+n
w6J7MWD+q8l2LyfbcTqonY8G88HKT3E4uF2PAvPXGKhbiSRwODB8jwTzIemH
wwEAVgbsXA==
          "]], 0.05338164251207729], ArrowBox[BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQzbDFTHrb69f2DGAg4fDnxtebXiUv7XXjfS/NPyvu
cHz/OsG3Tc/ss5om/GyZKO4Qn5F4aI74Y/tNmSdL13uLOzQtlb6xOeWePZvo
Dzf5P2IOD/6my3ouu2qf3iKTe2WRmMPWzf4rPz0/bn9lu9mLc/ZiDgembb7r
fmeKvf96tx18l0Udzh37fXbVjCP7r2f53J0cI+qwpOZxZMita/uzXrmHx90R
cVB7vDp0f+Lt/Z9Kag7yrxRx+MnGmHg44f7+1ndFXKKFIg58JR9tN2Q/3C8f
rm2UZyLi4HZYI/j0o0f7D65baiH9WdhBrVDtwybRJ/uzvj6UlVkr7LCu9pVI
OsvT/bLaDx4WJAk73HtRcvD5uqf7r/svaJEUFnbYuunoVxPRZ/tnJyuxie0X
cjC+fWejn/mz/WlgIORgH30dzDcp+/jrOa+Qw0HtS2D+3w0ekhW7BB22+ZwF
8w+J5RwUyxF0UNh3AsxvWh79+bCSoMPf+iNgvl2y+Pr6ewIOAZMOgPlfPOcD
kYCD2Nc9YP4KkPJUAYegFTvB/LAZwrJcBgIODGu2gfmQ+BJwAADZx9oS
          "]], 0.05338164251207729], ArrowBox[BezierCurveBox[CompressedData["
1:eJwt0nlIk3EYwPFXbe51Hs1rb26aV6iRrtQyxep5KMGzZuY5Ja+yCEsjKcyw
MMuVxz8rcZ54kGZR3gZJ5IFNLJamU0w70Mi0PN+pzSt96cvv4cfnn+evxzou
Kei8JkEQwq3Z/okmN0HL9DQQTLuwIPld7RPpb6hQNhzMVlBoP0mKNAL/gGeM
3V0XGYUv+avsbqsZ6CkWT6uiKHQkSwdp1iz454guD/IprKibb83dnIVOIUun
r5+HJCctTH5/Dg5kpr2ZzOShhyxkbIOaB2lOQ665Mw9/3pNcvtQ4D9PetdcT
h0yR+9GY1I1YAPeWuNThG6boWeia0fZ9AdhBI+JJW1MUXLESRIgXQd775auN
wgRf+I/0f+tYhDTbZFKSaoLzLrFPzwhosIjIG6BsTXDKtrm0Pp6Gl4keXv29
xpi/W9mgLqLh4NmrYa3XjFFl0/VD2EVDjZObwTu+MZLOtw+fGqWB+znroka7
Ebru/VYdPkFDoWw7QwzoVzCekh77JT1miFGP2hl75I27541zMTapmfFDyXZc
jIx/xng4w2nrcdEnuZJxoLpKpK7aicL8EsZzM9sZIHtQxphZ526ASscCxkJm
gT4mLBcxdmXSxY2vljH8GRo81/RmL6Zz0K+s5kG0rgqoK9oTVu910P+Q2x6H
IyrollgaRZrr4Ga5fH/KHRV4BYSnUkkkJvyIfn5iWAX5r+rMQrvYmLG5Kss/
sQSvPzgs8szZeHqueCWxYwnqs9+yxNe1caD1uLw7eBluLtw4bfmJhZzQP2SV
ehl4miJlggsLn5Wk93AGV6BZe9iMStyBTdUtEw/L/4IFx6w2oUELrVMei/fE
qEGkZ5QVwtJCWlOwb4i7Cn76nXXj5zRxX7B3aGXjKhjoO9ob9mmg/AJ/VOKz
BsW6J6fGfDWw9+ijtizFGtCkndpXQaCrsmm5zGcdeKzW0JBYAgnnW7l9jev/
75nAf6JdUZE=
          "]], 0.05338164251207729], ArrowBox[BezierCurveBox[CompressedData["
1:eJwl02tMk1cYwPGXOm5yLW1pN0Ti3FyUTONgpbCU8yCYWnTQOCXCJhOsIAwF
dY4qMBXmQMNlFIlRCRgvwWkk4zY6yfowp5SoY+BSLg1pLeJl4kpL6YW3Ctp3
/5yTJ78vT86XsyK7cOseFkVRMW+ve1JdwrBfp6cJxSSAXk70rfC/n5GDF5TS
3x/wIXurgpfTP0lKDl0doWv4YDJ4ZSy/PE4EVaJWVSIfdO3bl8hva0jy+OZe
+3+hMHAizNKvuYnsXENId3UonHTt3pgdqcX96603rRGhUCr3e8/zsyncJaqs
7mjlgfRl+HbFAxM+LbnQZlnJg8Z7c3meH9qQ9Wodt/0MF445NpgK9tiR9eN9
5b4iLvQoxC3vH3fgmeJOvWojF8QpU6WrDjtRNfTMoeRyIVgRU6lImsdv6vfq
XRMciLYL1QLTPLb99qnS2syBqwOTK7wP0lghTeUczeCAfCauI3GIxufQnVUX
xIED+aRw0MeFhpbcsih1CERNL+5oDXPh+XPu2FDe653u9ouG+H8b4tlQEMtm
HFv7WFT7OBjM8mWMT1e5Cwb/+NWMx8o/fnuCoe9ODGMZfSWVvhIE7HkJY7PJ
XSDQunTGzDpRIHyfv4/xWmZBAORu62IcxeQH636uNebzXWj5LkWcVbYUeo5Z
FN1LXWja4R/OGvCFhdGJiEobjZHjBQ95HF9gdchGDKM0XnIU7mzK9AFNwOdN
2E5jehdP3XjdG5Knhw+sqqAxJShzzsPhBdXJhjTuFhpP+EgpY6IX1EQe3nzK
n8bZlhHjJ/WekLMwYJEEzGM0854l0PfBslRFpxNDM9JkQ8dZIAw0qhcTnFj6
JDJPrfUAzS1+gl7lwDxtZ9nr9R5QtKZPyxE4ULfaVFPTSIFwp6704td2HJ7U
ndtPUSD4Ikf4Q50Nz1NzGxKeLBCuv5yFrXPY9M5ZqWTsNVlT9c8j2TUrXh9u
lsyMvyJfabqGY+tn8Y9cP3HsCxcJeXQjYG+cGcPpzDG9H03Y4iOXDi1/id96
bFLukjnJSc9BUWbEc/yzrD9f3WMnJe+m6euKp9C3UJflTLARm4Ld4PORETdp
K4oDZ6xkSkK1/fTlBJb/cvsGhbPkaXTStmb+KHZSZxcG2y3ErDIJ4sofov4u
VXREYybUtUWHRvgX/v+/zOQNyBu33w==
          "]], 0.05338164251207729], 
        ArrowBox[{{0.3057486085583605, 5.}, {3.3057486174387805`, 4.}}, 
         0.05338164251207729], 
        ArrowBox[{{0.3057486085583605, 5.}, {-0.6942513915031441, 4.}}, 
         0.05338164251207729], ArrowBox[BezierCurveBox[CompressedData["
1:eJwt031Qy3EcwPEfW0vKqvVwdHVnc55T3BxR7fNxxDUy8lwhiTlHHlLO0y45
q1xPIqdVK4pW0lROzFNXV+ouiSndHJetzW/zsB4MNS32Pe/7fu97rz8+n/++
3LgjkfsmUhS19N+1v1RuWVHcZTVQJE9MTq8jrhR/1VpeeeAOz2bi7eUuIR9k
HniL303s8iDW+UGsB8YYaOLmInpDCtcDJf42YgkZ4KAzy6vYbjBeERivcJCR
uICYKWowpIVxcH/iGuKODLbD1CF35DvuJZYV2HNH/dRUYpN9XOCOI3m3iZdl
64KydW54OKmL+FK6PTfExnHi3tQF/44bHk9cLLd7w2i5aLTcFVk5CcQD3+2x
cZRTQ0zWBbExYnyIOIAsmIKUwlRiN5/kjMW8sNqKajUcijWJnp+bjMoUVX+y
TQ0a2xnx6XYnXNIkXN4lfQsSNn0q3tsJAz9bauvDuiEyJyDtXPwklJsfr+UG
90DMeVFOS70jprwvcpwmfgeyfmFeCNMRe6qu62XtveDyaHqudgsLS3cq9bfj
NFBn60pvUDig4EYnN/hjH2h8/QrTpjCQzrrfqHr1CfrXhiyK3z0RT57oTOqp
04LriY1VkfcmoHGz74rsNB3E5MewNlETMDRQztNG9EObcmfYPhGFSYzNPm8c
9KCQVnZygsch93XonF1KPTBLL/RKuscguyB6nVRogJI74Qp2wh84Gn1XKnxn
gLOV1tAmphU6kqNmqvfQsJ/0E1gd8kVtZhoKfAotSFkgPMq/RHjHCKp491m2
W8NwjctIiLpqgrZV7b+Ktw0BzZ0h/1X1BZ6pmg5O9xqE1dGZgTzzV1iZZR2b
/NQMVS8FPE3sd+jr+nFAJv4GmSF+j12pAdiKx7zNc7/Ai5rnXqcMA1D2/ijL
iWkE6VMWt1I3CK03h4NoiwGUramemoZhyPAfnE2LdRCw7qpp/KAFGMvVFVyf
PmCsDy7zGfsJe67xj82dpgH/jpOCeQm/gdeYcT9V8haqW8OfBDwbgXztRr68
rRNSQmt953wbhUebeCv88lugemHNbm+rFbZUOM10aFHB/FK8OPL5DzzM0BcH
NSuAyjyQ9bp+7P//oqi/13CmJg==
          "]], 0.05338164251207729], 
        ArrowBox[{{5.305748618223731, 5.}, {3.3057486174387805`, 4.}}, 
         0.05338164251207729], ArrowBox[BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQfcC1QEvMUtSBAQxEHMRzIPyV6W8efT0v7FAxDcKP
WMJjc3eWsMPDIxA+z7YE7m0Jwg7B3yH8w3NeBDQoCjuc1y0E8+vAGoQcQjIg
fPuXk+1eThZyeLQMwmfx3/6s3VXIofIlhH+mk49V4pOgg5RBEZg/ayYICDqI
FED4r0Da7QQdds6D8C37Hlv0PRZwYN8D4Xd1gICAw9/jEP6NJl0gEnBYcAjC
D/i1xP/XEn6Ht6sh/A/vQIDP4VEzhA82zoLPockLwtcDG8DrYOwCcZ8xGHA7
RJy5fMnKRNSh4suf38UtXA693H9Or1AVdeD2Pybu+4TT4TzjK9EEXlGHN079
bfuCOB1k18/dkPBaxEHkQrjHifMcDlXC4nNW7Rdx6PkmH5sVzeHwRC/shm2X
iEPAtudHlnxld4hmjE6V8hZxSOBfX18+j93hQZeqswOTiMM+xrLeR6HsDkWn
txauXy/skN5r8+6pNLvDVw+/31UrBB2+i14LvfWO1eHExcDu49P5Hc70squ0
3GJxaAjrXnjZmMfh6ZcLEY/vMTvwKHhaSqlyOjh4G335/pvJoUSvO2h2NpvD
vQna3w4aMjlsbgx8G8bO4nDo6J44xwZGh1OSczh9fzA6vHj5VLfsOYPDzm9Z
y2vtGByC/i5LTkhncGAwrOm9uPmvPST9MDgAAHGY5l0=
          "]], 0.05338164251207729], ArrowBox[BezierCurveBox[CompressedData["
1:eJwt0X0w1HkcB/BlZ5el1q7d3+7vp+vmXBeHY1M6nPR9j7LlHuhWDid6lOpm
ivU02cgtKtXdeczRXXOuFJ0bRB1jq3WlrLkcomSURVmnpkV7zCxyZe41857P
v+95fxx3HVLEWrJYLO83eXu1gfGuEl8KrEViBFb3x589QOHDguKmtA4Rzhlu
FK68QEERXHdmokiE1pl3ChueUUj3Ci3ZGSpC84Dp4GaZBJUbVc33eCJknpE7
D2VK0Jvhwl7baA9qpb0mo18C9kj0wZIYe6SdCHd3XCfF6gR63jQnRI1Womqr
kGKXS2TNF4VC1N8LqUiS0iiyfS+n3FGIaqXD0vVbaRxdk1uoGxQg9ZC5Xp9L
Y1/txpDZMgHEt42l2xppBKsVjR+HCvBtvPlG3SANWdWVDpW1ANokhxX6BRoO
n7Z/UJxsh87OkDsGmkH38/tceQ8ftdlllW2uDNTe6g027nzszjPr1GsZuLn3
9g8dXYoyydt9GKxZZIvPdd/sdfRmsHX5xI7JdBuc/jPGYYMnA9VUwW8B7TxE
WQbJVc4MLl1ZJnKmeWg44TquYxj0RJ8sORdnjZ/C2FyZNQNr0xOfqkYrCPff
L708RQPJzIzc1gr2t8oq1j2ioRry7U7dzkX57kiXZ800ND5o97vKQb95+trX
3jS8FvuwwXlQnJ0noKHtlala0i3hd/n1nh/GpHi/J1+cpbNAZqpnRPhNKXZ4
RC6kSizQ4e8RM1YkReLTHL9f9rDgMm9KCdgvhfaFrGAmboHkXc35NfbNfz5r
e3cLxXtNLOP0+i/5UhyL6qstrZ4jaiFntdWgBMqL2xqyFbNkVPw0l3GTYO+i
afJ3h6frKhMF47KPKvnW/5Kerk039X9QEBwIm/BqfUWmlzsFuaVQ0G0ZXv/o
5yniWf/XXTsZBaqzu3A2f5Kcyvfz+35YDLPByXi2fIKwmpTnL+aJMbbqenlS
qZHkuShZkb5iLLn1KuF3p5fEf8RXUTEgQtSxyeDh8ReEM6r78VSaCH1p13xE
o89J4oPtF1ozhAh4mBDfEmwgmUd2xqZE2KFJE8bWS0ZI9yeHj/dxlkD51e3h
x0eekMcGbk0dhwd1oEfywMmH5HyWzYBFBBeX5P9cbw7vIiv42XzdHBst9eOH
Z+7cJdHHE+VWJgvUzQXpEho1RGHsy9L4sxDXwJl4qakirNP7vuuqnyes//0H
RQh37w==
          "]], 0.05338164251207729], 
        ArrowBox[{{3.3057486174387805`, 4.}, {4.305748616925257, 3.}}, 
         0.05338164251207729], ArrowBox[BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQzTD5aIhOEZcDAxgIOLy/Nln2Ej+XgyT7lRNL5/I7
TIzYf+PcPE6Hk+psLYt0+B0ei3u0KclzOvAmTTP8tobP4ZmIntrZCRwOj7e2
XFwgx+cw279wx7nP7A4ByheTFzXyOjCdELRV92B3CFxV/eLXVR4HiTr+Ldd6
2RyeebXEr5LmcXhUmCV79wirgwDr6xMbgrgdYhYrVVq9ZXE4d2O9Cl81l4NC
k9SUtGQWBw9J74krXnM6xEy7JKj1gNkh6OQd5u3hnA4CD7w+tSQzOzx9kVJj
uZ/DwTq+2bT8LZMDU8XjX/pKHA73hGtuM9QxOawti6if1cDu8POvyRNFUSaH
J08Oc1beYnPokV3nf2sTo8OyQ6qzTuuzOcwoei6rFc7o8Jm/zmBSA6uD1N8H
foJMjA5nwIDFYcm0K487NzE4pL159PW8NIvDSYk/d3vTGRx+JU40+lDC7NDW
HG4rq8jg0KJ7o0n3BpPDtrVnmQv2/bdn8d/+rN2VyWGaakj4Huf/9lXH9OL+
7wHam+dUKn/pn/2ryXYvJ9sxOjzrmBE7M/OfPVj5KQaHqJIwAS2uf/ZrDNSt
RBIYHBgMa3ovbv5rD4kvBgcAWRG43g==
          "]], 0.05338164251207729], ArrowBox[BezierCurveBox[CompressedData["
1:eJwty38s1HEcx/HvOXf3ve8dZ36VFg3h2CXEyJrPG7WOSuPOSJaL+dGhs/Mz
2yFRGa1k5ljh1iKmIW0Kd/mZH8vPfnAspGSGFMnkV/nWc3vtvccfb9NQiV+4
BoZhtn+3d7GCLiFPSgBGpgPRs52kBYNjXQtlHMi3+Od6vlFKkxMH4gUdpPfH
tBnGtGmDlqSddPbxYQXmqQ2hKW2kt+r2HrRAKmklnTZiJRux0oITwlek6aVX
+zm5bGizVJGW6xkTdl9YgM21kD5GxgIJn2JWJCGA/TKnRiYj4PbOUM5oJAGX
Lm+o43uY4MXk5S0FEWDJy2w20GdCbZSutZpPgMjosG+YCIeWg1miEnsCdK2n
SoKfMkBqcd3B3oAA14sNcsomHYYymWUPV5kwVlvu7edFh/eOxhVTb5iwaFlZ
5yOnQSs7sGqWywS7Jbos3JQK6uUk1/nfOGjIx6oNJRowIq0LwQdxCDCJPR/Q
QoGaQk0jz8c48DI6xVZMCogC4yOKZTjcUE5u3fTHYL1p6zQrEIcXNcmsRY9d
JFaWK+WOOMQUNhLz6m2kCgnpdtfDwdxJtq4Zt4W+K1zC6T8Z8DG3ZxjRNlGG
41FtVREDIsh+oVO9woGZRAaks3ap3tgaKjbvMEzkM0DAVYSYVayiFM/UuQQO
A6Zazl5bDlhBM9xUmOmjg2kvxbfe4AdSv203VabSwaUko39QtYyCTwpzaYfo
UJqvk2gpXkLiVFtZcyMNElIa5BFHFhAjyXd98iQNmnyuuNzD55Gts3JD8loT
4vQdhI82vyKbdF7g/QkqKMrmL0hiPqPkb/0LZyhUMJMa2BQbTyOdbMXzB84a
MLEvOsfdZByteVQ+y0qjAHu8QMDOfIe43KlZ6gcMavy9wy36B1C1o5fPATcM
kvTdzlUVdaGVob7Ru7G76NM0TcXvbkK8W5Eyo4wdlF4RJg7qfIKwvKg7ww3b
CPvfH9/JKNc=
          "]], 0.05338164251207729], 
        ArrowBox[{{4.305748616925257, 3.}, {1.8564010168802838`, 2.}}, 
         0.05338164251207729], ArrowBox[BezierCurveBox[CompressedData["
1:eJwBYQKe/SFib1JlAgAAACUAAAACAAAAAPdZKhY5EUAAAAAAAAAIQEfkKtqD
MhFAVM/YxeufB0CYzxF0QCsRQLJIGXi6NQdA8LgO+EsjEUAXbMEWbMEGQE6g
IWamGhFAhjnRoQBDBkC0hUq+TxERQP2wSBl4ugVAImmJAEgHEUB+0id90icF
QJhK3iyP/BBACJ5uzQ+LBEAVKklDJfEQQJkTHQow5ANAmgfKQwrlEEA0MzMz
MzMDQJUDcwQ62BBAnoJoBkh9AkB3PlZbsMoQQJuHdEGdxwFAQLhzSG28EEAv
QlfkMhIBQO1wy8twrRBAV7IQ7whdAECBaF3lup0QQCawQcM+UP8//J4plUuN
EEDKZg947Ob9P1wUMNsifBBAloiK/Bp+/D+iyHC3QGoQQIwVs1DKFfs/plpu
u1krEEBmZmZmZmb2P47lgs+KFBBAW6Yy2KcF9T93FLHHEe0PQMCTb7CZu/M/
XJHe8KeiD0CVLh3vO4jyP8pBjhrYSQ9A1XY7lI5r8T/AJcBEouIOQIZsyp+R
ZfA/Qj10bwZtDkBIH5QjiuzuP06IqpoE6Q1AZMB01FE77T/kBmPGnFYNQFu8
NlJ6t+s/Armd8s61DEAwE9qcA2HqPx7Lq/83dwpAQg23c1kb5j+EFT5IuWUI
QBG61mWEK+I/LphUzFKBBkAyM3LmCCPdPyBT74sEygRAsle8N7Oa1j9ZRg6H
zj8DQKfhi78HvtA/2HGxvbDiAUAhosH7DBrHP57V2C+rsgBAsZfsyr0evD9Y
4wi7e1//P+cB1/AUcKk/AIxojdGz/T8AAAAAAAAAAAFU9s0=
          "]], 0.05338164251207729], ArrowBox[BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQzbBm20Y/82f7GcBAwCHW4CyYH3z+xtHX8/kdmoSf
gfkbPSQrdpnyO+SGMm4C8SVyDorlHORzkPsmB+a3Wl5cyODM5zDlqx2Y/2cD
SAOvw+XgRDC/7pJ67SV1XodrAm1gPtu8vLP83TwOi3TWgvkzhGW5DJ5wOxgv
vwbmG4MBt8OGnmVT4nSA5ocpOnbUcjk4vDxg2cf9bL/99XCdeSc4HR7vUV10
98rT/Ylbr30pEeF0mMp+9axPx9P9zz7MncWTyOEQc/LcntuqT/df7lwrm7qO
3cGESTi/a+2T/eoNrHV1f9gc5DYtfBIh/2T/w8tLd0d4szlI3aySda9+vJ+p
te/a51msDucSWNh27H+wf9XE6JMSSswOS1mtn9t+u7+/SPlY6JJ8JgdVX4bJ
k6vv7Zf463Xs8B5GB4kZEfyF/Hf3z5F7JVXOyejQ8Mw55trG2/t/ty8O3hfK
4BBncajycNKt/QVF7x4YOf+339B7Od1C6eb+JSmnHgnc+mtf8axczfTD9f0T
nt1aI1bwx36r0/qtO89c22/5Q97ehfW3fdqiStFj26/unzUTBH7aW2asVJqy
8cp+cHSZ/7C/+01gV+yuy/s/H1ZKffDym32A34bbSpcu7WeP3sAaveGr/cS8
9vbHPy7uZweH/xf7ReHT9s7Xu7j/a0/snn+Vn+2bOe/Whhdf2A+OrtpP9qkc
2yeI9p3fD1Y+5aN9Sr+yVXHwuf0RiX4lGgc+2DOs+P/9uNlZaPr5YA8A/zMn
FQ==
          "]], 0.05338164251207729], 
        ArrowBox[{{1.8564010168802838`, 2.}, {-0.22823428735074458`, 1.}}, 
         0.05338164251207729], ArrowBox[BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQzWBY03tx8197Bghw4LxRBeYvn7ex+7r9f/sTUZVg
ftJEow8l2f/sTXaWg/l6N5p0bzT9tff/XArm8xQvcmZs+2Mvw1kC5v9KBGn4
bT/rVyGEv8QfhOxPHM+HqLe5O0te7Kf9soJcMN9Q3Uok4cR3e5OvWWB+Ghh8
s0+angHmLwZr/2KvNjMNzH9s0QdEn+3rfqWA+cpKIPDJPn13MpifyL0tgXvb
B/snt5PAfPuXk+1eTn5n/y0awt+zGwRe28+yhvAtQcY9fmF/oQrCB+lO4H5m
P0sSYp4xGDy2z38E4YODJ/+B/bn5EPvP8XdPaVx+235jYCqYL55zUCzn4DV7
iR8QvmTFLlN7nUv2HJMh7l+R/ubR1/On7WuV0sH8KXYgBx62r1gG4T94ee3P
Bo+d9j/lIP7/p3Wmk491hT1DTwZyfDEAAEXI8OU=
          "]], 0.05338164251207729], 
        ArrowBox[{{-0.22823428735074458`, 1.}, {1.8564010165944183`, 0.}}, 
         0.05338164251207729]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 7.}, 0.05338164251207729], 
         InsetBox["1", 
          Offset[{2, 2}, {0.05338164251207729, 7.053381642512077}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.8725233584897296, 6.}, 0.05338164251207729], 
         InsetBox["2", Offset[{2, 2}, {0.925905001001807, 6.053381642512077}],
           ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.3057486085583605, 5.}, 0.05338164251207729], 
         InsetBox["3", 
          Offset[{2, 2}, {0.3591302510704378, 5.053381642512077}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.305748618223731, 5.}, 0.05338164251207729], 
         InsetBox["4", 
          Offset[{2, 2}, {5.3591302607358084, 5.053381642512077}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.3057486174387805`, 4.}, 0.05338164251207729], 
         InsetBox["5", 
          Offset[{2, 2}, {3.3591302599508577, 4.053381642512077}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.305748616925257, 3.}, 0.05338164251207729], 
         InsetBox["6", Offset[{2, 2}, {4.359130259437334, 3.053381642512077}],
           ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.6942513915031441, 4.}, 0.05338164251207729], 
         InsetBox["7", 
          Offset[{2, 2}, {-0.6408697489910667, 4.053381642512077}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.8564010168802838`, 2.}, 0.05338164251207729], 
         InsetBox["8", Offset[{2, 2}, {1.909782659392361, 2.053381642512077}],
           ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.22823428735074458`, 1.}, 0.05338164251207729], 
         InsetBox["9", 
          Offset[{2, 2}, {-0.1748526448386673, 1.0533816425120772}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.8564010165944183`, 0.}, 0.05338164251207729], 
         InsetBox["10", 
          Offset[{2, 2}, {1.9097826591064955, 0.05338164251207729}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImagePadding->10]], "Output",
 CellChangeTimes->{{3.968353289608288*^9, 3.9683533206403275`*^9}, {
  3.9683534081974297`*^9, 3.968353432353651*^9}},
 CellLabel->"Out[27]=",ExpressionUUID->"e22f5a33-ee0b-2b4f-bca2-ec871d274535"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Valencias", "[", "gra2", "]"}]], "Input",
 CellChangeTimes->{{3.9683533241880093`*^9, 3.9683533294306984`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"40446805-16e2-d845-a409-25b5a3fda763"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox[
       StyleBox["1",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], 
      TagBox[
       StyleBox["2",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], 
      TagBox[
       StyleBox["3",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], 
      TagBox[
       StyleBox["4",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], 
      TagBox[
       StyleBox["5",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], 
      TagBox[
       StyleBox["6",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], 
      TagBox[
       StyleBox["7",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], 
      TagBox[
       StyleBox["8",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], 
      TagBox[
       StyleBox["9",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], 
      TagBox[
       StyleBox["10",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm]},
     {
      TagBox["\<\"Grado o valencia interna\"\>",
       HoldForm], "0", "1", "1", "2", "4", "2", "3", "5", "3", "7"},
     {
      TagBox["\<\"Grado o valencia externa\"\>",
       HoldForm], "6", "7", "3", "3", "3", "2", "1", "2", "1", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, 
      "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{
      "Grado o valencia interna", "Grado o valencia externa"}, {
       Style[1, 
        GrayLevel[0]], 
       Style[2, 
        GrayLevel[0]], 
       Style[3, 
        GrayLevel[0]], 
       Style[4, 
        GrayLevel[0]], 
       Style[5, 
        GrayLevel[0]], 
       Style[6, 
        GrayLevel[0]], 
       Style[7, 
        GrayLevel[0]], 
       Style[8, 
        GrayLevel[0]], 
       Style[9, 
        GrayLevel[0]], 
       Style[10, 
        GrayLevel[0]]}}, TableAlignments -> Center]]]], "Output",
 CellChangeTimes->{
  3.9683533304840336`*^9, {3.9683534109142227`*^9, 3.968353434673172*^9}},
 CellLabel->
  "Out[28]//TableForm=",ExpressionUUID->"67902866-5f83-c140-a15a-\
59d5cac83d7d"]
}, Open  ]],

Cell[TextData[{
 "Hamilton y Euler\n",
 Cell[BoxData[
  FormBox[
   SubscriptBox["K", 
    RowBox[{"1000", ",", " ", "1000"}]], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "1c948488-ed1c-194f-99c1-b5ad71f0f1a9"],
 " ->Knm\n\n",
 Cell[BoxData[
  FormBox[
   SubscriptBox["K", "1000"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "c563bb1f-d345-4842-a962-708e5936c4aa"],
 " -> Kn\nLuego ver si es circuito o ruta, y por ultimo ver si es Hamilton o \
Euler"
}], "Text",
 CellChangeTimes->{{3.968353754753887*^9, 3.968353761916231*^9}, {
  3.968353802901081*^9, 3.9683538102344055`*^9}, {3.9683566020767*^9, 
  3.968356659808111*^9}},ExpressionUUID->"25dbc0cc-9b9d-7f4f-9da0-\
e235c849d2ad"],

Cell[BoxData[{"KnCircuitoHamiltonQ", "\[IndentingNewLine]", \
"KnCircuitoEulerQ", "\[IndentingNewLine]", "KnRutaHamiltonQ", "\
\[IndentingNewLine]", 
 RowBox[{"KnRutaEulerQ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", "KnmCircuitoEulerQ", "\
\[IndentingNewLine]", "KnmCircuitoHamiltonQ", "\[IndentingNewLine]", \
"KnmRutaEulerQ", "\[IndentingNewLine]", "KnmRutaHamiltonQ"}], "Input",
 CellChangeTimes->{{3.968353812186386*^9, 3.968353884945999*^9}, 
   3.9683539201024246`*^9},ExpressionUUID->"a041bc00-a41a-f14b-935d-\
4e2ff2331340"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"KnmCircuitoHamiltonQ", "[", 
  RowBox[{"500", ",", "500"}], "]"}]], "Input",
 CellChangeTimes->{{3.9683539329367485`*^9, 3.9683539351940155`*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"e5cd6db9-da59-7349-8ac2-1c823005430f"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.968353940395527*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"bfa47174-e998-fd4d-b8d0-16f388f17dbb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"KnCircuitoEulerQ", "[", "21534", "]"}]], "Input",
 CellChangeTimes->{{3.968354011830374*^9, 3.9683540174994793`*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"fa9eba11-6a7d-ff47-b33c-30027f38a49b"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.9683540184353657`*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"b5deb460-636b-f241-a549-1b3c83291fab"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"KnCircuitoHamiltonQ", "[", "14147", "]"}], "&&", 
  RowBox[{"KnRutaHamiltonQ", "[", "14147", "]"}]}]], "Input",
 CellChangeTimes->{{3.9683541554916344`*^9, 3.9683541841402245`*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"ee7bd191-9ae1-fd4c-9502-d39fa692dfdf"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.9683541845000057`*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"a7ec09ac-eeb1-d843-b4df-b8cb780cc12c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GrafoBipartitoCompleto", "[", 
  RowBox[{"10", ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.9683542744980335`*^9, 3.968354279316248*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"c06afe83-c54e-1a41-add9-b29354817454"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}, {Null, 
       SparseArray[
       Automatic, {15, 15}, 0, {
        1, {{0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 60, 70, 80, 90, 
          100}, {{11}, {12}, {13}, {14}, {15}, {11}, {12}, {13}, {14}, {15}, {
          11}, {12}, {13}, {14}, {15}, {11}, {12}, {13}, {14}, {15}, {11}, {
          12}, {13}, {14}, {15}, {11}, {12}, {13}, {14}, {15}, {11}, {12}, {
          13}, {14}, {15}, {11}, {12}, {13}, {14}, {15}, {11}, {12}, {13}, {
          14}, {15}, {11}, {12}, {13}, {14}, {15}, {1}, {2}, {3}, {4}, {5}, {
          6}, {7}, {8}, {9}, {10}, {1}, {2}, {3}, {4}, {5}, {6}, {7}, {8}, {
          9}, {10}, {1}, {2}, {3}, {4}, {5}, {6}, {7}, {8}, {9}, {10}, {1}, {
          2}, {3}, {4}, {5}, {6}, {7}, {8}, {9}, {10}, {1}, {2}, {3}, {4}, {
          5}, {6}, {7}, {8}, {9}, {10}}}, Pattern}]}, {
      GraphLayout -> {"MultipartiteLayout", "VertexPartition" -> {10, 5}}, 
       ImagePadding -> 10, VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
        ArrowBox[CompressedData["
1:eJyFlDEOAUEUhjdULqDXUEqIeu7ACQi1xgUUjqBTKEVCozbbCZFsoZQoRKN0
AAXJMsWb9+2bZIrJlz//l9mdVxuMu6NykiSt7y799n/dGudsXb2n+enl2ovZ
qtnP0mLukSdiQd4V8yzwzXOyq8yv6Kdzj1z6Qd7qD3w57Z327wv66dwjl36Q
t/oDr3eG/nE8oJ/OPXLpB3mrP/D8vEU/nXvk0g/yVr/kzvATPPILHPxk3uqX
94t+Oo++L/pB3uqX/yf66Tx6H+gHeatfvm/003k0X9AP8la/nI/op/NoPqMf
5K1+9wGJFbpq
         "], 0.014572359359168924`]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., -0.5340169943749477}, 0.014572359359168924], 
         InsetBox["1", 
          Offset[{2, 2}, {0.014572359359168924, -0.5194446350157788}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0., -0.41534655118051483`}, 0.014572359359168924], 
         InsetBox["2", 
          Offset[{2, 2}, {0.014572359359168924, -0.4007741918213459}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0., -0.296676107986082}, 0.014572359359168924], 
         InsetBox["3", 
          Offset[{2, 2}, {0.014572359359168924, -0.2821037486269131}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0., -0.1780056647916492}, 0.014572359359168924], 
         InsetBox["4", 
          Offset[{2, 2}, {0.014572359359168924, -0.16343330543248027}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0., -0.0593352215972164}, 0.014572359359168924], 
         InsetBox["5", 
          Offset[{2, 2}, {0.014572359359168924, -0.04476286223804748}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0., 0.0593352215972164}, 0.014572359359168924], 
         InsetBox["6", 
          Offset[{2, 2}, {0.014572359359168924, 0.07390758095638533}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0., 0.1780056647916492}, 0.014572359359168924], 
         InsetBox["7", 
          Offset[{2, 2}, {0.014572359359168924, 0.19257802415081812}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0., 0.296676107986082}, 0.014572359359168924], 
         InsetBox["8", 
          Offset[{2, 2}, {0.014572359359168924, 0.3112484673452509}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0., 0.41534655118051483`}, 0.014572359359168924], 
         InsetBox["9", 
          Offset[{2, 2}, {0.014572359359168924, 0.4299189105396838}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0., 0.5340169943749477}, 0.014572359359168924], 
         InsetBox["10", 
          Offset[{2, 2}, {0.014572359359168924, 0.5485893537341165}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1., -0.2373408863888656}, 0.014572359359168924], 
         InsetBox["11", 
          Offset[{2, 2}, {1.014572359359169, -0.22276852702969668}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1., -0.1186704431944328}, 0.014572359359168924], 
         InsetBox["12", 
          Offset[{2, 2}, {1.014572359359169, -0.10409808383526388}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 0.}, 0.014572359359168924], 
         InsetBox["13", 
          Offset[{2, 2}, {1.014572359359169, 0.014572359359168924}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1., 0.1186704431944328}, 0.014572359359168924], 
         InsetBox["14", 
          Offset[{2, 2}, {1.014572359359169, 0.1332428025536017}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1., 0.2373408863888656}, 0.014572359359168924], 
         InsetBox["15", 
          Offset[{2, 2}, {1.014572359359169, 0.25191324574803453}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImagePadding->10]], "Output",
 CellChangeTimes->{3.96835427975568*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"12627bb7-f24e-974f-8d35-7bffea4737c9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArbolQ", "[", 
  RowBox[{"GrafoBipartitoCompleto", "[", 
   RowBox[{"10", ",", "5"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.968354392868681*^9, 3.9683544157500725`*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"0f519058-4bc2-d347-983f-d1a411d1da64"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.9683544007667236`*^9, 3.9683544167955036`*^9}},
 CellLabel->"Out[50]=",ExpressionUUID->"31360755-625a-4241-9e65-bc74c55f76f8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GrafoCompleto", "[", "10", "]"}]], "Input",
 CellChangeTimes->{{3.9683544987344627`*^9, 3.9683545060474987`*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"474b83f5-db6d-bb44-96ec-8e7153651a14"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, 
       SparseArray[
       Automatic, {10, 10}, 0, {
        1, {{0, 9, 18, 27, 36, 45, 54, 63, 72, 81, 90}, {{2}, {3}, {4}, {5}, {
          6}, {7}, {8}, {9}, {10}, {1}, {3}, {4}, {5}, {6}, {7}, {8}, {9}, {
          10}, {1}, {2}, {4}, {5}, {6}, {7}, {8}, {9}, {10}, {1}, {2}, {3}, {
          5}, {6}, {7}, {8}, {9}, {10}, {1}, {2}, {3}, {4}, {6}, {7}, {8}, {
          9}, {10}, {1}, {2}, {3}, {4}, {5}, {7}, {8}, {9}, {10}, {1}, {2}, {
          3}, {4}, {5}, {6}, {8}, {9}, {10}, {1}, {2}, {3}, {4}, {5}, {6}, {
          7}, {9}, {10}, {1}, {2}, {3}, {4}, {5}, {6}, {7}, {8}, {10}, {1}, {
          2}, {3}, {4}, {5}, {6}, {7}, {8}, {9}}}, Pattern}]}, {
      GraphLayout -> {"CircularEmbedding", "OptimalOrder" -> False}, 
       ImagePadding -> 10, VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
        ArrowBox[CompressedData["
1:eJx1kjEPwUAYQKvMFr9AzGIUIW7xC4SBxFBl7kJM4mcYxGJGYpd0IhGDwWJm
6oLBSoi73PCar0mHy2vve+/abDeo95OO4+R/t2tuvz1M5U7XcPWazka3SCWa
tUw6uIdeVCg+9mdF/mloXtU8JG+Z9UKvY3wymJfKx13F+V/PGO/ptVoL77va
T/nC/Lf2UxXB3/gp4xfj485lufEOW+MXOw/2k7OfnP3k7CdnPzn7BT/bT85+
9rKPnH3k7CNnHzn7BD/bR84+9tCfnP7k9CenPzn9yelPX/qR04+cfsJ5WD9y
+tGH88k5XzhvO5+c8zmP+wvfy+5Pzv2F72nfJxf+P/s8+Rch8sfB
         "], 0.02261146496815286]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {
         DiskBox[{-0.5877852522924737, 0.809016994374948}, 
          0.02261146496815286], 
         InsetBox["1", 
          Offset[{-1.4530850560107222, 2.}, \
{-0.602644690572911, 0.8294692565724991}], ImageScaled[{0.8632712640026805, 0.}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.9510565162951538, 0.3090169943749484}, 
          0.02261146496815286], 
         InsetBox["2", 
          Offset[{-2., 0.6498393924658146}, \
{-0.9731146393297009, 0.3161841130108015}], ImageScaled[{1., 0.33754015188354636}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.9510565162951534, -0.30901699437494645`}, 
          0.02261146496815286], 
         InsetBox["3", 
          Offset[{-2., -0.6498393924658107}, \
{-0.9731146393297005, -0.3161841130107995}], ImageScaled[{1., 0.6624598481164526}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.5877852522924726, -0.8090169943749468}, 
          0.02261146496815286], 
         InsetBox["4", 
          Offset[{-1.4530850560107216, -2.}, \
{-0.6026446905729099, -0.8294692565724979}], ImageScaled[{0.8632712640026804, 1.}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.049014748177263*^-16, -1.}, 0.02261146496815286], 
         InsetBox["5", 
          Offset[{1.2098029496354525*^-15, -2.}, \
{6.185791833247513*^-16, -1.0226114649681528}], ImageScaled[{0.4999999999999997, 1.}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.5877852522924738, -0.8090169943749481}, 
          0.02261146496815286], 
         InsetBox["6", 
          Offset[{1.4530850560107222, -2.}, \
{0.602644690572911, -0.8294692565724993}], ImageScaled[{0.13672873599731944, 1.}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.9510565162951539, -0.3090169943749485}, 
          0.02261146496815286], 
         InsetBox["7", 
          Offset[{2., -0.6498393924658148}, \
{0.973114639329701, -0.3161841130108016}], ImageScaled[{0., 0.6624598481164536}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.9510565162951533, 0.30901699437494634`}, 
          0.02261146496815286], 
         InsetBox["8", 
          Offset[{1.9999999999999998, 0.6498393924658105}, \
{0.9731146393297004, 0.3161841130107994}], ImageScaled[{5.551115123125783*^-17, 0.33754015188354736}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.5877852522924726, 0.8090169943749468}, 
          0.02261146496815286], 
         InsetBox["9", 
          Offset[{1.4530850560107216, 2.}, \
{0.6026446905729099, 0.8294692565724979}], ImageScaled[{0.1367287359973196, 0.}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-7.044813998280222*^-16, 1.}, 0.02261146496815286], 
         InsetBox["10", 
          Offset[{-1.4089627996560444*^-15, 2.}, \
{-7.204107563209488*^-16, 1.0226114649681528}], ImageScaled[{0.5000000000000003, 0.}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImagePadding->10]], "Output",
 CellChangeTimes->{3.968354506482729*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"20266b0c-9c51-244d-9723-f7b391038331"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"grafo", "=", 
  RowBox[{"Grafo", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "12"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "9"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "11"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "12"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "9"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", ",", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5", ",", "9"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6", ",", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6", ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"7", ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"8", ",", "9"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"9", ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"9", ",", "11"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"9", ",", "12"}], "}"}]}], "}"}], ",", 
    RowBox[{"pesos", "->", 
     RowBox[{
      RowBox[{"-", "1"}], " ", 
      RowBox[{"{", 
       RowBox[{
       "14", ",", "6", ",", "14", ",", "12", ",", "6", ",", "13", ",", "2", 
        ",", "2", ",", "4", ",", "17", ",", "16", ",", "19", ",", "8", ",", 
        "18", ",", "20", ",", "11", ",", "11", ",", "18", ",", "1", ",", 
        "6"}], "}"}]}]}], ",", 
    RowBox[{"mostrarpesos", "->", "True"}]}], "]"}]}]], "Input",
 CellLabel->"In[52]:=",ExpressionUUID->"eecc415e-c876-f34c-8509-3170a374de6d"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 3, 6, 7, 12, 2, 9, 11, 10, 4, 5, 8}, {
      Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {6, 4}, {6, 7}, {6, 8}, {6, 5}, {
       2, 7}, {2, 9}, {10, 4}, {10, 9}, {11, 7}, {3, 4}, {3, 9}, {4, 9}, {12, 
       7}, {7, 9}, {7, 8}, {7, 5}}}, {
      EdgeLabels -> {
        UndirectedEdge[1, 7] -> -14, UndirectedEdge[3, 9] -> -4, 
         UndirectedEdge[6, 10] -> -20, UndirectedEdge[3, 10] -> -17, 
         UndirectedEdge[4, 7] -> -16, UndirectedEdge[1, 12] -> -12, 
         UndirectedEdge[1, 3] -> -14, UndirectedEdge[6, 7] -> -18, 
         UndirectedEdge[7, 10] -> -11, UndirectedEdge[4, 10] -> -19, 
         UndirectedEdge[2, 7] -> -6, UndirectedEdge[8, 9] -> -11, 
         UndirectedEdge[9, 12] -> -6, UndirectedEdge[9, 11] -> -1, 
         UndirectedEdge[2, 11] -> -2, UndirectedEdge[9, 10] -> -18, 
         UndirectedEdge[2, 9] -> -13, UndirectedEdge[5, 9] -> -8, 
         UndirectedEdge[2, 12] -> -2, UndirectedEdge[1, 6] -> -6}, 
       EdgeWeight -> {-14, -6, -14, -12, -6, -13, -2, -2, -4, -17, -16, -19, \
-8, -18, -20, -11, -11, -18, -1, -6}, ImagePadding -> 10, 
       VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], {
         {Arrowheads[0.], 
          ArrowBox[{{0.7203163528259434, 0.301807111990677}, {
           1.4053008676895724`, 1.073084532677948}}, 0.03416161555401627]}, 
         InsetBox[
          RowBox[{"-", "14"}], {1.0628086102577579, 0.6874458223343125}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{0.7203163528259434, 0.301807111990677}, {0., 
           0.848444427592407}}, 0.03416161555401627]}, InsetBox[
          RowBox[{"-", "6"}], {0.3601581764129717, 0.575125769791542}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{0.7203163528259434, 0.301807111990677}, {
           0.6050448706996364, 1.010571064029834}}, 0.03416161555401627]}, 
         InsetBox[
          RowBox[{"-", "14"}], {0.6626806117627899, 0.6561890880102554}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{0.7203163528259434, 0.301807111990677}, {
           1.6799112561039977`, 0.}}, 0.03416161555401627]}, InsetBox[
          RowBox[{"-", "12"}], {1.2001138044649706, 0.1509035559953385}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1.4053008676895724`, 1.073084532677948}, {
           2.3125759748632557`, 1.091639661768593}}, 0.03416161555401627]}, 
         InsetBox[
          RowBox[{"-", "4"}], {1.858938421276414, 1.0823620972232706}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1.4053008676895724`, 1.073084532677948}, {
           0.9187640691399839, 1.51284880463169}}, 0.03416161555401627]}, 
         InsetBox[
          RowBox[{"-", "17"}], {1.162032468414778, 1.292966668654819}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{0., 0.848444427592407}, {0.6050448706996364, 
           1.010571064029834}}, 0.03416161555401627]}, InsetBox[
          RowBox[{"-", "18"}], {0.3025224353498182, 0.9295077458111205}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{0., 0.848444427592407}, {0.9187640691399839, 
           1.51284880463169}}, 0.03416161555401627]}, InsetBox[
          RowBox[{"-", "20"}], {0.45938203456999194, 1.1806466161120484}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{0.6050448706996364, 1.010571064029834}, {
           1.8696695507089025`, 0.5108015292897954}}, 0.03416161555401627]}, 
         InsetBox[
          RowBox[{"-", "6"}], {1.2373572107042694, 0.7606862966598147}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{0.6050448706996364, 1.010571064029834}, {
           0.9187640691399839, 1.51284880463169}}, 0.03416161555401627]}, 
         InsetBox[
          RowBox[{"-", "11"}], {0.7619044699198101, 1.2617099343307618}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{0.6050448706996364, 1.010571064029834}, {
           0.0846665362384953, 1.92250442121655}}, 0.03416161555401627]}, 
         InsetBox[
          RowBox[{"-", "16"}], {0.34485570346906586, 1.466537742623192}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1.6799112561039977`, 0.}, {1.8696695507089025`, 
           0.5108015292897954}}, 0.03416161555401627]}, InsetBox[
          RowBox[{"-", "2"}], {1.7747904034064501, 0.2554007646448977}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1.6799112561039977`, 0.}, {2.3125759748632557`, 
           1.091639661768593}}, 0.03416161555401627]}, InsetBox[
          RowBox[{"-", "6"}], {1.9962436154836267, 0.5458198308842965}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1.8696695507089025`, 0.5108015292897954}, {
           2.3125759748632557`, 1.091639661768593}}, 0.03416161555401627]}, 
         InsetBox[
          RowBox[{"-", "13"}], {2.091122762786079, 0.8012205955291942}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1.8696695507089025`, 0.5108015292897954}, {
           2.8092591135006737`, 0.27226931108475716`}}, 0.03416161555401627]},
          InsetBox[
          RowBox[{"-", "2"}], {2.339464332104788, 0.3915354201872763}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{2.3125759748632557`, 1.091639661768593}, {
           2.8092591135006737`, 0.27226931108475716`}}, 0.03416161555401627]},
          InsetBox[
          RowBox[{"-", "1"}], {2.5609175441819647, 0.6819544864266751}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{2.3125759748632557`, 1.091639661768593}, {
           0.9187640691399839, 1.51284880463169}}, 0.03416161555401627]}, 
         InsetBox[
          RowBox[{"-", "18"}], {1.6156700220016198, 1.3022442332001414}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{2.3125759748632557`, 1.091639661768593}, {
           3.565434161269872, 1.1956577933937347`}}, 0.03416161555401627]}, 
         InsetBox[
          RowBox[{"-", "8"}], {2.939005068066564, 1.143648727581164}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{2.3125759748632557`, 1.091639661768593}, {
           3.0424041857002706`, 2.0816096306596994`}}, 0.03416161555401627]}, 
         InsetBox[
          RowBox[{"-", "11"}], {2.677490080281763, 1.5866246462141462}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{0.9187640691399839, 1.51284880463169}, {
           0.0846665362384953, 1.92250442121655}}, 0.03416161555401627]}, 
         InsetBox[
          RowBox[{"-", "19"}], {0.5017153026892396, 1.7176766129241199}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {
         DiskBox[{0.7203163528259434, 0.301807111990677}, 
          0.03416161555401627], 
         InsetBox["1", 
          Offset[{2, 2}, {0.7544779683799597, 0.33596872754469326}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.4053008676895724`, 1.073084532677948}, 
          0.03416161555401627], 
         InsetBox["3", 
          Offset[{2, 2}, {1.4394624832435887, 1.1072461482319642}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0., 0.848444427592407}, 0.03416161555401627], 
         InsetBox["6", 
          Offset[{2, 2}, {0.03416161555401627, 0.8826060431464233}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.6050448706996364, 1.010571064029834}, 
          0.03416161555401627], 
         InsetBox["7", 
          Offset[{2, 2}, {0.6392064862536527, 1.0447326795838503}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.6799112561039977`, 0.}, 0.03416161555401627], 
         InsetBox["12", 
          Offset[{2, 2}, {1.714072871658014, 0.03416161555401627}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.8696695507089025`, 0.5108015292897954}, 
          0.03416161555401627], 
         InsetBox["2", 
          Offset[{2, 2}, {1.9038311662629188, 0.5449631448438117}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.3125759748632557`, 1.091639661768593}, 
          0.03416161555401627], 
         InsetBox["9", 
          Offset[{2, 2}, {2.346737590417272, 1.1258012773226094}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.8092591135006737`, 0.27226931108475716`}, 
          0.03416161555401627], 
         InsetBox["11", 
          Offset[{2, 2}, {2.84342072905469, 0.3064309266387734}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.9187640691399839, 1.51284880463169}, 0.03416161555401627],
          InsetBox["10", 
          Offset[{2, 2}, {0.9529256846940002, 1.5470104201857062}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.0846665362384953, 1.92250442121655}, 0.03416161555401627],
          InsetBox["4", 
          Offset[{2, 2}, {0.11882815179251156, 1.9566660367705664}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.565434161269872, 1.1956577933937347`}, 
          0.03416161555401627], 
         InsetBox["5", Offset[{2, 2}, {3.599595776823888, 1.229819408947751}],
           ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.0424041857002706`, 2.0816096306596994`}, 
          0.03416161555401627], 
         InsetBox["8", 
          Offset[{2, 2}, {3.076565801254287, 2.1157712462137157}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImagePadding->10]], "Output",
 CellChangeTimes->{3.968354706728426*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"cab52334-5d79-5d47-817f-8ffb59d57f35"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AlDijkstra", "[", 
  RowBox[{"grafo", ",", " ", "6", ",", "8"}], "]"}]], "Input",
 CellChangeTimes->{{3.968354769544895*^9, 3.968354777567316*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"be2f15b6-6c80-ae4f-a099-90cd40b08fa5"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"La longitud de un camino m\[AAcute]s corto es: \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"-", "98"}]}],
  SequenceForm["La longitud de un camino m\[AAcute]s corto es: ", -98],
  Editable->False]], "Print",
 CellChangeTimes->{3.968354777952917*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[55]:=",ExpressionUUID->"50ab978d-6454-8d4a-90d2-6c6efb1decf8"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Iteraciones: \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "3", "6", "7", "12", "2", "9", "11", "10", "4", "5", "8"},
       {
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}]},
       {
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "6"}], ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "18"}], ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "20"}], ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}]},
       {
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "6"}], ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "37"}], ",", 
          RowBox[{"{", "10", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "31"}], ",", 
          RowBox[{"{", "10", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "38"}], ",", 
          RowBox[{"{", "10", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "20"}], ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "39"}], ",", 
          RowBox[{"{", "10", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}]},
       {
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "6"}], ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "37"}], ",", 
          RowBox[{"{", "10", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "55"}], ",", 
          RowBox[{"{", "4", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "38"}], ",", 
          RowBox[{"{", "10", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "20"}], ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "39"}], ",", 
          RowBox[{"{", "10", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}]},
       {
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "69"}], ",", 
          RowBox[{"{", "7", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "37"}], ",", 
          RowBox[{"{", "10", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "55"}], ",", 
          RowBox[{"{", "4", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "61"}], ",", 
          RowBox[{"{", "7", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "38"}], ",", 
          RowBox[{"{", "10", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "20"}], ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "39"}], ",", 
          RowBox[{"{", "10", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}]},
       {
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "69"}], ",", 
          RowBox[{"{", "7", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "83"}], ",", 
          RowBox[{"{", "1", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "55"}], ",", 
          RowBox[{"{", "4", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "81"}], ",", 
          RowBox[{"{", "1", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "61"}], ",", 
          RowBox[{"{", "7", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "38"}], ",", 
          RowBox[{"{", "10", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "20"}], ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "39"}], ",", 
          RowBox[{"{", "10", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}]},
       {
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "69"}], ",", 
          RowBox[{"{", "7", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "83"}], ",", 
          RowBox[{"{", "1", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "55"}], ",", 
          RowBox[{"{", "4", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "81"}], ",", 
          RowBox[{"{", "1", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "61"}], ",", 
          RowBox[{"{", "7", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "87"}], ",", 
          RowBox[{"{", "3", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "20"}], ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "39"}], ",", 
          RowBox[{"{", "10", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}]},
       {
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "69"}], ",", 
          RowBox[{"{", "7", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "83"}], ",", 
          RowBox[{"{", "1", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "55"}], ",", 
          RowBox[{"{", "4", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "93"}], ",", 
          RowBox[{"{", "9", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "100"}], ",", 
          RowBox[{"{", "9", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "87"}], ",", 
          RowBox[{"{", "3", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "88"}], ",", 
          RowBox[{"{", "9", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "20"}], ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "39"}], ",", 
          RowBox[{"{", "10", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "95"}], ",", 
          RowBox[{"{", "9", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "98"}], ",", 
          RowBox[{"{", "9", "}"}]}], "}"}]},
       {
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "69"}], ",", 
          RowBox[{"{", "7", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "83"}], ",", 
          RowBox[{"{", "1", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "55"}], ",", 
          RowBox[{"{", "4", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "102"}], ",", 
          RowBox[{"{", "2", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "100"}], ",", 
          RowBox[{"{", "9", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "87"}], ",", 
          RowBox[{"{", "3", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "102"}], ",", 
          RowBox[{"{", "2", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "20"}], ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "39"}], ",", 
          RowBox[{"{", "10", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "95"}], ",", 
          RowBox[{"{", "9", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "98"}], ",", 
          RowBox[{"{", "9", "}"}]}], "}"}]},
       {
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "69"}], ",", 
          RowBox[{"{", "7", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "83"}], ",", 
          RowBox[{"{", "1", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "55"}], ",", 
          RowBox[{"{", "4", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "102"}], ",", 
          RowBox[{"{", "2", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "100"}], ",", 
          RowBox[{"{", "9", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "87"}], ",", 
          RowBox[{"{", "3", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "102"}], ",", 
          RowBox[{"{", "2", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "20"}], ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "39"}], ",", 
          RowBox[{"{", "10", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "95"}], ",", 
          RowBox[{"{", "9", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "98"}], ",", 
          RowBox[{"{", "9", "}"}]}], "}"}]},
       {
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "69"}], ",", 
          RowBox[{"{", "7", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "83"}], ",", 
          RowBox[{"{", "1", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "55"}], ",", 
          RowBox[{"{", "4", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "102"}], ",", 
          RowBox[{"{", "2", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "100"}], ",", 
          RowBox[{"{", "9", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "87"}], ",", 
          RowBox[{"{", "3", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "102"}], ",", 
          RowBox[{"{", "2", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "20"}], ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "39"}], ",", 
          RowBox[{"{", "10", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "95"}], ",", 
          RowBox[{"{", "9", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "98"}], ",", 
          RowBox[{"{", "9", "}"}]}], "}"}]},
       {
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "69"}], ",", 
          RowBox[{"{", "7", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "83"}], ",", 
          RowBox[{"{", "1", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "55"}], ",", 
          RowBox[{"{", "4", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "102"}], ",", 
          RowBox[{"{", "2", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "100"}], ",", 
          RowBox[{"{", "9", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "87"}], ",", 
          RowBox[{"{", "3", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "102"}], ",", 
          RowBox[{"{", "2", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "20"}], ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "39"}], ",", 
          RowBox[{"{", "10", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "95"}], ",", 
          RowBox[{"{", "9", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "98"}], ",", 
          RowBox[{"{", "9", "}"}]}], "}"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Iteraciones: ", 
   MatrixForm[{{1, 3, 6, 7, 12, 2, 9, 11, 10, 4, 5, 8}, {{
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}, {0, {}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}}, {{-6, {6}}, {
       DirectedInfinity[1], {}}, {0, {}}, {-18, {6}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}, {-20, {6}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}}, {{-6, {6}}, {-37, {10}}, {
      0, {}}, {-31, {10}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}, {-38, {10}}, {
       DirectedInfinity[1], {}}, {-20, {6}}, {-39, {10}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}}, {{-6, {6}}, {-37, {10}}, {
      0, {}}, {-55, {4}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}, {-38, {10}}, {
       DirectedInfinity[1], {}}, {-20, {6}}, {-39, {10}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}}, {{-69, {7}}, {-37, {10}}, {
      0, {}}, {-55, {4}}, {
       DirectedInfinity[1], {}}, {-61, {7}}, {-38, {10}}, {
       DirectedInfinity[1], {}}, {-20, {6}}, {-39, {10}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}}, {{-69, {7}}, {-83, {1}}, {0, {}}, {-55, {4}}
      , {-81, {1}}, {-61, {7}}, {-38, {10}}, {
       DirectedInfinity[1], {}}, {-20, {6}}, {-39, {10}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}}, {{-69, {7}}, {-83, {1}}, {
      0, {}}, {-55, {4}}, {-81, {1}}, {-61, {7}}, {-87, {3}}, {
       DirectedInfinity[1], {}}, {-20, {6}}, {-39, {10}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}}, {{-69, {7}}, {-83, {1}}, {
      0, {}}, {-55, {4}}, {-93, {9}}, {-100, {9}}, {-87, {3}}, {-88, {
       9}}, {-20, {6}}, {-39, {10}}, {-95, {9}}, {-98, {9}}}, {{-69, {
       7}}, {-83, {1}}, {
      0, {}}, {-55, {4}}, {-102, {2}}, {-100, {9}}, {-87, {3}}, {-102, {
       2}}, {-20, {6}}, {-39, {10}}, {-95, {9}}, {-98, {9}}}, {{-69, {
       7}}, {-83, {1}}, {
      0, {}}, {-55, {4}}, {-102, {2}}, {-100, {9}}, {-87, {3}}, {-102, {
       2}}, {-20, {6}}, {-39, {10}}, {-95, {9}}, {-98, {9}}}, {{-69, {
       7}}, {-83, {1}}, {
      0, {}}, {-55, {4}}, {-102, {2}}, {-100, {9}}, {-87, {3}}, {-102, {
       2}}, {-20, {6}}, {-39, {10}}, {-95, {9}}, {-98, {9}}}, {{-69, {
       7}}, {-83, {1}}, {
      0, {}}, {-55, {4}}, {-102, {2}}, {-100, {9}}, {-87, {3}}, {-102, {
       2}}, {-20, {6}}, {-39, {10}}, {-95, {9}}, {-98, {9}}}}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.9683547779696083`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[55]:=",ExpressionUUID->"3e4b8a2d-225e-af4b-8798-984074b801a5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AlDijkstra", "[", 
  RowBox[{"grafo", ",", " ", "6", ",", "8", ",", " ", 
   RowBox[{"all", "->", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9683547995365753`*^9, 3.968354802605438*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"9c16af9d-db76-b049-88ca-bd6b370ca46a"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Tabla de pesos del grafo\"\>"], "Print",
 CellChangeTimes->{3.9683548033892994`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[56]:=",ExpressionUUID->"1ff459b1-f0c1-194a-b41a-02dc9ddd6da1"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox[
       StyleBox["1",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], 
      TagBox[
       StyleBox["3",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], 
      TagBox[
       StyleBox["6",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], 
      TagBox[
       StyleBox["7",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], 
      TagBox[
       StyleBox["12",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], 
      TagBox[
       StyleBox["2",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], 
      TagBox[
       StyleBox["9",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], 
      TagBox[
       StyleBox["11",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], 
      TagBox[
       StyleBox["10",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], 
      TagBox[
       StyleBox["4",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], 
      TagBox[
       StyleBox["5",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], 
      TagBox[
       StyleBox["8",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm]},
     {
      TagBox[
       StyleBox["1",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], "0", 
      RowBox[{"-", "14"}], 
      RowBox[{"-", "6"}], 
      RowBox[{"-", "14"}], 
      RowBox[{"-", "12"}], "0", "0", "0", "0", "0", "0", "0"},
     {
      TagBox[
       StyleBox["3",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], 
      RowBox[{"-", "14"}], "0", "0", "0", "0", "0", 
      RowBox[{"-", "4"}], "0", 
      RowBox[{"-", "17"}], "0", "0", "0"},
     {
      TagBox[
       StyleBox["6",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], 
      RowBox[{"-", "6"}], "0", "0", 
      RowBox[{"-", "18"}], "0", "0", "0", "0", 
      RowBox[{"-", "20"}], "0", "0", "0"},
     {
      TagBox[
       StyleBox["7",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], 
      RowBox[{"-", "14"}], "0", 
      RowBox[{"-", "18"}], "0", "0", 
      RowBox[{"-", "6"}], "0", "0", 
      RowBox[{"-", "11"}], 
      RowBox[{"-", "16"}], "0", "0"},
     {
      TagBox[
       StyleBox["12",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], 
      RowBox[{"-", "12"}], "0", "0", "0", "0", 
      RowBox[{"-", "2"}], 
      RowBox[{"-", "6"}], "0", "0", "0", "0", "0"},
     {
      TagBox[
       StyleBox["2",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], "0", "0", "0", 
      RowBox[{"-", "6"}], 
      RowBox[{"-", "2"}], "0", 
      RowBox[{"-", "13"}], 
      RowBox[{"-", "2"}], "0", "0", "0", "0"},
     {
      TagBox[
       StyleBox["9",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], "0", 
      RowBox[{"-", "4"}], "0", "0", 
      RowBox[{"-", "6"}], 
      RowBox[{"-", "13"}], "0", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "18"}], "0", 
      RowBox[{"-", "8"}], 
      RowBox[{"-", "11"}]},
     {
      TagBox[
       StyleBox["11",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], "0", "0", "0", "0", "0", 
      RowBox[{"-", "2"}], 
      RowBox[{"-", "1"}], "0", "0", "0", "0", "0"},
     {
      TagBox[
       StyleBox["10",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], "0", 
      RowBox[{"-", "17"}], 
      RowBox[{"-", "20"}], 
      RowBox[{"-", "11"}], "0", "0", 
      RowBox[{"-", "18"}], "0", "0", 
      RowBox[{"-", "19"}], "0", "0"},
     {
      TagBox[
       StyleBox["4",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], "0", "0", "0", 
      RowBox[{"-", "16"}], "0", "0", "0", "0", 
      RowBox[{"-", "19"}], "0", "0", "0"},
     {
      TagBox[
       StyleBox["5",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], "0", "0", "0", "0", "0", "0", 
      RowBox[{"-", "8"}], "0", "0", "0", "0", "0"},
     {
      TagBox[
       StyleBox["8",
        StripOnInput->False,
        LineColor->GrayLevel[0],
        FrontFaceColor->GrayLevel[0],
        BackFaceColor->GrayLevel[0],
        GraphicsColor->GrayLevel[0],
        FontColor->GrayLevel[0]],
       HoldForm], "0", "0", "0", "0", "0", "0", 
      RowBox[{"-", "11"}], "0", "0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, 
      "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$, TableHeadings -> {{
       Style[1, 
        GrayLevel[0]], 
       Style[3, 
        GrayLevel[0]], 
       Style[6, 
        GrayLevel[0]], 
       Style[7, 
        GrayLevel[0]], 
       Style[12, 
        GrayLevel[0]], 
       Style[2, 
        GrayLevel[0]], 
       Style[9, 
        GrayLevel[0]], 
       Style[11, 
        GrayLevel[0]], 
       Style[10, 
        GrayLevel[0]], 
       Style[4, 
        GrayLevel[0]], 
       Style[5, 
        GrayLevel[0]], 
       Style[8, 
        GrayLevel[0]]}, {
       Style[1, 
        GrayLevel[0]], 
       Style[3, 
        GrayLevel[0]], 
       Style[6, 
        GrayLevel[0]], 
       Style[7, 
        GrayLevel[0]], 
       Style[12, 
        GrayLevel[0]], 
       Style[2, 
        GrayLevel[0]], 
       Style[9, 
        GrayLevel[0]], 
       Style[11, 
        GrayLevel[0]], 
       Style[10, 
        GrayLevel[0]], 
       Style[4, 
        GrayLevel[0]], 
       Style[5, 
        GrayLevel[0]], 
       Style[8, 
        GrayLevel[0]]}}]]]], "Print",
 CellChangeTimes->{3.9683548033998394`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[56]:=",ExpressionUUID->"60ec0e7d-b4dc-0040-a23b-af0853a76709"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Inicializaci\[OAcute]n: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "\[Infinity]", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "\[Infinity]", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "0", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "\[Infinity]", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"12", ",", "\[Infinity]", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "\[Infinity]", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "\[Infinity]", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "\[Infinity]", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "\[Infinity]", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "\[Infinity]", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "\[Infinity]", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "\[Infinity]", ",", 
       RowBox[{"{", "}"}]}], "}"}]}], "}"}]}],
  SequenceForm["Inicializaci\[OAcute]n: ", {{1, 
     DirectedInfinity[1], {}}, {3, 
     DirectedInfinity[1], {}}, {6, 0, {}}, {7, 
     DirectedInfinity[1], {}}, {12, 
     DirectedInfinity[1], {}}, {2, 
     DirectedInfinity[1], {}}, {9, 
     DirectedInfinity[1], {}}, {11, 
     DirectedInfinity[1], {}}, {10, 
     DirectedInfinity[1], {}}, {4, 
     DirectedInfinity[1], {}}, {5, 
     DirectedInfinity[1], {}}, {8, 
     DirectedInfinity[1], {}}}],
  Editable->False]], "Print",
 CellChangeTimes->{3.9683548034074802`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[56]:=",ExpressionUUID->"5010fa55-67a3-1f4a-aa95-dea2d3c905f8"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Se seleccion\[OAcute] el nodo: \"\>", "\[InvisibleSpace]", 
   "6"}],
  SequenceForm["Se seleccion\[OAcute] el nodo: ", 6],
  Editable->False]], "Print",
 CellChangeTimes->{3.9683548034110546`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[56]:=",ExpressionUUID->"1578e693-3243-5542-8427-be2be2e370e9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Lista actual de v\[EAcute]rtices: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "3", ",", "7", ",", "12", ",", "2", ",", "9", ",", "11", ",", 
     "10", ",", "4", ",", "5", ",", "8"}], "}"}]}],
  SequenceForm[
  "Lista actual de v\[EAcute]rtices: ", {1, 3, 7, 12, 2, 9, 11, 10, 4, 5, 8}],
  Editable->False]], "Print",
 CellChangeTimes->{3.968354803414051*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[56]:=",ExpressionUUID->"1fdca88b-308e-c142-b303-9477db14c96d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Lista actual de marcas: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "6"}], ",", 
       RowBox[{"{", "6", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "\[Infinity]", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", 
       RowBox[{"-", "18"}], ",", 
       RowBox[{"{", "6", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"12", ",", "\[Infinity]", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "\[Infinity]", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "\[Infinity]", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "\[Infinity]", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", 
       RowBox[{"-", "20"}], ",", 
       RowBox[{"{", "6", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "\[Infinity]", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "\[Infinity]", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "\[Infinity]", ",", 
       RowBox[{"{", "}"}]}], "}"}]}], "}"}]}],
  SequenceForm["Lista actual de marcas: ", {{1, -6, {6}}, {3, 
     DirectedInfinity[1], {}}, {7, -18, {6}}, {12, 
     DirectedInfinity[1], {}}, {2, 
     DirectedInfinity[1], {}}, {9, 
     DirectedInfinity[1], {}}, {11, 
     DirectedInfinity[1], {}}, {10, -20, {6}}, {4, 
     DirectedInfinity[1], {}}, {5, 
     DirectedInfinity[1], {}}, {8, 
     DirectedInfinity[1], {}}}],
  Editable->False]], "Print",
 CellChangeTimes->{3.96835480341844*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[56]:=",ExpressionUUID->"f94f318e-c6ad-8a43-b061-ef6832808e8d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Se seleccion\[OAcute] el nodo: \"\>", "\[InvisibleSpace]", 
   "10"}],
  SequenceForm["Se seleccion\[OAcute] el nodo: ", 10],
  Editable->False]], "Print",
 CellChangeTimes->{3.968354803423382*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[56]:=",ExpressionUUID->"9de6402f-c0d5-7949-9fcf-919563530d61"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Lista actual de v\[EAcute]rtices: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "3", ",", "7", ",", "12", ",", "2", ",", "9", ",", "11", ",", 
     "4", ",", "5", ",", "8"}], "}"}]}],
  SequenceForm[
  "Lista actual de v\[EAcute]rtices: ", {1, 3, 7, 12, 2, 9, 11, 4, 5, 8}],
  Editable->False]], "Print",
 CellChangeTimes->{3.9683548034253864`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[56]:=",ExpressionUUID->"fcd607a5-c278-324d-b6d7-6f11e15f3634"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Lista actual de marcas: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "6"}], ",", 
       RowBox[{"{", "6", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", 
       RowBox[{"-", "37"}], ",", 
       RowBox[{"{", "10", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", 
       RowBox[{"-", "31"}], ",", 
       RowBox[{"{", "10", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"12", ",", "\[Infinity]", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "\[Infinity]", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", 
       RowBox[{"-", "38"}], ",", 
       RowBox[{"{", "10", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "\[Infinity]", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", 
       RowBox[{"-", "39"}], ",", 
       RowBox[{"{", "10", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "\[Infinity]", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "\[Infinity]", ",", 
       RowBox[{"{", "}"}]}], "}"}]}], "}"}]}],
  SequenceForm[
  "Lista actual de marcas: ", {{1, -6, {6}}, {3, -37, {10}}, {7, -31, {10}}, {
    12, 
     DirectedInfinity[1], {}}, {2, 
     DirectedInfinity[1], {}}, {9, -38, {10}}, {11, 
     DirectedInfinity[1], {}}, {4, -39, {10}}, {5, 
     DirectedInfinity[1], {}}, {8, 
     DirectedInfinity[1], {}}}],
  Editable->False]], "Print",
 CellChangeTimes->{3.968354803430992*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[56]:=",ExpressionUUID->"679aa65e-69ed-c04e-84f5-43ba59b8adde"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Se seleccion\[OAcute] el nodo: \"\>", "\[InvisibleSpace]", 
   "4"}],
  SequenceForm["Se seleccion\[OAcute] el nodo: ", 4],
  Editable->False]], "Print",
 CellChangeTimes->{3.9683548034400997`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[56]:=",ExpressionUUID->"56591919-1332-344a-bfd7-bcc76f5d53d7"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Lista actual de v\[EAcute]rtices: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "3", ",", "7", ",", "12", ",", "2", ",", "9", ",", "11", ",", 
     "5", ",", "8"}], "}"}]}],
  SequenceForm[
  "Lista actual de v\[EAcute]rtices: ", {1, 3, 7, 12, 2, 9, 11, 5, 8}],
  Editable->False]], "Print",
 CellChangeTimes->{3.968354803445139*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[56]:=",ExpressionUUID->"21df5433-9e46-1d4a-83e7-bdaac595d3f0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Lista actual de marcas: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "6"}], ",", 
       RowBox[{"{", "6", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", 
       RowBox[{"-", "37"}], ",", 
       RowBox[{"{", "10", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", 
       RowBox[{"-", "55"}], ",", 
       RowBox[{"{", "4", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"12", ",", "\[Infinity]", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "\[Infinity]", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", 
       RowBox[{"-", "38"}], ",", 
       RowBox[{"{", "10", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "\[Infinity]", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "\[Infinity]", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "\[Infinity]", ",", 
       RowBox[{"{", "}"}]}], "}"}]}], "}"}]}],
  SequenceForm[
  "Lista actual de marcas: ", {{1, -6, {6}}, {3, -37, {10}}, {7, -55, {4}}, {
    12, 
     DirectedInfinity[1], {}}, {2, 
     DirectedInfinity[1], {}}, {9, -38, {10}}, {11, 
     DirectedInfinity[1], {}}, {5, 
     DirectedInfinity[1], {}}, {8, 
     DirectedInfinity[1], {}}}],
  Editable->False]], "Print",
 CellChangeTimes->{3.9683548034513474`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[56]:=",ExpressionUUID->"d4afcc32-fc94-fc4c-a780-aca7a0bc756d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Se seleccion\[OAcute] el nodo: \"\>", "\[InvisibleSpace]", 
   "7"}],
  SequenceForm["Se seleccion\[OAcute] el nodo: ", 7],
  Editable->False]], "Print",
 CellChangeTimes->{3.9683548034552*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[56]:=",ExpressionUUID->"e38939e8-faad-324d-ae48-5cb3f829997a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Lista actual de v\[EAcute]rtices: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "3", ",", "12", ",", "2", ",", "9", ",", "11", ",", "5", ",", 
     "8"}], "}"}]}],
  SequenceForm[
  "Lista actual de v\[EAcute]rtices: ", {1, 3, 12, 2, 9, 11, 5, 8}],
  Editable->False]], "Print",
 CellChangeTimes->{3.9683548034587555`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[56]:=",ExpressionUUID->"a2678e89-c3b6-5745-96a6-0024e6697889"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Lista actual de marcas: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "69"}], ",", 
       RowBox[{"{", "7", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", 
       RowBox[{"-", "37"}], ",", 
       RowBox[{"{", "10", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"12", ",", "\[Infinity]", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"-", "61"}], ",", 
       RowBox[{"{", "7", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", 
       RowBox[{"-", "38"}], ",", 
       RowBox[{"{", "10", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "\[Infinity]", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "\[Infinity]", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "\[Infinity]", ",", 
       RowBox[{"{", "}"}]}], "}"}]}], "}"}]}],
  SequenceForm[
  "Lista actual de marcas: ", {{1, -69, {7}}, {3, -37, {10}}, {12, 
     DirectedInfinity[1], {}}, {2, -61, {7}}, {9, -38, {10}}, {11, 
     DirectedInfinity[1], {}}, {5, 
     DirectedInfinity[1], {}}, {8, 
     DirectedInfinity[1], {}}}],
  Editable->False]], "Print",
 CellChangeTimes->{3.9683548034643364`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[56]:=",ExpressionUUID->"5ef90cb6-1802-684a-9ba4-9d9953c766c4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Se seleccion\[OAcute] el nodo: \"\>", "\[InvisibleSpace]", 
   "1"}],
  SequenceForm["Se seleccion\[OAcute] el nodo: ", 1],
  Editable->False]], "Print",
 CellChangeTimes->{3.968354803480482*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[56]:=",ExpressionUUID->"5d684454-dc81-554f-997b-4df3a4f06bc5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Lista actual de v\[EAcute]rtices: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "3", ",", "12", ",", "2", ",", "9", ",", "11", ",", "5", ",", "8"}], 
    "}"}]}],
  SequenceForm["Lista actual de v\[EAcute]rtices: ", {3, 12, 2, 9, 11, 5, 8}],
  Editable->False]], "Print",
 CellChangeTimes->{3.9683548034857044`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[56]:=",ExpressionUUID->"c069282f-dc75-6a45-b7c5-57539cd8fbc0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Lista actual de marcas: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", 
       RowBox[{"-", "83"}], ",", 
       RowBox[{"{", "1", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"12", ",", 
       RowBox[{"-", "81"}], ",", 
       RowBox[{"{", "1", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"-", "61"}], ",", 
       RowBox[{"{", "7", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", 
       RowBox[{"-", "38"}], ",", 
       RowBox[{"{", "10", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "\[Infinity]", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "\[Infinity]", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "\[Infinity]", ",", 
       RowBox[{"{", "}"}]}], "}"}]}], "}"}]}],
  SequenceForm[
  "Lista actual de marcas: ", {{3, -83, {1}}, {12, -81, {1}}, {2, -61, {7}}, {
    9, -38, {10}}, {11, 
     DirectedInfinity[1], {}}, {5, 
     DirectedInfinity[1], {}}, {8, 
     DirectedInfinity[1], {}}}],
  Editable->False]], "Print",
 CellChangeTimes->{3.9683548034897366`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[56]:=",ExpressionUUID->"a47a79ae-4446-ec48-8739-bcad552f31c2"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Se seleccion\[OAcute] el nodo: \"\>", "\[InvisibleSpace]", 
   "3"}],
  SequenceForm["Se seleccion\[OAcute] el nodo: ", 3],
  Editable->False]], "Print",
 CellChangeTimes->{3.968354803494253*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[56]:=",ExpressionUUID->"c08af023-5f1c-f04e-964d-c23862c3ec12"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Lista actual de v\[EAcute]rtices: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"12", ",", "2", ",", "9", ",", "11", ",", "5", ",", "8"}], "}"}]}],
  SequenceForm["Lista actual de v\[EAcute]rtices: ", {12, 2, 9, 11, 5, 8}],
  Editable->False]], "Print",
 CellChangeTimes->{3.9683548034982433`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[56]:=",ExpressionUUID->"6f36751d-4f51-bc40-9a5a-d98b7438ce8b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Lista actual de marcas: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"12", ",", 
       RowBox[{"-", "81"}], ",", 
       RowBox[{"{", "1", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"-", "61"}], ",", 
       RowBox[{"{", "7", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", 
       RowBox[{"-", "87"}], ",", 
       RowBox[{"{", "3", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "\[Infinity]", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "\[Infinity]", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "\[Infinity]", ",", 
       RowBox[{"{", "}"}]}], "}"}]}], "}"}]}],
  SequenceForm[
  "Lista actual de marcas: ", {{12, -81, {1}}, {2, -61, {7}}, {9, -87, {3}}, {
    11, 
     DirectedInfinity[1], {}}, {5, 
     DirectedInfinity[1], {}}, {8, 
     DirectedInfinity[1], {}}}],
  Editable->False]], "Print",
 CellChangeTimes->{3.968354803503252*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[56]:=",ExpressionUUID->"1be81b62-854f-2748-97f1-5a4ecc387a93"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Se seleccion\[OAcute] el nodo: \"\>", "\[InvisibleSpace]", 
   "9"}],
  SequenceForm["Se seleccion\[OAcute] el nodo: ", 9],
  Editable->False]], "Print",
 CellChangeTimes->{3.9683548035072746`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[56]:=",ExpressionUUID->"919d83c3-48a8-f641-9c6f-98370641ed8e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Lista actual de v\[EAcute]rtices: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"12", ",", "2", ",", "11", ",", "5", ",", "8"}], "}"}]}],
  SequenceForm["Lista actual de v\[EAcute]rtices: ", {12, 2, 11, 5, 8}],
  Editable->False]], "Print",
 CellChangeTimes->{3.968354803509817*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[56]:=",ExpressionUUID->"da66eb91-bf9d-ad48-900c-414a98ac02d5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Lista actual de marcas: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"12", ",", 
       RowBox[{"-", "93"}], ",", 
       RowBox[{"{", "9", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"-", "100"}], ",", 
       RowBox[{"{", "9", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", 
       RowBox[{"-", "88"}], ",", 
       RowBox[{"{", "9", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", 
       RowBox[{"-", "95"}], ",", 
       RowBox[{"{", "9", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", 
       RowBox[{"-", "98"}], ",", 
       RowBox[{"{", "9", "}"}]}], "}"}]}], "}"}]}],
  SequenceForm[
  "Lista actual de marcas: ", {{12, -93, {9}}, {2, -100, {9}}, {
    11, -88, {9}}, {5, -95, {9}}, {8, -98, {9}}}],
  Editable->False]], "Print",
 CellChangeTimes->{3.9683548035146637`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[56]:=",ExpressionUUID->"bcc3f8b7-98eb-ac40-9717-2a4c4dc7df91"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Se seleccion\[OAcute] el nodo: \"\>", "\[InvisibleSpace]", 
   "2"}],
  SequenceForm["Se seleccion\[OAcute] el nodo: ", 2],
  Editable->False]], "Print",
 CellChangeTimes->{3.968354803518257*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[56]:=",ExpressionUUID->"4cfb1076-4565-b347-9daa-8446665d3386"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Lista actual de v\[EAcute]rtices: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"12", ",", "11", ",", "5", ",", "8"}], "}"}]}],
  SequenceForm["Lista actual de v\[EAcute]rtices: ", {12, 11, 5, 8}],
  Editable->False]], "Print",
 CellChangeTimes->{3.9683548035227337`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[56]:=",ExpressionUUID->"08e99f79-7f61-1948-9f50-11f2159e16df"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Lista actual de marcas: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"12", ",", 
       RowBox[{"-", "102"}], ",", 
       RowBox[{"{", "2", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", 
       RowBox[{"-", "102"}], ",", 
       RowBox[{"{", "2", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", 
       RowBox[{"-", "95"}], ",", 
       RowBox[{"{", "9", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", 
       RowBox[{"-", "98"}], ",", 
       RowBox[{"{", "9", "}"}]}], "}"}]}], "}"}]}],
  SequenceForm[
  "Lista actual de marcas: ", {{12, -102, {2}}, {11, -102, {2}}, {
    5, -95, {9}}, {8, -98, {9}}}],
  Editable->False]], "Print",
 CellChangeTimes->{3.968354803526846*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[56]:=",ExpressionUUID->"f4630a3d-7875-df41-9d48-30c64697936e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Se seleccion\[OAcute] el nodo: \"\>", "\[InvisibleSpace]", 
   "12"}],
  SequenceForm["Se seleccion\[OAcute] el nodo: ", 12],
  Editable->False]], "Print",
 CellChangeTimes->{3.96835480353261*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[56]:=",ExpressionUUID->"38d63040-0421-7942-b526-3af5b57a6449"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Lista actual de v\[EAcute]rtices: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"11", ",", "5", ",", "8"}], "}"}]}],
  SequenceForm["Lista actual de v\[EAcute]rtices: ", {11, 5, 8}],
  Editable->False]], "Print",
 CellChangeTimes->{3.9683548035380535`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[56]:=",ExpressionUUID->"63570f98-6c4b-1340-9d91-a7ad0bcc6342"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Lista actual de marcas: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"11", ",", 
       RowBox[{"-", "102"}], ",", 
       RowBox[{"{", "2", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", 
       RowBox[{"-", "95"}], ",", 
       RowBox[{"{", "9", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", 
       RowBox[{"-", "98"}], ",", 
       RowBox[{"{", "9", "}"}]}], "}"}]}], "}"}]}],
  SequenceForm[
  "Lista actual de marcas: ", {{11, -102, {2}}, {5, -95, {9}}, {8, -98, {9}}}],
  Editable->False]], "Print",
 CellChangeTimes->{3.9683548035420628`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[56]:=",ExpressionUUID->"35a725f1-6ae0-a44e-a4f9-83c1e7e5d8af"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Se seleccion\[OAcute] el nodo: \"\>", "\[InvisibleSpace]", 
   "11"}],
  SequenceForm["Se seleccion\[OAcute] el nodo: ", 11],
  Editable->False]], "Print",
 CellChangeTimes->{3.968354803547037*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[56]:=",ExpressionUUID->"11e9bfb4-7988-bf40-b6d5-0420a180c868"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Lista actual de v\[EAcute]rtices: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"5", ",", "8"}], "}"}]}],
  SequenceForm["Lista actual de v\[EAcute]rtices: ", {5, 8}],
  Editable->False]], "Print",
 CellChangeTimes->{3.9683548035510483`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[56]:=",ExpressionUUID->"9606b815-b83a-1045-831b-efc89c593349"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Lista actual de marcas: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"5", ",", 
       RowBox[{"-", "95"}], ",", 
       RowBox[{"{", "9", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", 
       RowBox[{"-", "98"}], ",", 
       RowBox[{"{", "9", "}"}]}], "}"}]}], "}"}]}],
  SequenceForm["Lista actual de marcas: ", {{5, -95, {9}}, {8, -98, {9}}}],
  Editable->False]], "Print",
 CellChangeTimes->{3.9683548035540524`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[56]:=",ExpressionUUID->"6ae3b603-368f-b644-ac3c-4a61132e1c4a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Se seleccion\[OAcute] el nodo: \"\>", "\[InvisibleSpace]", 
   "8"}],
  SequenceForm["Se seleccion\[OAcute] el nodo: ", 8],
  Editable->False]], "Print",
 CellChangeTimes->{3.968354803557575*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[56]:=",ExpressionUUID->"45ab4244-c23b-ee47-8781-f11bf4ba1ca2"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"La longitud de un camino m\[AAcute]s corto es: \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"-", "98"}]}],
  SequenceForm["La longitud de un camino m\[AAcute]s corto es: ", -98],
  Editable->False]], "Print",
 CellChangeTimes->{3.968354803561178*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[56]:=",ExpressionUUID->"080893de-1656-1b4c-8046-f06039926e23"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Lista actual de v\[EAcute]rtices: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "5", "}"}]}],
  SequenceForm["Lista actual de v\[EAcute]rtices: ", {5}],
  Editable->False]], "Print",
 CellChangeTimes->{3.968354803564148*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[56]:=",ExpressionUUID->"1a6cb0a1-90d7-464a-88f2-878d017c8b3b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Lista actual de marcas: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"5", ",", 
      RowBox[{"-", "95"}], ",", 
      RowBox[{"{", "9", "}"}]}], "}"}], "}"}]}],
  SequenceForm["Lista actual de marcas: ", {{5, -95, {9}}}],
  Editable->False]], "Print",
 CellChangeTimes->{3.968354803568714*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[56]:=",ExpressionUUID->"19f0a2d7-6bca-0d44-b732-8aa4237407a3"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Iteraciones: \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "3", "6", "7", "12", "2", "9", "11", "10", "4", "5", "8"},
       {
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}]},
       {
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "6"}], ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "18"}], ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "20"}], ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}]},
       {
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "6"}], ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "37"}], ",", 
          RowBox[{"{", "10", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "31"}], ",", 
          RowBox[{"{", "10", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "38"}], ",", 
          RowBox[{"{", "10", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "20"}], ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "39"}], ",", 
          RowBox[{"{", "10", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}]},
       {
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "6"}], ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "37"}], ",", 
          RowBox[{"{", "10", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "55"}], ",", 
          RowBox[{"{", "4", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "38"}], ",", 
          RowBox[{"{", "10", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "20"}], ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "39"}], ",", 
          RowBox[{"{", "10", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}]},
       {
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "69"}], ",", 
          RowBox[{"{", "7", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "37"}], ",", 
          RowBox[{"{", "10", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "55"}], ",", 
          RowBox[{"{", "4", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "61"}], ",", 
          RowBox[{"{", "7", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "38"}], ",", 
          RowBox[{"{", "10", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "20"}], ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "39"}], ",", 
          RowBox[{"{", "10", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}]},
       {
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "69"}], ",", 
          RowBox[{"{", "7", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "83"}], ",", 
          RowBox[{"{", "1", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "55"}], ",", 
          RowBox[{"{", "4", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "81"}], ",", 
          RowBox[{"{", "1", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "61"}], ",", 
          RowBox[{"{", "7", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "38"}], ",", 
          RowBox[{"{", "10", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "20"}], ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "39"}], ",", 
          RowBox[{"{", "10", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}]},
       {
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "69"}], ",", 
          RowBox[{"{", "7", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "83"}], ",", 
          RowBox[{"{", "1", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "55"}], ",", 
          RowBox[{"{", "4", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "81"}], ",", 
          RowBox[{"{", "1", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "61"}], ",", 
          RowBox[{"{", "7", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "87"}], ",", 
          RowBox[{"{", "3", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "20"}], ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "39"}], ",", 
          RowBox[{"{", "10", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}]},
       {
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "69"}], ",", 
          RowBox[{"{", "7", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "83"}], ",", 
          RowBox[{"{", "1", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "55"}], ",", 
          RowBox[{"{", "4", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "93"}], ",", 
          RowBox[{"{", "9", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "100"}], ",", 
          RowBox[{"{", "9", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "87"}], ",", 
          RowBox[{"{", "3", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "88"}], ",", 
          RowBox[{"{", "9", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "20"}], ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "39"}], ",", 
          RowBox[{"{", "10", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "95"}], ",", 
          RowBox[{"{", "9", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "98"}], ",", 
          RowBox[{"{", "9", "}"}]}], "}"}]},
       {
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "69"}], ",", 
          RowBox[{"{", "7", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "83"}], ",", 
          RowBox[{"{", "1", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "55"}], ",", 
          RowBox[{"{", "4", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "102"}], ",", 
          RowBox[{"{", "2", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "100"}], ",", 
          RowBox[{"{", "9", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "87"}], ",", 
          RowBox[{"{", "3", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "102"}], ",", 
          RowBox[{"{", "2", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "20"}], ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "39"}], ",", 
          RowBox[{"{", "10", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "95"}], ",", 
          RowBox[{"{", "9", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "98"}], ",", 
          RowBox[{"{", "9", "}"}]}], "}"}]},
       {
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "69"}], ",", 
          RowBox[{"{", "7", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "83"}], ",", 
          RowBox[{"{", "1", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "55"}], ",", 
          RowBox[{"{", "4", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "102"}], ",", 
          RowBox[{"{", "2", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "100"}], ",", 
          RowBox[{"{", "9", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "87"}], ",", 
          RowBox[{"{", "3", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "102"}], ",", 
          RowBox[{"{", "2", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "20"}], ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "39"}], ",", 
          RowBox[{"{", "10", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "95"}], ",", 
          RowBox[{"{", "9", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "98"}], ",", 
          RowBox[{"{", "9", "}"}]}], "}"}]},
       {
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "69"}], ",", 
          RowBox[{"{", "7", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "83"}], ",", 
          RowBox[{"{", "1", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "55"}], ",", 
          RowBox[{"{", "4", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "102"}], ",", 
          RowBox[{"{", "2", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "100"}], ",", 
          RowBox[{"{", "9", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "87"}], ",", 
          RowBox[{"{", "3", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "102"}], ",", 
          RowBox[{"{", "2", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "20"}], ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "39"}], ",", 
          RowBox[{"{", "10", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "95"}], ",", 
          RowBox[{"{", "9", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "98"}], ",", 
          RowBox[{"{", "9", "}"}]}], "}"}]},
       {
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "69"}], ",", 
          RowBox[{"{", "7", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "83"}], ",", 
          RowBox[{"{", "1", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "55"}], ",", 
          RowBox[{"{", "4", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "102"}], ",", 
          RowBox[{"{", "2", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "100"}], ",", 
          RowBox[{"{", "9", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "87"}], ",", 
          RowBox[{"{", "3", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "102"}], ",", 
          RowBox[{"{", "2", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "20"}], ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "39"}], ",", 
          RowBox[{"{", "10", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "95"}], ",", 
          RowBox[{"{", "9", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "98"}], ",", 
          RowBox[{"{", "9", "}"}]}], "}"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Iteraciones: ", 
   MatrixForm[{{1, 3, 6, 7, 12, 2, 9, 11, 10, 4, 5, 8}, {{
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}, {0, {}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}}, {{-6, {6}}, {
       DirectedInfinity[1], {}}, {0, {}}, {-18, {6}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}, {-20, {6}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}}, {{-6, {6}}, {-37, {10}}, {
      0, {}}, {-31, {10}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}, {-38, {10}}, {
       DirectedInfinity[1], {}}, {-20, {6}}, {-39, {10}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}}, {{-6, {6}}, {-37, {10}}, {
      0, {}}, {-55, {4}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}, {-38, {10}}, {
       DirectedInfinity[1], {}}, {-20, {6}}, {-39, {10}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}}, {{-69, {7}}, {-37, {10}}, {
      0, {}}, {-55, {4}}, {
       DirectedInfinity[1], {}}, {-61, {7}}, {-38, {10}}, {
       DirectedInfinity[1], {}}, {-20, {6}}, {-39, {10}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}}, {{-69, {7}}, {-83, {1}}, {0, {}}, {-55, {4}}
      , {-81, {1}}, {-61, {7}}, {-38, {10}}, {
       DirectedInfinity[1], {}}, {-20, {6}}, {-39, {10}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}}, {{-69, {7}}, {-83, {1}}, {
      0, {}}, {-55, {4}}, {-81, {1}}, {-61, {7}}, {-87, {3}}, {
       DirectedInfinity[1], {}}, {-20, {6}}, {-39, {10}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}}, {{-69, {7}}, {-83, {1}}, {
      0, {}}, {-55, {4}}, {-93, {9}}, {-100, {9}}, {-87, {3}}, {-88, {
       9}}, {-20, {6}}, {-39, {10}}, {-95, {9}}, {-98, {9}}}, {{-69, {
       7}}, {-83, {1}}, {
      0, {}}, {-55, {4}}, {-102, {2}}, {-100, {9}}, {-87, {3}}, {-102, {
       2}}, {-20, {6}}, {-39, {10}}, {-95, {9}}, {-98, {9}}}, {{-69, {
       7}}, {-83, {1}}, {
      0, {}}, {-55, {4}}, {-102, {2}}, {-100, {9}}, {-87, {3}}, {-102, {
       2}}, {-20, {6}}, {-39, {10}}, {-95, {9}}, {-98, {9}}}, {{-69, {
       7}}, {-83, {1}}, {
      0, {}}, {-55, {4}}, {-102, {2}}, {-100, {9}}, {-87, {3}}, {-102, {
       2}}, {-20, {6}}, {-39, {10}}, {-95, {9}}, {-98, {9}}}, {{-69, {
       7}}, {-83, {1}}, {
      0, {}}, {-55, {4}}, {-102, {2}}, {-100, {9}}, {-87, {3}}, {-102, {
       2}}, {-20, {6}}, {-39, {10}}, {-95, {9}}, {-98, {9}}}}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.9683548035830154`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[56]:=",ExpressionUUID->"4d7e7bac-9822-234a-b4e5-1a82189b3174"]
}, Open  ]]
}, Open  ]],

Cell["\<\
Inicio a Fin: 6->10->4->7->1->3->9->8
Fin a Inicio: 8->9->3->1->7->4->10->6
Recordar en la longitud usar el valor absoluto: |-n| -> n\
\>", "Text",
 CellChangeTimes->{{3.968354872446064*^9, 
  3.9683550417950573`*^9}},ExpressionUUID->"7019bd1a-3ce9-cd4c-b003-\
2df98627e536"],

Cell["Error com\[UAcute]n", "Text",
 CellChangeTimes->{{3.968354763528164*^9, 
  3.9683547672314777`*^9}},ExpressionUUID->"1fa1fc34-a0d0-c64d-b3b7-\
0b03e94158fd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"grafo2", "=", 
  RowBox[{"Grafo", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "12"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "9"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "11"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "12"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "9"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", ",", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5", ",", "9"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6", ",", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6", ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"7", ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"8", ",", "9"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"9", ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"9", ",", "11"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"9", ",", "12"}], "}"}]}], "}"}], ",", 
    RowBox[{"pesos", "->", 
     RowBox[{"{", 
      RowBox[{
      "14", ",", "6", ",", "14", ",", "12", ",", "6", ",", "13", ",", "2", 
       ",", "2", ",", "4", ",", "17", ",", "16", ",", "19", ",", "8", ",", 
       "18", ",", "20", ",", "11", ",", "11", ",", "18", ",", "1", ",", "6"}],
       "}"}]}], ",", 
    RowBox[{"mostrarpesos", "->", "True"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9683547184453735`*^9, 3.968354720736534*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"aac1ba02-f954-5240-84f3-2b8ef6eba38b"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 3, 6, 7, 12, 2, 9, 11, 10, 4, 5, 8}, {
      Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {6, 4}, {6, 7}, {6, 8}, {6, 5}, {
       2, 7}, {2, 9}, {10, 4}, {10, 9}, {11, 7}, {3, 4}, {3, 9}, {4, 9}, {12, 
       7}, {7, 9}, {7, 8}, {7, 5}}}, {
      EdgeLabels -> {
        UndirectedEdge[1, 7] -> 14, UndirectedEdge[3, 9] -> 4, 
         UndirectedEdge[6, 10] -> 20, UndirectedEdge[3, 10] -> 17, 
         UndirectedEdge[4, 7] -> 16, UndirectedEdge[1, 12] -> 12, 
         UndirectedEdge[1, 3] -> 14, UndirectedEdge[6, 7] -> 18, 
         UndirectedEdge[7, 10] -> 11, UndirectedEdge[4, 10] -> 19, 
         UndirectedEdge[2, 7] -> 6, UndirectedEdge[8, 9] -> 11, 
         UndirectedEdge[9, 12] -> 6, UndirectedEdge[9, 11] -> 1, 
         UndirectedEdge[2, 11] -> 2, UndirectedEdge[9, 10] -> 18, 
         UndirectedEdge[2, 9] -> 13, UndirectedEdge[5, 9] -> 8, 
         UndirectedEdge[2, 12] -> 2, UndirectedEdge[1, 6] -> 6}, 
       EdgeWeight -> {14, 6, 14, 12, 6, 13, 2, 2, 4, 17, 16, 19, 8, 18, 20, 
        11, 11, 18, 1, 6}, ImagePadding -> 10, VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], {
         {Arrowheads[0.], 
          ArrowBox[{{0.7203163528259434, 0.301807111990677}, {
           1.4053008676895724`, 1.073084532677948}}, 0.03416161555401627]}, 
         InsetBox["14", {1.0628086102577579, 0.6874458223343125}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{0.7203163528259434, 0.301807111990677}, {0., 
           0.848444427592407}}, 0.03416161555401627]}, 
         InsetBox["6", {0.3601581764129717, 0.575125769791542}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{0.7203163528259434, 0.301807111990677}, {
           0.6050448706996364, 1.010571064029834}}, 0.03416161555401627]}, 
         InsetBox["14", {0.6626806117627899, 0.6561890880102554}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{0.7203163528259434, 0.301807111990677}, {
           1.6799112561039977`, 0.}}, 0.03416161555401627]}, 
         InsetBox["12", {1.2001138044649706, 0.1509035559953385}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1.4053008676895724`, 1.073084532677948}, {
           2.3125759748632557`, 1.091639661768593}}, 0.03416161555401627]}, 
         InsetBox["4", {1.858938421276414, 1.0823620972232706}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1.4053008676895724`, 1.073084532677948}, {
           0.9187640691399839, 1.51284880463169}}, 0.03416161555401627]}, 
         InsetBox["17", {1.162032468414778, 1.292966668654819}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{0., 0.848444427592407}, {0.6050448706996364, 
           1.010571064029834}}, 0.03416161555401627]}, 
         InsetBox["18", {0.3025224353498182, 0.9295077458111205}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{0., 0.848444427592407}, {0.9187640691399839, 
           1.51284880463169}}, 0.03416161555401627]}, 
         InsetBox["20", {0.45938203456999194, 1.1806466161120484}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{0.6050448706996364, 1.010571064029834}, {
           1.8696695507089025`, 0.5108015292897954}}, 0.03416161555401627]}, 
         InsetBox["6", {1.2373572107042694, 0.7606862966598147}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{0.6050448706996364, 1.010571064029834}, {
           0.9187640691399839, 1.51284880463169}}, 0.03416161555401627]}, 
         InsetBox["11", {0.7619044699198101, 1.2617099343307618}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{0.6050448706996364, 1.010571064029834}, {
           0.0846665362384953, 1.92250442121655}}, 0.03416161555401627]}, 
         InsetBox["16", {0.34485570346906586, 1.466537742623192}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1.6799112561039977`, 0.}, {1.8696695507089025`, 
           0.5108015292897954}}, 0.03416161555401627]}, 
         InsetBox["2", {1.7747904034064501, 0.2554007646448977}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1.6799112561039977`, 0.}, {2.3125759748632557`, 
           1.091639661768593}}, 0.03416161555401627]}, 
         InsetBox["6", {1.9962436154836267, 0.5458198308842965}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1.8696695507089025`, 0.5108015292897954}, {
           2.3125759748632557`, 1.091639661768593}}, 0.03416161555401627]}, 
         InsetBox["13", {2.091122762786079, 0.8012205955291942}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1.8696695507089025`, 0.5108015292897954}, {
           2.8092591135006737`, 0.27226931108475716`}}, 0.03416161555401627]},
          InsetBox["2", {2.339464332104788, 0.3915354201872763}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{2.3125759748632557`, 1.091639661768593}, {
           2.8092591135006737`, 0.27226931108475716`}}, 0.03416161555401627]},
          InsetBox["1", {2.5609175441819647, 0.6819544864266751}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{2.3125759748632557`, 1.091639661768593}, {
           0.9187640691399839, 1.51284880463169}}, 0.03416161555401627]}, 
         InsetBox["18", {1.6156700220016198, 1.3022442332001414}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{2.3125759748632557`, 1.091639661768593}, {
           3.565434161269872, 1.1956577933937347`}}, 0.03416161555401627]}, 
         InsetBox["8", {2.939005068066564, 1.143648727581164}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{2.3125759748632557`, 1.091639661768593}, {
           3.0424041857002706`, 2.0816096306596994`}}, 0.03416161555401627]}, 
         InsetBox["11", {2.677490080281763, 1.5866246462141462}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{0.9187640691399839, 1.51284880463169}, {
           0.0846665362384953, 1.92250442121655}}, 0.03416161555401627]}, 
         InsetBox["19", {0.5017153026892396, 1.7176766129241199}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {
         DiskBox[{0.7203163528259434, 0.301807111990677}, 
          0.03416161555401627], 
         InsetBox["1", 
          Offset[{2, 2}, {0.7544779683799597, 0.33596872754469326}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.4053008676895724`, 1.073084532677948}, 
          0.03416161555401627], 
         InsetBox["3", 
          Offset[{2, 2}, {1.4394624832435887, 1.1072461482319642}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0., 0.848444427592407}, 0.03416161555401627], 
         InsetBox["6", 
          Offset[{2, 2}, {0.03416161555401627, 0.8826060431464233}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.6050448706996364, 1.010571064029834}, 
          0.03416161555401627], 
         InsetBox["7", 
          Offset[{2, 2}, {0.6392064862536527, 1.0447326795838503}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.6799112561039977`, 0.}, 0.03416161555401627], 
         InsetBox["12", 
          Offset[{2, 2}, {1.714072871658014, 0.03416161555401627}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.8696695507089025`, 0.5108015292897954}, 
          0.03416161555401627], 
         InsetBox["2", 
          Offset[{2, 2}, {1.9038311662629188, 0.5449631448438117}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.3125759748632557`, 1.091639661768593}, 
          0.03416161555401627], 
         InsetBox["9", 
          Offset[{2, 2}, {2.346737590417272, 1.1258012773226094}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.8092591135006737`, 0.27226931108475716`}, 
          0.03416161555401627], 
         InsetBox["11", 
          Offset[{2, 2}, {2.84342072905469, 0.3064309266387734}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.9187640691399839, 1.51284880463169}, 0.03416161555401627],
          InsetBox["10", 
          Offset[{2, 2}, {0.9529256846940002, 1.5470104201857062}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.0846665362384953, 1.92250442121655}, 0.03416161555401627],
          InsetBox["4", 
          Offset[{2, 2}, {0.11882815179251156, 1.9566660367705664}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.565434161269872, 1.1956577933937347`}, 
          0.03416161555401627], 
         InsetBox["5", Offset[{2, 2}, {3.599595776823888, 1.229819408947751}],
           ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.0424041857002706`, 2.0816096306596994`}, 
          0.03416161555401627], 
         InsetBox["8", 
          Offset[{2, 2}, {3.076565801254287, 2.1157712462137157}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImagePadding->10]], "Output",
 CellChangeTimes->{3.9683547212783318`*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"f4cfe9eb-93cc-c642-a659-f705cfe9ed93"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AlDijkstra", "[", 
  RowBox[{"grafo2", ",", " ", "6", ",", "8"}], "]"}]], "Input",
 CellChangeTimes->{{3.9683547231830006`*^9, 3.968354736033493*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"73739a5a-e16b-a14d-9a47-43153e986ee5"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"La longitud de un camino m\[AAcute]s corto es: \"\>", 
   "\[InvisibleSpace]", "34"}],
  SequenceForm["La longitud de un camino m\[AAcute]s corto es: ", 34],
  Editable->False]], "Print",
 CellChangeTimes->{3.968354736778574*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[54]:=",ExpressionUUID->"c1498c99-bac8-3c4e-831e-1d5d64247b55"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Iteraciones: \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "3", "6", "7", "12", "2", "9", "11", "10", "4", "5", "8"},
       {
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}]},
       {
        RowBox[{"{", 
         RowBox[{"6", ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"18", ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"20", ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}]},
       {
        RowBox[{"{", 
         RowBox[{"6", ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"20", ",", 
          RowBox[{"{", "1", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"18", ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"18", ",", 
          RowBox[{"{", "1", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"20", ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}]},
       {
        RowBox[{"{", 
         RowBox[{"6", ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"20", ",", 
          RowBox[{"{", "1", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"18", ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"18", ",", 
          RowBox[{"{", "1", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"24", ",", 
          RowBox[{"{", "7", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"20", ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"34", ",", 
          RowBox[{"{", "7", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}]},
       {
        RowBox[{"{", 
         RowBox[{"6", ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"20", ",", 
          RowBox[{"{", "1", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"18", ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"18", ",", 
          RowBox[{"{", "1", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"20", ",", 
          RowBox[{"{", "12", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"24", ",", 
          RowBox[{"{", "12", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"20", ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"34", ",", 
          RowBox[{"{", "7", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}]},
       {
        RowBox[{"{", 
         RowBox[{"6", ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"20", ",", 
          RowBox[{"{", "1", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"18", ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"18", ",", 
          RowBox[{"{", "1", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"20", ",", 
          RowBox[{"{", "12", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"24", ",", 
          RowBox[{"{", 
           RowBox[{"12", ",", "3"}], "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"20", ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"34", ",", 
          RowBox[{"{", "7", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}]},
       {
        RowBox[{"{", 
         RowBox[{"6", ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"20", ",", 
          RowBox[{"{", "1", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"18", ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"18", ",", 
          RowBox[{"{", "1", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"20", ",", 
          RowBox[{"{", "12", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"24", ",", 
          RowBox[{"{", 
           RowBox[{"12", ",", "3"}], "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"22", ",", 
          RowBox[{"{", "2", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"20", ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"34", ",", 
          RowBox[{"{", "7", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}]},
       {
        RowBox[{"{", 
         RowBox[{"6", ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"20", ",", 
          RowBox[{"{", "1", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"18", ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"18", ",", 
          RowBox[{"{", "1", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"20", ",", 
          RowBox[{"{", "12", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"24", ",", 
          RowBox[{"{", 
           RowBox[{"12", ",", "3"}], "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"22", ",", 
          RowBox[{"{", "2", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"20", ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"34", ",", 
          RowBox[{"{", "7", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}]},
       {
        RowBox[{"{", 
         RowBox[{"6", ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"20", ",", 
          RowBox[{"{", "1", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"18", ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"18", ",", 
          RowBox[{"{", "1", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"20", ",", 
          RowBox[{"{", "12", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"23", ",", 
          RowBox[{"{", "11", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"22", ",", 
          RowBox[{"{", "2", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"20", ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"34", ",", 
          RowBox[{"{", "7", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "}"}]}], "}"}]},
       {
        RowBox[{"{", 
         RowBox[{"6", ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"20", ",", 
          RowBox[{"{", "1", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"18", ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"18", ",", 
          RowBox[{"{", "1", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"20", ",", 
          RowBox[{"{", "12", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"23", ",", 
          RowBox[{"{", "11", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"22", ",", 
          RowBox[{"{", "2", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"20", ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"34", ",", 
          RowBox[{"{", "7", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"31", ",", 
          RowBox[{"{", "9", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"34", ",", 
          RowBox[{"{", "9", "}"}]}], "}"}]},
       {
        RowBox[{"{", 
         RowBox[{"6", ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"20", ",", 
          RowBox[{"{", "1", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"18", ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"18", ",", 
          RowBox[{"{", "1", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"20", ",", 
          RowBox[{"{", "12", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"23", ",", 
          RowBox[{"{", "11", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"22", ",", 
          RowBox[{"{", "2", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"20", ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"34", ",", 
          RowBox[{"{", "7", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"31", ",", 
          RowBox[{"{", "9", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"34", ",", 
          RowBox[{"{", "9", "}"}]}], "}"}]},
       {
        RowBox[{"{", 
         RowBox[{"6", ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"20", ",", 
          RowBox[{"{", "1", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"18", ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"18", ",", 
          RowBox[{"{", "1", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"20", ",", 
          RowBox[{"{", "12", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"23", ",", 
          RowBox[{"{", "11", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"22", ",", 
          RowBox[{"{", "2", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"20", ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"34", ",", 
          RowBox[{"{", "7", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"31", ",", 
          RowBox[{"{", "9", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"34", ",", 
          RowBox[{"{", "9", "}"}]}], "}"}]},
       {
        RowBox[{"{", 
         RowBox[{"6", ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"20", ",", 
          RowBox[{"{", "1", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"{", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"18", ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"18", ",", 
          RowBox[{"{", "1", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"20", ",", 
          RowBox[{"{", "12", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"23", ",", 
          RowBox[{"{", "11", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"22", ",", 
          RowBox[{"{", "2", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"20", ",", 
          RowBox[{"{", "6", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"34", ",", 
          RowBox[{"{", "7", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"31", ",", 
          RowBox[{"{", "9", "}"}]}], "}"}], 
        RowBox[{"{", 
         RowBox[{"34", ",", 
          RowBox[{"{", "9", "}"}]}], "}"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Iteraciones: ", 
   MatrixForm[{{1, 3, 6, 7, 12, 2, 9, 11, 10, 4, 5, 8}, {{
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}, {0, {}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}}, {{6, {6}}, {
       DirectedInfinity[1], {}}, {0, {}}, {18, {6}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}, {20, {6}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}}, {{6, {6}}, {20, {1}}, {0, {}}, {18, {6}}, {
      18, {1}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}, {20, {6}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}}, {{6, {6}}, {20, {1}}, {0, {}}, {18, {6}}, {
      18, {1}}, {24, {7}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}, {20, {6}}, {34, {7}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}}, {{6, {6}}, {20, {1}}, {0, {}}, {18, {6}}, {
      18, {1}}, {20, {12}}, {24, {12}}, {
       DirectedInfinity[1], {}}, {20, {6}}, {34, {7}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}}, {{6, {6}}, {20, {1}}, {0, {}}, {18, {6}}, {
      18, {1}}, {20, {12}}, {24, {12, 3}}, {
       DirectedInfinity[1], {}}, {20, {6}}, {34, {7}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}}, {{6, {6}}, {20, {1}}, {0, {}}, {18, {6}}, {
      18, {1}}, {20, {12}}, {24, {12, 3}}, {22, {2}}, {20, {6}}, {34, {7}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}}, {{6, {6}}, {20, {1}}, {0, {}}, {18, {6}}, {
      18, {1}}, {20, {12}}, {24, {12, 3}}, {22, {2}}, {20, {6}}, {34, {7}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}}, {{6, {6}}, {20, {1}}, {0, {}}, {18, {6}}, {
      18, {1}}, {20, {12}}, {23, {11}}, {22, {2}}, {20, {6}}, {34, {7}}, {
       DirectedInfinity[1], {}}, {
       DirectedInfinity[1], {}}}, {{6, {6}}, {20, {1}}, {0, {}}, {18, {6}}, {
      18, {1}}, {20, {12}}, {23, {11}}, {22, {2}}, {20, {6}}, {34, {7}}, {
      31, {9}}, {34, {9}}}, {{6, {6}}, {20, {1}}, {0, {}}, {18, {6}}, {
      18, {1}}, {20, {12}}, {23, {11}}, {22, {2}}, {20, {6}}, {34, {7}}, {
      31, {9}}, {34, {9}}}, {{6, {6}}, {20, {1}}, {0, {}}, {18, {6}}, {
      18, {1}}, {20, {12}}, {23, {11}}, {22, {2}}, {20, {6}}, {34, {7}}, {
      31, {9}}, {34, {9}}}, {{6, {6}}, {20, {1}}, {0, {}}, {18, {6}}, {
      18, {1}}, {20, {12}}, {23, {11}}, {22, {2}}, {20, {6}}, {34, {7}}, {
      31, {9}}, {34, {9}}}}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.968354736796135*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[54]:=",ExpressionUUID->"1381fd23-dc4e-5342-af8f-0b70deda58a2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"34.`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"6", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "12"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"12", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "11"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "8"}], "}"}]}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.968354736836607*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[54]:=",ExpressionUUID->"12b51cc0-e026-024c-865a-0ddce421bb63"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{VilCretas`Private`Gi13$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"sin t\[IAcute]tulo\"", Typeset`specs$$ = {{{
       Hold[VilCretas`Private`Gi13$$], 1, "Aristas"}, 1, 6, 1, ControlType -> 
      Manipulator}}, Typeset`size$$ = {360., {106., 109.93304755063659`}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {VilCretas`Private`Gi13$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      HighlightGraph[VilCretas`Private`GGrafoAuxiliar12, 
        Cases[VilCretas`Private`GList6, 
         Condition[
          Pattern[VilCretas`Private`Gicontador10$, 
           Blank[]], 
          MemberQ[
           Table[
           VilCretas`Private`Gi14, {
            VilCretas`Private`Gi14, VilCretas`Private`Gi13$$}], 
           Part[
            Flatten[
             Position[
             VilCretas`Private`GList6, VilCretas`Private`Gicontador10$]], 
            1]]]], VertexLabels -> "Name", ImagePadding -> 
        OptionValue[VilCretas`AnimarGrafo, {}, VilCretas`padding], 
        GraphHighlightStyle -> "Thick"], 
      "Specifications" :> {{{VilCretas`Private`Gi13$$, 1, "Aristas"}, 1, 6, 
         1}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{646., {135.3544921875, 140.6455078125}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Print",
 CellChangeTimes->{3.9683547368510056`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[54]:=",ExpressionUUID->"91c1999a-6209-254b-b6f3-03a5c0fa9abb"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.9683547114704056`*^9, 
  3.968354712152851*^9}},ExpressionUUID->"7244fceb-0c58-e249-93d3-\
730af48cecc9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"nodos", "=", 
    RowBox[{"{", 
     RowBox[{
     "d", ",", "a", ",", "f", ",", "g", ",", "e", ",", "b", ",", "c", ",", 
      "h"}], "}"}]}], ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"grafo", "=", 
   RowBox[{"Grafo", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a", ",", "b"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", "d"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", "e"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", "f"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"b", ",", "d"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"b", ",", "e"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"b", ",", "g"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"b", ",", "h"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c", ",", "d"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c", ",", "f"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c", ",", "g"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c", ",", "h"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d", ",", "e"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"e", ",", "f"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"f", ",", "g"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"f", ",", "h"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"g", ",", "h"}], "}"}]}], "}"}], ",", 
     RowBox[{"pesos", "->", 
      RowBox[{"{", 
       RowBox[{
       "6", ",", "9", ",", "2", ",", "4", ",", "2", ",", "4", ",", "1", ",", 
        "9", ",", "1", ",", "8", ",", "2", ",", "4", ",", "4", ",", "3", ",", 
        "9", ",", "3", ",", "2"}], "}"}]}], ",", 
     RowBox[{"mostrarpesos", "->", "True"}]}], "]"}]}], ";"}]}], "Input",
 CellLabel->"In[63]:=",ExpressionUUID->"bbba6c19-d27a-a84d-80ed-e0c67d3e72fb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"?", "BuscarPrimeroAncho"}], "\[IndentingNewLine]", 
 RowBox[{"?", "BuscarPrimeroLargo"}]}], "Input",
 CellChangeTimes->{{3.9683551247183113`*^9, 3.968355135088148*^9}, {
  3.968355280853266*^9, 3.9683552822346306`*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"36fef5c4-396d-684f-a418-039bbd86bcc3"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Aplica el algoritmo buscar primero a lo ancho sobre \
un grafo \[OpenCurlyDoubleQuote]G\[CloseCurlyDoubleQuote], mostrando como \
salida una lista ordenada de aristas transitadas durante el proceso. \
\[OpenCurlyDoubleQuote]G\[CloseCurlyDoubleQuote] pudo haber sido creado en el \
\[OpenCurlyDoubleQuote]Wolfram System\[CloseCurlyDoubleQuote] de Mathematica, \
o bien, con el paquete \[OpenCurlyDoubleQuote]Combinatorica\
\[CloseCurlyDoubleQuote]. Brinda las opciones \
\[OpenCurlyDoubleQuote]animacion->True\[CloseCurlyDoubleQuote] que exhibe \
paso a paso el recorrido a lo ancho y \[OpenCurlyDoubleQuote]orden->Lista\
\[CloseCurlyDoubleQuote] que define un orden para los v\[EAcute]rtices en la \
aplicaci\[OAcute]n de la b\[UAcute]squeda. Por defecto el orden tomado por el \
software va de acuerdo con el orden de las aristas al crear el grafo y puede \
ser devuelto mediante el uso de la instrucci\[OAcute]n \
\[OpenCurlyDoubleQuote]VertexList[G]\[CloseCurlyDoubleQuote]. Sintaxis: \
BuscarPrimeroAncho[G], o, BuscarPrimeroAncho[G, animacion->True], o, \
BuscarPrimeroAncho[G, animacion->True, orden->Lista]. No acepta grafos \
dirigidos.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"BuscarPrimeroAncho", "[", 
                    RowBox[{"VilCretas`Private`AGrafo_", ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", 
                    
                    RowBox[{"ListaAristas", "[", "VilCretas`Private`AGrafo", 
                    "]"}], "]"}], "\[GreaterEqual]", "1"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", 
                    
                    RowBox[{"ListaVertices", "[", "VilCretas`Private`AGrafo", 
                    "]"}], "]"}], "\[GreaterEqual]", "2"}], ",", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "VilCretas`Private`AOPreOrden", "}"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"VilCretas`Private`AOPreOrden", "[", 
                    
                    RowBox[{"VilCretas`Private`AAGrafo_", ",", 
                    "VilCretas`Private`ARaiz_"}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"VilCretas`Private`OPrefi", ",", 
                    "VilCretas`Private`AAList31", ",", 
                    "VilCretas`Private`AList29", ",", 
                    "VilCretas`Private`AList30", ",", 
                    "VilCretas`Private`AAristas", ",", 
                    "VilCretas`Private`AAGrafoAuxiliar1"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"VilCretas`Private`OPrefi", "[", 
                    
                    RowBox[{"VilCretas`Private`AAAGrafo_", ",", 
                    "VilCretas`Private`AARaiz_"}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`AAAList29", "=", 
                    RowBox[{"{", "}"}]}], ",", 
                    "VilCretas`Private`AAAGrafoAuxiliar1"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`AAAGrafoAuxiliar1", "=", 
                    RowBox[{"Graph", "[", 
                    RowBox[{
                    
                    RowBox[{"VertexList", "[", "VilCretas`Private`AAAGrafo", 
                    "]"}], ",", 
                    RowBox[{"Sort", "[", 
                    
                    RowBox[{"EdgeList", "[", "VilCretas`Private`AAAGrafo", 
                    "]"}], "]"}]}], "]"}]}], ";", 
                    RowBox[{"VilCretas`Private`AAAList29", "=", 
                    RowBox[{"AristasWolframSystemToCombinatorica", "[", 
                    RowBox[{
                    RowBox[{"Reap", "[", 
                    RowBox[{"BreadthFirstScan", "[", 
                    
                    RowBox[{"VilCretas`Private`AAAGrafoAuxiliar1", ",", 
                    "VilCretas`Private`AARaiz", ",", 
                    RowBox[{"\"FrontierEdge\"", "\[Rule]", "Sow"}]}], "]"}], 
                    "]"}], "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], 
                    "]"}]}], ";", "VilCretas`Private`AAAList29"}]}], "]"}]}], 
                    ";", 
                    RowBox[{"VilCretas`Private`AList29", "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"OptionValue", "[", "orden", "]"}], "]"}], 
                    "\[Equal]", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"{", "}"}], "]"}]}], ",", 
                    
                    RowBox[{"VertexList", "[", "VilCretas`Private`AAGrafo", 
                    "]"}], ",", 
                    RowBox[{"OptionValue", "[", "orden", "]"}]}], "]"}]}], 
                    ";", 
                    RowBox[{"VilCretas`Private`AAristas", "=", 
                    RowBox[{"{", "}"}]}], ";", 
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`Ai24", "=", "1"}], ",", 
                    RowBox[{"VilCretas`Private`Ai24", "\[LessEqual]", 
                    
                    RowBox[{"Length", "[", "VilCretas`Private`AList29", 
                    "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`AAristas", "=", 
                    RowBox[{"Append", "[", 
                    RowBox[{"VilCretas`Private`AAristas", ",", 
                    RowBox[{"Select", "[", 
                    RowBox[{
                    
                    RowBox[{"EdgeList", "[", "VilCretas`Private`AAGrafo", 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[Equal]", 
                    RowBox[{"VilCretas`Private`AList29", 
                    "\[LeftDoubleBracket]", "VilCretas`Private`Ai24", 
                    "\[RightDoubleBracket]"}]}], "||", 
                    RowBox[{
                    
                    RowBox[{"#1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "\[Equal]", 
                    
                    RowBox[{"VilCretas`Private`AList29", 
                    "\[LeftDoubleBracket]", "VilCretas`Private`Ai24", 
                    "\[RightDoubleBracket]"}]}]}], "&"}]}], "]"}]}], "]"}]}], 
                    ";", 
                    RowBox[{"VilCretas`Private`Ai24", "++"}]}]}], "]"}], ";", 
                    RowBox[{"VilCretas`Private`AAristas", "=", 
                    RowBox[{"DeleteDuplicates", "[", 
                    
                    RowBox[{"Flatten", "[", "VilCretas`Private`AAristas", 
                    "]"}], "]"}]}], ";", 
                    RowBox[{"VilCretas`Private`AList30", "=", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    
                    RowBox[{"VilCretas`Private`AList29", 
                    "\[LeftDoubleBracket]", "VilCretas`Private`Ai24", 
                    "\[RightDoubleBracket]"}], "]"}], "\[Rule]", 
                    "VilCretas`Private`Ai24"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"VilCretas`Private`Ai24", ",", 
                    
                    RowBox[{"VertexCount", "[", "VilCretas`Private`AAGrafo", 
                    "]"}]}], "}"}]}], "]"}]}], ";", 
                    RowBox[{"VilCretas`Private`AAGrafoAuxiliar1", "=", 
                    RowBox[{"Grafo", "[", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"VilCretas`Private`Ai27", "\[LeftDoubleBracket]", 
                    "1", "\[RightDoubleBracket]"}], ">", 
                    
                    RowBox[{"VilCretas`Private`Ai27", "\[LeftDoubleBracket]", 
                    "2", "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"Reverse", "[", "VilCretas`Private`Ai27", "]"}], 
                    ",", "VilCretas`Private`Ai27"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"VilCretas`Private`Ai27", ",", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    
                    RowBox[{"VilCretas`Private`Ai24", "\[LeftDoubleBracket]", 
                    "1", "\[RightDoubleBracket]"}], "]"}], ",", 
                    RowBox[{"ToString", "[", 
                    
                    RowBox[{"VilCretas`Private`Ai24", "\[LeftDoubleBracket]", 
                    "2", "\[RightDoubleBracket]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"VilCretas`Private`Ai24", ",", 
                    
                    RowBox[{"AristasWolframSystemToCombinatorica", "[", 
                    "VilCretas`Private`AAristas", "]"}]}], "}"}]}], "]"}], 
                    "/.", "\[VeryThinSpace]", "VilCretas`Private`AList30"}]}],
                     "}"}]}], "]"}], "]"}]}], ";", 
                    RowBox[{"VilCretas`Private`AAList31", "=", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`OPrefi", "[", 
                    RowBox[{"VilCretas`Private`AAGrafoAuxiliar1", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{"VilCretas`Private`AList30", ",", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[Equal]", 
                    
                    RowBox[{"ToString", "[", "VilCretas`Private`ARaiz", 
                    "]"}]}], "&"}]}], "]"}], "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "]"}], "/.", 
                    "\[VeryThinSpace]", 
                    
                    RowBox[{"Reverse", "/@", 
                    "VilCretas`Private`AList30"}]}]}], ";", 
                    RowBox[{"VilCretas`Private`AAList31", "=", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    
                    RowBox[{"VertexList", "[", "VilCretas`Private`AAGrafo", 
                    "]"}], ",", "VilCretas`Private`Ai24"}], "]"}], ",", 
                    "VilCretas`Private`Ai24", ",", 
                    
                    RowBox[{"ToExpression", "[", "VilCretas`Private`Ai24", 
                    "]"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"VilCretas`Private`Ai24", ",", 
                    "VilCretas`Private`AAList31"}], "}"}]}], "]"}]}], ";", 
                    "VilCretas`Private`AAList31"}]}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"BooleanQ", "[", 
                    RowBox[{"OptionValue", "[", "animacion", "]"}], "]"}], 
                    ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"VectorQ", "[", 
                    RowBox[{"OptionValue", "[", "orden", "]"}], "]"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"GrafoQ", "[", "VilCretas`Private`AGrafo", "]"}], 
                    ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    
                    RowBox[{"GrafoDirigidoQ", "[", "VilCretas`Private`AGrafo",
                     "]"}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    
                    RowBox[{"GrafoConexoQ", "[", "VilCretas`Private`AGrafo", 
                    "]"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"Sort", "[", 
                    RowBox[{"OptionValue", "[", "orden", "]"}], "]"}], "]"}], 
                    "\[Equal]", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Sort", "[", 
                    
                    RowBox[{"VertexList", "[", "VilCretas`Private`AGrafo", 
                    "]"}], "]"}], "]"}]}], "||", 
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"OptionValue", "[", "orden", "]"}], "]"}], 
                    "\[Equal]", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"{", "}"}], "]"}]}]}], ",", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`AList31", "=", 
                    RowBox[{"VilCretas`Private`AOPreOrden", "[", 
                    RowBox[{"VilCretas`Private`AGrafo", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"OptionValue", "[", "orden", "]"}], "]"}], 
                    "\[Equal]", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"{", "}"}], "]"}]}], ",", 
                    RowBox[{"First", "[", 
                    
                    RowBox[{"VertexList", "[", "VilCretas`Private`AGrafo", 
                    "]"}], "]"}], ",", 
                    RowBox[{"First", "[", 
                    RowBox[{"OptionValue", "[", "orden", "]"}], "]"}]}], 
                    "]"}]}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "animacion", "]"}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"SubsetQ", "[", 
                    RowBox[{
                    
                    RowBox[{"ListaVertices", "[", "VilCretas`Private`AGrafo", 
                    "]"}], ",", 
                    RowBox[{"Flatten", "[", "VilCretas`Private`AList31", 
                    "]"}]}], "]"}]}], ",", 
                    RowBox[{"VilCretas`Private`AList31", "=", 
                    RowBox[{"Map", "[", 
                    RowBox[{"ToString", ",", "VilCretas`Private`AList31", ",", 
                    RowBox[{"{", "2", "}"}]}], "]"}]}]}], "]"}], ";", 
                    RowBox[{"Print", "[", "VilCretas`Private`AList31", "]"}], 
                    ";", 
                    RowBox[{"AnimarGrafo", "[", 
                    
                    RowBox[{"VilCretas`Private`AGrafo", ",", 
                    "VilCretas`Private`AList31"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"SubsetQ", "[", 
                    RowBox[{
                    
                    RowBox[{"ListaVertices", "[", "VilCretas`Private`AGrafo", 
                    "]"}], ",", 
                    RowBox[{"Flatten", "[", "VilCretas`Private`AList31", 
                    "]"}]}], "]"}]}], ",", 
                    RowBox[{"VilCretas`Private`AList31", "=", 
                    RowBox[{"Map", "[", 
                    RowBox[{"ToString", ",", "VilCretas`Private`AList31", ",", 
                    RowBox[{"{", "2", "}"}]}], "]"}]}]}], "]"}], ";", 
                    "VilCretas`Private`AList31"}]}], "]"}]}]}], "]"}]}], 
                    "]"}]}], "]"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"GrafoCQ", "[", "VilCretas`Private`AGrafo", "]"}],
                     ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    
                    RowBox[{"GrafoDirigidoQ", "[", "VilCretas`Private`AGrafo",
                     "]"}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    
                    RowBox[{"GrafoConexoQ", "[", "VilCretas`Private`AGrafo", 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`AGrafoAuxiliar1", "=", 
                    RowBox[{"Grafo", "[", 
                    
                    RowBox[{"Combinatorica`Edges", "[", 
                    "VilCretas`Private`AGrafo", "]"}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"Sort", "[", 
                    RowBox[{"OptionValue", "[", "orden", "]"}], "]"}], "]"}], 
                    "\[Equal]", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Sort", "[", 
                    
                    RowBox[{"VertexList", "[", 
                    "VilCretas`Private`AGrafoAuxiliar1", "]"}], "]"}], 
                    "]"}]}], "||", 
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"OptionValue", "[", "orden", "]"}], "]"}], 
                    "\[Equal]", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"{", "}"}], "]"}]}]}], ",", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`AList31", "=", 
                    RowBox[{"VilCretas`Private`AOPreOrden", "[", 
                    RowBox[{"VilCretas`Private`AGrafoAuxiliar1", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"OptionValue", "[", "orden", "]"}], "]"}], 
                    "\[Equal]", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"{", "}"}], "]"}]}], ",", 
                    RowBox[{"First", "[", 
                    
                    RowBox[{"VertexList", "[", 
                    "VilCretas`Private`AGrafoAuxiliar1", "]"}], "]"}], ",", 
                    RowBox[{"First", "[", 
                    RowBox[{"OptionValue", "[", "orden", "]"}], "]"}]}], 
                    "]"}]}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "animacion", "]"}], ",", 
                    RowBox[{
                    RowBox[{"Print", "[", "VilCretas`Private`AList31", "]"}], 
                    ";", 
                    RowBox[{"AnimarGrafoWithCombinatorica", "[", 
                    RowBox[{"VilCretas`Private`AGrafo", ",", 
                    "VilCretas`Private`AList31"}], "]"}]}], ",", 
                    "VilCretas`Private`AList31"}], "]"}]}]}], "]"}]}]}], 
                    "]"}]}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], "]"}]}]}], 
                    "]"}]}], "]"}]}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"animacion", "\[Rule]", "False"}], ",", 
                    RowBox[{"orden", "\[Rule]", 
                    RowBox[{"{", "}"}]}]}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"VilCretas`BuscarPrimeroAncho\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Aplica el algoritmo buscar primero a lo ancho sobre \
un grafo \[OpenCurlyDoubleQuote]G\[CloseCurlyDoubleQuote], mostrando como \
salida una lista ordenada de aristas transitadas durante el proceso. \
\[OpenCurlyDoubleQuote]G\[CloseCurlyDoubleQuote] pudo haber sido creado en el \
\[OpenCurlyDoubleQuote]Wolfram System\[CloseCurlyDoubleQuote] de Mathematica, \
o bien, con el paquete \[OpenCurlyDoubleQuote]Combinatorica\
\[CloseCurlyDoubleQuote]. Brinda las opciones \
\[OpenCurlyDoubleQuote]animacion->True\[CloseCurlyDoubleQuote] que exhibe \
paso a paso el recorrido a lo ancho y \[OpenCurlyDoubleQuote]orden->Lista\
\[CloseCurlyDoubleQuote] que define un orden para los v\[EAcute]rtices en la \
aplicaci\[OAcute]n de la b\[UAcute]squeda. Por defecto el orden tomado por el \
software va de acuerdo con el orden de las aristas al crear el grafo y puede \
ser devuelto mediante el uso de la instrucci\[OAcute]n \
\[OpenCurlyDoubleQuote]VertexList[G]\[CloseCurlyDoubleQuote]. Sintaxis: \
BuscarPrimeroAncho[G], o, BuscarPrimeroAncho[G, animacion->True], o, \
BuscarPrimeroAncho[G, animacion->True, orden->Lista]. No acepta grafos \
dirigidos.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "Aplica el algoritmo buscar primero a lo ancho sobre un grafo \
\[OpenCurlyDoubleQuote]G\[CloseCurlyDoubleQuote], mostrando como salida una \
lista ordenada de aristas transitadas durante el proceso. \
\[OpenCurlyDoubleQuote]G\[CloseCurlyDoubleQuote] pudo haber sido creado en el \
\[OpenCurlyDoubleQuote]Wolfram System\[CloseCurlyDoubleQuote] de Mathematica, \
o bien, con el paquete \[OpenCurlyDoubleQuote]Combinatorica\
\[CloseCurlyDoubleQuote]. Brinda las opciones \
\[OpenCurlyDoubleQuote]animacion->True\[CloseCurlyDoubleQuote] que exhibe \
paso a paso el recorrido a lo ancho y \[OpenCurlyDoubleQuote]orden->Lista\
\[CloseCurlyDoubleQuote] que define un orden para los v\[EAcute]rtices en la \
aplicaci\[OAcute]n de la b\[UAcute]squeda. Por defecto el orden tomado por el \
software va de acuerdo con el orden de las aristas al crear el grafo y puede \
ser devuelto mediante el uso de la instrucci\[OAcute]n \
\[OpenCurlyDoubleQuote]VertexList[G]\[CloseCurlyDoubleQuote]. Sintaxis: \
BuscarPrimeroAncho[G], o, BuscarPrimeroAncho[G, animacion->True], o, \
BuscarPrimeroAncho[G, animacion->True, orden->Lista]. No acepta grafos \
dirigidos.", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None,
     "DownValues" -> 
    Information`InformationValueForm[
     DownValues, VilCretas`BuscarPrimeroAncho, {VilCretas`BuscarPrimeroAncho[
         Pattern[VilCretas`Private`AGrafo, 
          Blank[]], 
         OptionsPattern[]] :> If[Length[
           VilCretas`ListaAristas[VilCretas`Private`AGrafo]] >= 1, 
         If[Length[
            VilCretas`ListaVertices[VilCretas`Private`AGrafo]] >= 2, 
          Module[{VilCretas`Private`AOPreOrden}, VilCretas`Private`AOPreOrden[
              Pattern[VilCretas`Private`AAGrafo, 
               Blank[]], 
              Pattern[VilCretas`Private`ARaiz, 
               Blank[]]] := 
            Module[{VilCretas`Private`OPrefi, VilCretas`Private`AAList31, 
               VilCretas`Private`AList29, VilCretas`Private`AList30, 
               VilCretas`Private`AAristas, 
               VilCretas`Private`AAGrafoAuxiliar1}, VilCretas`Private`OPrefi[
                 Pattern[VilCretas`Private`AAAGrafo, 
                  Blank[]], 
                 Pattern[VilCretas`Private`AARaiz, 
                  Blank[]]] := 
               Module[{
                 VilCretas`Private`AAAList29 = {}, 
                  VilCretas`Private`AAAGrafoAuxiliar1}, 
                 VilCretas`Private`AAAGrafoAuxiliar1 = Graph[
                    VertexList[VilCretas`Private`AAAGrafo], 
                    Sort[
                    EdgeList[VilCretas`Private`AAAGrafo]]]; 
                 VilCretas`Private`AAAList29 = 
                  VilCretas`AristasWolframSystemToCombinatorica[
                    Part[
                    Reap[
                    BreadthFirstScan[
                    VilCretas`Private`AAAGrafoAuxiliar1, 
                    VilCretas`Private`AARaiz, "FrontierEdge" -> Sow]], 2, 1]]; 
                 VilCretas`Private`AAAList29]; 
              VilCretas`Private`AList29 = If[ToString[
                   OptionValue[VilCretas`orden]] == ToString[{}], 
                 VertexList[VilCretas`Private`AAGrafo], 
                 OptionValue[VilCretas`orden]]; 
              VilCretas`Private`AAristas = {}; 
              For[VilCretas`Private`Ai24 = 1, VilCretas`Private`Ai24 <= 
                Length[VilCretas`Private`AList29], 
                VilCretas`Private`AAristas = 
                 Append[VilCretas`Private`AAristas, 
                   Select[
                    EdgeList[VilCretas`Private`AAGrafo], Or[
                    Part[#, 1] == 
                    Part[VilCretas`Private`AList29, VilCretas`Private`Ai24], 
                    Part[#, 2] == 
                    Part[VilCretas`Private`AList29, 
                    VilCretas`Private`Ai24]]& ]]; 
                Increment[VilCretas`Private`Ai24]]; 
              VilCretas`Private`AAristas = DeleteDuplicates[
                 Flatten[VilCretas`Private`AAristas]]; 
              VilCretas`Private`AList30 = Table[ToString[
                   Part[VilCretas`Private`AList29, VilCretas`Private`Ai24]] -> 
                 VilCretas`Private`Ai24, {VilCretas`Private`Ai24, 
                  VertexCount[VilCretas`Private`AAGrafo]}]; 
              VilCretas`Private`AAGrafoAuxiliar1 = VilCretas`Grafo[
                 Table[
                  If[
                  Part[VilCretas`Private`Ai27, 1] > 
                   Part[VilCretas`Private`Ai27, 2], 
                   Reverse[VilCretas`Private`Ai27], VilCretas`Private`Ai27], {
                  VilCretas`Private`Ai27, 
                   ReplaceAll[
                    Table[{
                    ToString[
                    Part[VilCretas`Private`Ai24, 1]], 
                    ToString[
                    Part[VilCretas`Private`Ai24, 2]]}, {
                    VilCretas`Private`Ai24, 
                    VilCretas`AristasWolframSystemToCombinatorica[
                    VilCretas`Private`AAristas]}], 
                    VilCretas`Private`AList30]}]]; 
              VilCretas`Private`AAList31 = ReplaceAll[
                 VilCretas`Private`OPrefi[VilCretas`Private`AAGrafoAuxiliar1, 
                  Part[
                   Part[
                    Select[
                    VilCretas`Private`AList30, Part[#, 1] == 
                    ToString[VilCretas`Private`ARaiz]& ], 1], 2]], 
                 Map[Reverse, VilCretas`Private`AList30]]; 
              VilCretas`Private`AAList31 = Table[
                 If[
                  MemberQ[
                   VertexList[VilCretas`Private`AAGrafo], 
                   VilCretas`Private`Ai24], VilCretas`Private`Ai24, 
                  ToExpression[VilCretas`Private`Ai24]], {
                 VilCretas`Private`Ai24, VilCretas`Private`AAList31}]; 
              VilCretas`Private`AAList31]; If[
             BooleanQ[
              OptionValue[VilCretas`animacion]], 
             If[
              VectorQ[
               OptionValue[VilCretas`orden]], 
              If[
               VilCretas`GrafoQ[VilCretas`Private`AGrafo], 
               If[
                Not[
                 VilCretas`GrafoDirigidoQ[VilCretas`Private`AGrafo]], 
                If[
                 VilCretas`GrafoConexoQ[VilCretas`Private`AGrafo], 
                 If[
                  Or[ToString[
                    Sort[
                    OptionValue[VilCretas`orden]]] == ToString[
                    Sort[
                    VertexList[VilCretas`Private`AGrafo]]], ToString[
                    OptionValue[VilCretas`orden]] == ToString[{}]], 
                  VilCretas`Private`AList31 = 
                   VilCretas`Private`AOPreOrden[VilCretas`Private`AGrafo, 
                    If[ToString[
                    OptionValue[VilCretas`orden]] == ToString[{}], 
                    First[
                    VertexList[VilCretas`Private`AGrafo]], 
                    First[
                    OptionValue[VilCretas`orden]]]]; If[
                    OptionValue[VilCretas`animacion], If[
                    Not[
                    SubsetQ[
                    VilCretas`ListaVertices[VilCretas`Private`AGrafo], 
                    Flatten[VilCretas`Private`AList31]]], 
                    VilCretas`Private`AList31 = 
                    Map[ToString, VilCretas`Private`AList31, {2}]]; 
                    Print[VilCretas`Private`AList31]; 
                    VilCretas`AnimarGrafo[
                    VilCretas`Private`AGrafo, VilCretas`Private`AList31], If[
                    Not[
                    SubsetQ[
                    VilCretas`ListaVertices[VilCretas`Private`AGrafo], 
                    Flatten[VilCretas`Private`AList31]]], 
                    VilCretas`Private`AList31 = 
                    Map[ToString, VilCretas`Private`AList31, {2}]]; 
                    VilCretas`Private`AList31]]]], 
               If[
                VilCretas`GrafoCQ[VilCretas`Private`AGrafo], 
                If[
                 Not[
                  VilCretas`GrafoDirigidoQ[VilCretas`Private`AGrafo]], 
                 If[
                  VilCretas`GrafoConexoQ[VilCretas`Private`AGrafo], 
                  VilCretas`Private`AGrafoAuxiliar1 = VilCretas`Grafo[
                    Combinatorica`Edges[VilCretas`Private`AGrafo]]; If[
                    Or[ToString[
                    Sort[
                    OptionValue[VilCretas`orden]]] == ToString[
                    Sort[
                    VertexList[VilCretas`Private`AGrafoAuxiliar1]]], ToString[
                    OptionValue[VilCretas`orden]] == ToString[{}]], 
                    VilCretas`Private`AList31 = 
                    VilCretas`Private`AOPreOrden[
                    VilCretas`Private`AGrafoAuxiliar1, 
                    If[ToString[
                    OptionValue[VilCretas`orden]] == ToString[{}], 
                    First[
                    VertexList[VilCretas`Private`AGrafoAuxiliar1]], 
                    First[
                    OptionValue[VilCretas`orden]]]]; If[
                    OptionValue[VilCretas`animacion], 
                    Print[VilCretas`Private`AList31]; 
                    VilCretas`AnimarGrafoWithCombinatorica[
                    VilCretas`Private`AGrafo, VilCretas`Private`AList31], 
                    VilCretas`Private`AList31]]]]]]]]]]]}], "SubValues" -> 
    None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {VilCretas`animacion -> False, VilCretas`orden -> {}}, 
    "Attributes" -> {Protected}, "FullName" -> 
    "VilCretas`BuscarPrimeroAncho"|>, False]]], "Output",
 CellChangeTimes->{3.9683552825564137`*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"d355dbcc-64c4-874b-bfc3-7d1351057e88"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Aplica el algoritmo buscar primero a lo largo sobre \
un grafo \[OpenCurlyDoubleQuote]G\[CloseCurlyDoubleQuote], mostrando como \
salida una lista ordenada de aristas transitadas durante el proceso. \
\[OpenCurlyDoubleQuote]G\[CloseCurlyDoubleQuote] pudo haber sido creado en el \
\[OpenCurlyDoubleQuote]Wolfram System\[CloseCurlyDoubleQuote] de Mathematica, \
o bien, con el paquete \[OpenCurlyDoubleQuote]Combinatorica\
\[CloseCurlyDoubleQuote]. Brinda las opciones \
\[OpenCurlyDoubleQuote]animacion->True\[CloseCurlyDoubleQuote] que exhibe \
paso a paso el recorrido a lo largo y \[OpenCurlyDoubleQuote]orden->Lista\
\[CloseCurlyDoubleQuote] que define un orden para los v\[EAcute]rtices en la \
aplicaci\[OAcute]n de la b\[UAcute]squeda. Por defecto el orden tomado por el \
software va de acuerdo con el orden de las aristas al crear el grafo y puede \
ser devuelto mediante el uso de la instrucci\[OAcute]n \
\[OpenCurlyDoubleQuote]VertexList[G]\[CloseCurlyDoubleQuote]. Sintaxis: \
BuscarPrimeroLargo[G], o, BuscarPrimeroLargo[G, animacion->True], o, \
BuscarPrimeroLargo[G, animacion->True, orden->Lista]. No acepta grafos \
dirigidos.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"BuscarPrimeroLargo", "[", 
                    RowBox[{"VilCretas`Private`AGrafo_", ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", 
                    
                    RowBox[{"ListaAristas", "[", "VilCretas`Private`AGrafo", 
                    "]"}], "]"}], "\[GreaterEqual]", "1"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", 
                    
                    RowBox[{"ListaVertices", "[", "VilCretas`Private`AGrafo", 
                    "]"}], "]"}], "\[GreaterEqual]", "2"}], ",", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "VilCretas`Private`AOOPreOrden", "}"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"VilCretas`Private`AOOPreOrden", "[", 
                    
                    RowBox[{"VilCretas`Private`AAGrafo_", ",", 
                    "VilCretas`Private`ARaiz_"}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"VilCretas`Private`OOPrefi", ",", 
                    "VilCretas`Private`AAList32", ",", 
                    "VilCretas`Private`AList33", ",", 
                    "VilCretas`Private`AList34", ",", 
                    "VilCretas`Private`AAristas", ",", 
                    "VilCretas`Private`AAGrafoAuxiliar2"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"VilCretas`Private`OOPrefi", "[", 
                    
                    RowBox[{"VilCretas`Private`AAAGrafo_", ",", 
                    "VilCretas`Private`AARaiz_"}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`AAAList32", "=", 
                    RowBox[{"{", "}"}]}], ",", 
                    "VilCretas`Private`AAAGrafoAuxiliar2"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`AAAGrafoAuxiliar2", "=", 
                    RowBox[{"Graph", "[", 
                    RowBox[{
                    
                    RowBox[{"VertexList", "[", "VilCretas`Private`AAAGrafo", 
                    "]"}], ",", 
                    RowBox[{"Sort", "[", 
                    
                    RowBox[{"EdgeList", "[", "VilCretas`Private`AAAGrafo", 
                    "]"}], "]"}]}], "]"}]}], ";", 
                    RowBox[{"VilCretas`Private`AAAList32", "=", 
                    RowBox[{"AristasWolframSystemToCombinatorica", "[", 
                    RowBox[{
                    RowBox[{"Reap", "[", 
                    RowBox[{"DepthFirstScan", "[", 
                    
                    RowBox[{"VilCretas`Private`AAAGrafoAuxiliar2", ",", 
                    "VilCretas`Private`AARaiz", ",", 
                    RowBox[{"\"FrontierEdge\"", "\[Rule]", "Sow"}]}], "]"}], 
                    "]"}], "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], 
                    "]"}]}], ";", "VilCretas`Private`AAAList32"}]}], "]"}]}], 
                    ";", 
                    RowBox[{"VilCretas`Private`AList33", "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"OptionValue", "[", "orden", "]"}], "]"}], 
                    "\[Equal]", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"{", "}"}], "]"}]}], ",", 
                    
                    RowBox[{"VertexList", "[", "VilCretas`Private`AAGrafo", 
                    "]"}], ",", 
                    RowBox[{"OptionValue", "[", "orden", "]"}]}], "]"}]}], 
                    ";", 
                    RowBox[{"VilCretas`Private`AAristas", "=", 
                    RowBox[{"{", "}"}]}], ";", 
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`Ai25", "=", "1"}], ",", 
                    RowBox[{"VilCretas`Private`Ai25", "\[LessEqual]", 
                    
                    RowBox[{"Length", "[", "VilCretas`Private`AList33", 
                    "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`AAristas", "=", 
                    RowBox[{"Append", "[", 
                    RowBox[{"VilCretas`Private`AAristas", ",", 
                    RowBox[{"Select", "[", 
                    RowBox[{
                    
                    RowBox[{"EdgeList", "[", "VilCretas`Private`AAGrafo", 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[Equal]", 
                    RowBox[{"VilCretas`Private`AList33", 
                    "\[LeftDoubleBracket]", "VilCretas`Private`Ai25", 
                    "\[RightDoubleBracket]"}]}], "||", 
                    RowBox[{
                    
                    RowBox[{"#1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "\[Equal]", 
                    
                    RowBox[{"VilCretas`Private`AList33", 
                    "\[LeftDoubleBracket]", "VilCretas`Private`Ai25", 
                    "\[RightDoubleBracket]"}]}]}], "&"}]}], "]"}]}], "]"}]}], 
                    ";", 
                    RowBox[{"VilCretas`Private`Ai25", "++"}]}]}], "]"}], ";", 
                    RowBox[{"VilCretas`Private`AAristas", "=", 
                    RowBox[{"DeleteDuplicates", "[", 
                    
                    RowBox[{"Flatten", "[", "VilCretas`Private`AAristas", 
                    "]"}], "]"}]}], ";", 
                    RowBox[{"VilCretas`Private`AList34", "=", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    
                    RowBox[{"VilCretas`Private`AList33", 
                    "\[LeftDoubleBracket]", "VilCretas`Private`Ai25", 
                    "\[RightDoubleBracket]"}], "]"}], "\[Rule]", 
                    "VilCretas`Private`Ai25"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"VilCretas`Private`Ai25", ",", 
                    
                    RowBox[{"VertexCount", "[", "VilCretas`Private`AAGrafo", 
                    "]"}]}], "}"}]}], "]"}]}], ";", 
                    RowBox[{"VilCretas`Private`AAGrafoAuxiliar2", "=", 
                    RowBox[{"Grafo", "[", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"VilCretas`Private`Ai26", "\[LeftDoubleBracket]", 
                    "1", "\[RightDoubleBracket]"}], ">", 
                    
                    RowBox[{"VilCretas`Private`Ai26", "\[LeftDoubleBracket]", 
                    "2", "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"Reverse", "[", "VilCretas`Private`Ai26", "]"}], 
                    ",", "VilCretas`Private`Ai26"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"VilCretas`Private`Ai26", ",", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    
                    RowBox[{"VilCretas`Private`Ai25", "\[LeftDoubleBracket]", 
                    "1", "\[RightDoubleBracket]"}], "]"}], ",", 
                    RowBox[{"ToString", "[", 
                    
                    RowBox[{"VilCretas`Private`Ai25", "\[LeftDoubleBracket]", 
                    "2", "\[RightDoubleBracket]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"VilCretas`Private`Ai25", ",", 
                    
                    RowBox[{"AristasWolframSystemToCombinatorica", "[", 
                    "VilCretas`Private`AAristas", "]"}]}], "}"}]}], "]"}], 
                    "/.", "\[VeryThinSpace]", "VilCretas`Private`AList34"}]}],
                     "}"}]}], "]"}], "]"}]}], ";", 
                    RowBox[{"VilCretas`Private`AAList32", "=", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`OOPrefi", "[", 
                    RowBox[{"VilCretas`Private`AAGrafoAuxiliar2", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{"VilCretas`Private`AList34", ",", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[Equal]", 
                    
                    RowBox[{"ToString", "[", "VilCretas`Private`ARaiz", 
                    "]"}]}], "&"}]}], "]"}], "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "]"}], "/.", 
                    "\[VeryThinSpace]", 
                    
                    RowBox[{"Reverse", "/@", 
                    "VilCretas`Private`AList34"}]}]}], ";", 
                    RowBox[{"VilCretas`Private`AAList32", "=", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    
                    RowBox[{"VertexList", "[", "VilCretas`Private`AAGrafo", 
                    "]"}], ",", "VilCretas`Private`Ai25"}], "]"}], ",", 
                    "VilCretas`Private`Ai25", ",", 
                    
                    RowBox[{"ToExpression", "[", "VilCretas`Private`Ai25", 
                    "]"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"VilCretas`Private`Ai25", ",", 
                    "VilCretas`Private`AAList32"}], "}"}]}], "]"}]}], ";", 
                    "VilCretas`Private`AAList32"}]}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"BooleanQ", "[", 
                    RowBox[{"OptionValue", "[", "animacion", "]"}], "]"}], 
                    ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"VectorQ", "[", 
                    RowBox[{"OptionValue", "[", "orden", "]"}], "]"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"GrafoQ", "[", "VilCretas`Private`AGrafo", "]"}], 
                    ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    
                    RowBox[{"GrafoDirigidoQ", "[", "VilCretas`Private`AGrafo",
                     "]"}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    
                    RowBox[{"GrafoConexoQ", "[", "VilCretas`Private`AGrafo", 
                    "]"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"Sort", "[", 
                    RowBox[{"OptionValue", "[", "orden", "]"}], "]"}], "]"}], 
                    "\[Equal]", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Sort", "[", 
                    
                    RowBox[{"VertexList", "[", "VilCretas`Private`AGrafo", 
                    "]"}], "]"}], "]"}]}], "||", 
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"OptionValue", "[", "orden", "]"}], "]"}], 
                    "\[Equal]", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"{", "}"}], "]"}]}]}], ",", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`AList32", "=", 
                    RowBox[{"VilCretas`Private`AOOPreOrden", "[", 
                    RowBox[{"VilCretas`Private`AGrafo", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"OptionValue", "[", "orden", "]"}], "]"}], 
                    "\[Equal]", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"{", "}"}], "]"}]}], ",", 
                    RowBox[{"First", "[", 
                    
                    RowBox[{"VertexList", "[", "VilCretas`Private`AGrafo", 
                    "]"}], "]"}], ",", 
                    RowBox[{"First", "[", 
                    RowBox[{"OptionValue", "[", "orden", "]"}], "]"}]}], 
                    "]"}]}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "animacion", "]"}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"SubsetQ", "[", 
                    RowBox[{
                    
                    RowBox[{"ListaVertices", "[", "VilCretas`Private`AGrafo", 
                    "]"}], ",", 
                    RowBox[{"Flatten", "[", "VilCretas`Private`AList32", 
                    "]"}]}], "]"}]}], ",", 
                    RowBox[{"VilCretas`Private`AList32", "=", 
                    RowBox[{"Map", "[", 
                    RowBox[{"ToString", ",", "VilCretas`Private`AList32", ",", 
                    RowBox[{"{", "2", "}"}]}], "]"}]}]}], "]"}], ";", 
                    RowBox[{"Print", "[", "VilCretas`Private`AList32", "]"}], 
                    ";", 
                    RowBox[{"AnimarGrafo", "[", 
                    
                    RowBox[{"VilCretas`Private`AGrafo", ",", 
                    "VilCretas`Private`AList32"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"SubsetQ", "[", 
                    RowBox[{
                    
                    RowBox[{"ListaVertices", "[", "VilCretas`Private`AGrafo", 
                    "]"}], ",", 
                    RowBox[{"Flatten", "[", "VilCretas`Private`AList32", 
                    "]"}]}], "]"}]}], ",", 
                    RowBox[{"VilCretas`Private`AList32", "=", 
                    RowBox[{"Map", "[", 
                    RowBox[{"ToString", ",", "VilCretas`Private`AList32", ",", 
                    RowBox[{"{", "2", "}"}]}], "]"}]}]}], "]"}], ";", 
                    "VilCretas`Private`AList32"}]}], "]"}]}]}], "]"}]}], 
                    "]"}]}], "]"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"GrafoCQ", "[", "VilCretas`Private`AGrafo", "]"}],
                     ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    
                    RowBox[{"GrafoDirigidoQ", "[", "VilCretas`Private`AGrafo",
                     "]"}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    
                    RowBox[{"GrafoConexoQ", "[", "VilCretas`Private`AGrafo", 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`AGrafoAuxiliar2", "=", 
                    RowBox[{"Grafo", "[", 
                    
                    RowBox[{"Combinatorica`Edges", "[", 
                    "VilCretas`Private`AGrafo", "]"}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"Sort", "[", 
                    RowBox[{"OptionValue", "[", "orden", "]"}], "]"}], "]"}], 
                    "\[Equal]", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Sort", "[", 
                    
                    RowBox[{"VertexList", "[", 
                    "VilCretas`Private`AGrafoAuxiliar2", "]"}], "]"}], 
                    "]"}]}], "||", 
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"OptionValue", "[", "orden", "]"}], "]"}], 
                    "\[Equal]", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"{", "}"}], "]"}]}]}], ",", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`AList32", "=", 
                    RowBox[{"VilCretas`Private`AOOPreOrden", "[", 
                    RowBox[{"VilCretas`Private`AGrafoAuxiliar2", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"OptionValue", "[", "orden", "]"}], "]"}], 
                    "\[Equal]", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"{", "}"}], "]"}]}], ",", 
                    RowBox[{"First", "[", 
                    
                    RowBox[{"VertexList", "[", 
                    "VilCretas`Private`AGrafoAuxiliar2", "]"}], "]"}], ",", 
                    RowBox[{"First", "[", 
                    RowBox[{"OptionValue", "[", "orden", "]"}], "]"}]}], 
                    "]"}]}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "animacion", "]"}], ",", 
                    RowBox[{
                    RowBox[{"Print", "[", "VilCretas`Private`AList32", "]"}], 
                    ";", 
                    RowBox[{"AnimarGrafoWithCombinatorica", "[", 
                    RowBox[{"VilCretas`Private`AGrafo", ",", 
                    "VilCretas`Private`AList32"}], "]"}]}], ",", 
                    "VilCretas`Private`AList32"}], "]"}]}]}], "]"}]}]}], 
                    "]"}]}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], "]"}]}]}], 
                    "]"}]}], "]"}]}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"animacion", "\[Rule]", "False"}], ",", 
                    RowBox[{"orden", "\[Rule]", 
                    RowBox[{"{", "}"}]}]}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"VilCretas`BuscarPrimeroLargo\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Aplica el algoritmo buscar primero a lo largo sobre \
un grafo \[OpenCurlyDoubleQuote]G\[CloseCurlyDoubleQuote], mostrando como \
salida una lista ordenada de aristas transitadas durante el proceso. \
\[OpenCurlyDoubleQuote]G\[CloseCurlyDoubleQuote] pudo haber sido creado en el \
\[OpenCurlyDoubleQuote]Wolfram System\[CloseCurlyDoubleQuote] de Mathematica, \
o bien, con el paquete \[OpenCurlyDoubleQuote]Combinatorica\
\[CloseCurlyDoubleQuote]. Brinda las opciones \
\[OpenCurlyDoubleQuote]animacion->True\[CloseCurlyDoubleQuote] que exhibe \
paso a paso el recorrido a lo largo y \[OpenCurlyDoubleQuote]orden->Lista\
\[CloseCurlyDoubleQuote] que define un orden para los v\[EAcute]rtices en la \
aplicaci\[OAcute]n de la b\[UAcute]squeda. Por defecto el orden tomado por el \
software va de acuerdo con el orden de las aristas al crear el grafo y puede \
ser devuelto mediante el uso de la instrucci\[OAcute]n \
\[OpenCurlyDoubleQuote]VertexList[G]\[CloseCurlyDoubleQuote]. Sintaxis: \
BuscarPrimeroLargo[G], o, BuscarPrimeroLargo[G, animacion->True], o, \
BuscarPrimeroLargo[G, animacion->True, orden->Lista]. No acepta grafos \
dirigidos.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "Aplica el algoritmo buscar primero a lo largo sobre un grafo \
\[OpenCurlyDoubleQuote]G\[CloseCurlyDoubleQuote], mostrando como salida una \
lista ordenada de aristas transitadas durante el proceso. \
\[OpenCurlyDoubleQuote]G\[CloseCurlyDoubleQuote] pudo haber sido creado en el \
\[OpenCurlyDoubleQuote]Wolfram System\[CloseCurlyDoubleQuote] de Mathematica, \
o bien, con el paquete \[OpenCurlyDoubleQuote]Combinatorica\
\[CloseCurlyDoubleQuote]. Brinda las opciones \
\[OpenCurlyDoubleQuote]animacion->True\[CloseCurlyDoubleQuote] que exhibe \
paso a paso el recorrido a lo largo y \[OpenCurlyDoubleQuote]orden->Lista\
\[CloseCurlyDoubleQuote] que define un orden para los v\[EAcute]rtices en la \
aplicaci\[OAcute]n de la b\[UAcute]squeda. Por defecto el orden tomado por el \
software va de acuerdo con el orden de las aristas al crear el grafo y puede \
ser devuelto mediante el uso de la instrucci\[OAcute]n \
\[OpenCurlyDoubleQuote]VertexList[G]\[CloseCurlyDoubleQuote]. Sintaxis: \
BuscarPrimeroLargo[G], o, BuscarPrimeroLargo[G, animacion->True], o, \
BuscarPrimeroLargo[G, animacion->True, orden->Lista]. No acepta grafos \
dirigidos.", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None,
     "DownValues" -> 
    Information`InformationValueForm[
     DownValues, VilCretas`BuscarPrimeroLargo, {VilCretas`BuscarPrimeroLargo[
         Pattern[VilCretas`Private`AGrafo, 
          Blank[]], 
         OptionsPattern[]] :> If[Length[
           VilCretas`ListaAristas[VilCretas`Private`AGrafo]] >= 1, 
         If[Length[
            VilCretas`ListaVertices[VilCretas`Private`AGrafo]] >= 2, 
          
          Module[{VilCretas`Private`AOOPreOrden}, 
           VilCretas`Private`AOOPreOrden[
              Pattern[VilCretas`Private`AAGrafo, 
               Blank[]], 
              Pattern[VilCretas`Private`ARaiz, 
               Blank[]]] := 
            Module[{VilCretas`Private`OOPrefi, VilCretas`Private`AAList32, 
               VilCretas`Private`AList33, VilCretas`Private`AList34, 
               VilCretas`Private`AAristas, 
               VilCretas`Private`AAGrafoAuxiliar2}, VilCretas`Private`OOPrefi[
                 Pattern[VilCretas`Private`AAAGrafo, 
                  Blank[]], 
                 Pattern[VilCretas`Private`AARaiz, 
                  Blank[]]] := 
               Module[{
                 VilCretas`Private`AAAList32 = {}, 
                  VilCretas`Private`AAAGrafoAuxiliar2}, 
                 VilCretas`Private`AAAGrafoAuxiliar2 = Graph[
                    VertexList[VilCretas`Private`AAAGrafo], 
                    Sort[
                    EdgeList[VilCretas`Private`AAAGrafo]]]; 
                 VilCretas`Private`AAAList32 = 
                  VilCretas`AristasWolframSystemToCombinatorica[
                    Part[
                    Reap[
                    DepthFirstScan[
                    VilCretas`Private`AAAGrafoAuxiliar2, 
                    VilCretas`Private`AARaiz, "FrontierEdge" -> Sow]], 2, 1]]; 
                 VilCretas`Private`AAAList32]; 
              VilCretas`Private`AList33 = If[ToString[
                   OptionValue[VilCretas`orden]] == ToString[{}], 
                 VertexList[VilCretas`Private`AAGrafo], 
                 OptionValue[VilCretas`orden]]; 
              VilCretas`Private`AAristas = {}; 
              For[VilCretas`Private`Ai25 = 1, VilCretas`Private`Ai25 <= 
                Length[VilCretas`Private`AList33], 
                VilCretas`Private`AAristas = 
                 Append[VilCretas`Private`AAristas, 
                   Select[
                    EdgeList[VilCretas`Private`AAGrafo], Or[
                    Part[#, 1] == 
                    Part[VilCretas`Private`AList33, VilCretas`Private`Ai25], 
                    Part[#, 2] == 
                    Part[VilCretas`Private`AList33, 
                    VilCretas`Private`Ai25]]& ]]; 
                Increment[VilCretas`Private`Ai25]]; 
              VilCretas`Private`AAristas = DeleteDuplicates[
                 Flatten[VilCretas`Private`AAristas]]; 
              VilCretas`Private`AList34 = Table[ToString[
                   Part[VilCretas`Private`AList33, VilCretas`Private`Ai25]] -> 
                 VilCretas`Private`Ai25, {VilCretas`Private`Ai25, 
                  VertexCount[VilCretas`Private`AAGrafo]}]; 
              VilCretas`Private`AAGrafoAuxiliar2 = VilCretas`Grafo[
                 Table[
                  If[
                  Part[VilCretas`Private`Ai26, 1] > 
                   Part[VilCretas`Private`Ai26, 2], 
                   Reverse[VilCretas`Private`Ai26], VilCretas`Private`Ai26], {
                  VilCretas`Private`Ai26, 
                   ReplaceAll[
                    Table[{
                    ToString[
                    Part[VilCretas`Private`Ai25, 1]], 
                    ToString[
                    Part[VilCretas`Private`Ai25, 2]]}, {
                    VilCretas`Private`Ai25, 
                    VilCretas`AristasWolframSystemToCombinatorica[
                    VilCretas`Private`AAristas]}], 
                    VilCretas`Private`AList34]}]]; 
              VilCretas`Private`AAList32 = ReplaceAll[
                 VilCretas`Private`OOPrefi[VilCretas`Private`AAGrafoAuxiliar2, 
                  Part[
                   Part[
                    Select[
                    VilCretas`Private`AList34, Part[#, 1] == 
                    ToString[VilCretas`Private`ARaiz]& ], 1], 2]], 
                 Map[Reverse, VilCretas`Private`AList34]]; 
              VilCretas`Private`AAList32 = Table[
                 If[
                  MemberQ[
                   VertexList[VilCretas`Private`AAGrafo], 
                   VilCretas`Private`Ai25], VilCretas`Private`Ai25, 
                  ToExpression[VilCretas`Private`Ai25]], {
                 VilCretas`Private`Ai25, VilCretas`Private`AAList32}]; 
              VilCretas`Private`AAList32]; If[
             BooleanQ[
              OptionValue[VilCretas`animacion]], 
             If[
              VectorQ[
               OptionValue[VilCretas`orden]], 
              If[
               VilCretas`GrafoQ[VilCretas`Private`AGrafo], 
               If[
                Not[
                 VilCretas`GrafoDirigidoQ[VilCretas`Private`AGrafo]], 
                If[
                 VilCretas`GrafoConexoQ[VilCretas`Private`AGrafo], 
                 If[
                  Or[ToString[
                    Sort[
                    OptionValue[VilCretas`orden]]] == ToString[
                    Sort[
                    VertexList[VilCretas`Private`AGrafo]]], ToString[
                    OptionValue[VilCretas`orden]] == ToString[{}]], 
                  VilCretas`Private`AList32 = 
                   VilCretas`Private`AOOPreOrden[VilCretas`Private`AGrafo, 
                    If[ToString[
                    OptionValue[VilCretas`orden]] == ToString[{}], 
                    First[
                    VertexList[VilCretas`Private`AGrafo]], 
                    First[
                    OptionValue[VilCretas`orden]]]]; If[
                    OptionValue[VilCretas`animacion], If[
                    Not[
                    SubsetQ[
                    VilCretas`ListaVertices[VilCretas`Private`AGrafo], 
                    Flatten[VilCretas`Private`AList32]]], 
                    VilCretas`Private`AList32 = 
                    Map[ToString, VilCretas`Private`AList32, {2}]]; 
                    Print[VilCretas`Private`AList32]; 
                    VilCretas`AnimarGrafo[
                    VilCretas`Private`AGrafo, VilCretas`Private`AList32], If[
                    Not[
                    SubsetQ[
                    VilCretas`ListaVertices[VilCretas`Private`AGrafo], 
                    Flatten[VilCretas`Private`AList32]]], 
                    VilCretas`Private`AList32 = 
                    Map[ToString, VilCretas`Private`AList32, {2}]]; 
                    VilCretas`Private`AList32]]]], 
               If[
                VilCretas`GrafoCQ[VilCretas`Private`AGrafo], 
                If[
                 Not[
                  VilCretas`GrafoDirigidoQ[VilCretas`Private`AGrafo]], 
                 If[
                  VilCretas`GrafoConexoQ[VilCretas`Private`AGrafo], 
                  VilCretas`Private`AGrafoAuxiliar2 = VilCretas`Grafo[
                    Combinatorica`Edges[VilCretas`Private`AGrafo]]; If[
                    Or[ToString[
                    Sort[
                    OptionValue[VilCretas`orden]]] == ToString[
                    Sort[
                    VertexList[VilCretas`Private`AGrafoAuxiliar2]]], ToString[
                    OptionValue[VilCretas`orden]] == ToString[{}]], 
                    VilCretas`Private`AList32 = 
                    VilCretas`Private`AOOPreOrden[
                    VilCretas`Private`AGrafoAuxiliar2, 
                    If[ToString[
                    OptionValue[VilCretas`orden]] == ToString[{}], 
                    First[
                    VertexList[VilCretas`Private`AGrafoAuxiliar2]], 
                    First[
                    OptionValue[VilCretas`orden]]]]; If[
                    OptionValue[VilCretas`animacion], 
                    Print[VilCretas`Private`AList32]; 
                    VilCretas`AnimarGrafoWithCombinatorica[
                    VilCretas`Private`AGrafo, VilCretas`Private`AList32], 
                    VilCretas`Private`AList32]]]]]]]]]]]}], "SubValues" -> 
    None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {VilCretas`animacion -> False, VilCretas`orden -> {}}, 
    "Attributes" -> {Protected}, "FullName" -> 
    "VilCretas`BuscarPrimeroLargo"|>, False]]], "Output",
 CellChangeTimes->{3.968355282646574*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"d8d0f5c0-9011-0940-ac90-1711905579a2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BuscarPrimeroLargo", "[", 
  RowBox[{"grafo", ",", " ", 
   RowBox[{"animacion", "->", "True"}], ",", " ", 
   RowBox[{"orden", "->", "nodos"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.968355314536434*^9, 3.9683553601390553`*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"6da5175f-197b-5748-b97d-74a952451343"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"d", ",", "a"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "f"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"f", ",", "g"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"g", ",", "b"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"e", ",", "b"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "h"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", "h"}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.9683553289077034`*^9, 3.9683553702484493`*^9, 
  3.9683558310942535`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[67]:=",ExpressionUUID->"4248b91f-72e0-8f49-a4d4-6afa0c607070"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{VilCretas`Private`Gi13$$ = 7, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"sin t\[IAcute]tulo\"", Typeset`specs$$ = {{{
       Hold[VilCretas`Private`Gi13$$], 1, "Aristas"}, 1, 7, 1, ControlType -> 
      Manipulator}}, Typeset`size$$ = {360., {106., 109.93304755063659`}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {VilCretas`Private`Gi13$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      HighlightGraph[VilCretas`Private`GGrafoAuxiliar12, 
        Cases[VilCretas`Private`GList6, 
         Condition[
          Pattern[VilCretas`Private`Gicontador10$, 
           Blank[]], 
          MemberQ[
           Table[
           VilCretas`Private`Gi14, {
            VilCretas`Private`Gi14, VilCretas`Private`Gi13$$}], 
           Part[
            Flatten[
             Position[
             VilCretas`Private`GList6, VilCretas`Private`Gicontador10$]], 
            1]]]], VertexLabels -> "Name", ImagePadding -> 
        OptionValue[VilCretas`AnimarGrafo, {}, VilCretas`padding], 
        GraphHighlightStyle -> "Thick"], 
      "Specifications" :> {{{VilCretas`Private`Gi13$$, 1, "Aristas"}, 1, 7, 
         1}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{646., {135.3544921875, 140.6455078125}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Print",
 CellChangeTimes->{
  3.9683553289077034`*^9, 3.9683553702484493`*^9, {3.96835583115061*^9, 
   3.9683558338553543`*^9}},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[67]:=",ExpressionUUID->"e671698d-d28e-6948-86ce-c3f797dd3b48"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BuscarPrimeroAncho", "[", 
  RowBox[{"grafo", ",", " ", 
   RowBox[{"animacion", "->", "True"}], ",", " ", 
   RowBox[{"orden", "->", "nodos"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9683554884868374`*^9, 3.9683554902650204`*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"29cef084-701e-1641-8a63-55c065c12409"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"d", ",", "a"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", "e"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", "b"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", "c"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "f"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"g", ",", "b"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "h"}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.9683554907815323`*^9, 3.9683558846719017`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[68]:=",ExpressionUUID->"7e463424-40a2-2b49-81e6-9f347b524151"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{VilCretas`Private`Gi13$$ = 7, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"sin t\[IAcute]tulo\"", Typeset`specs$$ = {{{
       Hold[VilCretas`Private`Gi13$$], 1, "Aristas"}, 1, 7, 1, ControlType -> 
      Manipulator}}, Typeset`size$$ = {360., {106., 109.93304755063659`}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {VilCretas`Private`Gi13$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      HighlightGraph[VilCretas`Private`GGrafoAuxiliar12, 
        Cases[VilCretas`Private`GList6, 
         Condition[
          Pattern[VilCretas`Private`Gicontador10$, 
           Blank[]], 
          MemberQ[
           Table[
           VilCretas`Private`Gi14, {
            VilCretas`Private`Gi14, VilCretas`Private`Gi13$$}], 
           Part[
            Flatten[
             Position[
             VilCretas`Private`GList6, VilCretas`Private`Gicontador10$]], 
            1]]]], VertexLabels -> "Name", ImagePadding -> 
        OptionValue[VilCretas`AnimarGrafo, {}, VilCretas`padding], 
        GraphHighlightStyle -> "Thick"], 
      "Specifications" :> {{{VilCretas`Private`Gi13$$, 1, "Aristas"}, 1, 7, 
         1}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{646., {135.3544921875, 140.6455078125}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Print",
 CellChangeTimes->{
  3.9683554907815323`*^9, {3.9683558847255344`*^9, 3.9683558871410084`*^9}},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[68]:=",ExpressionUUID->"6659924e-9f96-0d4e-8d37-1e2044ca112c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["nodos"], "Input",
 CellChangeTimes->{{3.968355907397135*^9, 3.968355912565609*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"da74265b-3372-714a-972d-987bbbaf1a2b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "d", ",", "a", ",", "f", ",", "g", ",", "e", ",", "b", ",", "c", ",", "h"}],
   "}"}]], "Output",
 CellChangeTimes->{{3.9683559085667*^9, 3.9683559130822105`*^9}},
 CellLabel->"Out[70]=",ExpressionUUID->"0b3cd99f-dd64-0c4b-8f5a-30f5a086e74a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sort", "/@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"d", ",", "a"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"d", ",", "e"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"d", ",", "b"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"d", ",", "c"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "f"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"g", ",", "b"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"b", ",", "h"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.9683560234302807`*^9, 3.968356026329954*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"3405b3dc-62b1-1d4b-ad3f-f38e612dc1e0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "d"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", "e"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "d"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", "d"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "f"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "g"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "h"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.968356027295553*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"64f52e8c-9aef-ac41-80b3-56958fbb9fed"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"matr", "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"1", "0", "0", "0", "0"},
      {"1", "1", "1", "1", "0"},
      {"0", "0", "1", "0", "1"},
      {"0", "0", "0", "0", "0"},
      {"0", "0", "0", "0", "0"}
     }], "\[NoBreak]", ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MGrafo", "[", 
  RowBox[{
   RowBox[{"GrafoMI", "[", 
    RowBox[{"matr", ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e"}], "}"}]}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e"}], "}"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.9683561592746277`*^9, 3.9683563141307793`*^9}, 
   3.968356356176016*^9},
 CellLabel->"In[81]:=",ExpressionUUID->"86035733-fd20-3c46-a2ca-05a76462867f"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "1", "0", "0", "0"},
     {"1", "2", "1", "0", "0"},
     {"0", "1", "1", "0", "0"},
     {"0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {5, 5}, 0, {
     1, {{0, 1, 4, 6, 6, 6}, {{2}, {1}, {2}, {3}, {2}, {3}}}, {1, 1, 2, 1, 1, 
      1}}]]]]], "Output",
 CellChangeTimes->{{3.9683562844657707`*^9, 3.968356315176359*^9}, 
   3.9683563567864265`*^9},
 CellLabel->
  "Out[82]//MatrixForm=",ExpressionUUID->"e51def6d-4fa2-3647-9f59-\
03f8e82b3118"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "MPGrafo"}]], "Input",
 CellChangeTimes->{{3.968356397059454*^9, 3.9683564003211174`*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"97f02235-500a-9849-a777-4ac3255c6143"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Recibe un grafo ponderado \[OpenCurlyDoubleQuote]G\
\[CloseCurlyDoubleQuote] y sus v\[EAcute]rtices en un conjunto \
\[OpenCurlyDoubleQuote]Nodos\[CloseCurlyDoubleQuote], devolviendo la \
correspondiente matriz de adyacencia de pesos de acuerdo con el orden de \
\[OpenCurlyDoubleQuote]Nodos\[CloseCurlyDoubleQuote]. El comando brinda la \
opci\[OAcute]n \[OpenCurlyDoubleQuote]table->True\[CloseCurlyDoubleQuote], la \
cual permite mostrar la matriz con un formato de tabla, a\[NTilde]adiendo \
encabezados en filas y columnas con los v\[EAcute]rtices contenidos en el \
orden del conjunto \[OpenCurlyDoubleQuote]Nodos\[CloseCurlyDoubleQuote]. \
Sintaxis: MPGrafo[G, Nodos], o, MPGrafo[G, Nodos, table->True, matriz->True], \
\[OpenCurlyDoubleQuote]matriz->True\[CloseCurlyDoubleQuote] brinda la salida \
como una lista. Por defecto, si el grafo posee aristas m\[UAcute]ltiples, por \
cada una en la entrada correspondiente de la matriz, se muestra la suma de \
los pesos. Si el grafo se gener\[OAcute] con \
\[OpenCurlyDoubleQuote]Combinatorica\[CloseCurlyDoubleQuote] no acepta \
aristas mixtas (dirigidas y no dirigidas).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"MPGrafo", "[", 
                    
                    RowBox[{
                    "VilCretas`Private`GGrafo_", ",", 
                    "VilCretas`Private`GNodos_", ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"VilCretas`Private`GGrafoAuxiliar7", ",", 
                    "VilCretas`Private`GVl13"}], "}"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"VectorQ", "[", "VilCretas`Private`GNodos", "]"}],
                     ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"VilCretas`Private`GNodos", ",", "Null"}], "]"}], 
                    "\[Equal]", "False"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`GNodos", "\[NotEqual]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"BooleanQ", "[", 
                    RowBox[{"OptionValue", "[", "table", "]"}], "]"}], "&&", 
                    RowBox[{"BooleanQ", "[", 
                    RowBox[{"OptionValue", "[", "matriz", "]"}], "]"}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"PesosAristas", "[", "VilCretas`Private`GGrafo", 
                    "]"}], "}"}], ",", "Null"}], "]"}], "\[Equal]", "False"}],
                     ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"GrafoQ", "[", "VilCretas`Private`GGrafo", "]"}], 
                    ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"Sort", "[", 
                    
                    RowBox[{"VertexList", "[", "VilCretas`Private`GGrafo", 
                    "]"}], "]"}], "]"}], "\[Equal]", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Sort", "[", "VilCretas`Private`GNodos", "]"}], 
                    "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    
                    RowBox[{"AristasMixtasQ", "[", "VilCretas`Private`GGrafo",
                     "]"}], ",", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`GGrafoAuxiliar7", "=", 
                    RowBox[{"Graph", "[", 
                    RowBox[{"VilCretas`Private`GNodos", ",", 
                    RowBox[{"AristasCombinatoricaToWolframSystem", "[", 
                    RowBox[{
                    RowBox[{"AristasMixtasWolframSystemToCombinatorica", "[", 
                    
                    RowBox[{"EdgeList", "[", "VilCretas`Private`GGrafo", 
                    "]"}], "]"}], ",", 
                    RowBox[{"dirigido", "\[Rule]", "True"}]}], "]"}]}], 
                    "]"}]}], ";", 
                    RowBox[{"VilCretas`Private`GVl13", "=", 
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    
                    RowBox[{"PesosAristas", "[", "VilCretas`Private`GGrafo", 
                    "]"}], ",", "1"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"EdgeQ", "[", 
                    RowBox[{"VilCretas`Private`GGrafoAuxiliar7", ",", "#1"}], 
                    "]"}], "\[Equal]", "False"}], "&"}]}], "]"}]}], ";", 
                    RowBox[{"VilCretas`Private`GGrafoAuxiliar7", "=", 
                    RowBox[{"Graph", "[", 
                    RowBox[{"VilCretas`Private`GNodos", ",", 
                    
                    RowBox[{"EdgeList", "[", 
                    "VilCretas`Private`GGrafoAuxiliar7", "]"}], ",", 
                    
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    "VilCretas`Private`GVl13"}]}], "]"}]}]}], ",", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`GVl13", "=", 
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    
                    RowBox[{"PesosAristas", "[", "VilCretas`Private`GGrafo", 
                    "]"}], ",", "1"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"EdgeQ", "[", 
                    RowBox[{"VilCretas`Private`GGrafo", ",", "#1"}], "]"}], 
                    "\[Equal]", "False"}], "&"}]}], "]"}]}], ";", 
                    RowBox[{"VilCretas`Private`GGrafoAuxiliar7", "=", 
                    RowBox[{"Graph", "[", 
                    RowBox[{"VilCretas`Private`GNodos", ",", 
                    
                    RowBox[{"EdgeList", "[", "VilCretas`Private`GGrafo", 
                    "]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    "VilCretas`Private`GVl13"}]}], "]"}]}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"OptionValue", "[", "table", "]"}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"OptionValue", "[", "matriz", "]"}]}], ",", 
                    RowBox[{"MatrixForm", "[", 
                    
                    RowBox[{"WeightedAdjacencyMatrix", "[", 
                    "VilCretas`Private`GGrafoAuxiliar7", "]"}], "]"}], ",", 
                    RowBox[{"Normal", "[", 
                    
                    RowBox[{"WeightedAdjacencyMatrix", "[", 
                    "VilCretas`Private`GGrafoAuxiliar7", "]"}], "]"}]}], 
                    "]"}], ",", 
                    RowBox[{"TableForm", "[", 
                    RowBox[{
                    RowBox[{"Normal", "[", 
                    
                    RowBox[{"WeightedAdjacencyMatrix", "[", 
                    "VilCretas`Private`GGrafoAuxiliar7", "]"}], "]"}], ",", 
                    RowBox[{"TableHeadings", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"#1", ",", "Black"}], "]"}], "&"}], ")"}], "/@", 
                    
                    RowBox[{"VertexList", "[", 
                    "VilCretas`Private`GGrafoAuxiliar7", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"#1", ",", "Black"}], "]"}], "&"}], ")"}], "/@", 
                    
                    RowBox[{"VertexList", "[", 
                    "VilCretas`Private`GGrafoAuxiliar7", "]"}]}]}], "}"}]}], 
                    ",", 
                    RowBox[{"TableAlignments", "\[Rule]", "Center"}]}], 
                    "]"}]}], "]"}]}]}], "]"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"GrafoCQ", "[", "VilCretas`Private`GGrafo", "]"}],
                     ",", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`GVl13", "=", 
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    
                    RowBox[{"PesosAristas", "[", "VilCretas`Private`GGrafo", 
                    "]"}], ",", "1"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ListQ", "[", "#1", "]"}], "\[Equal]", "False"}], 
                    "&"}]}], "]"}]}], ";", 
                    RowBox[{"VilCretas`Private`GGrafoAuxiliar7", "=", 
                    
                    RowBox[{"CombinatoricaToGraph", "[", 
                    "VilCretas`Private`GGrafo", "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"Sort", "[", 
                    
                    RowBox[{"VertexList", "[", 
                    "VilCretas`Private`GGrafoAuxiliar7", "]"}], "]"}], "]"}], 
                    "\[Equal]", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Sort", "[", "VilCretas`Private`GNodos", "]"}], 
                    "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`GGrafoAuxiliar7", "=", 
                    RowBox[{"Grafo", "[", 
                    RowBox[{
                    
                    RowBox[{"Combinatorica`Edges", "[", 
                    "VilCretas`Private`GGrafo", "]"}], ",", 
                    
                    RowBox[{"vertices", "\[Rule]", 
                    "VilCretas`Private`GNodos"}], ",", 
                    RowBox[{"dirigido", "\[Rule]", 
                    RowBox[{"!", 
                    
                    RowBox[{"Combinatorica`UndirectedQ", "[", 
                    "VilCretas`Private`GGrafo", "]"}]}]}], ",", 
                    RowBox[{"pesos", "\[Rule]", "VilCretas`Private`GVl13"}]}],
                     "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"OptionValue", "[", "table", "]"}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"OptionValue", "[", "matriz", "]"}]}], ",", 
                    RowBox[{"MatrixForm", "[", 
                    
                    RowBox[{"WeightedAdjacencyMatrix", "[", 
                    "VilCretas`Private`GGrafoAuxiliar7", "]"}], "]"}], ",", 
                    RowBox[{"Normal", "[", 
                    
                    RowBox[{"WeightedAdjacencyMatrix", "[", 
                    "VilCretas`Private`GGrafoAuxiliar7", "]"}], "]"}]}], 
                    "]"}], ",", 
                    RowBox[{"TableForm", "[", 
                    RowBox[{
                    RowBox[{"Normal", "[", 
                    
                    RowBox[{"WeightedAdjacencyMatrix", "[", 
                    "VilCretas`Private`GGrafoAuxiliar7", "]"}], "]"}], ",", 
                    RowBox[{"TableHeadings", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"#1", ",", "Black"}], "]"}], "&"}], ")"}], "/@", 
                    
                    RowBox[{"VertexList", "[", 
                    "VilCretas`Private`GGrafoAuxiliar7", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"#1", ",", "Black"}], "]"}], "&"}], ")"}], "/@", 
                    
                    RowBox[{"VertexList", "[", 
                    "VilCretas`Private`GGrafoAuxiliar7", "]"}]}]}], "}"}]}], 
                    ",", 
                    RowBox[{"TableAlignments", "\[Rule]", "Center"}]}], 
                    "]"}]}], "]"}]}]}], "]"}]}]}], "]"}]}], "]"}]}], "]"}]}], 
                    "]"}]}], "]"}]}], "]"}]}], "]"}]}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"table", "\[Rule]", "False"}], ",", 
                    RowBox[{"matriz", "\[Rule]", "False"}]}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"VilCretas`MPGrafo\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Recibe un grafo ponderado \[OpenCurlyDoubleQuote]G\
\[CloseCurlyDoubleQuote] y sus v\[EAcute]rtices en un conjunto \
\[OpenCurlyDoubleQuote]Nodos\[CloseCurlyDoubleQuote], devolviendo la \
correspondiente matriz de adyacencia de pesos de acuerdo con el orden de \
\[OpenCurlyDoubleQuote]Nodos\[CloseCurlyDoubleQuote]. El comando brinda la \
opci\[OAcute]n \[OpenCurlyDoubleQuote]table->True\[CloseCurlyDoubleQuote], la \
cual permite mostrar la matriz con un formato de tabla, a\[NTilde]adiendo \
encabezados en filas y columnas con los v\[EAcute]rtices contenidos en el \
orden del conjunto \[OpenCurlyDoubleQuote]Nodos\[CloseCurlyDoubleQuote]. \
Sintaxis: MPGrafo[G, Nodos], o, MPGrafo[G, Nodos, table->True, matriz->True], \
\[OpenCurlyDoubleQuote]matriz->True\[CloseCurlyDoubleQuote] brinda la salida \
como una lista. Por defecto, si el grafo posee aristas m\[UAcute]ltiples, por \
cada una en la entrada correspondiente de la matriz, se muestra la suma de \
los pesos. Si el grafo se gener\[OAcute] con \
\[OpenCurlyDoubleQuote]Combinatorica\[CloseCurlyDoubleQuote] no acepta \
aristas mixtas (dirigidas y no dirigidas).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "Recibe un grafo ponderado \[OpenCurlyDoubleQuote]G\
\[CloseCurlyDoubleQuote] y sus v\[EAcute]rtices en un conjunto \
\[OpenCurlyDoubleQuote]Nodos\[CloseCurlyDoubleQuote], devolviendo la \
correspondiente matriz de adyacencia de pesos de acuerdo con el orden de \
\[OpenCurlyDoubleQuote]Nodos\[CloseCurlyDoubleQuote]. El comando brinda la \
opci\[OAcute]n \[OpenCurlyDoubleQuote]table->True\[CloseCurlyDoubleQuote], la \
cual permite mostrar la matriz con un formato de tabla, a\[NTilde]adiendo \
encabezados en filas y columnas con los v\[EAcute]rtices contenidos en el \
orden del conjunto \[OpenCurlyDoubleQuote]Nodos\[CloseCurlyDoubleQuote]. \
Sintaxis: MPGrafo[G, Nodos], o, MPGrafo[G, Nodos, table->True, matriz->True], \
\[OpenCurlyDoubleQuote]matriz->True\[CloseCurlyDoubleQuote] brinda la salida \
como una lista. Por defecto, si el grafo posee aristas m\[UAcute]ltiples, por \
cada una en la entrada correspondiente de la matriz, se muestra la suma de \
los pesos. Si el grafo se gener\[OAcute] con \
\[OpenCurlyDoubleQuote]Combinatorica\[CloseCurlyDoubleQuote] no acepta \
aristas mixtas (dirigidas y no dirigidas).", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, VilCretas`MPGrafo, {VilCretas`MPGrafo[
         Pattern[VilCretas`Private`GGrafo, 
          Blank[]], 
         Pattern[VilCretas`Private`GNodos, 
          Blank[]], 
         OptionsPattern[]] :> 
       Module[{VilCretas`Private`GGrafoAuxiliar7, VilCretas`Private`GVl13}, 
         If[
          VectorQ[VilCretas`Private`GNodos], 
          If[MemberQ[VilCretas`Private`GNodos, Null] == False, 
           If[VilCretas`Private`GNodos != {}, 
            If[
             And[
              BooleanQ[
               OptionValue[VilCretas`table]], 
              BooleanQ[
               OptionValue[VilCretas`matriz]]], 
             If[MemberQ[{
                 VilCretas`PesosAristas[VilCretas`Private`GGrafo]}, Null] == 
              False, 
              If[
               VilCretas`GrafoQ[VilCretas`Private`GGrafo], 
               If[ToString[
                  Sort[
                   VertexList[VilCretas`Private`GGrafo]]] == ToString[
                  Sort[VilCretas`Private`GNodos]], If[
                  VilCretas`AristasMixtasQ[VilCretas`Private`GGrafo], 
                  VilCretas`Private`GGrafoAuxiliar7 = 
                   Graph[VilCretas`Private`GNodos, 
                    VilCretas`AristasCombinatoricaToWolframSystem[
                    VilCretas`AristasMixtasWolframSystemToCombinatorica[
                    EdgeList[VilCretas`Private`GGrafo]], VilCretas`dirigido -> 
                    True]]; VilCretas`Private`GVl13 = Select[
                    Flatten[
                    VilCretas`PesosAristas[VilCretas`Private`GGrafo], 1], 
                    EdgeQ[VilCretas`Private`GGrafoAuxiliar7, #] == False& ]; 
                  VilCretas`Private`GGrafoAuxiliar7 = 
                   Graph[VilCretas`Private`GNodos, 
                    EdgeList[VilCretas`Private`GGrafoAuxiliar7], EdgeWeight -> 
                    VilCretas`Private`GVl13], VilCretas`Private`GVl13 = Select[
                    Flatten[
                    VilCretas`PesosAristas[VilCretas`Private`GGrafo], 1], 
                    EdgeQ[VilCretas`Private`GGrafo, #] == False& ]; 
                  VilCretas`Private`GGrafoAuxiliar7 = 
                   Graph[VilCretas`Private`GNodos, 
                    EdgeList[VilCretas`Private`GGrafo], EdgeWeight -> 
                    VilCretas`Private`GVl13]]; If[
                  Not[
                   OptionValue[VilCretas`table]], 
                  If[
                   Not[
                    OptionValue[VilCretas`matriz]], 
                   MatrixForm[
                    WeightedAdjacencyMatrix[
                    VilCretas`Private`GGrafoAuxiliar7]], 
                   Normal[
                    WeightedAdjacencyMatrix[
                    VilCretas`Private`GGrafoAuxiliar7]]], 
                  TableForm[
                   Normal[
                    WeightedAdjacencyMatrix[
                    VilCretas`Private`GGrafoAuxiliar7]], TableHeadings -> {
                    Map[Style[#, Black]& , 
                    VertexList[VilCretas`Private`GGrafoAuxiliar7]], 
                    Map[Style[#, Black]& , 
                    VertexList[VilCretas`Private`GGrafoAuxiliar7]]}, 
                   TableAlignments -> Center]]], 
               If[
                VilCretas`GrafoCQ[VilCretas`Private`GGrafo], 
                VilCretas`Private`GVl13 = Select[
                   Flatten[
                    VilCretas`PesosAristas[VilCretas`Private`GGrafo], 1], 
                   ListQ[#] == False& ]; 
                VilCretas`Private`GGrafoAuxiliar7 = 
                 VilCretas`CombinatoricaToGraph[VilCretas`Private`GGrafo]; 
                If[ToString[
                    Sort[
                    VertexList[VilCretas`Private`GGrafoAuxiliar7]]] == 
                  ToString[
                    Sort[VilCretas`Private`GNodos]], 
                  VilCretas`Private`GGrafoAuxiliar7 = VilCretas`Grafo[
                    Combinatorica`Edges[VilCretas`Private`GGrafo], 
                    VilCretas`vertices -> VilCretas`Private`GNodos, 
                    VilCretas`dirigido -> Not[
                    Combinatorica`UndirectedQ[VilCretas`Private`GGrafo]], 
                    VilCretas`pesos -> VilCretas`Private`GVl13]; If[
                    Not[
                    OptionValue[VilCretas`table]], 
                    If[
                    Not[
                    OptionValue[VilCretas`matriz]], 
                    MatrixForm[
                    WeightedAdjacencyMatrix[
                    VilCretas`Private`GGrafoAuxiliar7]], 
                    Normal[
                    WeightedAdjacencyMatrix[
                    VilCretas`Private`GGrafoAuxiliar7]]], 
                    TableForm[
                    Normal[
                    WeightedAdjacencyMatrix[
                    VilCretas`Private`GGrafoAuxiliar7]], TableHeadings -> {
                    Map[Style[#, Black]& , 
                    VertexList[VilCretas`Private`GGrafoAuxiliar7]], 
                    Map[Style[#, Black]& , 
                    VertexList[VilCretas`Private`GGrafoAuxiliar7]]}, 
                    TableAlignments -> Center]]]]]]]]]]]}], "SubValues" -> 
    None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {VilCretas`table -> False, VilCretas`matriz -> False}, 
    "Attributes" -> {Protected}, "FullName" -> "VilCretas`MPGrafo"|>, 
   False]]], "Output",
 CellChangeTimes->{3.9683564007123566`*^9},
 CellLabel->"Out[83]=",ExpressionUUID->"221d503a-529b-364a-b662-ef9cd1867999"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "MGrafo"}]], "Input",
 CellChangeTimes->{{3.968356206027809*^9, 3.968356228169569*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"8573d12b-3a36-8946-a8e8-d4770bbcc836"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Recibe un grafo \[OpenCurlyDoubleQuote]G\
\[CloseCurlyDoubleQuote] y sus v\[EAcute]rtices en un conjunto \
\[OpenCurlyDoubleQuote]Nodos\[CloseCurlyDoubleQuote], retornando la \
correspondiente matriz de adyacencia de acuerdo con el orden de \
\[OpenCurlyDoubleQuote]Nodos\[CloseCurlyDoubleQuote]. La instrucci\[OAcute]n \
presenta la opci\[OAcute]n \[OpenCurlyDoubleQuote]table->True\
\[CloseCurlyDoubleQuote], la cual permite mostrar la matriz con un formato de \
tabla, a\[NTilde]adiendo encabezados en filas y columnas con los \
v\[EAcute]rtices contenidos en el orden del conjunto \
\[OpenCurlyDoubleQuote]Nodos\[CloseCurlyDoubleQuote]. Sintaxis: MGrafo[G, \
Nodos], o, MGrafo[G, Nodos, table->True, matriz->True], \
\[OpenCurlyDoubleQuote]matriz->True\[CloseCurlyDoubleQuote] brinda la salida \
como una lista. Si el grafo se gener\[OAcute] con \
\[OpenCurlyDoubleQuote]Combinatorica\[CloseCurlyDoubleQuote] no acepta \
aristas mixtas (dirigidas y no dirigidas).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"MGrafo", "[", 
                    
                    RowBox[{
                    "VilCretas`Private`GGrafo_", ",", 
                    "VilCretas`Private`GNodos_", ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "VilCretas`Private`GGrafoAuxiliar3", "}"}], 
                    ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"VectorQ", "[", "VilCretas`Private`GNodos", "]"}],
                     ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"VilCretas`Private`GNodos", ",", "Null"}], "]"}], 
                    "\[Equal]", "False"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`GNodos", "\[NotEqual]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"BooleanQ", "[", 
                    RowBox[{"OptionValue", "[", "table", "]"}], "]"}], "&&", 
                    RowBox[{"BooleanQ", "[", 
                    RowBox[{"OptionValue", "[", "matriz", "]"}], "]"}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"GrafoQ", "[", "VilCretas`Private`GGrafo", "]"}], 
                    ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"Sort", "[", 
                    
                    RowBox[{"VertexList", "[", "VilCretas`Private`GGrafo", 
                    "]"}], "]"}], "]"}], "\[Equal]", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Sort", "[", "VilCretas`Private`GNodos", "]"}], 
                    "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`GGrafoAuxiliar3", "=", 
                    RowBox[{"Graph", "[", 
                    RowBox[{"VilCretas`Private`GNodos", ",", 
                    
                    RowBox[{"EdgeList", "[", "VilCretas`Private`GGrafo", 
                    "]"}], ",", 
                    RowBox[{"VertexLabels", "\[Rule]", "\"Name\""}], ",", 
                    RowBox[{"ImagePadding", "\[Rule]", "10"}]}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"OptionValue", "[", "table", "]"}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"OptionValue", "[", "matriz", "]"}]}], ",", 
                    RowBox[{"MatrixForm", "[", 
                    
                    RowBox[{"AdjacencyMatrix", "[", 
                    "VilCretas`Private`GGrafoAuxiliar3", "]"}], "]"}], ",", 
                    RowBox[{"Normal", "[", 
                    
                    RowBox[{"AdjacencyMatrix", "[", 
                    "VilCretas`Private`GGrafoAuxiliar3", "]"}], "]"}]}], 
                    "]"}], ",", 
                    RowBox[{"TableForm", "[", 
                    RowBox[{
                    RowBox[{"Normal", "[", 
                    
                    RowBox[{"AdjacencyMatrix", "[", 
                    "VilCretas`Private`GGrafoAuxiliar3", "]"}], "]"}], ",", 
                    RowBox[{"TableHeadings", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"#1", ",", "Black"}], "]"}], "&"}], ")"}], "/@", 
                    
                    RowBox[{"VertexList", "[", 
                    "VilCretas`Private`GGrafoAuxiliar3", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"#1", ",", "Black"}], "]"}], "&"}], ")"}], "/@", 
                    
                    RowBox[{"VertexList", "[", 
                    "VilCretas`Private`GGrafoAuxiliar3", "]"}]}]}], "}"}]}], 
                    ",", 
                    RowBox[{"TableAlignments", "\[Rule]", "Center"}]}], 
                    "]"}]}], "]"}]}]}], "]"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"GrafoCQ", "[", "VilCretas`Private`GGrafo", "]"}],
                     ",", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`GGrafoAuxiliar3", "=", 
                    
                    RowBox[{"CombinatoricaToGraph", "[", 
                    "VilCretas`Private`GGrafo", "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"Sort", "[", 
                    
                    RowBox[{"VertexList", "[", 
                    "VilCretas`Private`GGrafoAuxiliar3", "]"}], "]"}], "]"}], 
                    "\[Equal]", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Sort", "[", "VilCretas`Private`GNodos", "]"}], 
                    "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`GGrafoAuxiliar3", "=", 
                    RowBox[{"Grafo", "[", 
                    RowBox[{
                    
                    RowBox[{"Combinatorica`Edges", "[", 
                    "VilCretas`Private`GGrafo", "]"}], ",", 
                    
                    RowBox[{"vertices", "\[Rule]", 
                    "VilCretas`Private`GNodos"}], ",", 
                    RowBox[{"dirigido", "\[Rule]", 
                    RowBox[{"!", 
                    
                    RowBox[{"Combinatorica`UndirectedQ", "[", 
                    "VilCretas`Private`GGrafo", "]"}]}]}]}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"OptionValue", "[", "table", "]"}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"OptionValue", "[", "matriz", "]"}]}], ",", 
                    RowBox[{"MatrixForm", "[", 
                    
                    RowBox[{"AdjacencyMatrix", "[", 
                    "VilCretas`Private`GGrafoAuxiliar3", "]"}], "]"}], ",", 
                    RowBox[{"Normal", "[", 
                    
                    RowBox[{"AdjacencyMatrix", "[", 
                    "VilCretas`Private`GGrafoAuxiliar3", "]"}], "]"}]}], 
                    "]"}], ",", 
                    RowBox[{"TableForm", "[", 
                    RowBox[{
                    RowBox[{"Normal", "[", 
                    
                    RowBox[{"AdjacencyMatrix", "[", 
                    "VilCretas`Private`GGrafoAuxiliar3", "]"}], "]"}], ",", 
                    RowBox[{"TableHeadings", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"#1", ",", "Black"}], "]"}], "&"}], ")"}], "/@", 
                    
                    RowBox[{"VertexList", "[", 
                    "VilCretas`Private`GGrafoAuxiliar3", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"#1", ",", "Black"}], "]"}], "&"}], ")"}], "/@", 
                    
                    RowBox[{"VertexList", "[", 
                    "VilCretas`Private`GGrafoAuxiliar3", "]"}]}]}], "}"}]}], 
                    ",", 
                    RowBox[{"TableAlignments", "\[Rule]", "Center"}]}], 
                    "]"}]}], "]"}]}]}], "]"}]}]}], "]"}]}], "]"}]}], "]"}]}], 
                    "]"}]}], "]"}]}], "]"}]}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"table", "\[Rule]", "False"}], ",", 
                    RowBox[{"matriz", "\[Rule]", "False"}]}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"VilCretas`MGrafo\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Recibe un grafo \[OpenCurlyDoubleQuote]G\
\[CloseCurlyDoubleQuote] y sus v\[EAcute]rtices en un conjunto \
\[OpenCurlyDoubleQuote]Nodos\[CloseCurlyDoubleQuote], retornando la \
correspondiente matriz de adyacencia de acuerdo con el orden de \
\[OpenCurlyDoubleQuote]Nodos\[CloseCurlyDoubleQuote]. La instrucci\[OAcute]n \
presenta la opci\[OAcute]n \[OpenCurlyDoubleQuote]table->True\
\[CloseCurlyDoubleQuote], la cual permite mostrar la matriz con un formato de \
tabla, a\[NTilde]adiendo encabezados en filas y columnas con los \
v\[EAcute]rtices contenidos en el orden del conjunto \
\[OpenCurlyDoubleQuote]Nodos\[CloseCurlyDoubleQuote]. Sintaxis: MGrafo[G, \
Nodos], o, MGrafo[G, Nodos, table->True, matriz->True], \
\[OpenCurlyDoubleQuote]matriz->True\[CloseCurlyDoubleQuote] brinda la salida \
como una lista. Si el grafo se gener\[OAcute] con \
\[OpenCurlyDoubleQuote]Combinatorica\[CloseCurlyDoubleQuote] no acepta \
aristas mixtas (dirigidas y no dirigidas).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "Recibe un grafo \[OpenCurlyDoubleQuote]G\[CloseCurlyDoubleQuote] y sus v\
\[EAcute]rtices en un conjunto \[OpenCurlyDoubleQuote]Nodos\
\[CloseCurlyDoubleQuote], retornando la correspondiente matriz de adyacencia \
de acuerdo con el orden de \[OpenCurlyDoubleQuote]Nodos\
\[CloseCurlyDoubleQuote]. La instrucci\[OAcute]n presenta la opci\[OAcute]n \
\[OpenCurlyDoubleQuote]table->True\[CloseCurlyDoubleQuote], la cual permite \
mostrar la matriz con un formato de tabla, a\[NTilde]adiendo encabezados en \
filas y columnas con los v\[EAcute]rtices contenidos en el orden del conjunto \
\[OpenCurlyDoubleQuote]Nodos\[CloseCurlyDoubleQuote]. Sintaxis: MGrafo[G, \
Nodos], o, MGrafo[G, Nodos, table->True, matriz->True], \
\[OpenCurlyDoubleQuote]matriz->True\[CloseCurlyDoubleQuote] brinda la salida \
como una lista. Si el grafo se gener\[OAcute] con \
\[OpenCurlyDoubleQuote]Combinatorica\[CloseCurlyDoubleQuote] no acepta \
aristas mixtas (dirigidas y no dirigidas).", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, VilCretas`MGrafo, {VilCretas`MGrafo[
         Pattern[VilCretas`Private`GGrafo, 
          Blank[]], 
         Pattern[VilCretas`Private`GNodos, 
          Blank[]], 
         OptionsPattern[]] :> Module[{VilCretas`Private`GGrafoAuxiliar3}, 
         If[
          VectorQ[VilCretas`Private`GNodos], 
          If[MemberQ[VilCretas`Private`GNodos, Null] == False, 
           If[VilCretas`Private`GNodos != {}, 
            If[
             And[
              BooleanQ[
               OptionValue[VilCretas`table]], 
              BooleanQ[
               OptionValue[VilCretas`matriz]]], 
             If[
              VilCretas`GrafoQ[VilCretas`Private`GGrafo], 
              If[ToString[
                 Sort[
                  VertexList[VilCretas`Private`GGrafo]]] == ToString[
                 Sort[VilCretas`Private`GNodos]], 
               VilCretas`Private`GGrafoAuxiliar3 = 
                Graph[VilCretas`Private`GNodos, 
                  EdgeList[VilCretas`Private`GGrafo], VertexLabels -> "Name", 
                  ImagePadding -> 10]; If[
                 Not[
                  OptionValue[VilCretas`table]], 
                 If[
                  Not[
                   OptionValue[VilCretas`matriz]], 
                  MatrixForm[
                   AdjacencyMatrix[VilCretas`Private`GGrafoAuxiliar3]], 
                  Normal[
                   AdjacencyMatrix[VilCretas`Private`GGrafoAuxiliar3]]], 
                 TableForm[
                  Normal[
                   AdjacencyMatrix[VilCretas`Private`GGrafoAuxiliar3]], 
                  TableHeadings -> {
                    Map[Style[#, Black]& , 
                    VertexList[VilCretas`Private`GGrafoAuxiliar3]], 
                    Map[Style[#, Black]& , 
                    VertexList[VilCretas`Private`GGrafoAuxiliar3]]}, 
                  TableAlignments -> Center]]], 
              If[
               VilCretas`GrafoCQ[VilCretas`Private`GGrafo], 
               VilCretas`Private`GGrafoAuxiliar3 = 
                VilCretas`CombinatoricaToGraph[VilCretas`Private`GGrafo]; 
               If[ToString[
                   Sort[
                    VertexList[VilCretas`Private`GGrafoAuxiliar3]]] == 
                 ToString[
                   Sort[VilCretas`Private`GNodos]], 
                 VilCretas`Private`GGrafoAuxiliar3 = VilCretas`Grafo[
                    Combinatorica`Edges[VilCretas`Private`GGrafo], 
                    VilCretas`vertices -> VilCretas`Private`GNodos, 
                    VilCretas`dirigido -> Not[
                    Combinatorica`UndirectedQ[VilCretas`Private`GGrafo]]]; If[
                   Not[
                    OptionValue[VilCretas`table]], 
                   If[
                    Not[
                    OptionValue[VilCretas`matriz]], 
                    MatrixForm[
                    AdjacencyMatrix[VilCretas`Private`GGrafoAuxiliar3]], 
                    Normal[
                    AdjacencyMatrix[VilCretas`Private`GGrafoAuxiliar3]]], 
                   TableForm[
                    Normal[
                    AdjacencyMatrix[VilCretas`Private`GGrafoAuxiliar3]], 
                    TableHeadings -> {
                    Map[Style[#, Black]& , 
                    VertexList[VilCretas`Private`GGrafoAuxiliar3]], 
                    Map[Style[#, Black]& , 
                    VertexList[VilCretas`Private`GGrafoAuxiliar3]]}, 
                    TableAlignments -> Center]]]]]]]]]]}], "SubValues" -> 
    None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {VilCretas`table -> False, VilCretas`matriz -> False}, 
    "Attributes" -> {Protected}, "FullName" -> "VilCretas`MGrafo"|>, 
   False]]], "Output",
 CellChangeTimes->{{3.968356210348093*^9, 3.9683562290978966`*^9}},
 CellLabel->"Out[74]=",ExpressionUUID->"3dc4097b-f359-aa42-aa86-e4406b398e2f"]
}, Open  ]]
},
WindowSize->{1152, 579.6},
WindowMargins->{{
  Automatic, -5.399999999999864}, {-5.399999999999977, Automatic}},
Magnification:>0.8 Inherited,
FrontEndVersion->"14.0 para Microsoft Windows (64-bit) (December 12, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"2bfd533b-1a7d-a542-8e76-e8072c0bf9ca"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 199, 3, 28, "Input",ExpressionUUID->"02bb9491-b566-9549-ac09-4baeef3c3fd5"],
Cell[782, 27, 478, 12, 22, "Print",ExpressionUUID->"225376ba-816d-b248-be7d-310e05647093"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1297, 44, 227, 3, 28, "Input",ExpressionUUID->"ecbdc175-545e-ac49-9a98-4597f3b37292"],
Cell[1527, 49, 606320, 9886, 199, 253917, 4108, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"4f02ff28-03dc-aa44-a240-0650e2a61b12"]
}, Open  ]],
Cell[CellGroupData[{
Cell[607884, 9940, 2002, 58, 102, "Input",ExpressionUUID->"cda9aa97-0fc0-e743-b142-7bd3b0b829d8"],
Cell[CellGroupData[{
Cell[609911, 10002, 1061, 24, 22, "Print",ExpressionUUID->"5a0a95f2-a346-d249-a239-369ca0c59767"],
Cell[610975, 10028, 327, 9, 22, "Print",ExpressionUUID->"719319b1-a5d7-b849-8f6e-f49e3106d971"],
Cell[611305, 10039, 2369, 50, 286, "Print",ExpressionUUID->"67bead5c-3223-9d43-86a1-96406accb79d"]
}, Open  ]],
Cell[613689, 10092, 299, 8, 53, "Message",ExpressionUUID->"3c015c10-e94e-0341-8254-30db5bbede7a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[614025, 10105, 263, 5, 28, "Input",ExpressionUUID->"ccd92463-c04a-834d-9000-05f4f96eebe8"],
Cell[CellGroupData[{
Cell[614313, 10114, 575, 13, 22, "Print",ExpressionUUID->"d78be01a-4383-6245-aa0d-9bece26e61eb"],
Cell[614891, 10129, 973, 26, 22, "Print",ExpressionUUID->"864a3431-aa9f-7748-8c79-d0e534aaf554"],
Cell[615867, 10157, 330, 9, 22, "Print",ExpressionUUID->"bd3040ff-7c10-1642-8c60-19d29ff19d08"],
Cell[616200, 10168, 2367, 50, 286, "Print",ExpressionUUID->"d7adbdfc-e8d2-3d4d-a436-f031c6351570"]
}, Open  ]],
Cell[618582, 10221, 301, 8, 53, "Message",ExpressionUUID->"8da37d03-a7d7-8043-accd-bd50a8cff156"]
}, Open  ]],
Cell[618898, 10232, 1574, 45, 62, "Input",ExpressionUUID->"253ddfe8-13aa-8d46-90b9-9bd442476267"],
Cell[CellGroupData[{
Cell[620497, 10281, 295, 5, 43, "Input",ExpressionUUID->"575fad39-ce00-bb41-8a60-b7adec48a977"],
Cell[CellGroupData[{
Cell[620817, 10290, 245, 4, 22, "Print",ExpressionUUID->"169dea41-b8e5-0949-a9c5-f18fc8b677f0"],
Cell[621065, 10296, 8458, 284, 177, "Print",ExpressionUUID->"328c8680-372f-c244-8daf-4dfff0eb6cb7"],
Cell[629526, 10582, 1916, 50, 22, "Print",ExpressionUUID->"a3d67765-3509-0841-a5c1-2f5da9dcb5e0"],
Cell[631445, 10634, 402, 9, 22, "Print",ExpressionUUID->"c35ce74f-1732-3648-b8ad-d88dd55a2f5e"],
Cell[631850, 10645, 668, 15, 22, "Print",ExpressionUUID->"5799cbb3-d5bc-f54b-bb3e-9ed1f7308047"],
Cell[632521, 10662, 1841, 49, 22, "Print",ExpressionUUID->"385f42d2-f5ea-c642-99a1-ae83958f2849"],
Cell[634365, 10713, 402, 9, 22, "Print",ExpressionUUID->"8461c56a-86d5-de4b-8799-45a8dbc436b4"],
Cell[634770, 10724, 645, 15, 22, "Print",ExpressionUUID->"50ea2bbf-36ae-7d4a-aaa2-b448080b6a4e"],
Cell[635418, 10741, 1686, 45, 22, "Print",ExpressionUUID->"deb21f82-0137-904f-a4bf-0ae31f14142c"],
Cell[637107, 10788, 402, 9, 22, "Print",ExpressionUUID->"d90c064e-83ac-0b4a-89d2-08a1c54b32ce"],
Cell[637512, 10799, 611, 14, 22, "Print",ExpressionUUID->"e7bb993a-cec3-5541-805d-3e0b60711379"],
Cell[638126, 10815, 1530, 41, 22, "Print",ExpressionUUID->"4dedc277-f052-734c-be40-bea41544af9d"],
Cell[639659, 10858, 400, 9, 22, "Print",ExpressionUUID->"4cdeb31b-3ed0-f145-979c-1210fc7c680e"],
Cell[640062, 10869, 580, 12, 22, "Print",ExpressionUUID->"5f2e3794-eb26-324f-ac8a-b7acab8d7095"],
Cell[640645, 10883, 1410, 38, 22, "Print",ExpressionUUID->"f11a732c-b18a-7442-bc4c-39040aff799a"],
Cell[642058, 10923, 402, 9, 22, "Print",ExpressionUUID->"00ddac29-c7d5-724f-ba13-b7aefa1d7053"],
Cell[642463, 10934, 551, 12, 22, "Print",ExpressionUUID->"8d4c9a79-508b-bb4e-9b76-440e3144eb19"],
Cell[643017, 10948, 1244, 34, 22, "Print",ExpressionUUID->"b34218f8-9545-cf45-8866-72c85f6238b9"],
Cell[644264, 10984, 400, 9, 22, "Print",ExpressionUUID->"eb93329f-ed9c-414e-8f05-71a562bd4527"],
Cell[644667, 10995, 526, 12, 22, "Print",ExpressionUUID->"a0226586-d84a-0348-80e0-bfda2624b9fa"],
Cell[645196, 11009, 1072, 29, 22, "Print",ExpressionUUID->"474d9161-899d-9e42-beed-5a4dd2da5612"],
Cell[646271, 11040, 402, 9, 22, "Print",ExpressionUUID->"64505da1-26a4-c446-967e-73ff949c625e"],
Cell[646676, 11051, 500, 12, 22, "Print",ExpressionUUID->"a09752cc-cfe0-414c-84f3-76d027c4e340"],
Cell[647179, 11065, 910, 25, 22, "Print",ExpressionUUID->"074a194a-ffb4-af4c-b5d9-ab13a353b1dc"],
Cell[648092, 11092, 400, 9, 22, "Print",ExpressionUUID->"5226698d-9c17-214d-b307-2c49f739c954"],
Cell[648495, 11103, 474, 11, 22, "Print",ExpressionUUID->"cc523a0b-6961-d24b-afea-4179557efa54"],
Cell[648972, 11116, 738, 20, 22, "Print",ExpressionUUID->"e701f3c7-9739-da48-9660-fe3fa8584db4"],
Cell[649713, 11138, 402, 9, 22, "Print",ExpressionUUID->"437abb65-c6f4-9a42-8704-e9be507582d7"],
Cell[650118, 11149, 445, 10, 22, "Print",ExpressionUUID->"bf20d8ca-84a9-4248-b84f-b3db7aae4866"],
Cell[650566, 11161, 427, 9, 22, "Print",ExpressionUUID->"c6cd8afe-8cac-8249-9628-61310c2bc3e6"],
Cell[650996, 11172, 549, 14, 22, "Print",ExpressionUUID->"1ade148b-7ec9-1847-9056-db0fa8eb2466"],
Cell[651548, 11188, 15270, 455, 176, "Print",ExpressionUUID->"f6d11889-3fcf-db44-83cc-78728571b3df"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[666867, 11649, 174, 2, 28, "Input",ExpressionUUID->"8a63ed64-feb7-3045-a3f7-37ed6f2ef107"],
Cell[667044, 11653, 9435, 196, 243, "Output",ExpressionUUID->"324b8ee3-07ee-5949-8a52-808971f15384"]
}, Open  ]],
Cell[CellGroupData[{
Cell[676516, 11854, 1423, 41, 81, "Input",ExpressionUUID->"388b9657-4995-374a-8861-c3753f70fcfc"],
Cell[677942, 11897, 6814, 132, 220, "Output",ExpressionUUID->"50bd8ee5-2020-c049-a040-39bd2679f1b1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[684793, 12034, 214, 3, 28, "Input",ExpressionUUID->"6497ebc8-c28c-b34a-9a8c-2a855abd2506"],
Cell[685010, 12039, 2582, 82, 62, "Output",ExpressionUUID->"b149a956-a9fa-8f40-b667-ff30da3173a8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[687629, 12126, 198, 3, 28, "Input",ExpressionUUID->"22b182a8-ff06-ee4b-b122-def228c5af87"],
Cell[687830, 12131, 31404, 686, 169, "Output",ExpressionUUID->"a6c2b35a-0aeb-2e43-a8c4-1a2e2bb8774b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[719271, 12822, 415, 8, 43, "Input",ExpressionUUID->"6f5f2fc6-29ad-b540-aa1b-a1417933fff1"],
Cell[719689, 12832, 4240, 140, 129, "Output",ExpressionUUID->"3beaa628-6f34-804e-88df-996102a5a4e6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[723966, 12977, 214, 3, 28, "Input",ExpressionUUID->"eddfcd71-c65b-a841-aa22-08385d42bd23"],
Cell[724183, 12982, 225, 4, 32, "Output",ExpressionUUID->"e55ea84d-164f-b343-b6e4-ef9fc8c03d05"]
}, Open  ]],
Cell[CellGroupData[{
Cell[724445, 12991, 215, 3, 28, "Input",ExpressionUUID->"5b8b49f9-6026-4940-a43f-cab56811c75c"],
Cell[724663, 12996, 148, 2, 32, "Output",ExpressionUUID->"8c7793ac-74b9-7543-9efe-4cb82c053af5"]
}, Open  ]],
Cell[724826, 13001, 164, 3, 35, "Text",ExpressionUUID->"99cc0cd8-22f6-3946-abd0-d1292d6dbcfa"],
Cell[CellGroupData[{
Cell[725015, 13008, 197, 3, 28, "Input",ExpressionUUID->"b38a5954-13a9-e646-a231-b86fb2eb0218"],
Cell[725215, 13013, 52866, 1098, 245, "Output",ExpressionUUID->"2544dd6c-96a6-d14c-bb51-900e03a8764b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[778118, 14116, 408, 8, 43, "Input",ExpressionUUID->"645503f8-01a3-884e-b72b-5d750801014a"],
Cell[778529, 14126, 7224, 228, 129, "Output",ExpressionUUID->"b5b1ed65-8b1e-ec47-b7be-2aa46251f0f7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[785790, 14359, 2342, 70, 81, "Input",ExpressionUUID->"4a4e4610-e0d5-0b4d-a0d0-0b67b5b5baf4"],
Cell[788135, 14431, 21878, 380, 262, "Output",ExpressionUUID->"e22f5a33-ee0b-2b4f-bca2-ec871d274535"]
}, Open  ]],
Cell[CellGroupData[{
Cell[810050, 14816, 214, 3, 28, "Input",ExpressionUUID->"40446805-16e2-d845-a409-25b5a3fda763"],
Cell[810267, 14821, 4271, 144, 79, "Output",ExpressionUUID->"67902866-5f83-c140-a15a-59d5cac83d7d"]
}, Open  ]],
Cell[814553, 14968, 735, 20, 127, "Text",ExpressionUUID->"25dbc0cc-9b9d-7f4f-9da0-e235c849d2ad"],
Cell[815291, 14990, 542, 9, 181, "Input",ExpressionUUID->"a041bc00-a41a-f14b-935d-4e2ff2331340"],
Cell[CellGroupData[{
Cell[815858, 15003, 249, 4, 28, "Input",ExpressionUUID->"e5cd6db9-da59-7349-8ac2-1c823005430f"],
Cell[816110, 15009, 152, 2, 32, "Output",ExpressionUUID->"bfa47174-e998-fd4d-b8d0-16f388f17dbb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[816299, 15016, 220, 3, 28, "Input",ExpressionUUID->"fa9eba11-6a7d-ff47-b33c-30027f38a49b"],
Cell[816522, 15021, 155, 2, 32, "Output",ExpressionUUID->"b5deb460-636b-f241-a549-1b3c83291fab"]
}, Open  ]],
Cell[CellGroupData[{
Cell[816714, 15028, 295, 5, 28, "Input",ExpressionUUID->"ee7bd191-9ae1-fd4c-9502-d39fa692dfdf"],
Cell[817012, 15035, 154, 2, 32, "Output",ExpressionUUID->"a7ec09ac-eeb1-d843-b4df-b8cb780cc12c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[817203, 15042, 246, 4, 28, "Input",ExpressionUUID->"c06afe83-c54e-1a41-add9-b29354817454"],
Cell[817452, 15048, 5438, 111, 398, "Output",ExpressionUUID->"12627bb7-f24e-974f-8d35-7bffea4737c9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[822927, 15164, 280, 5, 28, "Input",ExpressionUUID->"0f519058-4bc2-d347-983f-d1a411d1da64"],
Cell[823210, 15171, 181, 2, 32, "Output",ExpressionUUID->"31360755-625a-4241-9e65-bc74c55f76f8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[823428, 15178, 216, 3, 28, "Input",ExpressionUUID->"474b83f5-db6d-bb44-96ec-8e7153651a14"],
Cell[823647, 15183, 4734, 94, 392, "Output",ExpressionUUID->"20266b0c-9c51-244d-9723-f7b391038331"]
}, Open  ]],
Cell[CellGroupData[{
Cell[828418, 15282, 1939, 56, 81, "Input",ExpressionUUID->"eecc415e-c876-f34c-8509-3170a374de6d"],
Cell[830360, 15340, 11163, 234, 243, "Output",ExpressionUUID->"cab52334-5d79-5d47-817f-8ffb59d57f35"]
}, Open  ]],
Cell[CellGroupData[{
Cell[841560, 15579, 250, 4, 28, "Input",ExpressionUUID->"be2f15b6-6c80-ae4f-a099-90cd40b08fa5"],
Cell[CellGroupData[{
Cell[841835, 15587, 415, 10, 22, "Print",ExpressionUUID->"50ab978d-6454-8d4a-90d2-6c6efb1decf8"],
Cell[842253, 15599, 20142, 618, 206, "Print",ExpressionUUID->"3e4b8a2d-225e-af4b-8798-984074b801a5"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[862444, 16223, 297, 5, 43, "Input",ExpressionUUID->"9c16af9d-db76-b049-88ca-bd6b370ca46a"],
Cell[CellGroupData[{
Cell[862766, 16232, 219, 4, 22, "Print",ExpressionUUID->"1ff459b1-f0c1-194a-b41a-02dc9ddd6da1"],
Cell[862988, 16238, 9852, 340, 207, "Print",ExpressionUUID->"60ec0e7d-b4dc-0040-a23b-af0853a76709"],
Cell[872843, 16580, 2049, 57, 22, "Print",ExpressionUUID->"5010fa55-67a3-1f4a-aa95-dea2d3c905f8"],
Cell[874895, 16639, 363, 9, 22, "Print",ExpressionUUID->"1578e693-3243-5542-8427-be2be2e370e9"],
Cell[875261, 16650, 554, 13, 22, "Print",ExpressionUUID->"1fdca88b-308e-c142-b303-9477db14c96d"],
Cell[875818, 16665, 1930, 54, 40, "Print",ExpressionUUID->"f94f318e-c6ad-8a43-b061-ef6832808e8d"],
Cell[877751, 16721, 363, 9, 22, "Print",ExpressionUUID->"9de6402f-c0d5-7949-9fcf-919563530d61"],
Cell[878117, 16732, 541, 13, 22, "Print",ExpressionUUID->"fcd607a5-c278-324d-b6d7-6f11e15f3634"],
Cell[878661, 16747, 1799, 52, 40, "Print",ExpressionUUID->"679aa65e-69ed-c04e-84f5-43ba59b8adde"],
Cell[880463, 16801, 363, 9, 22, "Print",ExpressionUUID->"56591919-1332-344a-bfd7-bcc76f5d53d7"],
Cell[880829, 16812, 526, 13, 22, "Print",ExpressionUUID->"21df5433-9e46-1d4a-83e7-bdaac595d3f0"],
Cell[881358, 16827, 1657, 48, 22, "Print",ExpressionUUID->"d4afcc32-fc94-fc4c-a780-aca7a0bc756d"],
Cell[883018, 16877, 359, 9, 22, "Print",ExpressionUUID->"e38939e8-faad-324d-ae48-5cb3f829997a"],
Cell[883380, 16888, 515, 13, 22, "Print",ExpressionUUID->"a2678e89-c3b6-5745-96a6-0024e6697889"],
Cell[883898, 16903, 1512, 43, 22, "Print",ExpressionUUID->"5ef90cb6-1802-684a-9ba4-9d9953c766c4"],
Cell[885413, 16948, 361, 9, 22, "Print",ExpressionUUID->"5d684454-dc81-554f-997b-4df3a4f06bc5"],
Cell[885777, 16959, 498, 12, 22, "Print",ExpressionUUID->"c069282f-dc75-6a45-b7c5-57539cd8fbc0"],
Cell[886278, 16973, 1373, 40, 22, "Print",ExpressionUUID->"a47a79ae-4446-ec48-8739-bcad552f31c2"],
Cell[887654, 17015, 361, 9, 22, "Print",ExpressionUUID->"c08af023-5f1c-f04e-964d-c23862c3ec12"],
Cell[888018, 17026, 475, 10, 22, "Print",ExpressionUUID->"6f36751d-4f51-bc40-9a5a-d98b7438ce8b"],
Cell[888496, 17038, 1229, 36, 22, "Print",ExpressionUUID->"1be81b62-854f-2748-97f1-5a4ecc387a93"],
Cell[889728, 17076, 363, 9, 22, "Print",ExpressionUUID->"919d83c3-48a8-f641-9c6f-98370641ed8e"],
Cell[890094, 17087, 460, 10, 22, "Print",ExpressionUUID->"da66eb91-bf9d-ad48-900c-414a98ac02d5"],
Cell[890557, 17099, 1087, 32, 22, "Print",ExpressionUUID->"bcc3f8b7-98eb-ac40-9717-2a4c4dc7df91"],
Cell[891647, 17133, 361, 9, 22, "Print",ExpressionUUID->"4cfb1076-4565-b347-9daa-8446665d3386"],
Cell[892011, 17144, 449, 10, 22, "Print",ExpressionUUID->"08e99f79-7f61-1948-9f50-11f2159e16df"],
Cell[892463, 17156, 947, 28, 22, "Print",ExpressionUUID->"f4630a3d-7875-df41-9d48-30c64697936e"],
Cell[893413, 17186, 362, 9, 22, "Print",ExpressionUUID->"38d63040-0421-7942-b526-3af5b57a6449"],
Cell[893778, 17197, 434, 10, 22, "Print",ExpressionUUID->"63570f98-6c4b-1340-9d91-a7ad0bcc6342"],
Cell[894215, 17209, 800, 23, 22, "Print",ExpressionUUID->"35a725f1-6ae0-a44e-a4f9-83c1e7e5d8af"],
Cell[895018, 17234, 363, 9, 22, "Print",ExpressionUUID->"11e9bfb4-7988-bf40-b6d5-0420a180c868"],
Cell[895384, 17245, 419, 10, 22, "Print",ExpressionUUID->"9606b815-b83a-1045-831b-efc89c593349"],
Cell[895806, 17257, 653, 18, 22, "Print",ExpressionUUID->"6ae3b603-368f-b644-ac3c-4a61132e1c4a"],
Cell[896462, 17277, 361, 9, 22, "Print",ExpressionUUID->"45ab4244-c23b-ee47-8781-f11bf4ba1ca2"],
Cell[896826, 17288, 415, 10, 22, "Print",ExpressionUUID->"080893de-1656-1b4c-8046-f06039926e23"],
Cell[897244, 17300, 389, 9, 22, "Print",ExpressionUUID->"1a6cb0a1-90d7-464a-88f2-878d017c8b3b"],
Cell[897636, 17311, 492, 13, 22, "Print",ExpressionUUID->"19f0a2d7-6bca-0d44-b732-8aa4237407a3"],
Cell[898131, 17326, 20142, 618, 206, "Print",ExpressionUUID->"4d7e7bac-9822-234a-b4e5-1a82189b3174"]
}, Open  ]]
}, Open  ]],
Cell[918300, 17948, 285, 7, 81, "Text",ExpressionUUID->"7019bd1a-3ce9-cd4c-b003-2df98627e536"],
Cell[918588, 17957, 163, 3, 35, "Text",ExpressionUUID->"1fa1fc34-a0d0-c64d-b3b7-0b03e94158fd"],
Cell[CellGroupData[{
Cell[918776, 17964, 1953, 55, 62, "Input",ExpressionUUID->"aac1ba02-f954-5240-84f3-2b8ef6eba38b"],
Cell[920732, 18021, 10554, 209, 243, "Output",ExpressionUUID->"f4cfe9eb-93cc-c642-a659-f705cfe9ed93"]
}, Open  ]],
Cell[CellGroupData[{
Cell[931323, 18235, 253, 4, 28, "Input",ExpressionUUID->"73739a5a-e16b-a14d-9a47-43153e986ee5"],
Cell[CellGroupData[{
Cell[931601, 18243, 395, 9, 22, "Print",ExpressionUUID->"c1498c99-bac8-3c4e-831e-1d5d64247b55"],
Cell[931999, 18254, 18996, 563, 222, "Print",ExpressionUUID->"1381fd23-dc4e-5342-af8f-0b70deda58a2"],
Cell[950998, 18819, 645, 20, 22, "Print",ExpressionUUID->"12b51cc0-e026-024c-865a-0ddce421bb63"],
Cell[951646, 18841, 2344, 50, 286, "Print",ExpressionUUID->"91c1999a-6209-254b-b6f3-03a5c0fa9abb"]
}, Open  ]]
}, Open  ]],
Cell[954017, 18895, 154, 3, 28, "Input",ExpressionUUID->"7244fceb-0c58-e249-93d3-730af48cecc9"],
Cell[954174, 18900, 1911, 55, 100, "Input",ExpressionUUID->"bbba6c19-d27a-a84d-80ed-e0c67d3e72fb"],
Cell[CellGroupData[{
Cell[956110, 18959, 323, 5, 48, "Input",ExpressionUUID->"36fef5c4-396d-684f-a418-039bbd86bcc3"],
Cell[956436, 18966, 41281, 884, 193, "Output",ExpressionUUID->"d355dbcc-64c4-874b-bfc3-7d1351057e88"],
Cell[997720, 19852, 41312, 886, 193, "Output",ExpressionUUID->"d8d0f5c0-9011-0940-ac90-1711905579a2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1039069, 20743, 334, 6, 43, "Input",ExpressionUUID->"6da5175f-197b-5748-b97d-74a952451343"],
Cell[CellGroupData[{
Cell[1039428, 20753, 677, 21, 22, "Print",ExpressionUUID->"4248b91f-72e0-8f49-a4d4-6afa0c607070"],
Cell[1040108, 20776, 2422, 52, 286, "Print",ExpressionUUID->"e671698d-d28e-6948-86ce-c3f797dd3b48"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1042579, 20834, 336, 6, 43, "Input",ExpressionUUID->"29cef084-701e-1641-8a63-55c065c12409"],
Cell[CellGroupData[{
Cell[1042940, 20844, 650, 20, 22, "Print",ExpressionUUID->"7e463424-40a2-2b49-81e6-9f347b524151"],
Cell[1043593, 20866, 2397, 51, 286, "Print",ExpressionUUID->"6659924e-9f96-0d4e-8d37-1e2044ca112c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1046039, 20923, 176, 2, 28, "Input",ExpressionUUID->"da74265b-3372-714a-972d-987bbbaf1a2b"],
Cell[1046218, 20927, 284, 6, 32, "Output",ExpressionUUID->"0b3cd99f-dd64-0c4b-8f5a-30f5a086e74a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1046539, 20938, 654, 19, 43, "Input",ExpressionUUID->"3405b3dc-62b1-1d4b-ad3f-f38e612dc1e0"],
Cell[1047196, 20959, 587, 18, 32, "Output",ExpressionUUID->"64f52e8c-9aef-ac41-80b3-56958fbb9fed"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1047820, 20982, 792, 22, 120, "Input",ExpressionUUID->"86035733-fd20-3c46-a2ca-05a76462867f"],
Cell[1048615, 21006, 924, 27, 111, "Output",ExpressionUUID->"e51def6d-4fa2-3647-9f59-03f8e82b3118"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1049576, 21038, 197, 3, 28, "Input",ExpressionUUID->"97f02235-500a-9849-a777-4ac3255c6143"],
Cell[1049776, 21043, 31405, 686, 169, "Output",ExpressionUUID->"221d503a-529b-364a-b662-ef9cd1867999"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1081218, 21734, 194, 3, 28, "Input",ExpressionUUID->"8573d12b-3a36-8946-a8e8-d4770bbcc836"],
Cell[1081415, 21739, 25566, 573, 169, "Output",ExpressionUUID->"3dc4097b-f359-aa42-aa86-e4406b398e2f"]
}, Open  ]]
}
]
*)

