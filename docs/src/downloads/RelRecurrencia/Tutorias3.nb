(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 14.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    733293,      13571]
NotebookOptionsPosition[    724926,      13423]
NotebookOutlinePosition[    725397,      13441]
CellTagsIndexPosition[    725354,      13438]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"<<", "Vilcretas`"}]], "Input",
 CellChangeTimes->{{3.950783993039501*^9, 3.950783998439892*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"b415b3e8-4a29-a84a-88fa-fd3fb7cc623e"],

Cell[BoxData[
 StyleBox["\<\"VilCretas est\[AAcute] disponible.\"\>",
  StripOnInput->False,
  LineColor->RGBColor[0, 0, 1],
  FrontFaceColor->RGBColor[0, 0, 1],
  BackFaceColor->RGBColor[0, 0, 1],
  GraphicsColor->RGBColor[0, 0, 1],
  FontWeight->Bold,
  FontColor->RGBColor[0, 0, 1]]], "Print",
 CellChangeTimes->{3.9507840002489223`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[2]:=",ExpressionUUID->"2b9495bf-20a9-5548-8e24-9a8af6115616"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GrafoString", "[", "\"\<Bienvenidos\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.9507840005752506`*^9, 3.950784007130377*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"ef1b5f92-054d-794d-8cf2-88bf2635c03d"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[CompressedData["
1:eJxNnHe8VtXRhfc55409VgQLGizEEjui9I5SRREUUaTYu9hFiShFihBRo8Yo
oom9G4IFAiid2I2NiLGgJvYSTT4F+fZz57m/mz+O27fts/fMmjVrZp/LTiPO
6X92mVJatGFKjPvl/3TPY/cipQF5/G1+fXoe98/jGXm8qErpyDwen8eeefw2
f29iHifl173yOD5/76Q8npKvP+SraYr5dsvXpVz5e1Pz+Em+LmbMv5+Zx055
/F0e++Wxg987Lo9N8nVmvs7wfgvz/Hfn8cf8enIeV/KbfL2QX89IMTff/zK/
viGPr+RrdL6ezvMOy+PqfI3KV4f8+rQ8ds7zncW+83VJvk7N1zX5Ws/PV5Ux
/3b59fkp1sjemuVrTL4W5PdPTjHHBfn6R4r97OR3P87XofnaJsX9WT/72iKv
b0Qep3n/Kr/+i+s7JF/zivjdL7TjN9rjx3x1ydfa/PkteZxShX0fzPPclscn
qljPlCL2s1l+PYV15deD8UP+3sA8vljGfS50XxsXsc9eRdixay3883wZ8/wm
X7/P1w759fQ8rnOfN5fh1+PKWNe2eZzEvvK1Il9/zde4fO2cr5vy9Tf9uHUV
uBmYv38z+KrFPvj/G3m/iDm+TIG72/M1PF8vl+GjbfXTyCLWdWUR+2xcxPzj
i7BvlceReXwu/+5ovlfFXg71OqIWdlxcxvwr8ufX5/FA58E+4Gn3MtZ1rr9/
qAq7XJLHWXmcW4UfiZPO7Dn/7qg8bpLH8/LYKn9+UR575/HXeVxSxfe2N74G
uH7i67E8XqVftyzivn/N49ng1fkOzZ93zONGVfjhnirs3Chf97p//EFcsL/X
8tg+j33y+0MThskxkYcWKfywKL9/jjjhvv9KgZNFKfz7RRHxdl1e77V5fCBf
S/N1Vxlxhp3ZT9f8+ro81sQr3+X+m+XPr8zjXvnz8fiyjP2AVWJ2cn59p/GB
X+dV4Z+54mWnWtiN/WGvDfP757LOKuJ0TQo/wz/gjLVcka/H8+s/up7nHfFT
jzLi9et8tWNdef5btc/R7v+IfPXM3+ubxzfL4KU33dP8KnAI73USx7zeIwXu
jimDD/lN73y1LCJuuuXxWMb8u0GuF5zf5z420+/DtOPzVfix5n1myMMn5bEP
e8zzHZPHZrWI533y+5flcZcU+HjS/f5afvksj3fkcU/tf1Qtxs1d35z8eQ/W
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
g3uxLs5teN3bPLzOPJHk0eedh+fciI+dU+SVY60z8BG/G6h9Zlj3/eR6epqf
0a/o8vHi5Dlft5avblcfEE/wJX8X2NHfgZOTze/US+APPcC6J8vr6C16eI3N
e3PNM1e7ntbq9ZfUndurbweqa3meh/ijfn5e32Ifagz8i43ROS08r/jBegl7
kQNmWcfd57p+ss4Z6Rz0sZ/J47Cq4e9uursudPzSIvDI9+A0MIJ+PaUK3uXc
dkyKvE78kN+mi0PmJQaJM/o+zD9VfHdWLxKX7JvnHdjXIOuPE9XRfdQdhfUp
uGbdLdWlnJuDn8/ksVfVdQfXGnQJ/jlY3Owlzqb4/mx1J32gy8QreXRX8/Fc
8f2u+X+m+6O/CZ/A491dZ0fjgvjv7/w95e8J8gHnDDxPz7n8c+4djcDfV2Dv
w8xfQ/Qv9ego7UX+QV+O1pbUF9Q55/lddNxDzkP84PdPxDWxg/1WquN3tW79
Tkxta35Cx14jrtBr9E/RUnDHghTnkmCH56HBQl/9so2/72td0qWIOHtJPG4m
33yv38fKm509b6Tfh/3o/9Tp7SJw8EGKOoXcgR56XDwM0E/4njqnhfpnT/Xj
CuPpc+9Ln5kYIE9QJ4CFRSmeU7ld+8Cn9OP+KG6xMX0/7Aw/0c8nPvAvzxXX
96/h72XmhyeNV3gensVG9I3on2Cf35Rhr19bR9N/wU70Q+m/0deHR9vKF+PU
xdQF8NJq8/gA+bODen6J8bJUTB2ineAs7HmvPDhLfLXxPvAdfD/C+Fvpmr83
v9wm/kZ4v731Z2HdsrF5Ek0Anugfo914hhwc8Lwafv6z62Rf1MD0GcDBd1Vg
/RZ/g+3Iq9SJfJ/6kPvC9+zncM8BOP/sq32O8l6sm/4ReMZm+Onvzsc6qIsq
8/SD5rtbxC19f2wFt8CjV6h/sGNd/IkP9gK/XCbOdxBP9FHBHX27mXzHPsMk
65hX1d3064itNeoq6kvud6/7v1J70hNAP+1Va3heFHvR98JvYJFzBv7+gfXw
9xkTvG9P8QoODjL+6dsTtzy31ynFOQr4nmw8vpsCV1dbd/zePEQ/i9+94P5P
kFevLRvwzL7nGY+cG6Jv56pn0Av1ugofo7fwDzoQPuO8Df8xF7jczfMx4o+Y
JzaJU3Qzrze1DmEP2LOF5yJDrVtaqDO7y888D1j/9+nw/hxxu0K/jfAzsE+d
zPkb89yqP+Bo4hOeBHfz5YfZzsN5LHFMfsEna1xfS/me94gNzpG5Rwf1x2PG
I+f/J4kr/k6Pc1Xitbf12c7mOda4IEVfgPij/gUnj5jPwQrn102tBx9KkX/5
Pvja2f7wMZ6DMAf3GSxulhThg1nic6Y22NM+IVqFPtQZ7mc/cUY+wG48T4Hu
mmI93E6d85Y6vLU8xvOQxO1JteBNzmPAy776Ap2LfekzgQf+Do989qTx1Vy9
10L8HKI9TqhCb+ETnkOEY+EL6k84Eb66SZwQtz/4XXQDeb+vvIId4ADqB/In
fAb+OuvXdfqviTinHmFdk4yn98yX+I/5uNewFOfL7IvnUdHHP6WGZy7r+mzy
D36mHkEfMj/PQ8B/G5vHuNAPW4iL9tad5LMzvW/9OTX3pl8D7/H3/fizS9Xw
dyvUt0e7Hvo25Cn4lnXcbvyj2/E79QC/Q/fw+gbXPU2eod4Bz/Al8y0V7/SN
qBcaiffh+ok+PHN0Vz+DPXDynXXDj+p78AN+yQd8jzw63XXymnNDOOJx5xlq
HvxG/YDuAh/YiPjneSzOC3j+GP44rBbfw1bo2oXGP1ghNuqf6ebvBuHHGdoM
3YB96BdgS3gXPiE+yGc8XzNM/8K/5Bf0OH/fTPw97boOV0/V1TQpzp3B30P6
rYN+oi5EJ1KnY/duVcPfg9BP/dw6bb78Sh1PvUhswgMr5Wl0CfjlvAJdu0z+
QXey3iHyGviGV1/V3jzfRTyjd8BxI/dB3iLOelk/7Gb9x99zwp8dzffvpYb6
FDv1kd8418N+p+jnr8UJcUdd09N8znkVeWG88c/zPmNS9J/gPp53qHueTb9R
TwzRH9i5r3VMH/M+/asuKfbSKQVPED/rqff6y09bet8f/B3nu+yDPNHf3+MP
+gfw1XHGK1ddX6kWuLmyaniumv1vr/5GHxPv6BPOWbuqn27we6yR5/03Ni6J
QXiB/hP65Gv9cL0YBpPkvW9dQ92ZSArtC5bol7KfWdYJy9zXBOvdqeoM+uK8
z98bjtKG9fskX7ygHqOvRJxvZh1P3dZb3BErnc3D8O3F+uU2MQkOeZ4f+7cx
Ho7UrzxXNkN8wC+LrUep9+CNRVXD3wego8AmeugbP39XnmmWAsd9rOP4O3R0
JTwE/9Lvxf48H4N/OJ9bon/Q2/y7AeSld1PwTN3fcKTQNVf7+4nuFc7tYX3A
Hum7TNVO5K1hKf59GvB9ojii78y88Bh4+lo9yP2xc8eqIX8TX9PdX1PzKv0m
7Mtzm+DifeOQ83k4ZaR6jrVdI26ICc4D4SX6fOwTvct6dhMvHxlPnGMTF0vk
+VbWlStdxyPWn/3k+5r2QqeB75HWIaxjpDa8RjziZ/iMecn/7HOI9/lMPic/
sE/+TgScH6Xd4Z3h+hcehKfggX8Y5xPkjwXu82h1zxz9DXbQq8QH+6EfxNqo
/4lD+mbM86P8BA9cKY7BOXHA/u5U9/L3yeeKIXIZ8Uscf+n+4VT00lvWT/xd
DPnm+jLsOKuK+eAKeGR1ijjs5DrQ/3X/Jo3nIb3V4fu6n3+7p5vUA5w7w5Mj
1IfwC37nHAVdSj/mLu0LLi8xnpp5vtLWfs6+2uXU/9FDM1P8hjgif5FX4Sr6
BextvH6HN17WP4+pa9FX8DJ9OvjrUNddp4lT9EuIS/JZ/d8B1fffsQe6gf29
5X2ONE45F6BG4+/34DHi6RDxzPr4dyHwK+eE48Qr9hltPUjfGL6nniJ/wbPw
LTkbXUS+AY/fGY/UN9PEAZy1h/7o4n1K+zX0z/Apz5tgT3gGHNInAK/ourP0
M/vlnIV56et3Fxes80Xrx3fK4GHOW+o0TRnc31EdWxmv9LngvcOt9/8fcMo8
6Q==
      "], {Null, 
       SparseArray[Automatic, {2500, 2500}, 0, {1, {CompressedData["
1:eJwd2HdY0OXaAGAUNT3WqXO+zklxizMXWg7c4lbMhTPcpmIojhy59165Vy7M
Tc5ExVJx5cgZWuKAyklmKa4s/e7v47rufx8e3vcZ748CXWNa9M0QEBBwNFvA
///8g3coTAjVaEgEnYhiIGOZwUJWs5l4DnGKS6SSxmMC/ZJ/koNgQqhMHZrS
ju7E8CmTmMMy1rGLg5ziCmk8IUPGgIDs5KAwZalCI9rxEQMYwSTms5rN7OYI
F7jGHR7yin8GikkhylGNRkTQkd4MZwpzWcFG4jnEKa5zl3QyZhKTHARTlmqE
E0kMnzKBWSwmlm3s5zgXuMo9HpMpc0DAm+SkGOWoSmNa0YloBjOemSwiljji
SeQ0P3CTP3hB5iwBAW8RRCHKUJk6tKQDPRnAKKYwl+Vs4isOcppkbvKIl2R9
LSDgf8hLKUKpTVPa052+DGU8s1lCLHEk8C0XuUEaTwjIqhb4D/kpQQVqEk4b
uhLNMCYym6V8wS4OcJLvSSWNpwTqjzfITRFCqE5DIuhIFEMYywyWspl4DvMd
l0kljcdk0HBvEkRR3qMmTWhHNwYwgsnMZzVb2McRzpJCGk/JnN3dkYsihFCZ
hrSkK9EMZiwzWEIscewhkXNc4SaPyPC6uARRlLJUpR4t6EA0w5jIHJaynp0k
cp5k7vKIl/zjDTOHgpSlGvVpTiRRDGQcM1lELNtJ4ChnucZt0nlFtn+qM/JR
kqrUowVdiGYw45jFYtYRTyIXSOFXnpDhTfXFOxQihMo0ohWdiWYI45jD56xn
Owkc4xxX+IXf+JNsb6lb8lOGUOrSkk58zDAmM5eVbGQnBznJZX7mPs8I/Jfa
IifBlCaU+jQnkmgGM4bpLGYd+zjKBa5xl0f8TbZ/y5UClKQCtWhCW7oSzRAm
MIvFrOcrDnKWZG7zjMz/ExDwL3JThBCq04AWRBLFJ0xkDsvZwC4OcYokbnCP
5wS+be6Si1JUpBbhtKYrfRnKeGazkq3s4wjnuME9npHxP3IlD8UoTw0aEkEX
ohnMGKYxnzXEEU8ip7lEKvd5ymv/VbMUpBSVqM0HtKUHnzCKqSxiDVvYzUFO
c4lU7vOMjJb6WwRRiDJUpwERdCaaoYxnNkvZyB4SOU0yt0knMIf6IojilKcm
jWlDN/ozhmksJpZtJHCSq9ziERly6i/eoSAlqUR9WtGJKAYykiksYS07OcAp
LnOTBzwnMMjsJifBlKIiYTSjPd2JYRgTWcgatpDAUc5yhZv8QYZcAQGvk5ti
VCCMFnSiL0OZxByWsoEdfMO3XCCFX3lCQG5nwH8pSGmqUo8WRNKbTxjFFOax
go18xQFOksQv/M5L3srjrihKOarThLZ0JYZhTGU+q9jEPk6QxE/c5zmBefUW
QRQjlNo0oQ1d6MtQJjKbZXzBVvZylHMkc5MHPCdTPj1GbopQgTDCaUNXohnM
eOaxhjgSOM4FrnOXJwTkd7bkpBjlqEojWtGZfoxgMgtYy1b28i3fk8rvvCBz
AT1AEEUoSxXqEUEXohnGNBawks18xQFO8QO/8BvPCSwoLjkJJoTK1KEZ7enO
AEYwifmsYAM7OMgpLpPKb7wgS7CzJTclqEQY4bTnI/ozgiksYDVbiOcQ33GZ
VH7lOZkLBQS8TV6KU4EwwmlHN/ownInMZTkb2c1hzpPMXZ6S0YfIWxSkDDVo
SATd6M9wJvEZy9jILo5whh/5mQf8SaYiZix5KEklwmhCB6IYwlhmsJB1bGc/
x7jAVe6QTuaiAQH/Jpj3qUkjWtGNvgxlPLNZylq2so8jnOMqd3hMhmL+doIo
RGmqUJfmdCCKQYxmOguJZRv7OM55rnKPdF6StbgZQxFCqEY4belKDMOYyFxW
EcdejnGeZG7ygOdkeVe+BFGUstSkERF0pBeDGccslrCOHeznBBdJ4R6PyVjC
nCGIwoRQmbo0JZIe9GM4k5jHSuKI5wjnSOYmD3hJ1pLujdwU5X1q0IjWdKY3
gxjNdBazhjj2kMgZrnCHJ2QoZTfwX4IpTWXq0IKORDGUccxgEbFsI4GjXOQ6
d3nE32Qr7TuSgpSiInVpSVf6MZLJzOVz4tjPCZK4QzqvyFZGP5CHElQgjHDa
0ZNBjGYmS1jHNvZxkiRukMZzsoSISTAhVKEhLelIb4YxjfmsJI49HOEcV7jF
o//7R0RZ3wm8TUFKUpFaNKYN3ejLUMYzm+WsYzv7OU4SN0jjKRnKeR/wDsGU
IZQGtKATMQxjAvNZwQb2cZSz/MhNHvCK7O+JSTClqERDIuhINMOZxEJWs5UE
TvA9KdwjnZdkf9/bm3yUJJS6NKUdPRnAaKaykLV8yV6OcIZkbpHOK7KXF5dC
lKMqDWlFLwYykqksYT07+ZpTJJHCPR4TUEFM3qEgpalMfZrTgZ4MZhyzWMxG
dnKQUyTxE7/ylIwV3RU5KUIIlWlABB3pw1DGMYulrGMbCRzlHMnc5iF/8Xol
cSlCCFVpQAu6E8NwpjKPz4kjnqNcIoVfeUGWUHuWYEKoQl2a8iE9+IQxTGMJ
G9jBIU6RRAr3eE5gZbOQHBSkFBWpRzO6EMOnTGAWS1nPdhI4zgWu8RvPyVTF
7CaIIoRQg0a0oxv9GM5kPmM5G9jFIU5ziZ94wN+8VtV8JTfFeY9qNCKCbvTh
U8YziyXEEkc8iXzHZVJJ5yVZq4lNXt6lArVpRiQ9GMAY5rOCjeziG06RRCr3
eUaW6uYWeSlFdRrTis5EM4RJfMZy1rGNfRznPMnc4nf+JGsNu4BChFCNhkTQ
kSgGMoppLGY9OzjEKZK4QRovyFzTG5FcFKYMVahLU9rTnb6MYDILWMVm9nGE
s1zhFr/zkmy1zFoKUYbKNKAlHejFIMYwk0Ws5Uv2cpgzXOEXHvCCzGF6glwU
JoTqNKYt3ejDCKYyn5VsZCcHOEkSv/A7L8hcW/2SixKE0ojWdCWGYUxgDsv4
gm18zQkukkIaj3nFm3XULiUoTw0a0orO9GYo45nJMjaxi284SRIp3Oc5gXXV
LQUoQSh1aEFHohnMROawlLV8yX5OkMRP/MoTMtYzF8lDCcpTg8a0ohNRDGI8
M1nEajaTwLdcIoV7pPOSrPXVLvkpTSXCCKctPenPcCazmFi2ksAJrnCbdF7x
RgO7gYKUpAK1aExruvAxgxjNTJaxid0kcoHr3OURr8je0AwnmLJUpQEt6UAf
hjCe2SxlLV+yh8N8x4/c4SkZG8mXHBSkFBWpT3M+pAcDGckU5rOCDezlMGf4
kVv8zp9kamyek5PClKE6DWhBJD34hLHMYCGr+ZI9HOM8ydziIa/IFm6WUZCS
hFKfCDrTmyGMZToLWc1m9nKUs/zIz9znGZmb6DXyUpxKhNGMTkQzmHHMZBnr
2cUBTnOZVNJ4TuAHciUfpQmlNs3oQBQDGclk5hFLHAc5xWVu8YSApnIkF8UJ
pQ4f0IHeDGYMM1jIKr5kD4mcJpnbpJOhmTcCQRSiHNVoTCu60JeRzGAZ69hG
Aif5nhuk8YzA5vIkN8V4n1o0oQ1diWYIE5nHaraRwLdcJJX7/EnmFt5y5ONd
ylODJrShOzF8ygRms4z1bOcAJ/ie69zhIX/zWkuzi9yUoCL1aU4kvRjAKKaz
mC/YSgJHuch17vCETBF6gCCKUpYq1KUpkfRkACOYwWLWEEcCxznPVW7zB3+R
tZV8yUNRKlCH5kTSg/4MZxqLWMMW9nCY77hMKvd5SobWZg3/IR+lqERtWtGJ
jxnEWOawlHXs4gAnuMgN7vKUwDZ2DrkoTBkqU4dmtCeKoYxjBktZzw72c4xz
XOU+f5KprXMgD0UpS3Ua05Ye9GMEU5nHCjayk4Oc5Bp3eEqGds6AfBTnPcII
pw096McwpjCPFWwmnkOc5Rq3ecTfvNHe309RylKFcNrSlWgGM545fM4GdnCA
k3zPde7wiIwf6l3eoRjlCaMJbejJAEYxlXmsZCNfcYhTXOImf/A3WSPVAAUo
RSXq8AGR9OITRjGH5axjB19zkqvc5hEv+UcH+5b8lCCU2jSjC9EMYyrz+JyN
xJPIaS6RQhp/81pH7y5yUYSyVKE+zYmkB/0ZzVTms5JN7CaR7/iBn7nPCzJ3
MsPIQ1EqUJOmfEhvhjCOGSxkNds5yGkukcI9HhPYWUzyUJT3qckHdKAngxnL
DBazhi3s5QRJpJLGMzJ2UQPkoBBlqEYT2tGdGEYxhYWsYgu7SeQM10njGYFd
1Ss5CaY0lQijKR/SiwGMZDKfsYJN7CKRM1zhFo95RbZuaot8lKA8tWlGJB8z
nKnM43M2spNETnOJVB7yF9m7y5XClKUK9WlOR/owjEnMYRWb2MU3nOAiN7jH
EwI/Ulvk5V3KE0Y4relOP4Yzmc9Yxhfs4gAnucwtHhPQw7mSg2BKU5V6NKcj
UQxkNNNZyBq2sp/jXCSV33hGlp7qiiBKEkpdmtKBjxnCBGazlLVsZz/HOEcy
d0jnJVl7+V6iIGWoTCNa8REDGMUUFrCKOOI5xFmucpdHvCJblPsnPyUoT03C
aUMX+jCUScxhJZuIJ5FzXOM2T8jY264lF0WoSC2a0Z7u9OVTJjKbJaxjG19z
kkukcI+nZPzYuRJEIUpThXq0IJIe9GcM01jAKjaxi4Oc5gd+4SF/kSXa25D8
lKYSdYmgCzGMYBLzWMlWvuZbLnKdOzzkL7L2EZMClKQitWjMh/RkACOYxHxW
sIndHOQkSdziMa/I1tedUYASlKc2TWhDF2IYwXSWEEscCRzjHMnc5BEvyRoj
LgUoRVXq05wO9GEok5jHKuLYyxEucIN7pPOS1/vZhxSgFJUIowlt6EI0gxnD
LBYTy1b2cpizpJDGEwL622G8TV5KUJFahNOa7gxgBNNZQCxx7OEESdzgLk/I
MEDO5KAY5QkjnNZ0oy8jmcxclrOBXSRylmvcIZ2XZB0oVwpQhlDq0Yz/BeC/
C/I=
          "], CompressedData["
1:eJycnQW0bNWxtXd7NxDcCe7uFhwu7kGCBvcgQYO7u7sFd4cQHC4ECJIECIHg
LoGEJCQk2F/frTWzq9fZfe59/xivxnuPXr1P3+6916qaNees6bfe/ce71Yui
WGevoqjZ/97J4mr7P5ay/7i+xQTNopjGYmaLeyzm6BbFsxYH27rLLW6yWMTW
v8mbbf1PG0WxZ7sobrT40mJ+W/uixWa9orjLlpxn6/5m6y63dQ273uUWXVu3
gMVHnaIY29aOZ3GixWkWX1s8yN+x9+xm7znRom7vOdxi1pZdy+KX9r5FbN1j
9jcmtLVL2d/YyOJYe895Fs9Z7GLve8PiOHvfs/a33rS41d73psW49t9vt1jF
XtvQrveZxcL2+k4Wq9rra1tsZdc/x2JR+xtH2d9Y267/R4sl7NonWVxg73/F
4nx7T2HrX7W1m9raRe3/3dPiGoupbH3D1m5n8Rdb2+bfb39rZ3vPD+w9n9jr
K9hrT9trE9lrD1vca68vaq/fZbGorWnYdb+3a81oay+1dZfZmpssdrR1F1uM
sHW/sHWz27pf27pxbN3UFnNZrGHXnszec5/F9vaeIyxetffU7D0TWpxkcY29
bzp73ywW89p7nrWYwt43v8WKtv40W/OYxUz2b1vNYnNbt53FRxZb2tqbLNax
dWfadR+2dVPZZznXYmp7/ROLP9nr59q11rU1e1pMauve57u2NePY9Q60+J2t
mcjW7JO+1zstFre1N9u6j23dFfYZ77JYzq53na2d3V7/kcVbFjPYuoPsmkvY
2u1s7dK2bleLC+y6/6n5/TmOvV63149J9+kX6V6tdfw+baV76LBaef9Mme4f
7pn7Lda3dWfbuidtzVf2+rf22hX2tyezNy/U8u+pbuta9rd/a3GorTsk3Wfj
Nf0+/HnL78O10324Vbq/Dra1E9g1T7O1j9i6X9i6ae31n1k8aTGPrVvXYlpb
972tu99ef9RiGrvW4habWxxlcZXFfFzT1i1t8a3FrbZ+Prvuvy1utmtPbe+b
w2IRi+MsfmTvedr+xt32vq3s33egxem29kmLDyyutPe8bPGFxSu2dmr7vLNY
zGzrruL+tf/+uV1nSrvGZRYH2HUOt6jZmj0tfmRrdraYxz7Hrna9GW39rk3/
/L+12Mrec4Gtf8TiGlszka3Zyl4/3uJfFh/b3zzI1lxn8QNbM5nFmxZfWOxu
15/VPsfnFpPZ32Bju85iGbvGLRZn2fW/svdPZ+vGTffjM7bulHA/8ndebZb3
4j625jnW2Zol7L9vZ+/fw+In9vfPtFjF1mxkcZzFJbZuJu5Hi4XrvmexX51g
f/ehlu9Rr1mMk56tg8LzxbO1uK25Nz1fE3f9+TrV1u5ua35ga87nObTr/dDW
TmJr17I1N1q8Z3Gqrd3U1k7Dvsd1bd0UtuYai7Ptcx5sa35lax61uNLWvWtr
prPrbWFxoF3vQVv3tv3dhq39qcXWFsdwn9v7LrJo2/q/c79ZnGnvOdauf7q9
7wKL8+29L9p717BrT2HXXt9iPlu3t8U79vqm9vpv2uU9wf3AvcD3MEPNv4vt
7Xq/tPhnw7+Lxy3Gtff92N63u63/YfpN56/5b/qURYfvwmJyW7uKrV3V1t1q
8ajFk13/nfnuXrSYz9Zva3GVxfv2nunsPVNxbYspbO2aFnVb/3N7fWV7fTOL
/S2esFjP1m5pcbL9jflt/dy27liLBe0zrWHxksUq9r5fWBxs8VuL5ex9LXvP
URav8++wf/cm9jdmt/dtaTG/veeXFnPYZ/uu5s/kyxbz2/pnLL6ymNHe17G/
d4/FPPb+DSz2sLjI4iW71hr2vp/XfA+a1P7mknXfg+5K+9DJtuaPFm9ZbGl/
63cWn1p8YfEP+1vj27pDbd0VFrPa32jbdWe1tbvZ9caxa91nsYGtO9fiU84r
W7OmxR9s3fg9P8vHrvt5Pj7fqcXyFn+1mCyd7VO1/GwfP53nh9jf3szet6fF
h/a+jyxqtv4oi7/b+tvZU9jrbO1ZnOkWc6bvadB3pO9G38u/yGNs/T4WO9qa
gy12t3U38SzY9S+xuNw+/xy2bv/0252QfrfvKn67SW39vdnvd6Fd+yGLU8mR
bP30FutYrGzvOcDec7vFIxZ/svfdYe/7zGJv3sdeYX/zUoumvf9Ei1vsGjPZ
e/9r8Qv7WxdbfMBzYmuvsPjQ1m4ezkTyjQ8s/mXrF7O/sWLbz8br7T0L2N/Z
36Ib8o7tUt5BzhHzjYO5j+31Cy1+aGvmtjUXWhxj/4adbN1/bN2ktm5Zu9jV
tuYuzk97/UmLWe1a91v83NbuYmuvtvjC4hJbf7vFE/aee+z6x5N72PqtLXaw
2NliP4vDyIPs/UuQv/Ec2nu69p5TLNbiXGXf499q1z/X4huLS2ztPyym4Iyy
6Nq1F7BYyGIvi9/wrNt75rDrvsR+Yu95zGJZviN7bWM+v0XT1jxsMaOtmdJe
X9NiHlvza/sMB9nfv8nirxZjp71ydfa8mu+ZU9l7VrP1v7J4097zF4vb0r7J
fsleeZG9bxueMYtf2Ht+bX/ra4sr7b2z2Pq/2rrFbN0Gtu56i41t3TK2bmvO
Z4u16n5PfMX9zp5j6xdP98L4KeeJuc4DKd/ZMuQ6k9iaHSyOtHjd4kuLbeya
a9n7prX3bW6xhcXvyKPt+qdZvGNrPrAYl73M1u1jr63PmWxxK/mcxUiLTexv
7U/OaO+Zw+Ir8hH7XCeyp1E72Ht3sfeuaGtPsvivxYzkYva5VrU121o8bfFv
izfYC+zvbWnvmdveswz3J2eQXXNnW3+Dvf6KxXK2ZnuLH7MfW/zH1i5PzmNr
r7V43mIHe89+Fpd1fW/anL2+XtYb7EUHW8xlaw8hx7HYxdZeb5/jbotf2XtO
s7Vz2tqNuR8sfmD/zsvYG23dK+TeFhPa51ox/Rvyz/739PmX6Pnn39Gu+Tn7
FDmDxbL22jUWr/Cb2rWWsrjXYiq7zg0WP7BrncKzlXKdmOeMy9/teZ4zx2jO
nZ/Z55je3jt3x8+eFy3+3Cn3rystDrL332GxgX3Gpy3+YrGpXeNOzla7xmYW
e1hca7GAXe9z+wxLpGfzlfR8/qHhzyjPZ3w2b7fXt7frLWtr/mnxuq27yNbM
Yq8tYdfZy+IIi5ctjrLPcoetvdnWLWLrxuJZt1jKrrefrV/OPvcMnHcWa1uM
SPfaWjW/31av999zut92s5jZ1q/e9XtvD3vPwrZ+TYtr7T3XUEuS81ocTk1j
6/fveF64la15vFbWK9Qps1lsZK8fZ3FL13Pe91Kuc7fF87budxb7p5znRotl
7LpHtj3/eSHkQDfb+39nsUXKi3n2VrHPc5itmS09V4tT61hcbfF6OpvH6/nv
PkPImciVpk+/M78x+dLF7AW2dkb2HX4ni2ls7aEWN1pMbe9ZzGJt6ntyP4vF
7G9vbzHS4g37G3dyRlu07L1nWWxi7zvQ1rXs9U/JS+xv/ddiLPtby1bsYexd
U7f9TGMP40y7x9ZNbK//yP7uGnxPFi80/Rw43db9xaLDv8WuOYOt3QXMIOS1
k/CMsKdbrNQsc9wJ2mV+qxyH/JY8Z9am79kx17kt5TvkuT+wtR8UXrseYu+Z
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
193a/u5j/Hb22gcW/7WYy9ZsbnEdZ0Hai3mub7NrHpf24pXT882zPZ3FgV1/
xs+plbUPmO1atuYui2fBiexznNJ27PZOu+bRtvZUi40436hLwJbsPR9ZbMPn
Auey9WsXju+MbdcdD3zH/nuvnTAeu9YyXcd2yM/Y5w9Ke7zyNNUHe6S9nn39
tuzvb0leVfE5+AyNwrG91RuO78EjmLnj+J64BPAI/tX1e+T6cI8Muic2sTU7
U0Oneuz7hmMVeU1WpFpsuZpjV99YzGJr5+Q8tGv/2WIzW/eSxWT2WZaytScX
3h9cv+b8hXh+c3bDY/hD13kMYxdDe/f07WO/nl49zyd1aXw276+oTSdv99en
1EXHWDxi8bTFXLZ+3YbXv29bHN3yWqlpn2nuWtm3fc3inXrZux2rU/ZrSfng
aLzT6OdovNdynsYu6d/Iv+9yciq7zu629iGLA2ztgjzbHceit7fr3Ub9arFX
RZ21rL3nsobXW0+Gmut3qe46O9VeZ6T8IuYIyinyPOFnNcco/0w+bmtes9fH
7/TjleSFM9vam+2ai4Nh2DX3qPvzuqSt/X16XvWcvmvrJrR189qave3z/t6u
3ba1F1g8YNd/pl3WuH+zWN7ee0Xa8y8N+/2NYc//Tcf3/FNSjne4rXm15rne
oSHfU65HnseeenrKyW6uOcYfczNwfeVnj3Q8RwPrpRejmlG9GOpGsF5wXmrF
y6jF2UO5byxes5jYXrvQ4gZyCfYVi+8tlrP1h1gca3F6woPoCYwOR6e3qL7i
gk3H8jdr9fNi6DFuYdf6a73E1ISngaXt2erH0cbtltjZSdQ2tv4ui28s5rD3
nGjxpb1nFXvPuLb+flv/TarT90l7O/Xj6XWv2VWjs5+/n/b0ye2/H2LX2JLf
mT3fXp/aXlvPom2vL5n2crC7LYtq7A68MuJ3F9ias/nNG56zXWlrPrRY39Yc
anFxx3M35W3/sJiy5+fEv9JZwXd4TTov+B4/anlPhPPipIp65PsBNcn99t8v
sWu+V3c8HWwZTL3H80P9Z599crvufB3H1i+0eLrr/Qt65xsWQ/sXGzVLPFt9
C/Ds/3T7+xf7Fv79CvuIuMfxCffQd71kuv+pS8bk3qc22a7oxx6rcEcwR56R
92veC/km5fv7t8p+CDn/suDSKcfYO+Uy5Bbbtj2veN1iY1tzd89x4NPs9eua
jgOD//6w47jvPl3HfneydX8v/LnjmTsrPXPTWZwcnrfpe847g8d0T915TJ83
nHu2gcWa/I72nkvbzmt6y2IjasGa4/8PWDxS8x4AfYQ1Wo7/v97u7wGM6PX3
dul50t/9Wbvs74IFq8dL3x286FZbs6Vdc9eW40TLW+xr8WeL9TqOG71vcTz1
WVHW4coLrkg1ODkBNTj5yVOpFr/bXnvdYl97/Y+safTzl5a0Nevwm1vs2nEs
aWTar8Em2a+fCXs2uGS+Z7Nfw3fJ+z9nN8veD32fCTplv+d0W/sn1lKPcoY1
vQ87nf2NUy1OsbU/7zm3jp7EeHXvSbxHndD0vsQrFs+3BvcmFimcowhXAF4i
HAGwGnHoxBMAY+c+/9MY3OcTgXPVnFexia37fd177c/a2qatud7W3GbX3pl8
0z7/nT3nWcH9W68Y2lOL/D/6auJcsRdulvbCA+vew9Fe+Je0H17f9T47OfwN
KYc/LeTxVTk8/Rf1Xjg7n0j4SMRGclwE3lHOI9O/Fz7ZZ+2SU7ag/f0lLFaw
uMdifHvP2alWOIP9peX1woHkYhX1wu09P/sfD2f/+uHsvzqd/ZN3/fzX98S5
IW5P/n2J18P39Rp5hV1z7bRf3JbOt3+1yr3j8I7vHzrr2D/o7WxT9HMZBvV3
avbaWHbtrdqOgZ5hcV27PJeusrXz9BxL+Ibv3tbebLGGrVmfvZCa2mJdW/u4
xaK2/nKLBQrn9IjPA5cHHs9bbcc/4fM8kPKJbYuyv3RQc2hfiXziqoo6eI2G
87yeapZcrz+2y9qYuvisnuejDxejx/2Vdx6Scs/DLQ6wvzG+rZuLf2PKQV+z
93yY8tCze56LPm/vecs+R82uu6DFT1IufyH5tL1nx47n8ccWjouCu15cK/FR
eA9gpOCje6T7KuIHH1uc2fB8klr5H6lebrad1wSfaQf7bzu0nM90btu5TH/q
Opfph+TLFmPZdVez9Q/VPf8TJ/nLpnOS4SP/LuWA4iXXbf1RFs8lnOeGgJXd
wp7Wdrxnx7r3Jmdvek/yBHvvuRaXWtzTdfz/fguabeuGa27dcPyN63Imb9f0
85jrktuAt4rPSA1BXgOPkZyGumG9gCULR4afBZYMZnSIXefMtve0wWjg5vyy
57jyuUWJ6b1EjdVwTO/7tmN6O3Yd05upKD9LI+RYx4bPc37KsZTn7DEg13mn
XfZ5yHd+n+qPJQvnR4kbtX/d+VEjmiU36g2LDyymbDlPatV2iceCrereHdP7
9jawJzCoup9V43FNizU73kP9jcV+tm7WWvn83ZCeQbgv8F7Ao3juwKJWTM/c
TakmhtNOTXxfyqNiPUwuRQ4l7kJf7tLw3EV5y0Zdz1nOsNc2bZRc6LXtteMs
LrL42j7zVrbm1oQFfmaxImeLxXUWv7V40N73bsAFb7VYseu8K53vn9rr31oc
b2tutjix7Wf8dF3HnanH4HtPbLGmxVr89nwPFqelvPTltnPA57U4q+P8731T
vkKNSX35UMpT1Esdrsb8uHAOLWe4zrNV0hkee5LnJEwEPEScDfE12P/BQzop
tyOvW77w2h6uGTkOfDPV+OKZUdNzVq5trx9f917n/K3+fifnI73OB7ve7zwx
ncWzFt4/O6M2lAfM2UwvjZ4Z5/GBtuZRi13BOOy/f2Ixn/2dRS02sjjP4nuL
P9nf/MjiHPubk9p7t+7590Oew1mj7wcOqfijfE86+/OcR5xyuOvwyv/Ycs76
XfzbLR6weKHjeOnrhWtVpAtRjq78/PKUn6NZ+UHKz8Hg2ffhbQ7H2dTzMk5t
qPYjx5FmKLzPANdGPJsqjo16C5PauuNszbf8ho3hNQi/7bgO4WeFcwngIYiD
AIdAHAT4B3AP4B2sY5/hY2pQW/+YxZ229gPuaVv3kMWzFv+wqJOjWKxksR37
b8+1K9SVo+NHUU/ums4wel5LNgZraji36DPQg4vcfnAu9RnA8egz/LXmPImZ
LMalDrH43GIxe311nkNb85DFFD3ve9BDGq5/pL6H+h1jh30z7pnsl+IIsl/u
UDi/hf04ciC0J0cehPbm59L+zL8VPYN6Knk/hV7Kugmnp5cBn72Ku04/Rbxs
MGBxRKr4IbHPN23Y77l3qZ2PSHXzzrb2r61+3dLY9p7nu14/P1CUWKVqQGGW
1IDUfeCWv7XXe/b//93i33bd2e2a87Ffsk/atX5i19qx5zqF6Qq/r9BB0ROs
0kLNXHgtiO6BevDzVAu+0+znAUoDQT0I94897bDC9Q3sa1HXAB9g867vaZzn
3XSe71ovuc75eR7P8r/aeyZNdYlqEvZdahHVISem2oPrc22uK/70nOla8Azg
GMAvgIMDl1IcHPg3e7eGcnDspT6dIFjZcD2xyQrviUWN0tZN1yfRH0OfhDbp
vU7JZdDzQ++Qvny74c/PQY3+/uGg3uFjRYnhov8Dx1045VTCcsFxpyz676uI
gaNfQrsUsXC+9wVTLch3Tt9IteAeFbWg6kB+h13sPU9YjEPdyPlh0bL1K1l8
avGuvadl64/ouVYNzWOuc7y75Vq1j7uuVeO7Jdfhu63SfkXdF/nOsoXz0ofj
pMOlEC/9JzXXdB1tMUnDMZf9GuV3g67rKM6/Ysz6JadaTNl1zu9SqV6jd6m9
r6pmU96Y9zKVP/Kb6Dngt6CPF+ty6vEHUy1+TOH8lGnrJUflq5bzVOBww9+G
r/JDWz9n1zkr8Ljhrcxv71+qKLUG6Azg/6Ez+GnTdbRoDeAAojeQ1mCZ1Fc4
rlb2AOkpbNap7gVyX25W9/6Nejc3WWzT9P7NOWAfYK227ivuRXttqabzjO60
WM7+LSM6zjd6wmJlW7dtz7/X8yxebLj26Zd2nS075fc6Tc+/V3Soqvsetfiy
0a8/FdZ/ncX5Pe9PX1kM1lJU6SjmsvXXFa5zgpOhXvBd6SzgHIg6J+1NcASF
SYNHg0WzLwmHhpcDb/woi27D+TkP8++2a37cLHk69/Fc2+e6o+18crjkE/Wc
E/VhUeJrwtZ4IeJr8KKmt8/yWMplyGNeSLnMCbZ+tZDHHNLrr40XrXstW1XH
3mjv+aTr9WYr1JvUmpu3Sv4I9Tp1OjXnWzXn3/3ZYu6G9zbpa8K/+xRcqVdy
78hzNq57L2+Tpvfy6OPRs3yi7b089SyX7JZ9S3q90hVIUxD5ePR60RJEXt5l
tna8mtdVcC1ez2oq6in4FcvWypxzkrS/kHtSW2t/ob5mTwTzJp8+NuXUu6Sc
epT2u+P8TT2j1E7ogaQFoo5CD3RTei4X7rk24Y911yc813CNws7NUqeARuE8
i3X4WxZT25rFLFa12MPiKXIPPptda5+e8wvRwg2ng4NfCI6L7muQ3ot7DC00
/xZpnHJtE3sNmGHUNYm3PhzvgXo6ch/Uo4iY8UdFycsexMkG+5X2m7pC2C/8
JWG/0lTo3EFLMDouX34GvcR76s7d/73FteTt9vqGFvt0nK+/S895rfDE4bUO
4onDb4UfDr81avjFDea+Gh0/GH4EHEPpXxZtOtcQbsSlnbKvDM/wmp7XzlGv
VaXVAkc4r+39gdVs/St27S9s3bjNUme0QbvUGp3Ycb0R55T0Rgv2HE9FJwmv
FCw/4qrwSquwVeVA4gMMxwVY0l67JeUxyl/uoNbm4bTrPtou85i9ep7LPGov
9ex6S9eH9uBj7139bmqTeZre7/6w6TUKtckvu16XzFOUPSN4m+hYI1+TXhGa
VnpF8Fngbk5v62crnAs5wuKJuuuFo1YYnTB6tOvrpR7tn3atf7dLPdrc1KNd
16PNYOt3S2fZGrWSWzjoDPtLqmO0R8BDzvcH+HTiIasukBaySgdJDr96qlHQ
Kz1e9/qE2kf1Cdok6fWb6R4BB5ki3SNVOlphH+AeRxXu3VDFE8a/QRxhvjt0
1v+t+3cXtdZbpu8PfbX6DuhKbqwN1VHSW1Tf4fCimiP9ariPVb+wR1/G98+/
v+77tPRaH7S9VzfS4nNyInvPDV3Xa01eK3GkjSqwoysTfkSteGhR8sLRtMML
hw8uLjjYA3zwSYp+HGe1hvs+gOc80ix5lVdZXGdxbLufYyn+K/jsdq1+jFb4
LNjsxIX7T1DjyHtCPid4UMjnhFri05rXE+BQC6d6gp4xvWLqCvWKn7C1u4J1
pecR7snldX8ePwNzaTkfbNOOP5Mn9/x5fLtwTnUVn/qgRqk1F5/6x2lvHL/m
mlbtj+CLX2d7pHqpOd7KninMlb2TngG51rq1sg+hXIu6MfYh4KTBixsTThq9
Z/YS8Dl467EnIz0qfZmDW2VvZobCsTe0bvB8peOZImFuuX8DHEF0OW/XvU6I
NUKsDX5UDNVeo+OjL4+Oj7482r2js8/K5xN3fyJbc0vHuft8Vvj79EaOK1y/
vnVtaI8k59o/W7guZDh+Df3+b9vOs+F7UG9EfRF4J+j+TkzfCX2RO9JZoPsu
v+fgH+q+0294dPYbVv1+4oWi51NeNJyG7/2iv58f78O8py8PC2E81GRgPKrF
qMPAe8TlpZ9bpTlX/5szFs+g9SzWpPYjH7FYP+EG66Vz96aOc7wjZ4gebeQM
5Xwh+rS3Fq75Hx1vtEsNavFa3fkDL/E37LWuvbaJxax2rRV6ztmc12LlovSN
gLuZe0bAScI3Ao22vCO0dxwxzL6xX3OoDuNhW3+vrZmPc87iFxZHpb3srHaJ
kZxpsVDR7+uAnwN90OjpsHrbe6H0QX/Uc0+Hm3te481g7zvZ4u7021/Rdsz6
5o7j1u/aez61+GfXnzn1bqv2CJ4/9old0rMHn1+c35nqQzUYPLPi9/PcSosR
dTePF84tpA8sbWLkFkaOATpFeAZPFSXPaHTcPjh9DxXuPyC/AfV/4HfSAxLH
kz7QiKL0DqAWz3Uy0siAI0qzNRzf7oCirHNHpzOL9S6+NeRE0b+IXOjUrnsX
/aDnWC3w5U6Ff3dR0wmmE3Wdi1DjNJzDNTHnLFgOeZPFr+zvr9N1LhffLbyM
y8L3Cy9D3zHfb+Rz8f3iAbFcMdTzqsoH4uh0z0gHcly4X37YGqoHmS7t9W+E
e2alwj0Y5L8g74VFUr4r7wV8F+CIcM4oV0MzfmU6b8jX4Iup93p9qiXhOX1Q
9POc4DiJ2wSvCU7TVD3n701Q6++RwuGjT/q7lvP4bmp7j3TfhKWeVfP98VmL
V9M+uVHaJ7VHUouwRx4RsM/jilLTXqUhG8v++y/ro+9171dUay/RXYpDi95y
ncLx0eUSPppjo/slfBQ8FI4efW54eupzS6vPdz6Ip8d3j67jaot/15yTAm/8
5w3XcuDdckfHvVvoZbyX6oXf1ct+RuS1idOW4930GIStgnHT1434Kj2HVYrS
ewNOPpwUtBvwUnL9Ru7DETn74IP0ZYQNykMLnYh6M+hEFrDXN7c42eIsW3eY
XfdIi8epv2x9x9b8ulfmKeQoC1gc2yo5icpR4CRebdd/sXD+a8QZxXmNfFf9
VnfWhvIpR7aH8hK4t9Avj5fuL56JeH89kO4vnon90rn1XeG+RNOHc0v8HZ1X
F6SzcMdG/3n4p3Qmch7+t+1nYfzMD4TPjHdE/rn5zNRH9KXoR1En0Yv6Qcv7
Ueq7q+dOb0q1k3ru9Hwvys7QmVuOmQorjWcpZ+gCPe/7gp1G7X/Ec6RVhjMl
TCdiUvTq5fEBFqU+PVxEcAz2kNH1Ys5Pe0fs0YlvQw0+ollybfSd8H2oT0ft
iPYQjABfwSo/L3SHwgmoLw8K9SWcaemP8X6RBhn/l1q31B+Dz6K/kdeLMNlj
m+7z0iOXI/ereW90pP2395veH/2u6T3SV1reJz2a57rjHisb9rxXekbP+Z5T
pu9VHn7wIOTjh7+eOBF8x+qvRh88aRB5jqOGOtZt4OT0zKv4XvT8hJV/XbjX
Bf4WOacOPh3cMjh14xWuc859J6PnJPgFuDhaBbS4YOPSKoCHg4UfavHvrmsX
wCXgLe4fsImo3RY2gXZbONsVhev9Ik8vcvQ2TvsheyFY1ax197fD206+dkvb
Nbex1/e2uN1im5p7m4wOH+0UjuPsm2E4YB5R543v5EoN57cdYq/9zeJraie7
5ua27hhbc1fP+b961sT/jdzfKgx4nJRz4P2U+z6Rd0S/J3IO4RDUgsID4fSC
B6J/ESZIn1g9YuqF71K9QK0/S6oX6A1TM0Sck57vIJwTXEI+W2ASEYsQVkvt
t2LhvFS8T0bne2J/qs9bV/1yPEujt658dderld4K9HWU5+Y9HfFW0VL9X3VU
V1G/sXcU7lOEP9j0zX6vose77gV2sa19sFdqUq9MtSx+PNSx8puk3xc9J6NO
lWdAtQrPAnzoXAcFV5X6BC8q9oFLGqPXYPBvKMLnvzXljeSM+ecnx7oznXsz
JuwEH6VWyqf+3in9j3YtvG8LvwlcBo+U3B8FbhO9wP8fThOQler8Vqrz72iU
XsHzNr3mxzNYOPtCPfewbSYcDwxvX3v9yaZjeeB4Y9ma2cK5QM+OvFC6zEPT
2XBjOBvo1aGphwt5TsO5kHc3+vmQ6OzR2MOHRGe/XM9xFTj6e9fdI0mYyoEZ
rgKmMrOte9TW7NUoeVS7tp1HBYdK/Ck0MGsnTCny2eGxRw77sUV/vX1xrZon
PVPRz8uVBkrc3Oh3CgbFnlKks0h8k4gdim/SaLinwu1N50bP03Ze9CcWk7CP
d91f4YZe/54C1sl3O2hfWS7VF7cPU1/g66Ia46509pP3k/Pnv+8d6TdepebY
FNx8OAOj+AItx6ng6l+T8Kp1O/3cgQkK94yq8ljGX3lE2rOOL7zXg/8Ge+D4
LffgWKld+nCwH0o3LF+hXDMcfYVUO8EvGVNuya+7Xk/Bj4m8I/hr0RMZXgwc
NrhueHeCdaLbhw+Obh+uG5xw+QjIQ4D7aZei5JxLT6d7SXim7if2/ipv9Zwv
xXcI3vHPwvUW4HpjormA04dXAuclvD60+JyTVbw+0q3cv5xeurzLxU+Vtl89
6MhzebPpvfSl2qW/5jJZ/Rq52tSw8qwbVMOyh4of+n/dR6e29bNYbMAeTa1o
sZpdezeLlcnDyOVt/bm1Es+swjIXS3gmmmG8ZJZO9/Kb6X6mf9lplfc197R6
mdzb9DKPKdwHp4pjJH4R3CJ4RXCKwE1zn1089CdsOm7K3g9mOl7CS9n/1QON
HjaD+qB4++a9UPlP4wtDLxRPGHqgq3RLX5jv0t7F2Qo+k/u+4B86MuAzaCw/
KFzbJq1A1LdFbVuua5sqYA2RyxV5deLUndd1Ph09NjAj8evpr8Gpj3x6fNXh
1G9ZuJYK/e0bLfdjxIMx6m/xYFyz5/UC/IzNU80wiKOh2oHPMEH6DMNx+/VZ
xMemJ0TuLD62fF/Imau8X1RDRn/oJQM+MqimpPccc0T0TeSI4H2jsL6Ub5MP
Pl8M9R6L2tuoc4ZHif5281DrqX6lR4oHuny/1Sel1jvS1szTcH+qpVuuzZBP
FRz6RzvOo5+r635Vk9n1Vy/8fdFL9eN2v7eVfK3I2fDGo5f2SKP0x/tDs8zf
vq7I4eCnd9I+MmvaS1ZvlvvJTPbeOdrlvvJQ2lteTfvLu2mPoS6LeUnsv5GP
vNQpva1yv6wqLmLkIc6f8m/0gXDt8HmfolF6YeY5uDzf16+4B6gVqvRtYDX0
PITVnB72YPbc2Otg//1JUWKUuScpmBJepHiQkldHjyn1Nuhp0M9QPxJ8+qqi
5IVKUwQ3NPJB4YGKA8rvNvX/4TeLvxc+8lOnGnv19B6tp96Ov3GsvcUjeaFR
avXZP49Leye9tgN6JZcP/RhcvkF+UOfwLFv8xF57zmI/e31l+wz7UOva3/6X
xWrdfo4W2t5fN6p1vfSJ8eke5NEd/bnRnsgvHA8ocRYG8RXEVeBehq/A/QyP
CC4fXGG4fJErLB2JOMMjC9djw2tDjw2n7aGQV1yQcgvpnKRvgrMHNsJvlvv+
j90q+Tz8bvL+11wGPIcix194MntlxJOlIcaDY5C/mryN0BIfaH//iobztTBL
gbN1Wcs5WvCzcu87eFo39ko8RvNmwFbBUSMeA34qzYZmUMCPyr2wyO+uqY1Z
bwqMbeaG42v4fqxrr+/Wch/25TslB3X7ovSJHMSlA28T/qraPnpagXFR1wv3
B9uXbxt15Z9SbYl3m3zb4IWekGFW4h4Jv4vfkc7FODOhal4C/Ctgl50S7oCP
q2Yhzdws+6TgD/RK1Sel70c+SF1DHqgc8MdZ/kfuJ4+syCUcxCHES1seS/LR
xmsp91laydbtYdfcr9bfrwM3EycNzGy3hGHKh3WLRunDemvTfVeFYc6ZsAd6
aMwnGlP8Ic4toq9GDjlb2Ad5Fj8MuWS+F+IN9JmtmdiuN0U6W/5K7ZPy+5+k
84XcdrGQ247yjgsYH/herv1A9wHGR69Y2Bk944idRdwMrxLN+og+JeDs4OvM
hcCThBz5hbrXYxs3vNY/I9X4C6V8WTX+DoVrs+4vSt9hfJek0ZL/Ehot+uN4
nas/XsVTh6MubnrUyeIdlc98Qj+Vz31CP4UO8PmQp5Ivn5/y1EH602WLslcK
H0j9Us21GB1nF23SgimPRwd6RsrfpQUlj48a0E1t3QG1kr+Xc6yreHvwrann
uqme4xykptu3NbiuO6twve+P0h4kva/2oUE+ktqTeF5uqZUzvaqemfXTs7Jo
eka058j7aamEd8Ll1t4jbsYcac+5Ke07ymtmCXUt+cyBKX/5JOUw8suQ792Y
eN6Bxz1WuN9V1ElFjZT8riLPCr7cIJ4cHmi/J18L+5C0BuxBaA3QGcR+CnvR
x0U52wV+K5xU8ZXFRaWXAp4Jlkl/q9v0WQaXNstZBn/gHrP1P7K1y9t1V66N
mY5m5ZCrgx3CXdJMCXg6J6Z8nR47nntVs1Lkxxb5U/Td70k5+3QpV18l5etx
PpPy9KtTrs53/Xb2fV+Rvm/54sBpAyN8sih9oCNOGDkIygXnSrmg8sCqOS3g
lPB80HvnWu84VwSeD7mYelRVeZhmMB2XcrFuwp3AnNBHc1YuE85KaTk4L+/r
lf0izQoZxFPZrts/JyT+e7ceJu+t1UovCnqI9A7VU859KfCk2KpwD4/Yc8z7
jVOn7/vN9BluTJ8j91ASd0afh34D++DU2d6H5xDc5agzuahw7njuwyruOD6s
eLDSu4c/jl4+6kjVt6dHTY6JBp/5amPihyP/OPVkNSck9mWUQz6WsAR56rHH
MH+xao+ZvfAcB/545I5LrwaHHI2a5nStWLjHHPNahvOYk1fgI0XJq0aTDJ86
9wqEG/pl2GupF2MvQ3su/QzhRJprqNwUrIj+srCiqBsTZiRfXDjKeIyhD6fP
FX2F5Sm8bLifct5vPm8Jz4b4LMuP7aViqBfboFkyVZ5scB/QH8B3ENdBfgvw
PcSR373wvX/jkIOy72sGgPz/0ZnJ+19zPdAPwonF50i82NwXSt6W8rXc3dac
Y7GBrbuv7b6WS1msQq3e6//3a6ZOPk8n/vvjLDD4a1F7BLeG3rrmX9JjP7Lj
/XXqRfrUcOYjZ5m6Ubzlk4f5HferD/VV02/IPUt/h/6deju6d9XX4d7lnIGj
uWKWYx+Q8mx4mvBWybfhapJzy4/z3YozR3xqnTs65zl38hk95K553grHU7kr
uMA89aH6YXzawAPwaaPvTt58UN35d/F3fjud26P7vSmf47lCHYZGkLOF+ZzU
YpoTi16Qc0Y1GXM30TvnOkR8L/C8QI+IFhHfC/SI5LhwVslvJ2q514l8Tg7o
lF4n76c8d2TP6w088t4qnDt/a6OcqYBXXpyrALeD+++QesntuK1V8jv2Cfff
LqleZj/6sHCPuDi3NupWhe/BxxIXCx6W+FfC9uBgifMDvwP/E3F+4HjA9Yne
J3B+4KvBVZPvOXy1O5r9HGtys5xjvUrRP68r5wyOCV8QHjFeBHjPwCPm9+B3
OCP8DvwG49Z8bip9wSq9vLTyMxX981fyuZjoN5iNuVE658FA4ywlnuM4S4la
YR+LC8lhGt7fmbfZr5+jx8NsZHo86OfmqDsmiKdaxAO/SZggXmr4qFXxceDA
5V589BTkx8efRBeEV43m4lbNxJ2+8H4R2rlV6+UMAXrbqn81R4AaGJ/lOPdG
/srMu2HWzc+77rGcY45opeR3A74onBwdLRq5SS1ObbhODq/5OEsSr3n5gNKn
wgs071OpRyUfUDie+JxGPXnubyqe5x225g2L2Ro+c+eYls/ZwftlHYtmt5yz
Qx27Tr1fh4b+LK9hdV4cWh+NxqXm595caR9kD1w17H/sfQ93+3UU0UtT9UL0
0ASzp08bvbTozwq7j7g9PVqwe3L9OHM1zloV3rpNyvOFHcLZrJrThNaEWU1T
Fb6vRA4h84DZWzQTOJ8HjBcOfZ5Le/2+AB+mfXiQb8nIXuk1FWcJV80RBm+j
1sAvIWpAq/Sf9KbUp2DuSj7rL874e7zo94AGfwQfnaDZ7wFp/+8o3BfMV35E
eG7nM4fhlm9SKzXsUb/Ovh417MzaY84eOq9lB2A7aL5yvVeO7cCpiLOn8R8Z
k7nT7KnoFf5QlH7F8irGpzj3ts9rW3gw4NXUt2DWcc5RrHUvzZ5VPKn0vPKs
xplYzMOSt8EGtXI+IljCi61+P4Plw7N9WXi2pS+twqjeKZxviFdR9Kqt8ql9
PdTFjfrwfmHy9M31b4M8/eGHo5eq4oZLLwU/HM3UMilH1dw36ldy1K9Tjhp1
uvjDSasLJ0F1Dbw9zRimrqGmgYdQNS+F+gZuvvxL4eijIVyh5d6l8PKP6jrv
67LCexzyk1CfI5/bgbei+th4LI6ptyLeJ/heDvI+ib4n8GI0e1a+DPSwck8G
elbKa9nHoy9/VV57dJbbktfiPQZn7r2m45v/bpXcObBOcM69Os6fA+uESyOf
NXq3YOuRNwPOLu4M5zWz6uQfwrmNtgoPkSNarquCc8r5rbObWXX4YTEbXl5b
0ljhswV/XJpztFb4bqG3Qn+O5kqzz+kd0EdV70CYEb0D+gYHpBzonJQDDeqN
0heV/oW5JmgbB80y1syEiNFxJuCDzJmAd+LkzdI7Mfomcjack35PsMXNUp0y
CF8E6xfGGPsN+YxX1aN5Ha5aVN70ynGpO/L5cdLLgU/neihpHNA3oItC16D8
j9zvvHq/xxT1Efkf+knphdAKgUWx30X/6zjzVGvlmz269R+n7x2/x9H5VYpn
IB7ZII4BOWrs1cDJjP2aq1LOSq6aeyzIU1XajkF+qnHGk7xg4cvj0YOnLn19
PHrkp0t/n3Nas3CrvGY0E5ezOuIo4OjvNEr8HBwFDL0KS3m/cOwWjil+5NJq
SsOc6+mlYwbTRcfMXGP1sZtN72XjOxL9RuQ1wn32bMV9pnvs03Sf0YsbWe/3
JmJfYU8pQj1wbdpX1NOBpzccR09n690DzlbOVTj95AN3hHzgDykfkG+j8nd4
x+QEOxT980Ojv2I+Z5K8G53W8YXPRcYTBr6gPGHgCGr2XPSEgVMOPynykaLe
H24SvKRcr4A3i/QK8jsUdoK2TD696MvEuaNWgHeHvgxtGXUPHn/St2m2A3XP
yPbQuQ4rF0O5TOiZY3+E3og4c2Chw82w1wzGiyrqOvDrqtoueqbgrcQMMjxT
ol8KmPe3CT+Af4D2MGpsor4m72fl/g+xp0X+9GrhPdd8zkM+44HeM33nXJ/M
/R41yscUJfcLnmjkfkX/ucgdgfuFZlM+lLkHpbwnOWPj/GFmpTBvOM5JYUYK
c4Z51KXbv6vw+erS7sNBhX8K95TfmblLaPbphWnes+YoUePLN1hzlPCPjz3d
6MUS82T013EGRNTySPsvzf/a6TnDfyl6L8GdyP2XjgjPG/1RsH00CmD7w+H6
1CeavaV5KmiqVadQoxyS7ntqFfT78NrQ7kdeGxrsyG1DBwhPBS4SulbmD47b
8tmDP247J0kzCH/bdU7SVUXJg5OvduTAVfkh0kPBh2dMeijRi0e5Pv2pKi+e
L4uSo4a/f/T1FxYlX39hqWC+eLtFPFVcMOGqV7X7vd6EkTK7h1ki6HXjzNmo
2QWvR6+Lb/HLtVKvhl8xXsU/TdfHpxjd2gc11wdJZ57rhKQRyvcb9ipwKPaq
o7L9Ku5Vev7xKBju+efM+2fNsTR8iclT8CUeTj+Cfw96n5MarvnZrVnqftD6
SfMDFix+Aryes+slRyHHHIUzaj4jz558N6SjE8dGOjrxbMiZDytK7xM8buPs
W/xPmHcrn1t6BvBb6BHgv4j34gL2+oqdfg9GNKfoVPHxxbuB2mL2VFfIuyH6
+KKVqCVsEp4OeZ+0Esr30EnAt2KuHXwrfMXyuXbsHcLd4F3tnf598nSpmuXL
vyvHf+Aoy7s5Yj9si7c3vAfKPOcNLa5teT/0JLvWVuS5FouGzwo/DO3joM+r
z8oeN2/av8euuwdLrifQXi7fFbB6uKng9fiiCK8/tdmP2cOnQGcuniqYPfnp
u0U/xyzO05EvPfge/QN5p0e9sLTC8k2XX4Rm48gvIs7DyTUDy6Z9Rv6RVT2b
6CGp57jWGB5LhmsFz0rz+YbjWIlfBe8cvnk+Tx2fcHHN8QiHBwJvO/JA0CPk
PBBh82BCh9XKWU+jm/MkjyH6qfgMDfIYqnp+Nb9as6vzZxh+wi71ofws6rzI
T6BWU50Gpqw6bbFUq01j13275TXb9qlu43yhxq+aGyNNWjxjVk73/G8Lv+fH
D/d71M3EWXK67/FUwA9oh1Sz5fNQ5LEaZ6KQ46MJggdK/kHeUaVvk14KXAh8
F99O8F3pp+TbCderDycqHI8Fh2WOrXh20qJpPglaNOaToENjPon8ZCOPF1wU
Lu9KHediMP8dPkb0IRmdhg6sWDo6zYwVvkI/GowFHpRmU+Y4y8EBX2E+5T29
shYDnx2EzcZeCvgsvjg3Fq4LwhsHXRDeOJrVikcOPs945Ghmq3y38cuhxgdn
0MwUPA+p66XX14z1VYr+WaLqO+Y9R/qNEc9Tr1q9mUE4nnrU1MPyMhqZcLdY
Fwtvi1xV6mLmuud6mSqtTMxH0Vrk+aj8o8hJwfLl839EUc6YB9cH0wfDZ3Yx
vuzTF94HnLHmMxXIXZinoF4gM8XpA/661u/H8s9m6ccyr/3dXdruy4KeYRZb
P2/X8bvti9LrQx6ug7xbn0354X0W99cdO8496MCP8XiJsx6FI7Ofkk81Uy4V
tdP3h1xK/RX5BIPZ5HiN+ipxDgKaVmYhxDkI0rOK6xr9KnPO18hUH7GXxucO
TDOf0Rznv/KsXFdzX/oZwvMRnw2eCeZpUiMyU5Ma8eBG/0zNvF7UXE1qRn5/
5mpcmt0DF2f3wYii9ACLfBH4zvBF8AOLnBHxRfAFi59vicbQeZ/5nE/x1zTT
Tfy1nLv2cOHaJ3wHmQuFN4L6e/JGwBPhjgyvpR7JMVt4ROJuUJuA3Ub+0Lzh
XJquUWo6dS5xJkVN5yrpDMbTXX7u0UNwjU6py968W2qz8743Gs3Y91bPG30/
3Oeo7Wf+uTy5D2+5rh/tObWUPEA4H6MHCPwXzkS8QGYvyhqV+nTVmnv3U2/m
M9eizzz1JzUrvhPv1Eod2/QpF8J/YvGUB6HRHC89N7kPd3xeYv4R+QTol6LP
KryCibrOAQDziJwMknTmTeNjzMxp5k1r1jS8DP07V67491GPqw4XT1zeZMJH
o38jHkPgo3DEly8ct8UfIM5ZgnMrj+jIu8Uf4W9p76N3lvfN2PPUO9PsP+19
8k5Q/g+GHX0Rlf+T++d5f+x76PzTrGl6H+pn6fyjB8LZpx4I599KhffXI68X
TQu+y/KCkd8y3F7pW8Tt3a03VBMjbvC12Xr16M9vuKcqM3uZT9Sw72bjts/v
3aDrM3vxV409TGpieJn0MPPeJTXwU0XZL2RewnCzEpiLrL7htoX7xTDLMPrF
jJ/yyOgZE++hNRuDezmqfel7DPKioBYGR4CvBM6DPh/vE/GVwHqiHh/OEr5l
o/hS1A2t/jlq5B5fp9yDvGOrXsnhlQ+08CdhT8KdyBEWSDlCVX4QcwO7zCj/
icuL0jeB/5j75uCdIN3BhI1+7RM1qfRP9ElWLEruMHoF5lTj+zSIQ0xtGvl4
cEKH44NGLyvNfEBzh5cVnGl8RKLWTjqs6AVTpcMSbsOeQT8QDqLmreWz1vI5
a5GTLh1APts356SLgzpL4bO3ZqiVs7fALOPcLWZubVe4JlVesehSpUd9LtXs
9G4erpW8RjgJcBHgNvJdwkPge8Sr7uT0+8DvRkPy66b/NsyrWLrd788lb658
71V/Ku69fH/2v0b1PuFboD+A+0b/Uz7a4onSB4UrmnuWyG9NM6/kXaI8L/fV
jzOG6N/ks4VI0x8sfCYHXB840+r3/a3l/T71+uAUyI9V50X0YuWcgNv7q271
ublqY7C2QFxjvGTkIyO+cfSSgXOM5hRP1AfqzsnIdafwMrbpOC8D/SncDLgM
eAAN4jKo1xf5DCOLch7imwlnivpg+Y+Ada7e6OdYVp3pOs/BPt8pSn4y2mV+
F3FzIjdZWJPWxZklwpyENa2Q8hrw5n14dluej4E3b2Lr9reYsOMeW9GfKt8/
Nxuwf0rHwBzP4fzhF6z3a5PV05U+WVrkXGspHJg+zHAYMHn6n4syR2euueoH
zTcnV2fG+bWpfmDG+aEpb8e//tDa8N71PHvCk8RPvHEM8CT0cPTtpIljJgrz
5ujfVc1Eib089jFp7OlH7xD2M3T2cU9jP6uqXaWZVv169WjWHdEYqqnmPXkv
QjMj8nkRYJfkJPIdxts593WOfsNwGMjz8STA8y9yGGKuP063zPdnKtz3SHN2
8c86s+4c6ciPlvcR/Gj87cX7w+Oa3hr8v7yvlvP/1EPKZwMN4uOj7UTXib5c
ms5Bek7ms6LnZHuI+nrNgIzzH8W1BCuAg6++i/wVv+30916U22yecptBeY08
TcB11Deo8jOJmPWkjcGYNX441D1ofKl58vkS6HzxbMCHBs8GtL6TF65pO9Di
Sbv2BxYvN51D8UrbtWyz9KrnsfMMxVlC6Elj/x1fP/n/DvK5BEvjfqWeEY4j
3l+sWahXNOctzt5j1hs4YJy7VzV/XTN+Y81LvQtn8NZ0Ri2X8n88lfCh18xO
+SnJSwkPJepc6pWqWWpzpxqX2mP9Maw77G2j9GRHFe53oHkr+ELgQSTPUs0h
k/eBzrt9svNu0Fm3Q1HWcHBbNGeO2q2KswZmwIzk69L3hkZ60Bwv6iby3qhr
0+xT6drQCEZd21iphhKmSA1VNadV9RT4Df59YDjM08a/Bhwn+lvibclxt3JR
chrgq9AToy8g3gozCCKnIea426ccl/48eW7McTlTD2yU85nGxOuDPjueaLHH
Dp+WXDv6poNzc3+DcYPdxTmGT4V7m/uaffjYtP+iU5FGJe6/mjGifRi+vPg/
aB/gAKF/EP8n97c+pujnqeBTJI5K/m+dv1diTPKRZPZbPk9bs7TjWZifg7lO
IPcH1jz4fHbeT9K/j3+Tek7TpH8b+QG5ARwn+E3CMaI+vEobTl8KTA7OA3g2
fon0p+hN4ZdIfyr2pH4d8EhpDKSrFSYpPPKtwjkOW7Zc/wW/Yfm2cxzW67gO
7Pj0XTGzg+/o+vTdxJkdcFrhs/Jd2f8alVeN23DNm/rMyqdinzmvObdJNWeV
7yg1Ezhlvk9pj7og7VHSvF6R9qgcqxfXO8fpc4ye++jLWulHOm3asznLz2uX
WCXzp2NfCZ5f3lfKe0pxXhF7vXSOcL7knSetDPwvzki04jvWXfuNXhy9d64R
57xkbt66qb75a6hxYl0DjzHO8VavGU+PfIY3vTdxmuU78ECjnN0SvQcir5l+
wI7pvfTnyCvVO9Ba7hfWHV64lzWztvI5W+qPrV5Rc8obINad1Jzg/cL60YcO
pw3FW3fyhvfNo1cbffPotctvJ582YW7w9OlDgLvlZ4Xwttz3Vb7I8dzgzMCn
U56YUT8KNjBoFqCujf8nnsuaZcS1uZ56CVV13f4pdwA/Vl13XeH+fnhV4WOE
rx9cQ7yqmHsgPz98qmLudnrDObDkb3BgYw43qP7fY0D9z3Yb9wVxhyYKe0Lu
A6R9X/m3vFXY96Ovk3gj4HRgdPBHxB0RRifuyAxF/xmnGqPqXJMGCj41uidm
sTJXAC41ula0rMwSgKPBvQZPY9Jmvy9gFVfj/cLnk8Gl1lwycac/bTp3mllk
mgMljBB88KRGP0cLfGtQzYCfwitF/+wy8qfd637G5f4Kn6T8SfoJ/JcGedD9
tOc6ilXD/adZwMpd6V+IG0jeSs888uGZd0DPHA48/HfN3AM70Sx26oePsvsv
apy4F8FS1G/+ZeE8B/ns4q9LrxmP3e9IiHv9Nd0JY1DP8bYPC9c/M8NX+ud8
di8zs86uOW+M7018sTg3C95YnJn10145l7yolT0C8hHmzGkmOT7ReESflOpx
1eLMAcrrcPoD9Aaox8VthfcFjzxyWyPnK3LJxf2yP/k/LYe4QpobrpnhaDm2
LbzvoHmceNbnvrbwWDSLiF7yoDlE+LAyi4h6gloiciGiP0PkQcCBAOPEJ0ge
EeCd0jbEOcTMINb8YfY5fFeY94Bfi7xXou/Kuen8/aAoPWg1ewguPBwy+O/i
js1WuA5pvvQMbZueo9F52OT77pOhZo73OnUz2tRr66U/ANrUqEtFny5dOs+S
9AzSC1ZpBa8t3AMQ/z+8CfElxI8QjGKlXunzjK4LnjbaLngmaLHhmMDVhqOd
67mqPIXJjcABz21UewprjqNdps9TmvMTDWP0kebcxJsCD7jo/yZPCvwo0KXJ
jwLuW+RpaG5l5GnAdxMHTNxH9dur5s41uiX/8bLCa1uw6z1TfStNoWrbXFdI
nYtGhhrwlXrp/TgmehnqQHit8PfhtaKbYwaLuK3SzInfKq0cHNe5C/d8lVcK
vD64g4fy/bVKn5R2p+T3Uc/Ki5cZLHi+4MNLXYvGDI+XK7Ncivr7hpRDxb4l
+xO5VNR4yBt5kC9yrhOWD/vWzVInPFer1AqjE4ZnhFb4ne7wGmXNpcz1yfDh
rshwkQsbY9YHgH93afp7nEtcX2cT3LvcA165gbRWmhWZa6zIEzS3VPkCs0vj
3FLVSPT0F2oMnaOpPr7699IS4GeaawiifgC8gvNK/G7OKTB9zUKNswzYK+Cm
wUf7ou56rVvSXiGt1kO9/nsfDGRQT+GKYqjeXbM+5LUJJpj7bfJTcUaAx4LF
on9XT4w+GOfCIulc4NET31n8T/mm87yD74hjw+8cP3eRPa/xOc25P/B9qNPl
HSTOT+T7sAfmGm7qBzi77F1VOm72r6g/x9uO+U131l2HTk9R3na5Fn3TtAa+
hjzw4G3kHng3Fz5bFs0ZeCRcCDDIqDcDizymW86Zvbc3lPuGbrFKryj+W97X
UO+DWlmeatTJ6mvgp8YcLmaJw2kYbv7WpqnGgre1bLOcr4BPOh7pk6Q6q2pv
jr0v3aNxb444HbgJ9R48ffWkqPvUh/ow4SbHpz15y8J95Ses+z6Mtzy+8vKU
x0++VvTP5EQrnns+yu9xFBe47vtXK93PkZ8EhwxspsovpqpuA8tZP6vX4J1R
s3EW6jzGLyp6ReU+UfFczrl54g+OCXfwyFSDMQdGNT84iXrAqsGYB7NXqMPi
GQ+/e8HsbD+kU86UnbUotRvitqMvlo4jarrhtEvXHb+LidN3kX8H9NSj7p9+
NPxuuN1o/zUTQ7r/iKswJ0y4StWcMGaETV84xxZtEL6zzJeBawk2Dq8HnmXU
BolrKY0Q+Cd+LpF7L500PdNB/VIwUXqm3Ks7Fc5fxx+Z+1QzP+Ctaw7q8kX/
LBtwursbQ2fZLNcrfWM0zyz6divPxj8Gj3V5yOCxrv45mzxaCXrn4gXmM51i
vUJfSDNUI/9V3FdqFnEzcl4G2lp5k0VuBvcrvIU4r0j6Ye5PzS3S98d3p2ce
7v80zdJbOs6TBbtkVgEYGJgEeMQJCZOQLli4pbAv8kBpSOBMyi/vwJQPkgfK
/598ED3JscXQOUmaTcxMArjgaHiFcVJjab5ilQ9mxHTzGeDkLcJz42xNdHpx
ls8gDcJSqYaTnjnOyowzRNAzU8utWJRcLnhccIWqOFzMxmGePfovams0VUe0
+7VU1NLaQ7UHR+1cPoeLvFHeKpq/OWj2Jt4qcJqEf5BrzmHve8bWfdX02UTk
mvPYZ7mo43OJ+H75LtUT0PdJb4BZpfQG+F7ZG+WrQ91zTdgbPwr7I731HGNk
fgh+6WCM6E9znHH7wnsP+N6q/0B/Bkx5UA8izjyAXwrHAD4x3ALxCeCUSssL
3oGed56EefDb6HeRhpe9Lfd8wK+rivuhmY/0J+Lcx9ib0NzHTYpSz0zeu0az
9C2LmuZOyoHRNeNjhifHa6xlb6EuaLsXx/z22ip23Y16PstJebDm3WlGdy3L
gZX/wgOn38ScLjjgzOiKs7nggcfZXNKcUuNrNja6U2lJpDeN9+l8zWoPoDgz
Pc6pmaTu2DZzat7P8i55VQjPhXdZheeKe8mep/1OmH+O98f9jhneV6WaGX+Z
6CsTPWXk44HXLZil5rRG/45BM1o1v4aaGX32s6lmRqfNjAjNh8i/E3LRKVrl
7J58Zs+jvdITMc6fR2tZNXsernXujWgvjfLPhSeFhy5e3fT2xJVCP0pvj55e
1B/Lg6BKf7x0whOkE2SWDGcKuAIerNIlRt0gZ4qwBXmSc6ZzhmvOimascJYz
I2WT9FzJIwCfWj1TPE88R6d0S82c8qpmvfRUGjRzjDP0oG6pn4P/h8f9zSln
0BxxzRBH443fvWaI5xrFuLeQJ8lPJs4yB1cET4Snms8xx4NRfpnSu+KXKV87
eWZqBrFyVGmmc22xctTZi37sXr0j8Htp++kh5Ti+eko5t3jNdKbt3OjnGMuv
XjVsI9Su6E3B3VS/Rg8yOAvi5oiXA39Bujx4C1GPJ09LfJzgR+HjBDcKLyf4
UdKDobcBu0JvwxypKr9iYVjXF4O5R/IRHTR3XB6i8q4Hl4YLLp4xeHQ+A5j7
Wr5Z+GXp/o4+l+Cq1Paq5+VZn/vVU6fntX1Vfq3+07TNfnwpzo0ES1oxPD/k
nWtm+buemWWyv3N69rfo7ervbZ79Pf0t7s2oiUH7EzUx6H2k9ZHX4zXZcyG/
R3k9yudRHo9giGgRhReiQ5DvLJjhewk3BDNEgyBeR9Sm0IuA4zScLuWCouwL
0RNiVnXsB31m8Qtbf2e3v09Hjw4uiuZUq1cXfdCjnpwev7TkuY5cs945K5j3
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
ff/zp++fGlUcZNWo0ZNL9ak8NMRBznudce8kT459TvZPzmLOjL0bfh6rj4Z/
Buey/DO+LpxnDwcErj1at6oZp3E+qjgh+cyVB+v9M1eOb/vcFeatrNf1mStL
9nzuysxF6W0ObgdeNyU1fMd7vfR49+yVemTpuVXb5/pkfXc6N/nO8Bxhhgpz
otH+5N4j0uZx1uA5PDKdNZwvcLPpN4uPfUavnImpPrNmRmg2JrWK5mKCfWvW
OxwHasYq7on24LeLam/6K8J+zFwvfOqlVcw1d5onns8R1/mAvvzpdDYMOhfg
N2sfFIc55y+jvREnMHrOR68++fTFmWfMyWTmmXyN87lnqxXO55yx7Rzdn1gs
23Hu5uJd527e2+336sB7aM6wj2kmOJ4dZ7ZK3w7taeCo39fd3y76hYOj4hkO
fnpXtmephsz3rqh9yjVP7GGDPMXl6yBf8dxTnL4mPU16mfQxa6m+pJdJjUkv
kxpTnhN4anFmDvKd4Mykpqc2oR65rencQmoY1STUMdQkYIjsj+yNYzKPTb7d
PDvoGsBrXkl5Wo7ZkK/h4Z3nE8+kfIJcYoOQT6xUuGfcZHX3i8tnQOMNN0Gv
3w+RnE6eiMwD1BzA59qlL6Jmwktjhm9IlcbshF6JVaLVkz4vzkGOGj2enbyH
G/up5BSfZs/Uee1+XYC+y/dDzqv9iJyXPWnptB9V+Y/iS0WfChw5epCSx8ID
jD6xml0QZxYoZ9W5oDMB/dWCFefCIH8B5oxU+QtE3EuYF74icV79hgNyyadS
PommXjODyCHhTWhm0J0hbyFfEZZKXoIORLkJPL4jYj5X85yO8xIuUzfVWJe3
S88p5Xaqu2J+IE2d9HQxR9g9XZ88UbUbHl9cE48vXfedcG2+U75LeCnRz4A5
lXDe4qzKXNuOdouzAh8T6beka0e/JU6u5rev3nQ+D7xccXLRvk2Q8soXm+69
R155Y8grlVPiwxc5WCOaJf9KNYjOGZ2P1GtoWajTmIuR61mo2aKmBW4o+Jzm
3QijY9YNvFBwOvW00fzR1xbmBW4r3IvfiVwu9/Aml4FjJe8E8hjNLdfcODz7
5X8F/x3sbZDvlfoA+PShB2RWpfSAVbMqNT8YXWD0WNPsu9xjLeaI8lmbvijn
tsIlF8YG/hR543F2rObGwl06N+XF4lrQfx6EvYIfgb0KPyKvVa4mH5DrQn6r
PozyW/KzGYp+fh26b/iG8Oroj6DzfnQMcl/uNXJezbWJugHwZ2kHct0A2Kv2
xYtTfR/nVMa5L1V4pGZgxlnC8FPwyASfhJsCRhl5rNHHrJc90+JNfFY4Z2IB
+xs/a5a8ibnbzp1Y2K69Sc9rWWpYMDtqWOrVu1PNip5DOF2egzF7dlAOpl6w
8I6IdXBWxH5wPMe/DWc5+EDEBSJ3kL0G/mAVdxDcEcyR3gY8lJ3Tv0eafmGO
+QwbeevAM2Q+JXxdzbABoqFfja6MfjW9arRl7MP0qtWnBkNbL92L4mTA99T9
qFnK8DyV82gOIhgV+Q6azjinJOoh4z0jPWTUQsJx0r0TNZG6hw4vvEeCtgRd
CZ4dVX4dRxSlp7v+1hytfr0l172o8Jla39p/P7TtfnJ4jDFTi1z0ha57jEn7
onoS/JF6Em6meJnUkuJjXlFUc/M0lwsuHjw8cfAmT881zzS1ySfpzMhrE84M
MCv8T9lTNYddM4A1gz3O/tYMdnorcHkiL0+9Ffph9FZyPp7yH3RtaNoeyOpi
1cR4qezf69dncp6xP6LTzGc85Xv7xK3hvTO5h+Lc3bjvSFNbNXdX36v2S53L
Tzf7udF5Lcg+qu9cZzXfe9QBowFm3lvVrLfpCufVwaeGT7dW2/nUcOnEpxCn
Ls5y1hk5UWuoXp7fEC9bcYu3rruHLZgYOFj0rdX3y3dLr17+pIdnZ+ev0nfN
9zyopwoHTv1U9I749s1jr23aKGcy4IvMPJuquQwrFq5T2bZwrYr4QdKs4D1M
n0L9iUGzKSPWIE8Oej/09vGnQi+g/r58qtTjl0+V+kGqqfDQpqbCQ/s/zf66
innX0X878jui7zjcjnxeb44LxDkD5Em5Nyg5krCCEcXg+QHwAYRx7JIwDmqj
3VJdpDkCg/gU8tCuwiflVRn7tFX+lLMW5ezSODO2al5snq/COQSfHC/lq3mu
mvueyMuyyvOEnKWKs6UzeoZ0Ruvzv9Et+xDMgMeXDi/wOAv+9XbpBS5/uujH
IC8GZmega85nEIkHKR83fKqkE4ocyO0qsBvhzxGvOSfU3PIUBNt/vll6CoLp
i1eC1zY8oipeCb09zcaBY/Jo4fgutRs1m2o1cTWE6w7ylY6e7NxDKxTOo8T3
F8/fQVxK8IecOwNPGQ86cVA1/7md6hF0yRO0Bs8Ny/Fb+aQsmJ1T0vJxVt0f
MMH9w7krHLMKF9RZsEpRzszRzM3IuZfvZ+Tbf5/2BemHtSfAo8o1w9oXZi6c
38ncFOaua6aweJ3MlBRerJmS0sRV5f5wUKIujvwfrRqcSnjX4lXKE3cU/7pb
8ipzzo6wC3F1wC2YK4mv7Oy1UnuIbwsesx83HP/Fs0V+LW/Z2lsbg30Apffj
/oqYVuTsjkz32YTp/kL7/1jh+iE8ANAPSfeP3v+Drmv+weCvS/hzxA6ENws/
kD8efcDojzfIa1nzUvv8ltv9vGM8rA9ouIc1e4N8rOFHRy9ruNLCTg5I+ftD
CZuZNeAo8kqP+An5vGZ+jeLVN6t59fy2VZwneZJGzhP8z2OLag4ovXL643A7
c54r3H84AIM4rvmsrcgl16wt8k98/KLvn2YA4VkBhzXOqsH7BR4r2hl0M1f2
Su9J7rktB9xz3G+aXcB+um7YT+M+Km4m+ymcZjA6uMxoE+jx5jxmOMzSC4F/
4C0F7oFGKPpL4d1bxXXFm2GQV3juTaB8g70lzgzaq3A/2f8U7ic7fd29AfGV
jb6AykfJRfdIn1U5KZ95y/BZjy/6Z8SBNUVeFdgS5wn91tiPkgdC7hFJD1wz
V59LeR24/sopr4v98NVSbgePc5J0X+qeFH/jkeZQ3sYg3znOV2la5EFHHx1s
m7NWc/SiXoX5MTxb6FZ4rnim0DAyc4S5E3jfMnOCuSObcN1GOW+CXIOZI4O0
/Jr5Ji3/fdn9gq5/5aKcU43n7/t15x/i9yvsBp3780XphRI9melR7tkpvZnx
QZH30paFe33IgwndPVoAfD/kvQTPVh6x+7XKuSbKwfmt9BuRf6uHKV9qaj/x
kVWT4KEgLpv4NHDaNF8Wjx7pOuG1RU+v6EWu2kD8Xz6X6gI+S5XWQhrhvMee
e0hLZ6UcBi/dOA8o95XO/Vo1C7DKrxUNvPwF4JEv0Cx9Y+UtwNmIDl4YS/Sb
itox8BV6SrnXlHyc6M/Ir6mqJ0POHf3iOdvlGY9PEX7x6B3wJ4reoHCK8a5B
Q403KN410R90xIA6RzWO/FOjd+rshXODxAf635yIpmvw4AVJA3pYMXTGJ5pT
OOOaayu+uGZ9vl8M1RlJAwgPUByYyJ2Cdy3+FLxrONfiUEXONXzC3G9FnjPR
awZdKX7Y99R8zg18f/yw5fPOfBu8sJlvg063qp7IZzbks+LER6KPtHs6p8RH
GoQfLJmwg4gbwLGt8pS+qVH6Suv+j+c7Ofvi6UyXl288z4XdLBRy88jnIjeP
mNhMRcllj5oDzWfQXIaRKZcCxyOPoh9FLgUWqv5WzJ+qeoCqLcDB1AOMs4vh
O4Av0+fX7GLw5aN6JfdXvN/c+z16+dJ3VR5Cn1W5yG4pF6Guq8pFflmUXm4v
N3yWquaoystNXqPMVMU/Tv7u8vXDI2x0/u7dwv0Po276L41yTq8009TGaLnR
bseZ7HE2Hv6ra4/m3Bm/WXq9HJbOHubk4TvFrDzpWPGHfcHWv2qxbdP9YdG0
0s+Tt6n8Yav4nuQLVXPzFk/3L7OCYm7KvUvejl5JM19nKIb6JoCjyzcBDJ2+
TqxvN0z17XcVNe6gz3lV+pzPZZ8VfO5/uHfbMTr1tNAOa4YZ2DreVB/VnK/3
dr30qMKXKnpRn9Et61Hmd0orQ226aau/LqUmZT7h56k2vbnbr98lT0bvd3DY
fy5JObJ0vDqftA9HT8H8jIIHiSet/P7gP+JNi0d+9PujjpS/EjXk9M1SI5P7
K2neWeSqkg8w8wzOKvO64K3u0iv9LvKZgtJSvdhyv4uoNYl+F+IY5jPsoxeP
PNDkSU//fnpbv07N+0YfW7Tr7gP9Qcv56vhBX9Apeev/sKjb396u597Q5/aq
fW7ktS+PG+FX+NzIb/eClDdphphyJ/ImvHflqxK9yPELV71BboCnneZXxNxA
vI5Hin5ehzQVcDoW6Tivo1f4dyZPB/yKou8bPO9Rs0YTbnN30T/vGI8EcBrm
HKsnM2HP8xIwV/hk9LeqNFhwy+D0TFr47B5028ztwU8LzTZ6bWb3wLOCY6Uc
n9yeumrvVllPRX9h6qoZbe2VRb8WF38S6W8bHdfgHtNxDe5FFXmasBflaieE
XO219DzEWV1VmN2avXJuJvd4nJ25TrrXucfzuZl8J1NWfC/3V3wvVTxscf7E
9wNz4fP+puif+woepNmv5F2PdPprAM1b3K9V9giGm8lMnXJVUWofIg8dDcT9
Teeeo4FA/wD/HA1E7vM1i62dszn8vHHNGn841eM8H8zmpRcR5/PSj+DZeDt8
R338yIbjVNskfAqdx5PFUK3HfU3HhMkT0HhUeQ7gB7dvw70H+L2i30DOG6OG
A6eHgwpWTw0HXr9crxoPl3dWxMPJdxeslXOO7kkYCX4q5L5npNwXbgj5r3Lf
D4qS8yy/a7zSqnjP5Ors+9wz0khK73Br2v/Z86t6ceKrVHFVeE7pzY3S1WSY
kXD4HINfIeVsF6Z8jf2bXv+d2b59Xtiv2avp294ezpHYr+UsWT6dJdKLo+NG
M46HDJpxcLAq3Xj07sk10/IrgQNJj29Zu/bGhXsUy5/41pr7E0/ddm9ifImv
SGca51mVpxxnGZ5ygPzy8uQ8E/dPmpeod4n7rrQvg+aJ3Nfonycy6Nn8zRg8
m4O4ffBYmCEEhwUvSfhozNiJXL/hNPn46UqTj5cq+a324ocr9mE8IHMviqXT
GSE9mbRkeFihJWuk8wE92SCOKDXrf9OzAJZOLknNKq7ocNwdeHni7mjGUFU9
Km5ynCd4Zqt/nqC0+BGjAhtBf4/2HmwEzX3upS8PBnnqg4UP8tQHSz8gvE+1
H9i5fNvA0OcMuZXyKp5Pcis9k9N3PX+i7tBMCuqOKyvqDWqNKh0sHCtmAYqX
RZ/18KL0T0UHLK4LPqq5h6p4L+TLcKeuLZw7BW+Kfos4U3jlw5mSVz7cKfov
6hXT24s9YulZ8j7x0qkmi9rFf4R77s1W6cUpHaP9n6OwbHDsVZru2QCGnc9m
ip53KzS9txX94fG9Q4sQNYb0FfB2wUeDngJcPPoK0nLSW7CXR90zkfsUZ81q
xiz3yZj0ITRP6OqEWdwe6r5Vi/75ynAcNGOZWb5xdq98tfDqjH4QOc+a2h8c
Ggya+d/M4CNPeLLlOQK5geZ+K3/GlwK9bvRXh7uAL0WVt7pmq8OLR6eLrlec
+KjtzfUkmmeb60ny+WloGF7p+Ay1ObuuYWB2WtTPoJ15u+m1sPQzOfd0RFHy
I+BASK8CTghXnHNC58PSKTeHJy7NAz3OvzX7Z31GzUPkH/IMwReEf4h3k3yb
eHbEHZu75fNIc/6YuGOHp3qXZxmPmzkaJW+NZ1jPb9Qvxl50rmGs6kdvnc7a
3P9fsxGpGeF9597/+dkZe3acn+rbMZsr+nXBiWYeObzonzZccydeNDPJ4UXD
h9Y+rjmQG4e9nF4Dnuvs5/Dkoj+ovATkE4rOAx8B+ilwN+BtfFhzzoZ6KnF+
u+ZZMs9DXHDNs4wzPOBuyo8WvExYmTicmn0AjxPMDC4nMxCAyJixGGdQarYC
3vvMVeR7BhPMeac5PggHNeefRk2T9Exg4fB90JZI0ySOGRjX4i3nmVVxzKrm
CIKRyL9NMxFWKUbPadi4VXIa5A+tPYH9YKZm2deTZ/TqaU+IntFbF86px0uW
+0ZaTWkFxauPM5/plzP3uWrmM1jbLkXJoVb/QTiwZpSBA//q/3Dvc65oNp36
1tekc2WQlgQ9dK4leaooZ77G2Ujst2iQ2GeZ/aoZSfI0rdKU422q3pd05cox
3wp5Jj1uckzNWcQDSn7K6nMrZ2DPE9+avEF7HrN24F6Ldx3zCOUQ8ZyUR7Jm
9e2S6j3N6NPsvdFpiuLsL2HblxUlvz7qRqO/kXSPsxU+5wgP9tx/XbOOmHOE
B7tmHdVTrq88P/os53oT1UCaz6IaiBktL7f66yBhQ98H/ANsKOIfnEHbFM7n
liezNM+ztFzzLF53PjsYPiJ9wcM7Q+cHR28+1d/btUpemmrw6GMC3rZXvV8/
Bdb2Vcf9S6RR/LzZr098JZ3ti4fzXbPnnk/7AzPn0H+zH8SZcznnPvLt5S0A
dw9/obzXgscQ++gSnbLPoj5C7CGQr6p/HWcIxflB+Gjcm+qLnVJdQd4mT5Qt
Uv72y5TDqa6o0gGTy6ChUR5DDlOlA44eH2gD8PjAbwY9UtQHyOuD5yDqYmJ/
Dn5vzp+Oeyi/qzzx2E/xquF+GD/tqVdn++olFXWF9oXJBuwJaCyj98vtKaeM
vi94vuD3kmN09OertJtRYwk2MHvK9yIe+7duqa+cvejvE/+v79QsvVrpQcmn
lTN9kJcTHiLycoJHh2eI/JvwVGQuKD1dZoI+1PAZGtFTkdmg0S8YjEt+wZrl
zcyGOOtYc7ypneSDHesneEB5/RR1ovCZ0YpSI0ROs/jMEwTcnF6DsHPNTcln
pozONxpfenyjtdfl8+uPb5T7HtjvUWnfY549+KJm2ldx/cXzh8cgbv9wfBnN
v9iuU/ovv1P0z5lj7gUYp/ywpF1m/gXa5egdEPUeeAjk/gHaM+S/g+9llf9O
9OpE8y+/zv2bzuuUT6d8PTRjUb0s8jT6Wepl4X8Et0G++fDe12+7X/66HffL
h9eAFxJ5AfnAAiEfEOctzlTItX3wU9G0D9L2Rd5gPp+2aq55nFOLnuLDYuhs
NXQVzFeTriLOsdQMA/hm0jTynaNphHOGphHOGd//w+m7j3wyNOJwyugF5Dyy
Tq/0c4yzPeJcsjjbo0qTF/V48qKIPk7ov9jTV7b3v90p576wr6P/Ug+RngpY
L31D+WVHjDfO50YDgQeWeE7Ltcu5CboPFu32e2JRI1EbwSnfoFHWSOhkD0j1
0fihxqC+GHtAfQGOjC4wakOWbrk2hN4zupCoCeFZpM9wd3gG5SUQZ6jyPMpH
oKoO4MyaKzuvZilcfyT/I3RIaJCq9LTyfI9+7/AW5PkOtz96vvOdf1P375zv
+JvwHT8evmdyI2ZxaU6c8iTN4NLMtXg96VjEoaNPJZ7aN+k+fbxTalnEpYu5
mDwjlItFvwjwCvwXwCw+qrvvgnRvtyfsQriF6vZe02t3cFh4gpqXBkdQ89JW
KErev3qI4v7nHsrCrKn9lki133A+McNh9vTUwOyXyvLrvzX7zxnl1ndlGBA8
d9aO8sDoDI8BqRaKGlTpTyOn8pCEcYhPSa4nTuWS6fv6Z1HO4KUnw/zdOHt3
ntSTqZpvEvmPcb5F5ECumvo//J2n0t+Rn+9WbX921feRRzbcdfluircOnx++
Olx1Zr7cFH6zTdNvNmf6rTTzZXR9Aul8h8uVwf2E9+W58tFF6UNWVXNP1B7q
OUb+pNkh5E7i2aAlEbYIrkj+BFRSNc91ZMN5TZrnmnuOKG+dtyJvfbNwfa44
wIfVS62uuMBXWhzYcs0Ret2IqUQ8ZdxUN4GhLNYbeq7IwwBd8WrpjHk1O2c4
Y1Qbx7r4iVQb438Q6+Gq3367it9+h8L9QzUXGS4g/gRwAfEowH8fLiAeBXXy
C/LmdO1Fao4n8gJ4IhjiU13HELk2fSFxZyNvFo9mcEV5M0df5mOKoRj0tQ3H
nyOfbVBusHKWG5A/ae5XnkdJQzBoThXaSvawXFeJV22cJcks1uFwha8aji1M
HbCFfP+Nuqvh+obyj5N3HJ700piRD6AxAyudpOPeceQCsU+vHj38VOoYevRw
VOmJ05unL35kUeYE5APoRY/uDM0HdiwcQ6rSe6jXIs2H8CPm1cJvBK9lXq24
jTmvMeL0nHcbtatx+g0K78Hidc/cvSsSLsB3d3Wnn2c4SLMbfS3EE6jSQuGF
xZnCvC/mWYOh5T7+4tapPoBfh69/7ulfVW9Ray0e6ivVVjt2+711oqdk7iUZ
fU/A9/E+yX1PeD7hJUZOonwycz4i+SF54fXpPrgo5YXiIXIfbJXOU86GydOZ
wJm6ZThP1wvnqXhv+CXgkaD+LNyJnO+GZwIciirOu7yIcs57lV9/PsNEeHDU
Mol7pHxOnCNpIthTlL/lszOEn+Z8mcjDA6/jOdgznVHL1H1+K+cUOiHmtXJO
Ma/1vp7P+UKbz4wvZntJn68ZylGbr5lfzMAb5McYvRg1Ly7OisOPkfyD3EM+
wGM1nI+rfGeVruc7/0g5z097Q2dQHzLgmR5Os6EZGXGmW67Ngm8qfVY+Y6LK
l/zzmmv7yI+ipm+qrvuS40mOJkg6SrRA6CeZTyFNELy4qKWsmiMqj6zcc477
ET4VX8NRqWZe295zkv29VxrFqBdijfxqt8QI0dlEnFxz3sEK8QMAK5S/4lNF
f2/itYbPRVdPYrmuz0Y/PTzP7Os809R5Oa8YnEbzxfW7sl932v19tcN7w88E
0W8mPZ1+q8t7g/XZ1HDwz1W7rVIM5X7S2xL/M87IoreVc0Hhjbxb9M/7w/cU
nyw0BHHmH9wRvBrI/dB/zVV3v4Yd6p4D7pfyQHqX26XcT/4N9C8vqvVrRNCd
MJ9Ys1qkE8HbJnqZkjO+lvJGaerQ0y0WzgnOiKo6Sb2Io0K9pH6Aau+IHWtO
h+pv9QbkyQAeEbVX0Zch4hDb2PqXqOvrzrfequH8avh78Kvh783XK/cT7SPU
MmdU1E4fF6VfmnzS8CfQPSN/NN3rus+/tLiwXd7nh4R7/fye56xVfW/ORfnN
6mzMe5ick+IfRu4hvEO45+iE0AfBP2SG5yLhGc+xMeZ5go8t3nSMDP+RQRjZ
tUXZzxNer9o15wHJj1vaPHyrpM+D20l/jf0Cf0D2ojhLUfxkzQiCo8ycIHor
+Zwgeiy5JyT52YcJl8AXEmzi780yV5Mfj7whc142PXE4grnPYvQ6h5sJLxP+
K9xMPM+loZHveeRkwo21/xmlp5eXeOSXa7a4+OWa7S2vY3pdeB0z4xMdhWYn
q99FDxzPY3EQIv+As489UpodeAgbdIbqdtg34wwEtFra19UH0gwEsNrpCvdp
vzflAXizMz8Cbxq82XXuH1+Uel78IcBZo7+f5ibIPw7vCGl8B80XYz4K/g7M
SMnnowynSd6r5Zpk8aDRCYwsSr9CYfRvpn0YPyZ0XOi39incK4kaBZ+k37fd
IwlvJDR0eCNpZi01i2ppzXzIe3HU1fTgNBtzu8L5jYekfQutyDpNn4/J3vVO
UfYbqvxShXPSe4ieqXB5ch4PfDzADHF49uqV81vJ6/hNn02/64pNx2uZbbxa
wmXkcwJ3VdiM/BTxPYG3GT0U4c4wr+x/fgiNkkMj712wYvkpRj6meqZwMemb
wsUUv04905kLr3mod6hv3kk1jjwuqHGiFzLeFlsVPqtbejzmdUdNnrw+5M88
dW/o3CT12pidFPXU9NoiBy/nzUf9XfRWYa/Yuii5LPK/ruKyVN23yh/ktUlv
KffY5KcHp97IYruU64NZ4w0AZo0XAB4A5PqR44tGdYK6a1Th91KXoY9ALzZt
xzm+1GfrdkvPInkI4B+AryNexniT4CGAJ4k8dPPernx06e/KR5f+rp5BaVmP
T8/igwOeRZ7DfF5PnB2qnggceOmoIv9ddXSsoffP7i1qaHmmoEtTLT1T4Ryi
fB6SZldJS8p8JLTMzLBCUwqfaHRYNRxzzXmnL422JOpKNEOU+RroStCU8PtV
6YvhaaNXiNriyB/M/WyqdLORPyif5ypf+jgn6PCi9N+Dzxh5yfAZowffW4X3
0YSZScMOVgb/dN+ElW2SMLJHi36/eZ0z8puv8iYa5OO0Rsu56J+mfQ0fJ+lW
or8Us0bkMSXv4+h7zHMnHw6euefqpR8HXhz04Z9tu9aN50/aRn0/fDfUL3w3
8Lbha7/dLfWNMxbVcxaVP92W5U7g5XABNA878mWFnUf96CjcvObniWYX4N8k
P2BxvPEDg+MNv3t0emf5HuOfms/uZC74ns3++Z3MA0cvelndNaPSivIsSh+6
ctefxdz/K/993gi/TRVfdtC8j3M6JU8Wb2/m2kxVd60Lc22YxXtdZ3iP70Ez
jdj/5B9eNc9InNWq+xQuBT2ANdIZLA6rvMci/qI5GMxzAn+5pVnOXgZz+bwo
PaLR9lMzS9t/VqqbNWuEOogaSPxN8TbpL9yd8lQ4m5GvmfsWMD8Ungt16RXt
ku+Cj4HmiFKjkiMN0oJEHQg+BSsk3JHzNGKPqq/EE83nedyWcpajU74SZwUo
X8G7Cd4vfDQ0JlHvTM6u2STk63DUmPsYdc+aUcI9mvvT6d5k75A/nepF9Tny
Hgd1455trw2ldc39y9G6wr9D7yqta87/RytIbixuj/j/8nvQPZF7PmgODdiX
/Pq4J+Tv9E3h/k74ynxhMY29f7amY7r4O+WzSdBGC39jDm6ujwaHk75H3zvf
OX0cNObwwuP3TG+cvkzsj6+f8IPYB686YzRvU1xX+aTQd5TOQH5y4ufJ51o6
gxb7bK0aVwcjEaY+Ttdxdcqyo1LNzowJfCuWqDtGd0HDcbrz247Nbdqrxtej
t7jwdXmqynda+C11G/6q4LfyCwe/xYf66HS2RG0Y5wxnCvqcqBemXze6mg1P
Pmq1Kk/5eIagFeIMEfcy+gWJbynvBs40eZmChwlTZk9bouX7GjjyKd2h83qk
P0F3cmW7H+caNFNW8381U/aBwvlgaF93tnitVvLC0L/OmGozNK/qAQj7jz5m
EfenJvzA4qaa61LRpL7XcF0qdSHaVOby5NrUqXpl7/maYrCfBpwUMM2d2yVP
iXt/0OxZ+QXxPHyZnglxg/Us8vzRQ4XjwZ5HHxVuB88hfdTh8jLq/piPkXdz
1sc5qpqhenZz6AzVFYrB3BFpH9EgguMIt5H3CbVXlZb2lN5gjZ988sBqqUfl
lQdeW9UPpRfKjG76oczphhcF70790EGzkOXNoVnI+I5p5rHqhEF8FrSn0pzm
elNpTanb4VFEnal8UOFOozFEX4iuEN509G9FY6faGw4iejvV3p+3ytqImhu9
nWYQCfPQ/X1Iur+3SpjHw+3yno78wTgrOJ8RLBywipsU+7XiKKlfu1Lh5yB8
V7iunIfy8NV8lJzvulvP/eFiTUxdRd/yuVRL4Q1HLRy/R2k1mVeq73OK8H3C
McF7kLl7LxU+ew//QbwHH7f4cce9B//cKefv4UM4qN7Gr08+oNTbI4pS74ZH
VvTHkgcwOrfYk0arnPel5d0XdUvClrrtodolngWeA/mprFQv59XDRd2vWeqG
NLt+eXvPJDXnQ8eZcuJF46F1Wsf50PTb36l5rx0PFvEU6LXnPixVPQJyjGvb
ZZ4xX9pPdN1BnAj2lNk61ZwI8s6I4YibprxT3DTlnSsX/n3Kcw/OOL57B7f8
u9wlfZ+DvCnR5cPL4v7YJN0XmicgXVqcJ6B5g+DB0qMxW+Dw3tD7Wt4GLwes
R/f3vr1S0y48UFggdfPraW+hBlm2cE4KvVnp/SMfZfGe92ThouSYfJyBlM8/
Er9N3Dbx2sRpQ98En429QTOjmBd1atgb2BeiT//ocGT8LYUhw3+v0rwo30bz
op6W+gDSAuQ9ALjy8pihpoKrhMcfNRX1lDRw+PsJ+8/vf/ElD0v3pziT4p7o
mRgvnW/M7o1ze9WPBHPlnGNmj+bqSM+OboZZ3prNHfUzms8GJwW/MuazMZvt
scI9dI+rec4OJ3TrlnvpPtYpvXTx0R3O11mz0cH70WTBV4N/BvcMPVacuxO5
avTj1YMXLs/cW3yGP+l4D57+OzxY+F5wYeF7wYf9quWcWPFh8TKTPgn+lzRK
w3nfa544HC08IeBp4QshXzY0lPks94k6pScbeQn5C1gyOYxyF62JeUvk81Pz
aLY9XGNx+8XnXnk0z9sC2fM2c8Xn1OdQHsVnyTmF8Ajhq8MhjDz1WDNU1Qv0
eOThLe0KPmdRv4IHQNSv4HMmTo/8UODz4Iei+Sfi8Qi70HM2brvssUXcYu/C
fSD5bscJ36n8H09puf8jXvXyqdcMTXzqma0UPeqfKhwDF09CennNwgYHon/M
v3vi7N8uD9/47181+/cP8giF64gXRvQIjRoA/l3xPhnR6ef940NSladwFv22
7p4knEnTV+Qrs9v7t+yV/sk5/1H+yZHzKC8+efDhiYEPn/r18sUQ90fn3hGF
+xfiYUo/lHOP2R7wRTjrlAswR/ikxujnCMNfVQ+C3sMzde8/MIeKHgQ9Qeal
nNnxXkTsCWo+FBinZkTh4wfWiYefZuFEDVjExhZsl/6e0oLd1h3M2ZAnsmZ0
Utt2Q22ba8nhEEafyaghr9qzl0x7Nvs1NR57Npx48eHhLIkT//8qO/dYS6v6
DK99LvvSioa2wkgDhQFEWwy3Sig2AbQDQ1obI6ilGANkdPCCTZQqCo04I0Xa
AjEQK5dSlHJTSGgFLwlt6DBcBgpqDdjYNrEIGHqjUUgqJab7mbUevt9ee337
HBLmL/bM2Wfv7/vW7/K+zwsfgfmGmnjmCfWsOs6p/20YdvzjzhMFhwzeBtwx
OLHsAiOPBS7kx+nVp//mC9M/757+u59YnmVFfmk1c13lROLZg1t1fJnRyK1y
ToOnBM8ZXtuHV/PM5sAyk2jN2n3/6D3fU85cvJXoIKJuSo9lK0flvOm/vXOQ
Mwh+fvr616/krFgzB26a5MwBfGtxJxn9ajCe8QCyk9yS8mdoXoo+J7xl5Luz
d9dXZl/GzMEZA7XxK8Kc4fAy2+c9kufD+yTTh/cacw3JRvC9MuOHX8k1j3/e
+f5Tw9n5/qa0mHvCez5u+m//eDW/d94zzBPyXmT5xH5dlg+MlidLz35/qWfi
tbOI903fvVfpu59Ind8o+v7i/p39Fn1WrS2BK+LZik42+k3VzKr16tN5ofFi
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
s4/nHfVDzFXC+zwpzzrqG+oI9HnuytDhuSuTE+K+LLI/1Fks4n/AF71hHdfG
v5TrgrFKS/vDohL9D3xoGMZRA4QX9Ucpa1q/PcgeVLSseFDRs+JBpYa/qtTx
tf8UnWvc38fPl3rePf4PS11/yiDzbs19hHeE3h2tO7oQNCFkPMq8vWWS8x5b
+VX6MNF0o+c2y6rWc8M3o0eWoQzjDI5yzTirz3/zmDn7d4az/7iUOa7sA2S5
wvuB4QonAX4r8/93TDLrZ2fqz6Nj3sYsRx3H50ZdLp177ZhrGHfavzPqMg2p
lddiNx4z7M87MJMEjgbnJp4EWBB8T3gS5ECg1405nJ9Oiz0x8M/1wjC7rblK
zG/N7ZGvxBwXPihzXPhodW4P5yHn4G7d2lKnWUOvJjfx7ZNZ7U/0t28sz1P0
9mh//ji1OUKcBecOc//Ms38Rm9yexKxX2QnWS/ITeJY8OZrlJ1yfZlmvcRfJ
/lF2w6J9C7sWZthxz7It5T07uydZGzJ0ImtjrZ5PPsTnJp1XhXsXv0r0qqDn
/s9y/cMnu2CQNXGvWepyatDCed+ZT1Nfk/c2rsufhPrO2m7630uarWeX25ot
vNtqtaLWAg8Iegu0JLCl1Fuoxa/5KW8fZg0+HBUZKpvTYpY6vAnz4blP9NWZ
9/HYcuerM/NDb11r39jaNcKU4FmzrdTr5sKaC3hoqdEfKv3vE+Mus5hrOGYW
21ubWUx/7Zmi7hE+7ricI2QPoyn1LCE7DE8FefPkh8FKMWvevcm5jZkSOy/m
Suy82HU5X2KXEnderfxr/avfKnXLXuUchO9LVsKby3v+hXJtHDnMTF/ziA4r
1xAzCnnAXyzX097VrIK/y14s+m9jr2oumTwk7gH82l77nD2PhfMHNiCszUF1
P8Dt42e06muZS3uWn7F/yj/n6nK/8fP8Wf4cf4aZUOeVnxM9vvrc0DnpdcPn
q9ftK5N5/6nzzz5PXvSg+p3rxzNjze+75cejB2b2Qh9sD3zPUp7D0Ac/MP13
bx/necvrUubd7bGUM3pg3kXeHRz4pZ6djZlQMQ+qb075+WGua9QmoktUk+ie
i/PDPZf7LfnpzmNjxqo8rJqVyO6fHT/7f3mTNVe81sPChkYTq3fMvHf8Y3tO
2uyjyD3i9+N3WsTQirmcsRfnuc3zmr3HUvWsRn/JHkbdpXsYdJcnjGZ3ZlHL
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
TKfpX3mJ2fuxwWJuLy8+fbI2j+7XRx2Tzr03+X/k/r1xqdt/k8lD9h/776PH
OYuHHB53KHF/wg7jpTzWcd6dLOJ9Om+CUYm2Cl1VzYxAV3XBqGOe1/qqQ6vv
eK/Gd8s9xfvhu6U//3TKGl/my+oYYz6AOkZ0v2QFoGXclrI2cZEuEU09XjN2
qLVPKdZdeHv+utRcsQal/ox7P3Z+6mT0ukc9EewO9ERqiORC7SwzHZ4DPAOY
7fgMkK/0nXLPw1aK+XzmdpjRd/lwNqPv9EHm5u67nH1lkZtLXSszF68o+XeL
su+uHGbfaMsn+4/LbZ8srDo/Yz18+5fP1p21THc8fFwT3O/byrVQP2O5Jr41
nvfiXF7u4dqHw/1Lrvlb0+KZ+EfG3Uw8ejBj31BrkzaU8+P20ku0PGVw85gB
RS8Z98721K9D5f5RixqzA7iH6uePOXM+g8iXM1sustKc5dFv6s2ndqdvirw0
vZf194U/2exL7gN8yevlUkdeFGfpevwikRuLbjbOlaPG5eJytn1qnOfKb0ld
jWV99YelxqpZrfru7ys1l/OTC8oMRW9aPT9hd/NXk1mPZ2ShybA019x5LL8m
+uD6d1cr/E+r+XNg1mcWU+wBWrwaav27S53PTOnBNJ8xZL6Q96UZZcycYk4Z
86aWBoRr5LbxrPajPgt/Y6k7D9Wix/zDeD7ybP5SansEyCHTI8C83/mq+xLm
+8xS2Zk4239dms+djhpcc6f9uWb8tn52Kj877hec67Jj4Of/Q3gP+EQH63jO
wifnOdvKdZep9ZFyzXCtkPVKzqFzL/QxsoYuHc5mSKtbi4z62nMPox7PPZx6
/RRxp6jfRk8Uue/sE/HdsE8kBxM2In7wlidELwjcLb0gPkdPq56l+5RnKTsp
nqPqqeHC7ZsyG9Hsl7j/c6biNRHn7Vwb0b/LjB3tN31Dn/7b5+qmUJ/I6ejz
N0ZGBz7Z9fDd8cm6k8Aj1KefZi56dJmH499t1ZvxOW+OaK2JinooGHNooX57
PJtbZ15WrW82Nwt9M/09s679BvN72fiduJdlvqhXQq+n80W9EjLI0RIs8tNH
3zD+PZjOePhOWsr+vR0rmefMdapnr8VurfciMlw9G33W8ZyL5+Sp5Wz87LjT
vvnsu7302Z55W8u5xznnDIW5b8zu1Zd+dOgxdvcX49xbkJV1Zsp5Wcy2yEki
N8udBnMtZ+vM6OVaysGKTMszRkWnnLIf7aupPwMGHjWZLswD/rvMScx1YS5g
tguzAeYCZP3IvvJMurKcSfLTOJMiQ81smVPCe+V9PlfeK/t5dvNwONnLt+o0
c9qo1dDKUq+hY6BeI6/QrMKYQ01eoXqLmGWiVmtHyjtYekP2r3EfHDPB4nfz
RMrfCzlmZpjJeazzROAgMksgj8hMEfNzjykzhZfzXP258lxVY9by00etGfWK
vF383uvRLm0Zdxxwaq3IAm9xwPE7w2mLtVDU+Knve1WjLnqhnHWvT7PXs6zW
+8s1zR7q0tXMauV6uXgyy55q7VNijSsjkPs3ataiVk1vVNSs4VvaWurcVlYA
+x4zhalt+/yc0aeA7oyZsXykyAHCnyILSA6QfGp6IzhAL4dtF3XcaNGZP/77
oPOprS7nfTOcIurPw1byvhlOEX5G6lG8jNSjnOHopTnDP1zOcLTTsK/UTcuF
Ww9TC434F0fzGj96WPe+7nrlWLfYxsyX430F0/j41J8rcMSoyxW4pvSN9Iwx
/5HnC88Vdh/0jienfgYtPQiaSPoPtC0fmLT1s7WnSn7qevIdyW/RLybr77fS
bH4HOmj8RHqJ8BEdOMos2fXqguAI1RyM60pvLwfjE9M/3xvlzEM4huY6mzNv
ljNerTuG2fvgc1z/Q8zdjJ85DCCf62Zv1s9U57Q+V5nT/s8wn7l892bioes1
E09NL/kTZjfCb6I+dLYc60OzMl9Z5sm3pPmsa7wo5F3HrGuYO5Gbbl757qzy
Yfad3Dzs2DtocMkrl4+IjyfWYjAUzTBlz0K2xaJa6KxSD20o9VCd42uGL2ch
2mXzmQ8q5yFzNvzCHx1kz3D0C39/2OVwHpTaGabkl8JaVD8WtSR1VoqaEmtp
/EYtRn3M0Isean1HcuvRsNyY2joGMlA5Q3atdMxvNA1wQ/me+Y7fN/17N01f
/2Vqmemfv+VMnr7+runrNzBTG2YeIdeCc1dnrVwXXA/4jU4s1wK8ANk5/1z6
gsgNgKODdhStKJlPfzZ9/XdT1skMORMGXV4sepn7lnNG7J+uZt2MfDdmdvDd
YLsxs3NOR3boM+NZL9N5g8yM+L+l7GdCw4RvHl4EfkR6B/yIMffhhTLDwpMY
GdUfLs8WZl7Mu/g7zrt8DX0y/fHZ1TWuR+3vqut8c5lTv2IwP6tW48+sGs29
frH707xn7MXVed+Y2fS0+J9JeS7PjjrO5mWQsKvmheyoydWb/q/duXrsQfD1
mLVovh77L/09zw+zt0e2kHNdfbb1boeZEecD5wEz3qdLTRT7EWd2m8ezPhxm
dn25xHHHRA5xXTPGzKC+uhFtkEyJyOGKXAkYNczS8VHi1d5RPs9zljJfVZ+2
Hm382evJczHH3WeqDLMrfJ6uds9T+GV4ovq4qC1vFD5hvFFnp7xbhWHPbvXu
cu/DrXfP6v2PDkIdz/ZSN55Z6kZqRrTCh5U58MODbg68s8wouD+4j9QEyhlj
LtyXbaZGOmacocnZlLq6BM+GdUnk4lOXyMSnfqVubeVbtJgekZ9e78laOzL6
WPZkteadPizq3v+g9GAtr61abXXa0XO7Hn4Dc/O+vN2LU84eJXcUDw3+A/NH
9SHA1MR78NT0dVsHHbOZvLE+XjMedTjN+NJr9ixzKnRNMmijPtkcPHIvrcXj
TJhanAzMr652c2Fm47sZEqnNvUDLg46HGQM6Hr4XvB0wyJhPonFyRilnsDWn
ZCckh7kvI1z2Mt6yWn/Qp+eIfH3mJBelfj8T+8boaYJtek85p7cMuryJo5a7
vAmzJs4e5ayJeo7tbMe5js/ROHeE5wkTH6Yl80e4nswg4XrqiVZTW+f7qq2l
19WzRV1C/iY7u5tTt7djX0cGJ5mb7Ox+NM47u76cotgLHllmbS2vDs8LNXz6
dfDpRDa+PJqaj4+Hm1oKZpgZEszJyZCo8yPIiaszwPuyW8kAlwUnQwUGHO8Z
jorvl/fJHh+vMD7hyHpmRoNPGI8weTS3pq6mdX9sXYsuwLqWWc+iLBqYkHig
7ipziFZmjHMIZhBvKLXMIk1MrHGoDahvdo1n97b1zpbvn70tO9s6r7yVB40v
iExo8xhqnRZ99vnDrp/4o1JjXZ8Wc5/InXlxtHYmELpZMoHYOdX7JjTN7JjU
NJsBRh7ZASnvz2FORB0n7AmZE+zRIweGnTr7J7y0X5nMXkvcA61rSY/arjTP
mIpeCLjC+sM5sz2r6aNlcXyn1LpyMqm5yak2o7relVN/c5b+b+kvo26JXmTX
Sqddov9YD2sPDuMzKeu18Nup2TJzm9ksPjuz2NGT3jmZZ6XwTJGX8pOqHsIv
Hrl6NaMFBg08vV8ZtzXB0RfkZ4o3KHrw9N7puVNv/4VyrjmT8SxjNgMvQVYC
5xqcBM60Y8t8Bn082mP08X3aY3Iv1B/jTf7yeLEWz1xEdHgtnltrv7axfGdy
3sh57NPI0H9ao1CfXJe63vKcRn9JP7NtONtnMns4MnUsPDQyMPDwXuK7RA/z
/Chz8Nx5MgOLe0/mYe492buSu8nz//iUmZFxjrYWN5J/6+lR/jfibDru0WvO
K/t0fAiybOlz7XH1zOLjwx8Cx/a8cP5z9m8L5z+6X85+sqaiDqzOC0APZmYA
eZTowvB8teYr8iKZsThbYd9U63WYe9eaHebdTzd68NtCH85sil4cvzn9OFwR
no1R317zsiIrC46Kz0l5KsyHF82GZfWrMz5qsrbOMs5L1FvG+SlamzhD/a9y
fzJDhSsmtwy+WGSLyRWDX0aviRZcHXitAT+29JwPlX7za+U8g5nxF+U8M1cN
VsaG1czL8ExjJh2zi5hL19lTnJl4gTgvoxf40nB97hHmMPH6hLXMM1o/tM9m
/c8+m+XpU5dExk/k+1CXHD7OrGpmImhP0UYxE0EbhXavzoxHH4U2KjL6eU71
MfrJ1kAPsHH6+tNT5weNcz38oHsOu7meOSo7yj3ArFuWg1oGdQw1zwH9GroG
5qJXhj4efcP20s+rb6Cvl2WOv4faCf5vS/dG/fRIqKH1BuhP0hvg8yF6A9in
xuenHFGeobJEeYbCE43nhWfFt0s/5JmBjgh9RWTNoq2IvNmorcCvTR+E7tI+
6MKV3AdtLH3QwaUP2n/UZTzYi7T6ELkR+vzoQ+Ay4fXzu3avz/fNPp/vGf8K
3y+zW9qwvrwTdcZqjM3OU+sYM8JjThm6R3QF/w8AOHGp
          "]}, Pattern}]}, {EdgeStyle -> {
         Hue[0.1, 1, 0.83]}, GraphLayout -> {"Dimension" -> 2}, ImageSize -> 
       800, VertexCoordinates -> CompressedData["
1:eJxl3T2QZXlZBvBbFsFYRdABwYRtlcEEBl266iArXkbEUVF7YYVB1qVtQAdB
aIqV7WJXuDTLMghCbxXBBAQdGExg0IHBBAYdbDCBQQcEExh0YDCBQQcGExBY
ep/fU3VeOjl1+3z9P97P5/04v3L4lY99/pdWq9W7v7xa/d/x//82317//3H9
0va4/9r2uPqL7fHRW9vj5i+3xwe5/iK/z3+Q3y9vj9f/lOd9bHvc+1ae99fb
490f5nk5fyvPX38qz8nx4HO578Xl+Da/n9+vbo9P8v6zPH/993nOX+X/38xz
PC/z2/1sxmu+f7583uqTOf52jp/eHu/9YDm/m2/nfXn+0x/nvPF8Mec/vj0e
/Si/P7sct+cf5/7NYe7/uxw/k+vfyPX3ct2Xcsx6XH0t12d/bpzkd56/uptj
rl/luk3GcXC0vP+Z+WX8Z1/N71e2R+to31brHA9yfDPP/9QYR/bnKutjfzbr
5XOvMr+L7P/qdo6Zv/W3Xw8e5Dk5f4S+8t6bOX/2t7nO+uX5V2+M9/3e9oge
T3+8fN/BV3L//vZ4GXpfZ/z3Qu/o9+C7eX/OP/7n3J/1OT/O87M/xxnvQfbn
+h9z/Se2x9v4N/x6/PZyPvuvZz7Zr/Psb/cz9I8e3/tOfmd/7ltf9IVOcv2z
zfa4e5jzWQ/7eWH93X+S8WW9nrg/z73AN1/Ie3LcoKcP5Tl531n4CT8+ynqR
N4/yvlXG++5prn9p+f+LPG//H5bjuCJPwg9XuX4d+npgfXJ+9f6MN/fvZP2t
1072134efHU5/v2cR797+DH7d4Afs983Ql/2Bd06fjj7iR5vvb0c/37W7+Aw
/yc/jCfjJ5/W5H+u3/xg+f77oWf0cpHzm7/JdTmPH+mTdehhbf6Z30Xmv8n8
L76f36HPe9E3m8jHPfSQ5z0NfdFf6+yv9ae/djO+ncGvu+Rd5ntOnmX8O68t
x3fbeKJP9tFj+OE2fkfPL+T4+Vxv/hk/fWH/HuX35s8yLvxLX+V9a/Ltj/J/
fJXxX2T85EnnG3onTzb38xv/Rp/Sb6fh79Xh9niQeVzlvluRd/RZ6Tnzu3mS
3zm/a73MJ/83/+vcv5v1Owj9nOX3je/kfZkfuUrP7pNH2Q/6A79eZ3/wT+k1
/PBW5Ad6s3/o667xhx7usgfo2chH/Mz+Ic+sy0Wef2r9Ml7rc/aF5W/8tD7J
+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
O3Q3TA==
        "], VertexSize -> {1}, VertexStyle -> {
         Hue[1, 0.9, 0.78]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.1, 1, 0.83], Opacity[0.5], Arrowheads[0.], 
        ArrowBox[CompressedData["
1:eJyMvTuQHVl2nptx7xgwxihDBsxzI2jAkFEhDSlQokY5TYqEKHK68OouAIXC
QQHdgyGHmrrBIYUQh5xkk1cXfEgsRdCAQeMYNGDIKEMGDBlpjNGGjDJkwDzG
NWDIKEMGDBk3Qtjfjqgv9392T8TEidUf1tors87J3I/1+L9Ofnzni/9zGIY3
vzwM/8fw8f//+3/Tn47/+3O8/fHzFfLB2OTIU+DnyHfafIP+3TY/K/Ic+Fjk
4Xabv0Y/8P2Of4fY7/g3FfngJ+Xf3y/jFnn+vMPvt/kI/6zNJ+Rg/7TI473d
PI1/3tHfFHkK+vvId9v8Ev3k3++X8cP1X8KDfWS+X2/+vMgPi36R54dt/qrI
w1GbnyM/avMZ+0H/DPth/Klj//Ib6g9B/wL5QZu/K/IY9KeO/oeO/qlk8w33
7/DjJ88j/l4H/P4etfk7fr8P27z+/gP/gP3ANx2Of3x/zF90/Dvo+FevP9i/
7OivGf/xx8/zvyq8/B6/LjLPF/PXyIFvi8zvz3wuMs9f8wvkz9r87Bv6x/Ml
8qD/Av+C/++QA5/wrzN+7/oY//Ivi1zu10WR54M2v4F+4O+Qg/33RZ6+3+bX
dP2Jc/3m59i/3eYD+sH+TX1/zK+jH+xf6/AV11fu3/7Pyr9/+vFz+yfl3z9t
8/MibwPfFP3Nus1PC18F/YsiT4FX/07C+EWeg/5pkTeBr4qcrn+vw+fiH/fn
1l+X6yn3/7DIzLfM9zoceTho8+tF5vubxp/vtPkQxlvoh/FX+HevzQ+Qg3/w
4dM2X8OL/g3ex+V9vUY+bPNbvH8/b/ObzC+C/o2O/cP072U/8evMF4L965qf
JPtz4CvP57hvz69e1/y8zZl3bZ+1Oe/hMejj9ypw5lWbYJ/rSPbRj+Nz3R0+
ftHmg/SHXyn/nvXY98rnp4F/Uv77QZsPNzv8u+Xz7m591ocL/ouSzcfd/g//
uNhP/v2zjn/Ffry+f9rx758X+U7gv1T8S7xcP8+X6VcLPy7//Vb5PA4c/9eB
f7Jbf/pXkq3/60UO9vl+sf5a8F/r2C/fnynp/0aRHwd9rj/wKhf7zLd5314r
z2/ej+bMLxN/2eFnHf6B+c9JmzO/XwV+Ktmc+f3QGz9w3t+MP/5e+ffc7x+V
z+M2r/JRmw//pug/avOpyGPQ3/5u+Xcer8jz7+3mG/wP46+Kf0O4vrnwOfAt
4wfO/eP7zXx14PnP/PRZm58x/3ve5gc/263v+av5ZZHnwC+Qg/3TzvjMV5N9
5r+bjn59H/5E47H/9qzN2f8bAr9g/+ukzaffv+pPss/1mW+L/jqMz/7bJujj
X/L/tGO/6gf7e+zvBX5mf7mf5X3G9bN/be79z6h/u80v0L/T5hvJ5t4/Nefv
M4bxvb9qzv7oHK7f+6feD/L+j3ldHx22ufd3zL2/Y17Xb/d3+zcFfe+/mNf1
WdB/hVzmvcM/KZ/leT18p4z/MHDmV0m/zA95vyT7PJ8X/JfL+Mn+P+6Mz/zw
UeCaHyX/53T9RY7Xh1yu71D7PfvaLzMfkQP3/pg58yf2h8y9P2h+0OHeHzT3
/pa59wfNvf9l7v2t6/++yOV98e7/+fjJ+818+ve7+Y0Ovyz2Wd8mPgf+oshD
4Fv8D3xd5DHwD0V/Cvwlcrm+d39T7JX56dsiT+s23zsr+oGfo/90N98E/r7I
28Bf/83u8Yez3eNvkIP+RZGHoP/ts6t8LPNl9uNm5Pttvvmd4t+9NkeuzwPx
bdEfkz7z77ttPiEH/emH5b8H/fXv7NZfsX4I1z93/N+gHzjjT+H+1PsXxh+K
zPPr9D8WXn4PB0Ven7Q58viszV8WeQj8RZF5fpifdfRn/Av6bzr+vS3yFPhU
5G3gN4rM/Nl8w/iF8zvn/ci8ln03c9bNnD+aY3cKnOdG5EWffb6FfdYZwT/+
LnOwX9cFjwIv48+B4x/zn5c8T0+uyryfzCeen4G/0PPXfM3zNeif8jwMHHk8
aXM//5N/tmf/pqD/Brlz/dznkefRk/LveL48aXOe38zvkv4Q9Hk+1v0NceQ5
6A9FXq13+zcF+9sXu/2bf9jxv8ibMH69/sCHcL3m3P/NH5X/XtZjw08Lf9Dm
W+TP2/z8j3brX3b0kefAGX/6rM3PijwG/Rk56HP9c+CMzzlP3E88avP1716V
zZnfTEHf+4cL/d/bzf37MGf+Ur9vHl/7gwt97Q/W/YjyPqj7M0dtzv4K60Nz
9m/q81y8xocdtvlBkVn/m286HP/T9a1+clU2Z/9tCv5X/4J+jWcr13ftq8J5
vxaZ56f5BfFBgd/q6N8o8hy446vMHT9lTnxSGh85ccc3peur+w86r/L50+I8
q5wvsX5bcJ1PLezrfGqhr/Onhf5vF/8T5/wpXJ/Ppxb8X3/8XCX/dD7F35n5
wuR5nTj3nfePOftOq6Bfn8Md+3X/2Zz3QOD1viV94uQC57nRu/5kn+tjfrc+
verXPvJRm6+KPAR+VmSeP+aX8IdtXu0HPnT4ZYeff0M+Bv+5P7wf3rMfw/qY
/aFP23zD/s/d3Zz1ufkF8v02f4P9wNEfwvhv4UGf62P/LvLg/+uO//g3Bvtf
F3kK/sOHsr+w+b8LL9/X0yIzPzYfi8x8w5zvVz0vDfb5/pvvSTY/QP/hbj4E
/+Yij8H+qsOr/bDeZ13K/MecfU1+X0l/DvZrXFHQX3XGR3940ObeP1j4r/0D
c+8PJPv1/EPxKDV+5mngn5TPEM9Sz0+SfomnWa8DL+//beCL+YH1/8XHz02y
z/lK0if+KfGiX+c/Wi96/ZfWkzy/E2f9Z77P+iysV+v6NNjfdsbfKzLfP/Ox
M/5a8uL60A+c9fEcxp+KPAZ9r0/rdRL/ofnXgmtet+D48Shw1sVHbY6c9Hku
zI/bvM4zgn5dZ4Xxa3zlcZvXv3O6P9z3zvUNWq/X+JCyfuY5a876m+eU+bro
sz9tPhB/FPhc1uebwIkvGoN/7F+sOv4PaXz2L4L+UMZP92cj/6fxqj88/9aJ
l/i/+h4QR54S5/n8LPBiv+6je/xPymfQ53nb829M+iW+c068vH+mdH94/gde
5eTfv+zY/xe7r6++b/j7l793zddkv+l2m/P74vxrwdH/tM3r/law7/M/c36f
nC+a8/0dwvhrfn8Hu/kQ/OP3MwV94hOHwNk/HIL/2879q9cX7g/2x+B/vb7g
H3+/Gj9NvDfvY+K7Pw+c7/9ngTv+xrzMD+v73/wfFZ7Gd/yN+Xc6+o7PMS/x
OfH6ib9J/n/36vjEN2CP+A3mF4kPga+0/o32P2vzm6wvg/4e/EGbV/1gf2T8
cP03tT42X3fsH6BP/uqr8u+LvC4y5xOJz4FPRWYeEvnDNj9n/ODfAfqft/nU
4RvsP9h9fVPQH9FXvnC9XuVnmyMnfedvR/3AyV+ag/0Xyi8yP+iMD2e+ae78
8Dh+Rz9d30vsd+4v+yPXy99r84Nil+/HD9p8r8jbL9v83f/78XMV9F+gHzj6
w4s2P+T7FvTfd8bn+7kO/HrHvw/F/jb4V38fgfP76t6fcn89n/L8yNzzH3PP
f8w9/1noa/6T+BDmg57/pPliuj7PX+L4wb7nJ6zHmb8csF7/tM1n+O02Z/1P
fJX5GTzo1/Hvtjn7D4lX/Tttzv7J2PEv2Yfz9/d6jvnR8EWbe3220C/zpzHo
e/21sP9J4Wl8rc8W9rU+W3CtzxZc67OkP3wZOPmHyX+t3xb6Wr+l+8f67Yx4
T+Lrke+3+bUS/zkGTrxRrYcgvpZsvkU+bHPir6ag/4r4q+Af8bVz4Kcd/192
xif+auz4l67vouM/4zM/M3+h61v/uPhLPQTO4w7avOanfb/Nkck/Ned8sT6P
xfc4/wl8KPIQ7E/FvzHo1/PFwLk+nu/x/gT9qaO/0vVT74HnzSX1FE7afKv8
M3Pn55k7P8/c9SfMr08fPzdBf8b/MP6q6K8Cp37FOth3fl+yPwX7+Mf+oDn1
PYgvcL0K16dI9SyYX5iTPzUH7voUkQd915dInPmbuetLmK+kv1Y+yQ3yK07a
/Ez5F+an8Gdtfi7Z/CX5JYG/LfI6cMbfBn5Ifku4vk2Rh3B9+Mf79+1/KNdb
ntcfisz6NnHeL+avJZufF3kM9r8u8tzRn4L+GfaDPvIc9N9z/UH/6879Oevo
z/h32OZ7xOcH++jX+lgvy3icFxWZ+DBz5Pm4zav+493c9pD3kZ+0+VnH/tix
D58Cr/YftfkpPPh30Bl/0/G/6pf9jZes58v77A37T0/b/C38pM3r/t26zVmf
r4J99t94fphXOdi/2fGP/YNt0D/t2Md/4uMu//jjJ/uh++TvH7b5RZGHwNfk
999r8z3sf9bm1M+agn384/m40P/j3eOfke9/v825vuTfGdf/oM0P/uSqfJN4
V/Kxiky8lTnyHPRvhX+PfA353m795B/1Baegv+ro3+joX+v4j/4Q9D9Mu6+P
eq9D8O+w498omXxR5vOOTzRHHm+3+XXF15k7vtF8HzmMf6r4PvNrig80Jz93
DryeHwX75BfPgTv+0dzxi+aOT0z3p9av/bdlvKOrMvvn5qfIge+hf9zmmyJP
gaM/Br5C/0mbTx3/zjsc+8zfon9Hbb7GP97PrOfJTyU+8k6bT6yP77X5Aevv
u4ET33m7zVl/z2F87z+Yb3+8W3+r9b35KfsP99t81bl+7x+43ozryyTO+tbc
9WHMXR/GnPrVY+CuH2O+xv+g7/ow5q4P8+3/VHj5Pv7DInP+Zj5INv+f5LcH
/gF+3Ob/C/6kzW90/Ft9Q/+nYJ/xx45+sv8t+FGb/0KRx8C/I7nWe2C+j3zU
5sTPs34w53ye9Zc57780/i34ozav8QdBf+z4x/ttCrzWowjXf6tzffAp6B90
rm+vc301PiLoT/KfPJ8a180+3Eng5b/X/c7AN4Gjt+7o1/hM8aoXeI3be97m
1lvwIq+Cfo3LK5/vp6v//Wvkp21e1w9B/6LI66BP/fQ0/s2O/bcd+9uO/zP7
tx193i/mw5/uts/6YRM4+vjP+77G/zL/eN7mc5HXgQ+SzZl/JM55Qo2vtb1/
I1l8c7pbv85/Auf8Zt0Zv2d/Ffwbf7ybc39Xwf5K10e/BubTji8yH9g/Pm5z
+jOwf2Lu+CNz948wd3yP+Xv4kzb/EMar9UmRg/7Lzvgbjb/9qtgt67Gvke+0
+Y0/+/hZ40uT/u02vyhyjc8QRx4Df9vh77Af/D/v6OPfGPS5viHo3+T+BP0Z
OfDVn1313+8LP//N/fw29/Pb3M/vpM/zO77P1m3u57v5uyLPHX2uj3o6I3U9
eM+/aPP6Xk/85KpsXvOEE392VTbnuTuF8eu8KejznlsFzvUPwX5dFyLjN/lk
2Fl3+NPdfB34WvVZzGfd54V91Ycxd/2XZD9x139J48+BT9/Q/5p//73i90n5
78p/WXDHV5kXmd+nufNfFtzxV8G/Mek7vsq81D9g/2HBizwETv2EOXHlxyz4
J7t5rbeeuOOvwv1L95f6Dfwuaz2x8rynvhn9Xcypr8b7why57i+Jv6L+2r02
P+3w7Tfkc/DvAn6nzd/j/902r/XnAn+H/cAvO+Nfyn+fN/p8MXHmZ+Y+fzQn
/nkO+j6fjOehwb7PF819vpjGX58U/lXhfN/L/GUM/OVXu/UvOxz9TeBnRZ4C
Z/7I8zP5n8Y/LPLc4atgH74JfN2xv1f843nyc/YDid9FPmjzLfVD77T5f4cH
/cpvd+wH/Qv2T7/f5nPH//+GfvAfPgf+Bv/udsan/4b2u/jd1/ef98PYBwoc
/U3gdd0euPfHkv36PhL3PtfCfz6fBl7+O+v7xfis44P9Kgf7NY85XB92+X0f
/MFVe2ORa7yG+F6Rp8A3Rd4ETn/QIfCpyNzHxLku8wH/1rvHX4Xxkcfe9RX/
yLetefmqn7fgxOc+anPyN2r9OHH37zB3/45kP+nTX2MI49f44MA3/+aqbL71
9bPeo95Kieuv9evEXf8l6RN/Yk7ePfEr5jUPIIxf8/Y79Wpq/T7b5/cYxq95
IeH6qn/p+p7t5nUfMVxffa6F8Xl+jsE+z1/i6+P1Jf++kD/BP+7/K85fqK+l
8zPzGh8R9Dm/Ib4q2a/9WcV9PhTtP2zzgw7n/G8O/r3oXN8if1f8VPo135vn
r9fX4ov6Q+auL2Tu+kLmrg9k7vVv8H8V+GL9au76QUF/m66v5Nez/0I8Cc+F
yyLzOzYnfob3ufnwcrd+je953ubEv2yD/vyHhYfx0V8Fffgcxj/vXD/jr4I+
fAr62E/6m6I/duzz/dkr97vGn+L/0zaf/+1VeaFPfG+wj/7c0R8Cr9+vdZuv
FL9tviZ+O9g/I/4p8C3fv8CRkz7x03X/UPFUjp8yd/zUgit+ytzxU+aOfzLn
/LHmR4kv8rPEHT+V9Gu+C/eTeGHi1z5rc/7+vF/N+XsQ32x+0NG/QA7jI5Mf
aO74enPi/+egz/Wn8bFf35fixNszP3U905m/71GbTz++Kpu7/qm565+ajx37
9Xz7uM03nCf3eM//UO/V9VXT9RGfZe76qeaun8p8jPmo67eYu36Lueunmru+
i/lLyeaOT472g3+u/5L00/iOTzZ3fRhz1191v0/6m7E/aO7+nObkH/L8N6/5
hUGf/L1N0Hf/T3P390z2mR/F6wv6h5LT/Uv+7ZOfGPi1jn81P5L5xu2rn8T1
8/4zr3UP7rY5+47D7TavfYmCfc51EifvYQ7jo0/8QeJT8I9zDX7/6foXerel
l8anD1HwH/0h3R/0Aq99lz9t82qn8F8jnpX99yLz+zVfS076fH/Nf+Wb6gd+
j/jfp21e42+DPjLPjzj+893218H+T/Av8B91/Bs71/+dDr9Z5E3g6w6v8eOB
/xb64f7jP88/12Nz/bXEeT+b8/5j/mnu+mrmfr8m+7xfzb3/Yu79lzR+nX+G
fmPcT3P6b9X9bXH3HzO/LPm97G+buz9ZGn8dxnf/MvPrnF8HffcXM3d/sZH+
I+SrkH9xu83Pilz714nX/sN32nyNfL/Na/+UoO/+t8m/MfjH9dX+fOIXHf8v
pe98sJT/BU/5X+bO74Kn/K3aL43124M2T/ldtZ56yO9a+Bfy4Zzf5Xhzx4+b
O37cnPzLbeCvisz+lPlpkfn9mb+GP2tzxyeak/86B/svisz809zx5/SLZf75
QrL5yw4/6/Bbf7V7fPRrnGEYfwy89sc9afPDzvinHV77M4fxvT5J9pl/vaBe
BPk91HtYt/kB/EmbU39jCHyN/uM2P6Q+RRj/FvUnjtuc8ccw/i3Jyb+afyV+
yviP2vwl1xf0N7p/M/28v/z4ec7f58s2f8/384s25+9P/UTz2u872Gf8OejP
Hf9edex/3fEPeR306W++CtfP/gDjb/k+0L9L9VPMZ8nmrg9jfo35S7Bf9Y/a
3PVhzAfmN0Hf9WHS9c3h+lz/xfyd/K/vI+p/8f47aPNz5DttvkH/bpvzPmH+
Zs77bQ78XYdvkQPn/TwE/87wn/kb+8XU09D+uzn1bep+njjnL3V+F/gQ9L3/
vhif+VOw7/15c++/p+tP49f9/XT9+Be49+fj/bvX5tV/9lG0n+/9d3POd3j/
mbu/k7n7NyX9MYzv/mfJ/zGM7/5N5u5vlnj17y8Kp9/kX1z99+Yb5Ce79Wt+
mvhlkcegfw4P+qfID9v8dUef8edw/RfoB37auT9vOuMjz+H6h78s//1xm79E
P4z/Qff/sNjj74VM/rz53l9e9d/8ZpGJ/zC/gX7gyOx/mK+5/o7/m2D/esf/
feTAR/SfdPQ5/+J9XN4v7M/w/jJ3foM5+ytz4Lc6fCXZnP2YIfi33+FDx/+9
b+gf+9fkw/F7Jr+uzmfEL5EDfyXZfNPhr4s8BPt1/f2gzakPNQf+vjP+OfYD
Jz8w8Xed+0e+4RT8mzuc+z93xq/9txSv7Phkc8cnmzs+2Zz4Yp4/iU+B13ot
gTs+OcVjj4FT/4Xr83rS60dzrx/NvX5M69VV4F4fJvtpfK8Pzb0+TNdP/XTX
s3X9WnPXr031cDl/M+f+jh37U9B/39F3fVxz17815/5PPR7suz6u+dyxX+8P
9pgPnxS7RWb/ypz58yZw4rPGwJnP1njFYB/ZnPgx9kfN9/EvcOK52D9N/k+B
1/UB8Y70K+B5Sf/GR21OfwTmb+buL2le+0MetTn252D/tMPxfwr23b8y+he4
+1PWeluMx/P7YZvz/K3nCeID/Emb1/Ob4zafOb8J+sis78wv8D/4t0I/XN8B
/gf/9jq8nn+F8Q/gZXzWAzwvmH8zfzQ/YH59p81vMf8P+nX+HfRfSzZnPs/z
N9lP49f1TeAv4cH+2veD/NNyXkR/LPJIzOl/xfm/+dsOR5/zK/Pa/yeMf96x
T/3fev4rfov84aBPP6EpcPoXpftT+y8FXvOPg39rX4/OW3y+Ys75A/NPc5+f
mPv8xNznJ0k/nRe9lJzOkziPSv7X/Ar3yyn5FMwPF9z9ccSpX7BN3PUZbN/1
Gczd/8b8ZtFP3P1vwvXR/6bGJ7MeRv60zS/+7W5e458POtzx5ezfIweO/hzs
E38+BP/2O7zu73b8S/6zP5384/5h3/E4jq8xd/yMueNjzN9INn/L/kfgU5G3
gTu+xtzxNa634f2nVI+D74e595/MXR/D3PtP5q6fYX7tb67K5ov6FuID/YZY
7zDf+lzy/Tav9Wk/a3PPP82pPzt4PPI94UH/tOMf+xdT4Jfwe21exz9s8wNx
91t0f0Vz91dMnPpO5u6faO7+iebun5j6RW4Dd/9E80X/w39V/h3xHr9ePteB
3yr+PW3zoeiPQX/47Y+fc9Iv8pzG/82Pn5ugz+8o2Z869offKv89jf+vP36u
Ei/ypqNP/RevpzelH+AY1tv0CxwC9/o76Sf7Xp8v/NP6PI0/h/Ev/mi3vtfv
5l6/R/8etDn9HXn+0V+C9zEy8wPzNfx2m6/of3HQ5hv6WQROfw/7gzwFf+t8
Av/utvl+x/5+5/rr9QX79O/g/ZiuD1771d+XfK/N598tn/73nOerP2vi9K8w
d/9Tc+pnDMG/oWO/+hf4qmN/Tf2LwqljyH5PrWN41OauL2ju+oAL+8iP2rzW
dXy8myf7rg9oTn2/OYxPfb8x6Lv+35bfA/GNRa75XOKbIvN8N6f/zhw49lfB
fpVP2vwS+4HT328T7K9+dlVe+N/hs+7PGfWAiz8Xf76bU5+X6zOnvjD5J+bU
B2Z/yLzKYXz6k2/874u86Yz/pqP/mvrFgdMffF1kztH4XbBvRH1R81o3vcPH
wLcdzr7HOnD2EdL4myKvXrQ569Y5cPTXgbPvgX33S7xOv8Cnbe7+iOb79B8M
+tifAj/o8GtF5vuf/NsG/9w/0dz9Ec330C/+uV+t+8uau76BuesbmLs/jLn7
wyx4xz/XRzB3fYTEx8711X5TXxV+8vHzosQ/8PcxH4s8BE78aOK3JJu/L/rr
Dmd/yPzyT6/K5q6/aI48Bfuur7hiP7us31mfE39qXve/P2vzG6y/P2/zVYfX
+qAd++TnmbP+Jv8rXt9hm9/oXD/nAWPP/6A/du7funN/tuX6xuB/vb/sv5yU
f//sqrx51uaL+opBn+eb+aK+YrBf99fF0av1AMyZRwV9fvc8bzlPZ7/gguff
kzbn+cr+ifkp5/tB3/HD5iPP7+PdfA7jr4lvSP51ro/4iGS/Pt+JtyzPI+bb
5Kdx/mROfFutnx70az0i8RqfH3jtXxjGP5Bs/qbIU9B3fpx57Q8Z7o/z58yd
P3ftz4o98huRj9p8v8jsD5lf63DqC7M+jPphfPpDTMH+QUeffg/zozZ//9Vu
/+m/kfS5vqSPffwnzoS/R32vPA2cOoaB1zqaJ4Gzbx44cRtD4NhfB857Y9Px
L9nn+pgvHLBeLM/bG1r/mZ9q/WbO+q6ez4vX9WfgI+u5YN/rV3PkdeBen5pf
5/o718f49ENjPUJ/M75f5vT3HAOn/gHPk8SnwMfO+Lc641PfoM5vxS+1vjHf
av2UOM9fx8vXfLY7bU5+2xC44+fNv+7Yd/x8sk9+V4r3r/vX4o6fN7/sXJ/j
69P9m8L4X3fsOz7ffw/ff3PyI9lfNX8Dv9vm/vuY+/6n70vy713HP9+/5F+y
/577Wfz787Nir8wn/rrInE8lvurwIfC/7ei/LDLzR/P/XOR10K/19wM/7ej/
hPGPd9tnfmQ+SSb+puZH/GL5fBB4qX/Le3rBS/1XzrsX/J99/Kz18syLTHzn
glNvNvlH/d3Ef6n49yjw4t/8MPB/0vEf/XJ/iNdjvsf6k/MJ81sdvs/6+WGb
1/i8ozafOvYr79jn72PO/sEYxh87/p2xPg/2b3Wun/jJKfDzjv83w3j2n/nz
rRIPw/1aF5nvl/kED/qnHY599jOS/hT4GfpHbf6yo4/9Mei/wv5hm2Of36fr
hbo+qLnrf5q7vmfkQd/1Pc3dP8Dc9T+T/pz8U3+Bhf0i8/swd/+BdP/moO/6
ol7PINf6ZuJe35j7fM3c65e0nloH7vWJudcn5qvO9SFvOtfP/L/WSyRfmfqQ
6zavdbSetHmNTzpuc+adkf/2bvv1nCVwxxctrg85jA8fgz7+sz4643yI9bPO
x8zfcb4W+HmHcz41B/62yOvAfT5mzvqPc0LzDed7gbP+2wT+QTLzDfo5sj/O
+ak5+/v0OTQnvm8IfFZ8n/m1jn3HB5ozP5mD/8QvToHX84NgH3nb0R/FPZ9C
Nvf8zZy/zxB4vb4wn/T8y5z7m/zz/Cz5l7jnZ+aen5lf4l/gHzrc87d0fTV+
8KsiMx+UbF7PB4/a/AY86H9gfzyMPxV5DPqcfyb/rnX8f41/x21ez1c792cO
HPt1v575EvHtJV6M/QHziflL4DX+7dM2pz8U8Y3mtb9T0J/Rv9PmW+LjOvrJ
/0njn7MeL++Luj/xrM3fsj/wvM3/S5E3Qf+/wk9266+CPjL78+Z/1/Gf/nur
4P/XHX3kMehzfdug//ey73yFmJ9A/fiUf0B9e/JLnR8gvsg/oL5TRz/mJ1B/
KuUnUP8q5SdQ/0rc8a4xfpV+AciOn5X+Iv6Uut/8XoL9GP9qfcenIne441dr
PEsZj+frFDjPz8SJT6n1GMRfYP+gzW9INuf9NHT8Zx1iPjB+8O9MsjnxO7W+
GPWeye/l/OR2m9N/Ygz6F8iBU5+6rkPE5w7H/hg4/dWmMH7tv8Y6r8SDc564
Ij78pM1n4n8DHwtfBz4RX5x4kbeBY38VOPHtnEcl+0l/3bE/Yj/5X/Q5X3a9
S9e3NEdmf8v8HP2Hbe76mOauj2nu+pfmrn9pzvnIEMZ3fUxz1790PRjXfzF3
/Rdz12+J+oG7fov5Gvlum7s+y5uvisz+Z5G5/+aO3zB3fIa54zPM5yKPgTs+
I+kn/19KTv6l6/P8ffq18sl5z3fL5+eB/8ur/i34r378JD5vwb9X+IPAiz7x
hwv+G0U/jD/9hmTr6/wmXf8crp/8e67/66/Kfy+/F+Jz+P6aV/l2m/P95Pdj
zvdzDLz+vT0e9ffRD/7RHz3Zf4d/wT7+j4Hf5P4EXq/vXpvPks2JH6v7sOr3
4/4+5nX/Nei7f8+Cl/3TMdh3/57E+X4s/Csy889FPyPmNYHj3xT8c/+fxfjy
e8F1/dTDYT5A/4YaXyW+X2T2382pH7QNHHl70uZn31B/fdLmp/BnbY7/q2C/
9u8I9i86vPa7IJ5J61mvX829fk08rZdrfaNgf9PjWt8uxuf6Pmtzr28X/nl9
S72lwl9QX+h+m1PfNOlf6/C1ZHPqJ9U4S3Hqy9Z49mB/DP5TX2oK+tTPnYL/
1GOq62fxifpP4fpqfV76Eeq8LZ0P1npzyOs2r/GGT9s8nS/Cr3f00/niwr+g
fyucH8Jvkp8Xrs/nj7e0XqG/A/OnxOv5v7j7P5ifdezf0voojT8F+yM86FM/
qcbXiE/oP2zzM62fXnI+wH4t5wMHbT5KNud8Ygr6NX4m8Hq+FTj5NVMYn/Ol
Wk9NvOb33N3tH/MH87OO/6/wn/lDmW/xe2Z9U/cvxD/An7Y587lV4DX+P9i/
XuTaX10cOfnH/HkM4zO/nwLfK3KNh1A8q+NvzV1fyNz1hcwdn2vu+kLmtf7T
3TZ3/G4av56f6Pfm35e5f1/m/n2ZX3C+erfN6/lqGN+/T3P/Ps39+zT379Pc
v79L3g/sX/H+eNTmW/hhm8/IR22OPDzczXn+m3/g/Xrc5uTnT0H/Hfrh+j50
ONdf+xOm9fjtNvf629zr36Q/Bu71r7nXv+Ze/5p7/et+LbW//edt7v4ri34v
1Je71+bur27u/iypn/sY/HN/FnP3Z1lcn/qvpOuv9U04XyzfF+LHaxyXeI3/
Pujo323zDXLgR5xvhvH/tqP/ujP+T7F/u81rfHoY/0fYD/fvFfbL+M6nJH+9
9hMRv9Hh5D8y/zV3/mTST/mezp80d35ksj8F/252ro98yhpPUvZTed+wP1nf
Z+LU74yc/d+7gVP/83bgo/wJPI5f8g/GZL/UL62/P3PyG9iX0nmRz3/Mff5j
7vOfZD9x908z9/mRuc+Pkv10XvZasrn7q5n7fMnc/dUu6QdZ6v+5P4P5jXK+
Q/0Vc/q9T4HX+vyBY38IvPa3D9z9Bc3pb78NnPOzNL77R5jflH3yBYi32Se+
/3mbE59P/JA5+QvbwMkPGIL9sWO/5k907I+BH8DD+G+4/qD/gus7KfZ43hK/
qfg48+t6fpvX/n9B3+8n85o/H/R5v4xB/6DjP/rzo9366fr8/qGffO1vINn8
eZHZXzK/hxzs/8p/2j1+7U//sM1fMP5Rm9M/fgj69Kefw/g/hYfrP4Iftvko
/9wvxP1BzN0fxNz9QZL9OehPRb/my4vTH2QduPuLmFPfo8aPBPtpfPcfMae/
3xT03Z/EnPokY9B3/xLnAzu/19z5vebO7zV3/nTKBx+Cfef/pnxm5vPJ/2Tf
+b/Ey/F8rvFvz9uc82neT+bXOpx4tk2wv+row5O+61Mlvgr2kTeBu76VOfGB
+Ofzrg3nNffb/KzDXyHfbXOff5kjEx9iTv+ToWN/DP75/Mrc51f0c2O/4g39
2w7bfNvhH5A/b3PsD2H8M/XPM58749f+f4G/RT+Mf8H4Qd/98ZJ/ib//hvcX
/x2P6/hb81q/LnDH15o7vta8xr8G7vhbc8ffml90/Hf8resluT6SOecT1Kc1
r/uXx23u+krm645911+K9o/a3PWVzB2/Z+76SeaOn3O9GtenMX/V4QfwdZu7
vk3iU+Cub2N+qzO+69+Yu/5Nuj+rYN/1cejHxHzN/ZnM3Z/JnP4CyT7nN8zX
zN2/yXzD+Ovd43N/zN1fiX14+kHyXKZfwoLzHkyc5+4XgROHk/SJGwm85p18
GXhHv9btCJz3+hT8r3XSkz77+L3rC/7zXPP1+P4m/2tcKftd5X3GeuitZHPe
f6vA6/u1o8/6z5z3b60HKU7/3DQ+/Wvnjj4y8TY8Xw91XmdOfE/dbwmc9b85
8TXsl5sTfzQHffybAq/yg874gRM/NIXrf2l/yn4Az5NX7A88a/N1hyOvTjo8
6Nf9madt/mvsbwT7L9lfCbzu34Txf4T9wMeO/3/N+IH/VpE34fqwX/cviKfl
+VH6w9TniXmReX6Y1/jcwOkPswr26Y/j8ayf7Nf45qT/m7vt1/oRyX/OadL4
Zd+C/nbuF+X+T5E/bnP3NzV3f1Fz9xeN4x927Af/HL/69i+KTH4g69c7bf66
yKx3zWf4vTa/gAf7cNYf5nsd/7bYv73bvyH4/wE52F/En5Kvd3hVZp5gzvyZ
57v5XoczP5469olvSPrJf/IfhzA+64v5sM2xX88HVa+mnvuuA2edHbjr2yz4
vavygpP3fNzm7Dutk398zwKveRJpfNXHWeir/k3iY7JPnnPyT/eH+YLlOXDi
n8fAHT9t7vmT+YuOfcdXm3t+lcZP1z9h/0mbO77a9c5d39zc9c3NXd/c3PXN
U711nv9Jfw7+uf75wn/J5q5/bu7653t/WP77ycfPsz/4+Mn62Pyyw1dF5vzK
fPqDq7L5/Ie7OfpDGP+gyOyXJ/+Yv5rvF3kM+nMZfwzjr5GftvmG+xfGv+jc
X3g9zycep3DiZVgfmg+flM9ngY9Xx1vYL/IY9MmnHE7anPzQxJFXiX+ym9Of
OF5/4bW+ebC/Dnz4F0U/2Sf+Kd2fkv9a81XUL97zP3P3hzd3f3hz939P+sm+
+7+be35p7v7v5p5fmnt+ae75o/dzvT9r7v3ZxKfAvT+b9pPT+N6fNff+rLn3
Z829P2vu+uQvSnwSv5eXks3POvwW8U4d+7UftfgB/KTNDzv2Tzv8FfFbYXz0
vb/MfOU1+QHHbV73h5+0Ofk4vP/NXV/X/ECyedrfhp92xnf9XXPyh6jfSr/e
un4r9QVqfrL4Ir/avMg1P9v2VV8g2Y/js79y0ObOf17wW53xS/2CIflf3i+s
w/4h+1PlfU98FL8P83+g/TXzb2t/zfw735CvA0dePd+tv+r4NwX9m+zfBf1f
KDLxHbWuUonHrHn3P2hzn78suM5XzGue4Ys29/lK0h+S/p3d3OcnC67zk3R/
1op3Zb8Jmf0hc+J/uU/m1HdhHRzt32/zfeTD3faHYB/9Idgfi8z+jTnxxWPQ
r/HHPf+C/ZXkTclf4X1Ffgvva/O5yOvADyQn+9uO/TlwZNZX5qcd/8jPSfb3
yf8J/KzDyU8aAie/KenvcX3rq/+e9T75S+wfmJ+Rf/S4zUf0j9scf6bA0U+c
v98Y/Dt9uZsfdPw75/48avNN5/qrfeJjS7+Iet5Q+kPQR3bBS/+Kev5hXvo9
bBMv+pvEy/px+DLwkr9S+1yL1/Vzsk99pWS/1DdaBfvcnzncn7q+Tfol/4fr
d79M979M/TQTd/6uufN3zd3/MvmHbO78XHP3tzR3fn3ybwr23R/zPfG+Zb5y
ifx8N98Efp38iZM2f/cN7U+Bz0VeB/5Gsvlb7Ae+9ze7+Zb89MAvirwKfCC/
JXDy87l/jhd1fKj5K+I3Hra540PNNx19x4+meNbk3zn6wb7jR80dP2ru+NHk
X+KOD10pTgi51tcR53fBPNec7+3weZujPwX7Vb7b5vQvr/GTafxgn7yrOfhH
f/VavyeNn+wXmb/fB/J5y7//lvJrzOv67FGbvz/brf8/yC8O+t/q2IczPzBf
oR+u7xL/HrQ5/o3BPjLjM39nP67mF560OeuD2j9RvNbvDPrY3wR96nMmvtX+
lfkL1idBH87+t/mqw+v9edrm+L8NHDn5X9d3gV+Tf5c/u/rvz392dXzziyJP
gW9+dvX6Emf/xPy0yJugD18F/X3GD9c343/g59L3fq/3d829v2vu/V1z7++a
e3/X3Pu75t7fTfp8vzY/Lf5QXwP5sM0PilzrvYtPReb5bX7Z4VU/jH/6x2X8
oL+P/udtPhZ5Chx5/qzN8W8K179GP/gHH8P4p/iPv6X+e+3nQf33R21O/fna
/0Kc+vNT0Kc/Re3HJU7/CPbn0/jJfq1vf7ybT8H/2p8j6E9lfNbfK85/FI9U
50/inH/VejTiNT7qfocH+46fSv71xp/D+Nc7+vvii3qyqh+74OzP3m5z15dd
cJ0vJP0p2Hf9WHPXj03jT2F8149d6N9t/3vzeP9Ufzb1g0eOPORLuT64ufOP
zF0f3Nz5R+auD57s49/2jwqnHpJk802R58CR+f2ZnxV5DPp+f5j7/WE+I4fx
9/T+MB/0/knXV/MbVU93S/3hdZtTn5f5nTn1cYfAqT88BfuXqh9sPnfGd31k
83WR5zD+5hv6n+xvO/b3Snxzur+un2zu+snp75O46yebE9/N+YPzTZ1fau78
UvNaHyRw55emfNda3038Hfq329z5peavke+3ufNPPR/w+9/c7//IP2vzFD9t
fcdP1/ljx77f/4vzYOQv25z3Us0/C/rjizavfXW+aHPnZ6Tz6inpO38vXV/y
j7pdQd/nz+n+DOH+OP9jwXX+zHlhPU/i/O64zX0+lvTHwCfJ0f6DNvf5l/mK
8YN+9e+ozTmfZX3BfJP9BuaVrH/N+f7V/SZx7v8U9Pl+zolTFzCN3/HP8f1J
f0787lU58SH5r/61l//uqnz2765en/ke85HA18xPOpzrMz9HDnyf8U9266fx
0U/2p47+Xuf6VoXX/R7me9TzQ77d5uy/DIFX+W6H39ltP+nvl/2VMYwPHzye
7LPuMa/7P9jj/Xzy8ZP6kezPmR8WeRs49SaZ/5g7v9ic+mBz0K/1zYI+9T03
Qd/5xe635v5q5u6vZu7+aguu/mppfPZvzdf0Twt8W/SHwBmfc6DF+PRXC/r0
ZR4Dd/+3NP7qpM3d3y2NX/MzVM/M9cvMXb/M3PXLzF1/zNz1xcxdXyz5PwXu
+mBvVW/L9cHMX1Af7H6bu36Yea2/FfSnjn36Rwyd8Wt+afA/cdcfM6/1SwNf
f8P7M4T786rjn+uX1XqsJR6K+mys781rf7+nbY7+Kuhf/IercuJz0Hf9WPO9
jv+1v0Dg1L9dB+76sNfpd8/zvsjcH3Pqx28Dp/570keeAj/ocOrNc33m14rM
88v8kPyKwPeUf+F+si+KzDrJ3PsP5usi8302nzr2XxV5DnxA/3abuz+d+Qj/
fpu7f505/deZP72n3mzZL7jGef39Nt8S/3PY5ujX+CzxPeIHAq9yGB+Z9aM5
9W1H25P/c9C/QL9z/ewvm7+T/bqP+vzqf5++aPPaxydw1y9acM61nrd5jcsJ
vJ4rBs66O9p/qH8vXvetn7W56xsl+2Pgg8YfiEcs633iG+vzXvyyxB+yv2Fe
+5cEXuMvj9oceQrjE+84Bn3iH+fAiQ9N/B3+Bf+30qeeKfNF3l/1fSJO/dQ6
3xN/yfsv8Do/CPZfSzZn/jAFjv422Gd+wPzV/Abxo4FvdH/8fat/33Wb+/tn
7u+fOfGz62C/9gfq/B74fib9OXC+n6swvvPrzP39dD0C1x8wd30Bc9dfTvrM
D82Rh2Df9QOS/TGM7/oC6x8Xe+wbw2+3+er0qmy+Bw/6Q5GHoL+VbD4RPxLs
b4jPuNfm68LrPqs49RtqvHnQH4N97s+U+I+/oT7Xx/ue/W/kh21+2uFvmV89
anPmJ9RvMj+DH7U5/Q34/ST/xqBf5eM2r/bZn9fv1b9Pc9f/MK/7F0dt7t9v
el4MYfyZ32Ow798n9ZhrPyvl35u7PrS56xOYuz6BuesTJP1k3/UJzKfO+C+R
w/iuX2Du+gXmrn9t7vrW+39SOPH37C8ftvke8mdtflrkKehvi8z33xyZ+A7z
g44+/if/zri+oL8q8hz4ee/6iv0p6OP/FPyr95/8Ce3nef/O3Pt35t6fM/f+
XLI/hf1G78/FfgWBe3/O3Ptzyb/UL8H7c+ben1sTz01/GfJzv2hz4utr/5yg
vwnc8fXmxJfPYfz9Dsf+EPge/Mvd4yf/6/WTJ1L269mvWv+w+Pe0zX3+Yu7z
F/Oh2B+CfZ/PJP118q/wKfDR9iT7/GRxfzr6U2d8n4+k62d9R75mjYt0fzdz
6g2lfnGqn5H0o333bzN3/zaPr/oaC676GM53d367ufPbzZ3fnuzPgRO/Udc3
4s5vN3f+urnz182JT2H/3tz56RvVfai/j3ttzu+f96c532/2Zxf65fs7B/vI
vD/N+X2zH7ng/H6Cf/y+k/66wwf7X/Z7+b78NfvDz9r8Dfxpm/+c/LfA/67I
7M+Y/31Hv/bj7NhP/LzIPI8SnwP/u879+Xln/FeSv1Y+3v/E/uM2d/6hufMP
zf+r8vvM/7/O+PXvG/g7eLD/8w53fqL5f+v4R/9a9nfpZ8H72v0tzCfqoz3r
8JM2n4m/DPrwKYz/FvuBI8+Bn3W466sl/1aB1/q9z9v8vHP93D/2b81f4n/Q
/1r6zld3/yJz4nPmwJ1fbl7jhx60+TXsB+7+RubOTzd3frq589PT9SXu/kbp
+vHf+YLkT8yBO78v6dd8DXHnXySexnd+nzn5edyfqB841zcG7vy/FfVs+PfM
fwJ3f3LzA8mJx/Hhj9rc8cHm7m+e7Nf6AeKOL07+8/6iPhrvA/fvNL8h2dz5
/+arjr77f5q7/6c59d3GcH3u35muH33yVZjPOz/IvOanBE59/3peJj5Q/z/w
qcMZn/M1c/Jdkj5yrb8UeLr+2r8gjE9+1Bz4Xkef6+P87Zx8NX5fxBc/avMa
f3y0W5/fn7mfz+Y13yyMv+345/y6hf883x+2Ofl/c+DOf2O/t/YTJv//qM1H
5Edtvvnj3Xxi//Rxm1OfoOZfiK/Z3w3+IXP95tuO/wcd/zbYD/oX7G8Hft7x
f831h/HPO9d3SX4/9dJUb8D1BcxTfDzc8wtzzy/M+X4m+3y/x+Bfir93PQXm
J8n+dL/NnT+a7l/Sd/2CxMdwf1y/YCDem+8H8dXHbV7jt4/afMP+yOM236If
OPHcQxgf+8k/4sd5Hi30i0yc2OL6sf8o+M/+EP3DVI+U+jZ8f8zZX6/1xcXr
/njgqX6p66G6fqn1XZ8UnuqTwg/wL1xfqk8Kf/dXV2VzzguGwF2f9JR42rIe
PSfe9Vmbv6S+eOBvi7wOHHkbuONvzTfEHz9vc/zbFn3vtyNz/rzgv/jxc0xc
+/MLTv3GsN/v/fkF1/78gmt/PvlP/hHxIvz+zogfeNTmI/EnR22+IT7nuMOD
fpUftvnQ4fhf658E/+fA95EV78J+fI1fWbf5K+JNAif+Zgz8HPnpbr4JnHjf
beCvO/4N2r8133T8r/E/Hf9Zv5h/W/vrtR8E6zniKY7bHHkO/PwvduufIj9s
8+ud8S8Z/1Gb0z9jDPxNx7/aH+1xm3/Q9dNPkuf9Ldbnt9v8Oevnu22OXOPZ
xH+K/aD/Wx19xuf5aE4/xxofJ36A/4G/6vCjzvjwsXP9vl++vqEzfuL0z6x5
+rwPOI8u75d6/m7+K8XuOvDSn2CT+PfK50mbu79PGn9M/J8UO2n8or8N11fr
H6frL/Wfa34Wv0Pq33JuebKbk/+ZOPkH5s5vMOe5sAn2nd+Q9OP4zj8Qd34C
9UZYT5CfVOP5xalfUusxiZPfMwW+6XDqmQxhfOqrJP4G+bjNsV/XL+V5y/eN
+EPmk+bEN5L/ZX4N/ZM2H3m/BM77r/4+xHn+b8P4Xxe+6fEwfn3/Bf0V8Y3h
/vD+4/lxi/h66mkRv/+wzWt8/1GbT5Ij79hn/mju/Bdz57+Y3+pc303yGzp8
6Ixf+6Ar3svxW4t4MMVvJb4O3PFZaXzeD+aOv0rxasxfzR2fteCKv3pf1str
4uUUP2j+NfVFv2zzmfqigb/q6Du+0NzxhWn8dbD/Gv+CPvIYuOMTk/+bcP8Y
P91fxy/e+qr8d/IJilx/X+J+P5mTHzsG7veLud8v5q8Z/7jNkevvX/wlcuDY
r+tz6o2W9Tz1R+v6XnxNfdCD3Zz6K+YDctCnfuoQ+FZyHD/oI9f+hv/xqnzr
P+7mNf898AP6D9xu8/0OJ19+CvYvFR9tvtfxn3y+KYzP9dW/13fLJ/uf3t8y
d/82838m2dz92dL4Sb/IY9L3/pe597/Mf6mM3+Gsvxb8Ox2u/m777G+QH8z+
zLM2J7+J/Utz9w9JfBP4yP5RGL/mSwXu/iHm7u9hfsD+0fOrn7X/Nfu46zbH
r5pPJc6+MvsnC478tM1rXnmwz3XMwT/u6xTGr/qB1/4XwT73lfzW4ZPyWezR
H7jmV4vz+x0Dp79vzS+3fvm+T0m/xHfzfl3os78dOP1z63m18ubrOtvrXPXj
GLxOZl3P7zDouz/Igqd1PutF9Qcxd3+QZD/xMe0DYF/7BtG/oM+5SIrHcPyF
ueMnEh8Dd3yE+QXxEWH8ifPpwB1f4Xw759eZOz4i5etxfm7u+v3mzq8zd36d
ufPrzJ1fZ+78ueTfFMZ3/pzjrVx/2dz1lc1dX9nc8Vvmro9s7vrHKV7M/97j
rwJ3feIaD0O/MX3/zP39Mj/j+3O/zf39MUeu+fHi/vsn/5I+37+6Px7Gr/UA
/qCMRz5BkWu9JfGZ+LPAB+R1mxOfNwX9TeFz0Gf8VdA/KPIY+BnfL/lT47mR
H7b5KfF/93bzGg8jft7R5/qnoH8JD/rV/8M2PxAnHgZ/qa+If+Yj68W7bU78
yhz0iZ8hvsec+BmuP41P/I858TFT8p/xg/0aPxTuz9AZv94f8p+1H1n7Kz5o
82vsTwbu/VXz6/Cg7/1Vc+rHpP1i77+m/eQ5+Of9V/Na/ybwDx3u/dvkf53/
sJ9O/Jxkc9dvMH/H/n3g1D/g+2N+jf3Le23u+gvmro+Qxh/D9WGf+L6XWs96
fW3u9bW518fmXh8n+2PgyJzvmL9gvRy418/mb7T+TvaZ53s+5v4X5p5/mSNz
fanfhv+9+TbwkfdX4J7fmbv/RZqPzmG+6vmfuftbpPuTuOeH1Mvk9/QG+X6b
z0Vm/mRO/Uv2V82nIo+BnyHfbfP36N9r87fIwT7+s79pvvmG40/h+hmf/UfO
I2p9RfW3N6c/HvMV83q+ca/Dg/459h/u1k/+1fOlRx3O+p54XOYjzh8X9/zL
3POrBXd+ufgiv1zc86+F/x3/avzxnTb3/Mu8xisH+84vn1TP64D4xLuBU3/q
dpu7fpq566eZuz7agqt+mLnrm5kTPzl2/J/C/XH9MvaPeR7eVPyhOe831k/m
K8VHmvN+Xwf77r9tfoj9oO/3f/J/Chz/puD/ge7P35IfzvMb+aDNq3y3zcnn
nwI/In7T9iQn/ded8X+K/dtt/hPy68P4P0K+1+bUd+D3b17rHwT+pnN91D+o
/fpUb8fxGeaun7Pg6m9g7v4G5u5vYO7+Bsl/4jcW/RxUf2fhn/oXpOtL9h0/
svBP/Q2Sf+n6HD/i+bL3L1M/uTTfpn/aJnD3fzP3/Df5l/x3/zZz53+auz8b
5x0r5hVFJs/HnHXZFHg9xwx82+Gs2+rvTLzWFUvjox843+t4fV/s5jVO88Xu
8ZM+caVz0Od3vwn6G64/6HP/6jyuxMswn75V5NrvVZz6EDx/zek/MwWOXPuv
it/o6NOPZri7m9f+rcH+EOwfduxTnyNd/+E3vP50f2t9Cv49+yec37B/8qDN
r0k29/6Q+Qv2b3r6Yfz9Dif+tfYjDfbr/REnfnUK+sSrTsF/7z9tWF+V3wvr
re2LNic+bwr8g2Rz1ofzD3bb3wT99x3/4EPgrB95/iWe7J9L5jyYeAbOa+v5
nzj58LXerXjtnxv0a77u4zYn/3kb9MfO+KNk89Pe+JxXJ3148I/8Zzj9wNP8
0HxN/F7gM/F3gRN/yHsw6j9t84H+60lf88N0fcz/kv0p8MX80P0w1P/C3P0v
FvrEZQTOuQP9ORNP/Trcf8Lc+R0L/6lbE8avcSaB1zrj6fqJ0yn61Ltiv6D2
b73T5hvku21Of3fiH81P4UH/GvJBm1P/aw6c+l5zsD939C8643/duT/ub1/j
E+mvXfKnOP9b8BJfSX2UBSc+K/HvFf4g8BI/yfcs2V/Ej+rfL+JD4b/U/vdV
LvFv8fq+e9U/xxus/rDIJ20+FXnb4bV+YrDP89Xc8QPm66K/DbzKxT7rjbre
f3b1v5uz/qjrOHHWC+xfmPNcXwf7jL8K9uv6KfnP+jH5x7gd/5J+XR8mfZ7D
Hf95Py3482/Gp3T/eK5Tr6HUo6nnXdQHetrmmyLPgZ8WedPhqzD+ivo4QZ/6
QXz/zWf8D/y8o7+n8Z0PTX0y3g8pX5r9RXPnN5tTv4zzN3PnPyf/Uj439dB4
H5g7vznxMfhf660V2f2C3B/I3P2BzOnvw362ufsHJf1aj0zc/YHM3R/I3P2B
zN0fKPVT2gb7++Lu1+L+LObuz2Lu/ivm2459918xp/5FXS8n+w/a3P3pzN2/
pdZj5PeJfNDmF8iftvlAfcW7bX5JPe47bT5Sv/Fem2/hwT71HofgH+NPYXzq
ow/h+tGfO/en9qNkP4r8OPavHrf5deSjNq/7X0/a/ID9s6C/Yv8r8Lo/dtzm
e9gP/mOfdUziU8f/dP2MPwX/bko2X8v/Dfk45e/1ivy0e21+2uFb5ZOZOz/O
/AL9O23+Ev27bX7Z0b/G+ef3O/rB/4HnR5Fd79312c3/C/zZbr4K3PXXE58D
d/11c9dXN/97yT5Pd30jc9c3Mvf5ubnPx81dH8nc/cHS+MxvzX0+nvRr/SDV
m3P9OHP2X8fAXV/O3PFDSX8I3PXfzIlfGgMn/onnP88j9rt9vmPu+uNJn/0H
81WH+3wn8TmMf63j/8TzNYzv85c0PvOfD/zeyN8lPuBOm18qPsP8v6Mf+B7z
+9sd/cD/l+ITov9h/Avk77d57V8Qrv9bWm/UfLgyH+K5WN9f4rUPUtKXbM66
vs7vxOs6+6DNaxxxb/xgn32DIdiv+Y3B/9o3mfwZ1hNlv5X1yeoHbf4COXD0
OR8yZ301Bf33nfFZf60Dv97x74XkbVnvsy91xvr/eZtfL88v7qs5+w9D0F8V
/VXg7K+sg33vnyT7U7Dv/Q/zfcl+nvv5bO7zeXM/v839/E58CPw1+vfb3M9v
c5+vp3iFur/82x8/a7xkea7V+gLm/7rwu4EX/VqPM/A6XxWvz4l7bc5zaQ4c
/6bkn/p3mfNempN/6H0aeOf+DGX8Id1/9Q9jPsN89xbn30/bHJnfn/kB85+T
Nj/s2D/t8Bp/HcZn/jV07LN+GOknTD3lItf8dnHXbzWnfkviM+enjwOnf/LD
Nl/Bj3fzKejTn3kOfCvZ8dbuT23u+Gtzx1+bO/7a3PHXC97xbwP/tM1r/dqg
7/jtpD92rj/Fsy/6T7PeoT97kdlfNae+de2/J876ZxP0b1Ef+7jNx45+ra8d
+Avkx22+3xmf+t41nlP8puwfUO+H+A/6r67bnP6ttZ+0OP1bp2D/sGP/Fv1Z
j9u89o8N46M/BP2XyGH8jeTkf62PyP1kfcLz/aDNvb439/re/H3H/mEYr9af
4vvxaZtTf27q8WB/1bE/d+x7f4B6ZXXdVOThpM2RN4GfFXkK/AX8aZtTL433
t/kbeNDfFHkV+GGRmV8nzvzdvNavC/r1/pTxB9bz5ffq/ojmdT193OZ1ff+k
zd3fyRx5CvrYHzv6yT7r/1rvXdz9Gc3Zn5jD9df7g33W62U9W9f3P2jzdYdv
e7z8XYmPXPCTIv+wzZn3TcF+rXMR9B2/nniyz/VPyf8Ox/9VGB95CPp1XV78
m+nnwnyD+jO32/xS/XPM6U+T9N1fJ/I7bU79nyHouz+O+T71W4J/8LrfFOzX
dVy6P6wzlU/v/Hlz58+bO38+2R8Dd/67ufPfzZ3/7nzqF8pfNnd+tbnzo82d
H21+ivx5m5OfPQd+jv3DNv+A/FmbO786+Z/y0Tcd/51/Tb3Wuh9X9l/4/pi/
Z//meZtTn3Ub9JkfbIL+qqMPT/q8/5P/14s8Bc78APvMV2q/vT8r//5Jm19g
77jNXT/XnPkP82fzS+THbY68Dfquv2vu+rnmH4q8CvZdH3dNPRXOZ9if/rzN
kefP2vwc+bDNa/2c+21e44d64wf9ur9+r82njv0xjIf8ivHvtvla96/GCTEf
pL/B0zavek8CP9zNsc/3z7zG5x+1ed03Og7jk3cUxq/7bOxflf2cOm9Bft7m
qyKzvjFfF7m+T8XZ30r26a/E+mHhH/tTHb7ujJ/8Y39uFTj7Y3WeKz7/eLc+
+33p/tX9Ta7H8e6Obzcv/UFqfLq549fNf7V83g/c8evmjl83d/x6sB/9+0cd
/1S/2OeFPv8z9/mfuc//zH3+Zz4XeRvG9/mg+Qfpu94i/Th5Dpm7/uJCX/U9
zV2fMdUbRTZ3/cVYL5L4E35X7K/zO3nc5q6Pa16fC8dBHznU63V9XHOeC4nX
58RRm+Pfoi8P5xv4T/yq1oNeH6Z+q8yPF/p/tJt7fWju/qnmXh+au7+pufub
mrt/Kb8H9i3o/8v3yJz+uuyvm/N9nQNHXj1t89r/96TNL7EfeO3vG/x3foD5
7Ost52H8bvz+N18Vme+l+Uj+ZdD3+9+c/M114DW/MnDyMzc9/eC/5wfmG9nf
I165PE/OiE9+0uY1Xvm4zZHHwFfoB/sT4z9q8xn7Qb+Of9TmNT6deGrt13j/
yrzWzz1oc+pTT4G7vq/59Me7uev7LnhPX3K8vru7/a/xAuzzsD9zUv77vcCf
7ua8f5DN67z68zZ3/Jh5ff8etnndX/6szetzKHF+p+n6ub7A2Z+dw/VzrpP0
6/0L/rHvV/uVq1+9+8ubu7+8ufvDm7v/u7n7v5u7/7u5+79H+w879ll3/nr5
JD66xMeQH2U+FLnGU5v/2sfPbeL/qowf+NTjJb5n1dHfJP7J7uvDPv6/Uz9q
96c2d39qc2S+x+Y3/v1u++5vbX5J/+rnbe7+10l/DvrvO/5ffkM+B+7+2uZb
5MA/0I+78BfECzBflWxOfAHPF3PiI4ag/zX699r8RYfX+IbA1x3/X8n+PvH6
1PvhfD1w1282f/FXu/lBh1Pfee7wIfg3dfgAD/ZvhvgK1uM1PuJhm7t+q3nt
d3+/zYnPYB/Q3PVbzfclmxN/NAZ91381Jz5pCPZrfAf7EzovuFXkmt8q7vMD
87Vk84MiD8G+zw/MbxZ5HfTHIk+BXy/yJvBV5/p9vpDGr/Fi2g9fSU7nDTVf
JPx79rnN2b/i92K+p/MJc9ffN/f5hLnPF8x9vpCuP92fev+K/453cXyLueNb
zL9N/MqjNv8fxI8E7viXND7zv6Q/BP6tjn+OjzF3fIz5z7m+wN/Bg/2fd7jj
b9L9HYP+f+v47/gd1xtwfQFz9p+noO/6AuauLxDrHQT7F/x+A3f9APOt9Pm9
sd7Gf9b/5rW/ceD4V+sXitf7d7vNeT7MwT7Pl6Rf/36ftnl9vgX/zjrXV+9P
0Pf55z7zXfYf//yqbH6d+W3gBx0+MP8+bnPq99f61OLXisz+qDnxGzVeWfyQ
9UnQ34OTn0C8N/3ViAd/tJsT329O/PgQODLP12Q/6Z9/Q578r/H17A+onib9
33lemVOfcg76rr9p7vqayT7zB3PX1zR3fUxz18c0d33MbalnwX7EeZFrfrV4
lR/v5kPQ34c/afMN/Gmbj0Wegv1V8pfzDOQwPrz2Fym/x214vpj7+WLu3785
8WHbwM864xP/xj6mOfIYOPFgxH+b+/li/pp4sqLvfB7n55g7P8e8nt8Efefv
mDs/x9z5OYmPgTu/ZvjNj5/UY2T/bPtFm5N/N/ygzWt+YODDbxU/vmzzmj8Y
OPrJfs2vTPq/2bH/q7v1p9Lfeps4+5fU1+XvxfqP/LDjNuf9w/zafE18zbrN
6/cz2Cd/q9bLFff70bzmlwV9vl+sn71f4PW/udf/5l7fm3t9b+71vbnX9+Y3
sP+0zb3+T/5x/z3f9vza3PNrc8+vzT1/Nvf82dzzZ3PPn809f67PydtX/3vd
vzN3/nPg9fkmvsg/Fq99HZN9/A7+133K5D9x+YEv8p9tHzuF1/V+mY96f8L8
/dlV2dz7F+befzD3/kPirL/NyR9ifmhOfRP2V5P/Y7Dv9b/7Ubv/dOKpn7Xr
i5u7/7S564MnPnf4GLj7W7te8p7q/5q7PrK56yObuz6yuesjm9/o+Hf9G/pf
618yXw35G+bIxEeaj8gdPobxD+BBf9XRh9f6GeLOLzG/yfXdbnPnl0T/OD8h
zozzYepOrduc536N1zbn+Rr0a9+xp4ETlx70kZN/tU5G4rxfjnfzMV0/dYmS
/c71s+9U88M5PyzPy3r++aDNOf+s8ZDiZ5LNa3534DV/PNgfO/6Rn038sjnn
vzzvk/81z4DzsnKe/KHsP3B+bs755Trw9x39l5xPBk59kDnwt8U+5//mW/ZP
gv5c+KZzfauOf1z/K37/vP94Pjxqc54fQ+A1P+6ozQ869uHMT8ynjj7P/zno
H6LfsZ+u72XHPnwK11+fv8yXOueD6Tyxfv8754PmPh809/mguc8HzTmvmIJ9
nw+m60/nqZx/jMG+zw/f8Hstf8+3/D4ftzn1E3h+mm86+mcd/Ro/cNTm2B+C
fccHmL/qjO/+sJE/2M3Z/3hNPjD9wZm/329z6nfy/TQnP7j21xWn/miyz/h8
v8zfM37QP+34h/9T8K/Wq77d5uQnj0H/onN9tb72nTZ/0bm+N9IfWc+V++X6
9+YH8PttXuvbB36jw71+NL/X4Yfwe21O/fq5c31j0Kf+P38/c+rl13qhYXxk
7/d7f9/c54fmPj809/mhuc8PzH0+YO7zRfNNh3v/n/cl85m6vjtpc84Lajyl
OOPXeovivK9Xgdf1YbD/SrK5z1/Mmf+sgz7zF85PzH0+Y36d8Tv3J+n7/Mbc
5zPmyMTJk+/PurLmw99t8/Mi1/rK4hvqAwR96gfU+svi1A+Yg/2h8HoeJP4O
+4FfSDZ3fUtz5DHYr9fHPiXPIfInec/+IHD6GibOPCvw2of9y8A7+sw7hsBr
nPAXu3nyv+ZJ9q4v+M+6lfMrnu+sR+r77XGbu76SeX2/Bf4rHf0XvJ+O2vwX
Opz3W63fKM77fQ7jj7JPvkitB8Pn8zZnXV3zOMWRa56oOHqJj53xa5+iwImL
4fm2/Un5dw8lP27zM+RHbX5R5DnwVZFHj2f5sGM/+HcgfeIp2C92fxVz91cx
PyP+IuhXfrvNid+YAkd/DvbdX8V8v8PXxHN0/Ev+uz+LufuzpPtb6z8x7yu/
N+d3mzNvqvUxxGueb+JFv/aRFHd+tjm/G+an5swL+P4v7Hf0a/4Z+4m8T8v9
9PzB3P2lzXk/z4H7/W/u/tLmfr+bu7+0+Rly0Sd+lnxfzt94vplfdDjnk+xP
Jv1t4O8km9fzzaAPT+NzXjgGXs9HO9fH+yHNlzZpPuX5jTnzsi/afDF/Mu/Y
X8yPrM959Ivd+un6FvMnX5/nR7xPeO/+fpGftzky+Wfm26K/ftbml4WzPlmM
z/sz8Ivfvyqbr5GD/l6Rp8B5/6f1bD0/fNrmXn+ae/1p7vV7Gn8d9L3+NPf6
0pzzxTmMz3nkJnCvP81vdPS9Pk37CbyHiIfi+UB9otqPQZz4rSFw13cyJx4r
8RofFjjxZWPgru+U7K+C/9RXSnwl/13PwfG55q7vkOpBjIEzf+L81dz1HxZc
8brmrv9gTn+/ul8mTn2JKdjn+ubAXT/iA/v9Jx8/yQ/k929e6zmftDnyJujT
L2p10ubkH24Dr/LTNic/M9m/1rGPf/w+XhGvUsaj/zb7p+Zvye8OHHkOfCzy
KvCzjv55kdmfNb8V/EF+j/9Bn/7kvL/MvxZ3PI3jY8x5/rO+Mef5zPoq2Wf/
z3y/Y9/xNeaOnzF3/Iy566PG8T9rc9c/db+JRf8H8UX/B/FF/4fAx8AdX35K
vnKZT9L/gP05c2Ty/83Jr6778+L8vucv2ny/w7E/BL4H/3L3+Mn/mm9dZOqB
Mh8g/63WoxB/2+Ho83wzr+fjz9v8vGP/Fuf3gdM/i/mPee2f3PGP+c8Z66vy
e/1b5LttfsT57Z02R38K+q879n+K/dttPks2/wnrx+Af/Tdrfe/yvqaeCfs/
vF/Meb9vA2d/ifmqOfIc9D0/Mj8N9qp/7K8Fvs/8JPCzDvf8yXyP/bDAPb/6
QDxZeV/t0w/2szZ/T3za/Tb/WvFx5lUO+u8Vv2Y+E+922OZ7Hf/Rr/sQPLeI
x2MdELjrP0b+oM1d3zGOn/RZZwX/BsmJc//Oynqe7wP7AzV/Vfyc9f+6zddF
ngPfoB/sbzv6M/pP2ny/4/8B9o/bfCzy2Ll+8l2+/qrw8rykPkjtNyNOfe8p
8G2Rx8BfdexT75v3gzn9Y3j+m7/tjP+O8YP9845+rZ8S9JGHoE9+VLq+ev/u
tfmMHPTJj6r5KyUfrtYb+16Rj9q85tcdBl70iR9c8NK/j/Orxfjwx7v5lMYf
y2fSx/9wfeRPVnvUSz0pnyX/gvW1Ofklmw7fBr7B/kmbHxS+Dpz6sYmfkk8S
xj8jvyTok5+yCRz9ei5T6rfVfjjOPxVf5J+aO7/UvPx9a/8Yj39LsvXL92cM
fJFfan3nl4brW6XxP/n4uU7+/9pV+ewPPn7W+m2Szacis75IfAj6qz8s4wf9
/cLZDzSfizwG+xvkYP+ic31w9ic93/b8Os3H58DZn6y/R3HPnxf2y/3h923u
+bO558/mnv+ae3+xrmfL/fL+obnX9+bePzT3+t7c63tzr+/Na/+9wL2+N/f+
obnX/4533hJfe9jmjl82d/yy+R7r38Ad32zu+GNzxx87Xt7x8YkzfzR3/Ly5
4+fNHT+fOPVB0vhDGN/x8+bvO/47Pj6t5+fwPPLzxZzzC36f5n7+LMbX88fc
zx9zP3/M/XwZVY+X+tS1H7Hr9VIf90Gbuz6wOfWj56C/6fAt9bMDr/Wnj9qc
evG1z0y4vuS/6xOb0x9iCPZdv9jc9YsjD/apx8333fkCzg8wd36AufMDzK/B
77X5bxGfcqfNa/zk3TYnPp/9cXPnFyT9Odh3fkHST/kYq479o879qfbZ31e/
X/cPNnd/YHP3B072x2Df/X/Nqadbn3fi50VeB333D07XV/dzSr+Cuh5Uf3Xz
+XcLP2pz91c3R0723R99YZ/xH7T5pvAx6Re5xg9yXlV+T+SPsH9hTv7kGLjP
38zdH9Gc87Mp2Eeu+yHiPr9L40932pzzPM7fkn/8Pt1PaKv3m7n7C5m7f5C5
35/mfj+an0s29/tzcX16f5r7/Zj8Z35r7vffgqu+/vCL5ZP9KPf/Mnf/L/Nf
vnp9C+7+YOb/WLI5/b2S/+4PlvSJw1O/gEV/APOyv7ANfCqc+ICF/m+X8Z8G
7v4B5mV/j/X/YvxSr2sT7FM/KI3P/iHz6wXv+LfoX2Cu/gSvynlN7a8k2Xzb
4RdF5nlj/hL5bpvfLPIY7L/DftC/hf79Nh/F2eep542sq5+0OfJ2HfhJsRP0
6/nS08BPdtuvfZiC/boPFuzXuOFgn321nn9TGL/G1wd99pWn5B/6yf6J/GE+
Qby95jfm0+9c9d98Uzjrb/MtcuDYH4L9VZFrv1vrM//p6A9BH/+nZF/zJ54X
tX60n7/iPF+rbH2er4HXeUniRb/2OzXX+ctifOo3Jv/d/8Vcz0/X667xJUdt
7vrcSR//zV2/O44fOPUrVmH8seN/rZ8R7Lv+93XO+6lfWGSeP4mvA6/xB4Ej
r9ZtfqH1W+Jz0N8L4y3k4N+K9wvfrzLfq/nTP7sqm7t/oLn7B5q7f6A5/amS
/qrwTUe/xoOJu//g+6n8d+Kfi8z333xb5FXQv/an5frWbf4B+0/aHHkV9Ic/
3T3+qvAp2N+DH7f5q2k3fwcP9uF8f92Pz/33zN1/z9z99czpH8v8zdz99xa8
Y9/998zP2N+7Ezj9ScP11f6pxPd+9fGz3o8iM180d/yIueNDzB0fYj7Cv9/m
jh8xd/yIueNDzB3/UeMsHurzsM1rnfVHbV73yRPHfofX/E+PLz8XnLiLB4HT
xzddH36U9S3nfTxPiN/l92nO+SW/b3PyEzZB/xbxvsdtPnb0GX8MnPhp7pP5
fmf82v+K86I/ueqP++umfryroO/3o7n7L5rzfhuTfx3u99u3OZ8s43H+yfWZ
D8iP25zzzSHwKj/aPf7YGZ/vn/k/6PBvcX3BvyH5K//4vni/2vvP5nPhrL/S
fjfyQp/+xGG/nP1r1leJT2m/vchpP57+w2Pwb8v1sZ5VPp/7N5s7v8/c+X3m
7t+c7M8d/WTf+Xvmzt9L+YzYdz+4TZHrfF/c/d3MrxHfeNTmvP/HoE/8I+8R
89fw4zb/UGR+H9QT5Pvq+orm11ivBe76ieasX+t5s7jrJ5q7f1TSr/VBxF0/
MfoX9F1fkXp5NZ+7yDW/R5z6fnPgyGPgB/DnbU58yxT0qY9H/Jv7ybl/nLn7
vyV9vr9JP/Wzc/82c/dXM3f99JtlvcR6lPoRXL/5qyJzf81Pi8z+gjn1Mcgv
Nmf9yfzCfI0c7L9gfRr0bxS5xuOR73/vqkx8lPl5+PfI1M8hvtt8Q/5/sL9P
PYC7bX6Jfhif/IUx6FO/p9bJVr0e1+cxJz+I6zN3/ZxUDyhx7E/BvuvjJP05
cNfHIZ+ynhso/918r+RD1u+r+FRkvl/m+0V/HTj5lnPg5O8Tn5Xsp/HXhfP7
MKe/2RT0a/5p0Kf/zRj0a/+3cH8PuP9Fn3xn5gM1//hBm9OfgPmFOfnPtZ+D
OHLt9ya+7nDyp5mfml/Aw/joz4FX/8P1XaLPfIx/f/eqTH1Dc/d3MH+DfL/N
ub4h6NfrC5z8+iHYJz+f33fk4frwbwz6X3euv37/6Ffx1VXu/Stz15c0d31J
c9eXNP/A+/mgM36RX3fOVxLn+xf1n7T5S/KB121Of6Ep2Pf5iPmG/Ohg/7Qz
/nnn+uj/WeOH+X6wX8z3Y93mfj4lfZ5P5rU+xZM2d32IZH8TuJ9P5n4+Rf/D
9S2eTyFfmfefec1Pftbm7t9oPrzcre/8ZXPnH5vX+c/zNnd+srn7P7pf6B79
PY/b3P1DIw/61zv26Q86BT6i/6TNq/7jNqd/KL+P58TD8nxV/K75TxXPau74
X3Nk3i/mju81d/yu+asOP+qMDx871z+E60ceOuMn/iOun/k58Zhlve/+Seau
D2N+2tF3/yRz5OGwzW92+I1gz/4lffdnMqc+Wu2XE+xP4fqmzv0h/rT27+U8
oMxHOV+o+QbinCdMQZ/zhxqPKc75Ru1vHPgcxuf8hL9vtB/Gr9cXxkfm/eV4
O9d/MD9Avt3mjq8zr/ENId7P8XfmxDuMwb7j78wdf/eG/aHyPvrrIjN/Mv85
+0tP25z6nVPgf9/R/+86vzGfOvb/rsPPOf84aXPqx6zC+P+5yOvO/Unj13ow
QZ/rr/FT9KEg3pw68/favMbF3w2cc+Xbbe7+mAv9z3dz98+M/t9pc/fPXOjj
d9k/usF8gnqSzCeetflL+msFTn919jfM6/wm8MPO+B/+4uMn55fmXxe+CfZX
HfsXRZ/9ndonmnxz9t1+ELj6N5u7Pq25+zOb132AoF+/V0G/9k0N/tc6yck/
4l6KvvupuH+KufujmLs/ivkh/UsCd38T95N2/2jzuj951ObsL7J+NZ/Zvwv6
qw53/+jar5h+qK+u6pv7/Mvc51vmjo8033b0fT4W/SMOhnkYcdvMc5+1OXkX
Nf7PnL6aSZ99reeB378qL/yjr1Di5I10eLq+Wncl6XN/Tnbb5/74vM3zA3Of
v5n7/C3pD4H7/M3c52/mPn9L11ff/6rX5/qA5q4PaO76gKkeYbLv+oDmrg9o
XuOzw/iuH5j8Z3/F83XXZ4v13AL3/Nzc83Nzz8/NPT+P43/W5p6/Uw+o1udS
f2nzNfV9nrb5JfrrNh9L/OY28FofKNh3/+vk3xzsn3f8d/9s833qJ6XrU39t
81ofKehT7whOffca/0n9ttttXuXAfb5szvky8yRzny+bU39uDONzfjzbX/zj
+oJ/Pn+m31U9z+R8/tluzvzW3PEF5rW/R+Ccj/D8Mn+DfuDoD8H+ZUff8Qs8
L7jfNb/hoM29P2Hu/Qnz/Y7+wPMojL8nOfnP+s31Xje8/+62ueu/mrv+q7nr
v5q7/qu567ua/wj5Xpuz3uf5bc7+xRD4m871/Vf8C+O7/uxIvhv97H7nqv/m
I/GdQZ/8uTnoD+gftPncGZ/6BFPga/Lv7rT5QP5e0F9R74DnIfGgrCOJ/7zT
5mviZwOfiD+93ebEo9Y+9dYv8hD8WxP/GvRr/OynbU58b7o+ePJ/kn2vV70+
Nff61PwU+UmbnxFP8rjNvX419/rV8WAp/gue4rvgKX4L7v5s5n5/Jl7XWfxu
ynyJ7wXvN/OaZ75u8/p3fhq48usX/N5u/Vnywj++18G/Wucjcfav0vjsXyb/
6RNXZOI9+D4Tb8H3yZz8IeLTzR3fbE58yBC445vNb3XGf4n9wLFP/BPnRdx3
8md4/ptX+WC3/hD0OX/i/WjO+U6txxQ482PzNZx4HOZrxOsUme+xOf3bkr77
u5mTX1j7lYtXOfD3HX38H4L/NX8zcOJz6z694jUcn7GI51D9OvNUX77Wwwv1
5ZFTfXl4qi9f4y1DfXm44zccj+D4A3PHH6R4hhq/Ku74A3PHH5g7/sDc8QeJ
j8F/xx+k6xs64yfu+IOax8P3kf3V+7v5ELjfmwt99ifv7uZT4DX/MvlHnuNn
bc68pc6vrU9dv2C/9r0kXrCcH7EffK3Up2T9bP5esvmh6qOav+X87Xmbb/9y
t/5c5E3g+L8K/Pwb+l/jv7Ufwfq+1oMV9/6EufMnzL1/Yc77fxv4zH5CsO/9
j3R9zA8TH4L+quMffBP88/6I+fWiz3ln/Tv8sPjFvvIP2xx5DHzb4Xwvx99p
c+oKr4N+ve+BU7c48amjz/dm0/Gf+1PjmR5KftTmxC/N/vfE38AftDnxW1Ow
f5b8KTL9K4dgf+rYd/xV0k/XX+0H/Rq/1bk/td8J5x3lec/5S40vE6/5h/fb
vMZHf97mVQ76nL/U+YX41LFP/HW6PurfDPanyMRX13Vq8J9zw9rnhfUheYtP
25zzyVpvRLzWPzgJ+tT9Dfqc09T66ebF703wb+6Mz/noFOz7fPWA+Gvy6xX/
nfgUuPsXJs79Mb8l2dzx61E/jL+Pf6q3wHzA9elTPXvWJ6lfJu8jc/evM6/9
8Tqc81tz989M49f4InH3zzSv6+vA3V/T3PXx3U+J/kU1nibwbeC1/3Pg7q9k
7v5K5vRn3gTO/lryb1U461fyJep5OvJJm5PfMfjf831J9sin5fcT7L/A/vM2
P++M7/6g5uTHjcH+S/I/mEfxvCnPsT3J5vX3/6jNa/7dYZvzvOD9bF7vTxgf
/TnY5/4Pwf5px/6+/DujHgr57apfZn697M9sAp+LXPsviq+ozxX4hvpjwf5p
xz/sT2l81T8zX9Q/0+8p/n4Kd39ec/ffNY+/L42/Cjz+/gqPvz/ZW/z+ihx/
f4Uvfn/lPKvWG+d867jDj9rc9V3M6S+euOu7JPtz8k/1XxbjF7n2VxB3fRhz
5FrHyvWiXR/a/FeLncPAv1d4qkft+tLmri9t7vrS5q4vbe760kk/Xd93r/rn
fHvn15vT37juB4m7v33K55+Cfde3MXf+OvHX7E/eQr7d5jX/7c5unvSRx8CJ
/0724ayvzPfCeMhb7IfxD4hPD/aJfx+C/Zvokyfw6+V6We+o/viiXq7q4y70
Vb871dvt8Vpvmn0dnj/0ZXvU5rVv25M2Z98m6Vf7D9t8LHwM+tvCa/y4/WNf
q6M/hfHrPlPQZ99pDPpTR3/14qr+wP1aS366m68D999noV/uz8rjUS9K9zfx
ZH/+4W7O+GOHE7/gfGF+f4nz++b9an75F1fHT3wO3PnH5s4/jvYftbnzk82d
nxz1Q76185PT/eX6fB7l8yfzRX1Pc51PLfjnV//dYnydXyU+BY7dnn9TuD6f
fy3G1/nXgt/v2Nf52ILjX7o/Oj9L9zfdP5+vpeur+a2d/CFz5w+Zv+novyzy
NnDnH6XzFJ7L5j4/Mff5ibnPTxbjox+4z1fMfb6S7Cde6yK+aHOfv6TrR3Y9
Hupv1Hgy8Vrf5rM2f9nRT/V94Km+j/1zfR94qu8DT/V9Ftd3r81fd67P9Xu8
nnB9LXPXzzJ3/axUD2wK3OsH98Nz/ztz978z/wn88zZ3/Ii540fMHb9hTrzG
GMa/RTzHZ23u/nbmjg9Z1INRfJG567+Y1/pyz9uc/prboO/+m+bnkhNfpfFV
X+biz69y+petA+f8dNXjz9r8vMi8P8znjv6mw5HHwN8gh/Ffc/5aOO+Zul/H
/Dlw4t+HZ22OvDpp8xX2g/76G+qn8fGf8wfPJ9P8cND8xfO3Oh8N8xtzz288
frKf5oeOx0o8zQ8rD/PDaj/MD6t+mP/5/qX74/mf5/Our2/uv8+C+9P2df8W
6wndv8RTvwHfvwXX/HphX/d3wdUfIOmn6/f8eiTugPpl/P2eBH64myOz3l7w
ex3O9+q4zR0/YF6/34/b3PEBC/2Of4Nk6iNzX99SL/lRmyPX/pTiZ+gftfnL
jn6t/xz06Z9e8yeCfb5fm39XPtk/LjLvD/MV/Fmbz/DnbY48Bj6QvxrGx/46
jH/a4RfIwf4B+axBfxS/RTwE5+vEUz5t84Mi8/41P5Rsftrh9Fcfgn/o8/49
J56c/S/q8T3ezTkfM6/1jZ+0+VnH/tixD58Cp37gGMY/6Njf2L+yH1DP74vM
Otb8nfYXzN8WeR30L9l/eN7mp9jv6M9B/33Hv8sO3xR5CPa3yIF7f8b8A/sx
Qd/7N9Sr5/u9on790zbn+cj7xfw6z9dg/xD7Qf9lR/+c53vw71yyOTLPZ/O1
7JPPwnvxDfJnbV77iwVO/gzzYHPn75g7f8ec/mzMQ8yd32P+tshz8P+C/J6O
/Tnwbce/ml/EPMr9qJgfHrX5oj+VeO0b9bjNF/2rxPm7cn6V9JN/dX55vJvH
flzMazvXz/N5KvEAtQ9WOV+v52Xii/6g1v/u1etbcPp7PmzzRf/P4N8c9Iex
fAb9ifiIdH2fXLVf+8VYPmpz+r1MQf+go78t+qxDzN9/FfyhfuWf7dafi/4Y
9Omfk+wzPtdX+wL94Ko8f7mbDy8CZx76gzav+93B/rajX/sjJ87+eeDYn4L/
m7L/vwrc+/tJfx04845kv84Tgv/ImyK7X5v7s5nTD7SeX4ofdLj7s5m7P5u5
+7OZX9I/sozvfGnq1/P9NXd+tDn5Q0Pgzp82d370JfVA2S+VbP5t9ref7dbf
Bk791DHYf0/9j6APT+N/i/35wKlPNneuj98p/ZKJp6j9oE7a3P2ZzclfYX1m
fpP8k8Dpr5XGv9nhFx3/yb/ZBv/3xV/TT5l+4tQfe9zmh/RPDvq3qG923Oav
1X856Q9B/yX+hfHd39n8vMjroL/BPvfjq8LLvpT7t5q7P4a5+7uau3+rOe9f
4udO+f6Xv6/rIye+Ctz1i5P+EPRd39j8Jb/fJ23u+sPmyOvAqR+0DePX62N8
va/cP9Tc/bXN/X5avA873O+nRbyu42vNHV9r7vhac8fPmjt+1rzIrP9qPi91
Snh/3m3zM9avgZN/TPyp+fBVsR/4u46++9OYUw+N36M5+cBjsO/+Nun68d/5
3M7PNnf+tbnzr82ZX2wCd361ufOrE0/2nT99wX4s9d2on3KnzWfkwN9LNv+6
yNTRiTzor1S/JfmX7Fe5/P1ZT3G+Sv9P3ufm9OdeBc77hf0p87dFrvM/8X3W
c0F/+LOrsjnvvzH4x/pzCnyvcPYX3e/W/W3N3d/W3P1tE0/65HesAnf/2sSZ
/7JfxnqA/bfav0ic/TH2aZL+FPgG/aPdnPWP+WvkYJ/9uTnYf9fx/xXjH7c5
+rX/VOLFvvvBuP+Lufu/mLv/S+o3w/6jufu/mLv/S/Iv6bv/i7nrDyT7U7i+
mx396+gH/yoP+vjPubDPy30+ns7Tmb+ae/92oa/z8cX4yr9fcJ2fm/v8fOGf
zs8X+jo/X+jr/PzsP139d7Wf0oM2f8n+wedtfkr822Gb/zX6wb7jA9P4U7BP
/aharyNw4iDM/1bxf+aOH3S/bfoHcP3m7r9t7v7b5u6vbU79c/aHzNlfmAJ3
fwFz9xcwr/UzAnf/bffzdf9ec/fvNXf/XnP3503jz4G7Py/nGXU+8En5fBZ4
OV9g/mI+FT4m/XK+sUn6hc+J/8vy+bzN6/kH8RTld1D3u1S/xJy4LmTzRX1P
20c/jO/+E4vxXb/T9lmnBn3k5J/ro6T7w/5BGp+/D/P9VdlPZ31BPxjzc+pX
/KDNqZ+xDZz1xyrYf9UZn/UT5y/J/1Vn/HWxzz5w/X7y+bzN+V3Ucx5x5FXQ
r/kVJ0Gf30XQr3m6QX/s+f/Fbl7Pp9L1SW+4WWTqM/9iGed24OX3zfNswcv+
UK2nbl72f2o9QnPkxHm+JPv/tOP/Py/8TuBl/2ru8Jq/G+7fkO7Pd67qu54D
+SO1Xq+46zeYuz6DueszmLs+Q6o3wfrd3PUXzL+WPvnoNT8b+Xabb398VV5w
8lOCPvn1dT4gvs/6P+hTn7u+Z4L+GPSRec9Ezv4f9X44j6H+9ZM2X6v+j7nr
A5kjE19hTv2iNL7rC5kfMH6wj/4QODLnD7wH6+/pqWTxOm+63+b1vX2nzZlX
8Hwzr3Gkt9u8PneD/TrvCv7X33Xwn99V0q/X//8z9rZAdm3pmeYGBgIGAgaC
BxgINFCM7bbGXWNvX1d7bveUq1JSSjf1fzKluqWyq6tUMbZH0S53b9+KibjT
45nJjiggYHBAAwGDBAYXGGzQ4AKDBA0EGhwwQKBBwgsaNNB6voh89npzX5Sx
9Ohbe52/vdf6ft7vQZ/X7zbMz3Ox9J2lJ2r9VHPnz5pbX9UcfVTeB3Prr6br
r82/C9z6q+bWX02vj7HjbY6vmbu/qLnjb2n+Iczv+Ju5+4eaOz5n7v6i5o7f
pXhksq/+Jc/63PG9+P7hr5E/z/47c/vvUj/o2ueL239nbv+duf1zaf1TWJ/9
a2l+ziWOx1V86rDPt4wDd/zO3PE7c8fXkj33f/Mj7MP1HX8zn7AP74/jc4t6
NtVfJT4F7vqzhd438x/0ueu/FtdXf1tz14dVv1T4/9bGibcx+/vEq0+HOPvu
OseL13M7cNaX1r/oL+zr877+IPCV1+/+v6foBbXP80v0O+71+Xv0OgJHn4Tv
p/kk/SZz6x+l+fFzm1v/KF3fer0Vf8V/eafP0e+t/hvi5F8le/KbeP/Nyz97
r89PNXa8zfE1c8fXzG9w/3jS59Xf4nmfO35mTn3AGPh17m8hngivfr7ijr+Z
O/4WOe9P60fI9+k1+ZeHfX7Qxvx+kv0Q+OmK/QS/3+fbX1y9vlPWz3lW/e3P
/9+r+XXqU+73+Qf6093rc+prqh+K+HuuH+wvVtbH/MkeXn18xW9S/xLWx+vn
83vb9tulW0X+xKs+R/94Dtz+0zT/Lth/0DjxIXD8q+jDJJ7mP9PrG6gn4/fY
9neVvyqO/kHVO4h/gD/v82/YPz7r8923tX/c59b3IT+TfQn5m8SfzL8m//Th
1fZTsD9l/mD/FfOvXH8IvPJfH/c5+bXk15lP33L9Q1j/zPXD/HD2qdb7sb6P
efkHH/a59X/Mre9jbn0fc+v3xPUHPSPr96T5+XzS66/zDPnanD+0/zEnvlrr
E/f+x9z9F8y9/0nXZ/2pnzd+KHP37zZ3/25z9+c2d//tdP3K11K9sOujzV3/
bO7652j/uM9d/2zu+mdz1z9He/r9kQ/ReNVHPO7zjcbmh9gH/p0Ve+o70vp+
k/yKwNGfmsP8o+xdz7mo3xRf1G/a3vWb4ov6zWA/hfUt6jc9v/KLUr3qkOZX
flF6f/j+Od/W+bXmzq81d/9E8/fsb+71ufNvYz5wuz86H9T5n+bWbzav+Fbg
1nde5KNKrznNv3l5Nef+a+78UvMZHq5vfWnfL9P9sfTYw/3LfAo83R/h6f7I
eKEP0fYzxGMvGJ/0OfVF28A/sL867nPqjyo+J/6qjffB3vVJ5uzXeP6l9U2B
v125PusnDmW+0/hmO79tNN4G7vfP/AbjbZ/7/TWnv/sUOPNP4frVvz7YM+b7
Yz0V/z7M/fswRx9wCty/H3Py46rfkDj9Qvl9mfv3Z+7fX7Ln80FvlXh8xU9/
0OeOz5o7Phvnv9vnG/Jv7vV5jQ/7vOpKw/qYP74+xV+pR0VP9j378Vd9zv4e
HT7zqi8NfG7jfZj/2recv+rZxb9Zmb/OPz/uc/JD0bfdNX8a+xL8a6WPJb6h
Pi/wfRtPgW+xf9Ln1OuxTzM/Z32Bu778oulVEbfZoa/1WZ/v0bd60OenbTwG
+1u/uDw2H/F/Bj4zDte/bv+p+ID/NNjz+vBPVH+9dj+p89/zPif/mOeHOedL
7ufmbzh/BvvqXxiuT3/BfbB/vTK/67fNXb/teJLjR+bkN+A/MHf8yNzxI3PH
j8wdP0rX5/ux+Tft9XLfb+Par4pv23gb+NDGY+DzTz7+3a1w9l/mu8bZ/8fr
r3D2bwv+k8vjdH3WT/1T6R+0Md9/85n4TODYk99sTnyM35/58DdXX5/40Lxi
zxh/K89T9vc8/80ZE38wf4994Hvs71w9f7o++9/SZ+UcTL/sw6v5Qv828Clx
68+a8/egz51/YF55DeH6C33acP3KrwvzVz8f9XNz/b656/fN3X/O/LzZkw9r
7v5z5u4/Z07/uLX1TYGfrdi7f126PvfPet7if+L597jPK57+tM/H8P8ZE3+f
gr3rm8zPVq5f+irh+vT3Tf4On98SnwK3f9jc569kX/VtK/5jc/tHor30zfg9
LeqbzF3fJL6obzJv9UiVB+v5Xf9k/odX2y/qo8L6Nol/cjUfvqP/Hzj+lzT/
NvDhD5p9ml/1W4v5/+jjX/JPuV9ynjrQ2PwMfa6jPt/p/GXu85N53b8f93nd
f9d4mP9M10/5PMQHzF0fb+78HHP0NXl/zBlPYX3sf8bAXT9vTn7QHDivP70/
zt+5rnhs9Yf9QZ/Tn5T9h7n7v5hfIz580Oc3NU7Xn8P1b6zY3/J81Ns1fwf9
ptHfM6c/9RQ49kPgzm8xP1L9n/mosTn1g/hnzBmPwf72yvWZfxfmZ/2bMD/9
v6u/0iftb6ivXTyv9PxZ2Lf6sjlxPX8W8+v5kq6/SfyTFa763cX69HxI7w/j
6/STx//A5/+8z4nfUR9kXvWfgY8r9sTviA+Y1/c/cNY/hvnLPry+A35/+Id+
2ebD/93GVa8lfruNt4GPbTwFbn1X8xttvAv2mzberFy/9CxW4nPmjh+Ye/9q
7v2pufen0Z7nK+dp9KY5n9/v84oPHfa5/QPm9g/E+R/0+Uh8KazP/gFz52dZ
r8P6HObW5zC3Poc5+hzsTxIfwvVfKT/DvPJLwvqs/2GOPscQ1md9EPNf8Pof
9zn9veaV6+Mncb6X87vMnd9l7vx2c+d3peuXv1X16q6vT/X4xLEWXPXz5q6f
T9dP9q6fN+dcldbn+vq0/nqd6lfg/gPm7j9g7v4DqR/CFHjlS4f1ub+A+UB+
dbDn+nw+3s++4vn4oz73/tbc+1tz72/NrW9h7vxsc++Pzb0/Ttdnf5z2+2Ow
9/44zb8L83t/bO79sfO1yCev+mJx52+Zv2F/dqfPrZ9o7vwu84n5w/pOGQd7
54eZW38x6kW211f9oIi3qT+JOb+/beC+P5hP3B8Cf7ty/d2KffWXet7nByv2
Zyv2vP7q59P0ACqfC32Ap31ufQTznfQJzKcVe+sfmKNfMIb17TVO9ml9jIfw
/py38Ryub32Fxfv3Fxo3PZd6bn7SXscP+xz9XvoXLLjPx+bNv1nP2zD/Ls2P
3kqyb/OjT7Tg6Ne0sc+zPr+af8r981mf1/MtcJ9vzX0+Nb+1cn2fX819fjXn
+cP365x4Evl9xI+O+5z41S5w61+bO35l7viVufWz3Y/Y/YfNr6k/r3nlr9/r
c/r/zoG7P7G5+wun+YfAN7r+/Gcf/5K/vaM/69M+3zMOnPyByo8X37Rx+QPE
J8YP+3zXxvivzek/m64/kV/R1s/zjPMUzx/On+bu/2jO853zuflt+IOr569+
52Gcrs/znzpyc9dPmp+vrL/6T97tc/b/c7B/J3v6FZEPQP+T0scWpz/RGLj7
K5i7f4I5+tVp/veMg/3Zij3jMdijvz0Ee/yDaf31/hz2ufs/mOP/q/pd7bdO
GT/uc++fzL3/Ma/9S5jf+59o/7TPvb+Z2zmn6onpb33Y55zb6vwgzv1nDvbc
/yp/RnxeuX7d3+72+cD9NdgPWt/rnzdOPK6NiT+aX1Cf8vhqjn/P/ODn346X
P1h8buMxrG+zwlnfsHZ94rX4i9t+ofrVb/vc+fPmW/Lbj/vc/m/z/f9xeWx+
Hf/7yvx1/pOekPWNzL/S2PxM+kHm8wr/Er2hh31uffLEp7D+aeX1na28Puyn
sL6qXw/2r1Ze307rd79m92c2P2V83Ofuv2zu/svm7r9sfkb/53B992c2n1bs
N239lf9CPiz1ieS/Pu1z70/NN/RveHY15/61mL/xOfA96wvze3+KP6n0xPFv
fdbn+P+q/ly8/HfB/q3G5lV/ST4+eTycz/idn/R51b8Gzn2h4s22l77ywl76
yov1rVzf+ssLLv1l6gd5v7m/sz9InPOY+Tn37wd9TvyS+JA59VRz4JWvF65P
v+xpxX5YeX3sX9xP2/2xzd3/2tz9qc3df9rc/aXfkr9JfEL1Sebke06Bkz9a
+iviM3oDgZPfug3zl77Vj/u89BPC/NSXbML89fo/v3p+4gPkN1U+BvlX2z4f
0Sc+vpqXv1L8U3iYv3iYn/yrTbC/kH6MOf3P2b9dtPME+dCbv2zjkz6f2ni/
wrn/mR+0+as/Z7g+9yfzW42PwX7mfBSuf65x4qzv9P9qY+ITbYx/3/xdG/P9
SfaV3yy+w36Fz4G/Zf6wvq/bmOeLOeMhrP+M+QN/t3L9Weu33nHFxe/3efUd
+KzPea5WvMvz8xx90OeVF33Y5+SlzWF9PJeTfb2+dn3nUzl/ytz5U+bOjzJ3
fpS5+4+Z038t2Tu/KsXLiX+bO75t7vi1OfED4h/mjk8nvnb9TbAnn474jPNd
rE9k7vwV83p+H/a581vMqz8N+q70ezlp/972P9wPzat/zMs+37TxJtif4X9Y
4Zsw/yn6AMd9Xv1xyJeR3o31axKPejnSp0kc/8yCS59mwfHzPexz69O4X7H7
D6d+xlW/G+zT/IwrP1P8Ndd/3Oc1Drz6G3OexF/4/PJ4eN7n+CerP5ntib8E
+xH/4sr8Q5gf/2Q978WJT03Bnn1xfH1tvAvz1/sTOOtLr7/8qyv2vp7fH9Y3
47/mOcj+LHDnNyT7KXD89xVvDfPPwZ7xJtgfsP7AiS/sArf/3noH1jcwt76B
ufUJzK0/kK6PP2/T9JLwX1k/asGpTz/p810b8/6Yow81r/BtuL77j5pbP8rc
+lDm408vjxdc/UsHfs/Hl8fb4z4nj43fv3nFQ4K97z/mvn8k+znwSde3Xr77
v5tbH9/c+vfm1r83t749/a55HtPfGv+n+W6Fv9LY/ILx0z7n/Ukc+zHMT3/q
qh+k3wP1//SfOOjz/8J4jd/p8/9O/417fb5fmd/5J+bnzP/9Pv8nuK/Xxugr
pvVjPwf7mfcv9HOqfsWBu7+Tufs3mbt/k7n7NyV76/+5HxXnh8h5PYrnsn/i
97bgii+bO75s7vjyIp6tsTn5NSke7viz+cj+MFzf8ekF1+uj30jVfxEv2/Z5
9V857vNXK/Y3VuyrP0uwr3Gwpx/xbmX+Kcx/U/bW06X+Az+LufV1zdE3wH9u
bv3dZI//0xz9hTHYW7/X3Pq96fVVnYb8jfYvmtu/aG7/ovmZ/HfJfg729j8m
f+kQ1v+a9T3pc/sXze1fNH/DmHgmev/kKwX9f3jqPwBP/QPgVd9y0OfX4N/v
8wuNzau+5U6fu7+A/a32r5rbv7rg+OEf9Ln9rwt/L+PgD7b/1dz+18X1Gafr
s37026hXfHl5vHvZ5+/D//d4CnxGPzTwr7B/0ed8vom7fsqc7/8m8EX9FP7W
9n47fm9u/WNz/LdDsCe/m9+feeWXB3vX35hvuX7gzh9InO+T+/m4vtHc9Y3m
9g+nfkGV7yfu/j7m6P/w/lBPhD9vx/hpn59qbF75G0+u5vjX0vWHcH36g3Be
Mv9yZX0fVl5f9YdmPdKrvU59+LM+d325Of7z8heKT/i7w/Vdn25+tmJf63/S
51vG5CfxfXqs8aM+Z/9Vfd7ErZ9lbn0sc/ID8J+bWz/LnP3ftLL+tD7ra5lX
/CXMb/0tzsHkQ9B/jXjTgrf7xjZwzoXEv8yrf1ya/3tX86nxIcxffa1Xrr9J
8/9Je33BvvpWN/uv6LfJ862NiS+Z/0MbV3+OwDeBM/8+8Pf4F8L1/2llfV/j
/wjzn63M/49a36fojeI/kP6p+RHjg6vtGZvfRB81cOuvmr/BPlwf/VWen+bX
GYf5re9qbv3Wus+1eDPxPeLP5nUfCLzuO59fzakPTDzNP6zYw7fh+jw3pvT6
2njT7D/Fn0reI+PDPt9obH4T/+5nfW7/sLn7m5ofraxvxD8b5md9PN+sB+D+
bUkvYAjc+gDmzp8wtz6AufMrzK0PkK6PHzBdP70+52dEvbCwPusHmFsf4BW/
Z/Ir6b/9os/fMT7pc/f3Nj9bsR+5vwV+pLG5+4en9e2CPf1MSw9DfLNyffcP
R0+m+hMzPuxz9GnGwNGfwf9gzni41+fo1Qxh/l+pPjVdP9n/hHFbn/OpB+Uf
m1OfMwZ751+bUy/D+XKRz83+P1yfcVp/jcP8rD/ZO3878fT+OD/bvPLHOb/z
u6Lel7js8z7Hf8X5zbz8yk/6vPL4Ay+/c5i//MZhffU7DvOzfs6n5hXnDtcv
HaCV9c1pfsZhfdz3yl9NvQX5N+13V/5hcfcnM3d+lrn7hy04eaHp+uiLJ84+
gc9P9U6ubzKnfonPwXxHfVHgro9K81f+hLjro8xd/2Q+/tXlsfuVuj+pufuT
mrs/qbn7k5pX/6Vg7/6lqd9q+QPEZ+W/mbt/aXp9aX3uX0o/k+pjR3+TwOlP
wuszd/+TxOcwP/2h+Z2Z7xgHzvrHwJ2flK5f+eHab3v/bO7+yObuj2zu/XXi
Q+Duj2xe+qJhfe6fHF8f/hLpxS70Ya0na/2bYM/+d8E/uZpbPzzxqmczt/6r
ufRfrQdg/SNz1/ebb7B/1Oeu/496BEd9bn0A4v3oLRBfxw9mXvkH9/r8lsbm
mxV76ovHYE+98BTsqc+egj35BfhjzMmPwP/jelPrv0X+WZ87vmBu/bY0f6qH
rfgCevL4afCfvLz8/83d321hr/hsnD9cv/pohuu7f5y546uL+fFDpevjZ+J+
r/fDr9/cr3/B9frN/frN/frN/foX8+v1Jz6uPO/r+yju53viaT9Rz+8Hfe7n
f7QP3M//ND/Pd9eruD7FnPga/onEN4G7fiXxTbq+6lMWeQ18b0/6vOLiL/qc
z2VIXHka5hU3Pu7z+h4Ge9e3p9c3h/ld/56uz/nm1r+7bHdKv4v7fe7+Hub0
L+R1LOZX/0Vz9180d/8Qc/dnTOvnnPoV+RjsDxg/7fPSq3zS579O/Ohxn+/R
w3rU5x/IP3nY5+iDjeH6NX+wh0/h+u9X7Ev/s3HnSzs/2vw6/sE7K/aBO386
5muH6zs/2nzW2Nz50+bOn3Y/mBvEO570ufu/mBPfGQN3/xfz68qvN3d/GHP3
h0nrmwN3f5g0P+Nf/4+Xx+gXsn7zD3z+j/r8v5G/Hubn+zWG+YeV6/+axolz
/0ivj/ubOd837g/mvyl9fPNv+P7Kv8h5fauxeT13P7/afh/4fmX+eo4FXnrr
gddz+dXV10+8dGcCZx9S+ts6L/p8aO7zobnPh+Y+H5r7/Gfu85956XMF7vOh
4zGOv5iPxE8O+9zxlRTvmcL8jp8s7Jn/fp87fhLjTWH957z+O33u+MoHxfuO
ON++6HPHJ833/+Fqe8cvza/hHwvc8cm0fn6HzvdN+b3OB3Z+Lzzl91a/2pDf
C0/5vfCUvwsvffM2TvUExC/MXT9gfqH8+2SfuPVJIj/pc9cXmFu/xPwc+zC/
6wvwx6L3gL+V/BfzLzU2J1+B/CFz+3/T9bdhfvxPmzB/9T8I3PoW5gP5Fvgp
vmj/fvLx75s25vMz3//N5bH5qzbmfGpOfST+Y3PqQ7eBV/1l4EdtPK/winuK
b1fs6/1pr498ttJTYPysz2+QPxJ4/T49XxuTz1H+tXD98k+J3/qWfArrK068
vd2vuN9Xf4UXfV7ny8B9/zT3/dHc9Q/m7h/zmnykNh/5VbVe8dKTCdz6Nsl+
7fpDsL+msfXArP9lPv/l1dz6YObW/0rzbxKX/pf5lvUd9/nuLy6PzRf6YW0/
iV7TB/anz/v8G/a/z/p8t2J/XfpuN6bL63H/bvNNG28Cd/9uc/fvTvNPYX73
PzB3/wPrGVq/0Nz6hebWLzS3fqH5DY3NrW9obn1Dc+sbmlvfMM1P/Ph903/i
PEg/NOY3n9uY98/cr9/8mxX76seGjsQX7S/1R22c9PStf29ez9Pv97n18c2t
f29ufXvXc7l+y9z1W+auzzJ3fdZAP1TqwVr9xJj4Hzd+t8+HP2p/7/d51YeE
+YeV6w+frszf+scOaX0tvl/xVc6nBxrf6XPnRyb72fMR/2b8gz73+d781re0
H1fWz+urvoDt97TX2Lz2TX/a5+z7t8GefcM+cPunzNl3Jftdm38T7HluzYFj
vw2c18/9h30O/sUaPwyc59ijPh9UR2Ge4uvFlb8Z5w/2zr+sfGr2zxqbk5/N
/iryNfuXfU7/Us475tVfNcxPfvUcOP1bh8B5/bXfwB9IfAp/4eM+x79IfMOc
/JbKHxSfNE48Xd/7R/P38GD/hnFY/zeyL73FFn+0/9Oc/g2VvyRu/W/zqjd9
2OfWBzcv/+mDPrf/1Jz4P/kH1kOoc/1Rny/ya8Stf7CY/+Ty+sytbxD1GtL1
4e311X6EeqUvr+bs/8bA2a9wPfML9n9Hfb5vfAx8w/ra2P6k0zbmfGFu/5G5
/Ufm7B95zpmzPx3D/Ls23gRu/1Lim3B9+C5w+5/M7X8q3SXyNj67PF5wdA/u
B874oM8rbzfw2geG6w9r6yPucffq+akPtV6T9ZnMKz71rM+t32Rez48wv/Wd
0vWHML/1m8wrPve8z+2fSNef9P/Z99Afp/R9E3/R5zyvuI+Z8/lsg/28Mv9u
hZ/zetmn/Ys2bs/T4bfb+Gngv9vGzwL/522djwO/3Xiy//2Pf3m+L3gbl05x
Wl+yb3xIr2+8zNGH5X6KXlrlj4lzLqk4ujj6lWOwR58u2W9X5kf/bQp8s7J+
xtXvBT3U9v1BH5Xvk/lAP53A59ZfZ7fCK74gTv+g8o+n669w3p8Fb/Pvg/1O
67deivVPzK1/Ym79E3Prm5hb38T1WtfR1z3uc/pHVT8F8VvYn1xtP4b5XX9l
7v5Taf2Juz+V+327v7e5+3ubu7+3Of21p3B9+C5w9wc3d39w88qfDPO7f3h6
f9L63V+cehj6UU/NP0Z+krn7Sy84z4fE1T96cX3qf37U5/gHx2Tf/HX7FR7X
/922fvopkO+2vTwet30+kF/2vM/JT+X7He0D/42V+f39MSe/NnHG3D8+tP49
g8bcv8xn+hcd9/lX9AMKvOyf9/lZG29X1rcL/Jz5w/rr9T3t84s2Zv/jeJDj
P+aOf5g7PmTu+JC54yPmjv+YO/4T413t92V/d/Rva7zwb6P/m/zTqvdf+LeJ
f3xL+4V/W+tf+O895rxH3Qp+F+qxT/ocv0bVZ9he9RPm+D3GZK/6CnPqw/eJ
q74i8THw1H9w8f9Prp6/4q/opaDPRn7Pwz4nn4Dfrzn5C6zTHH2XKdiXPs4K
r3wWccZzsH+1sn70J/H/pvUzv/vRlv/gsz7fcn4/6nP3lzV3f9nEp3B995c1
d/9Xc/d/tT/R/kNz4se8n+b2H5pbvy/Zj4Hb/xjXF+yt72du/yX17FUfTL3b
0z6v+vfHfe76fvNz9CGe9HnVBwY+/dXV/IL50RHj3HvS/h/xw5M+r/z7wCs+
GTjzbwIvfZPjPicvMnHOsWn+qi940efsy+fAK356fPn/cd7g/anzrnj5BZ4H
zvzBnucG3w9zzv1zsLd+jDnvb+03bc/1Wb/qIV3/uKiXVP2iOX7dXeCuX1zY
q34xcfb39Muj3wv5I5vAiR9wfja/9cs2/0mfu/+f+fDLy+tN1x/D+hy/MHf/
QHP3DzS/3uz5/af74Rjul1Vf/KTPGc9P+9z3R/PXK/a+f5r7/uh+QKm/D9z+
UfPU36c+/9DfB+7+PufS+7xJfvhBn78nf/hen7+VPqc59Rjo35szRgfWnPoO
zj/m71bmv0E+e7C/tsI3//flsX/v/H6qnkHcv39z//7N/fs39+8/XZ/ff1r/
JnD/vs39+zZ3/NH5GEfsNx/1OfvT+WGfs/9O+R7O3zB3/kbiQ+DOvzCv/Tn7
J/xJ7MfxL37W5/gbS19P/Cb8QZ/fXuFcv/Tyxd+srG/DOMz/juuvvL7SgwjX
r/oDcfLzOad/qXrjHfXBT67mjM3ftjGfp/kp8z/s85n64qM+P8M+XP9rxivz
V34b8Syer8S/nva5+2+au/9m4kPg7o9pXv2bHvc5eYUVP+U8fvLxL/pfVc8h
vqc+6qTPXV9hvlnhpT923Ofo16brV3+MwK+tXJ/XV+cPxXMcvzF3/Mbc8Rdz
x1/MHV8xd3zF3PGVZF/9juQvtv/X3P5fc+f/m9v/a27/b6xn+Pzq+Stf93fa
mHreFt+p+mfz32rrPwi8xfvL/2pO/Clx8gPS/L+nsXnTn6v8dXPyJxJv4yG9
/pa/QX45eu9Vv6P6V/PSt9/2OfrN7HfMXd+X7HdhfvTtp8Bdf2de+tPh9VV9
IecV4jHtef418ZqHff6G8f0+f0f8J/CJ+NFRnxPfGoJ9jQ/7/O3K+pif57P7
Hdm/nfoh8f1K9qzfHP119kfm7n+U+LC2vjC/+xvd4vNov6fXjO/1+TU+34M+
f8X7G/hNPt8w/40Vfkvc/oTkP63+MvIvmCf/avV9CP5VePKvll6N/AflP6Pv
y0n7/3f7vPxmB33Ovoj7oXmN0/zS3zPHPziE65d/0NeD499s17fem/XdEt+s
cPy05tZ/M6/61GAPn4K99ePMd81+DNz6cs5X2ir/J/HKRxB3fpO585uSfbo+
+tH4f9P86frOfzJ3/pO585/MX2PP81j+CPsfzO1/MLd/wZzxGOa3/8Gc/OEp
2N9eWf9G/onkj4Gj11b1BeS/POhz68uZkx8zBXvye6o/ZOAV7xO3/8Hc/oe4
/jA/+UFjWJ/17cytb2e9DNcvmJ+1MfF+c+tjmL/DPnDshzC/9TXcD8j94c1v
amx+i+ut2A/B3v2DzI9W5nd/oWSf1u/+Qu437v7i5tNPm33oVz789PL6zXfw
wz7fNj4H+03jdb4M9mOYf1qx3/zssj3x+oqHtTHnFXP3hzYnP2EI/Pa35LvA
zzU2Jz9hH/hNzvvh9VW9/cs+vyX7HfdT+t9obP6W/MvAf8H9/U6f/zn5jnf7
/CfMf9jn7+D3+/zvuH7g71ZeX+lnhvXRP28O6/tS+p7ud3ENfa+VfhiJu/+F
uftfmLv/hbn7X5i7v0VaX5rf/SvMr6OvtnZ98pWkV5b6m8NTf3Pbu384PPU3
h6f+5vDU33yxvmCf+p9XvsfK+t3//Px/b/yk/f825v5hPrdxxYfF921Mnkqy
3wf7A/hJn1+08S7w05X5GQ9hfVx/e9Lnr1de3xnzB/vzFU7/iYnrNT1o7jfW
pzaf4Hf6nDH3J3P0qxNH/7r623/Rrhf0Wcytv2Ju/RXzc8ZhfuuzmN8mfh7s
5zYmv9n9GN1f0dz9E83dPzHNTx6GufvHmLt/YuJpfe6fmF7fJszv/orWU7V+
gLn1U1M/PD6f2C/vTp9bX9W8/CkHfc54Dtz6qebWTyXOVHofP9bYnPGjPudz
H4N9xbmeXs2nML/jq+Z8b8dgP63Y872q+LbqhV0fbO76YHPXB5u7Ptgc/8k+
cNcPm7t+eGz1kKV/RPz8sM93xOcTb+OqjxenPpPzaenYnFwel5/YXPUV5vW9
C/Z8rjz/zF2/kNa3Pbma1/z4C/FH/JXWF/g+8B3jMD/++/o+iRNfqPWLl38x
XJ/xGObn+tvAT4kvhOsfwMP1z1Ze33aFuz/gEecB9AnY3z/r8+q/9/xq+yHY
v+F8te3zHTzMfyR79M7oN19xmB/1eemnBT587+Nf9IMX9qoPTfZp/qlxntcL
+zb/nOxb3uSYrv+vr14fr3+T5m95ndu0vh9cHrseyfFXc9cHmTu+muyHML/j
p7Fe6mmfu77I/UjcX8Tc/UPM3T/E3P1DzN0/JPE5cPtXNpz30Tts46pHFL+1
wgf8Kwd9jn9hDpwx/kfHUx0/NXf8NMZj7wbexuUfFh9WuOOj9jfZP2TO+0f+
o7n9R8mfNYT57T8yt//H/D32+E/kr7D/wdz+BXP7F5I/ZFiZn8/F3P4Dc5//
rddnfT7z76zo/Vm/z/wQ/b3jPv8u+ntr63vZ59b/M7f+n7n1/8zHlddnfUBz
6wOm/XDtv8zD/rj2P2F/XDzsj22frp/2z16/98/mXL/eF3j7W/cZ8YprJHvq
44K96//Mq8452OP3i+tTfZ45vyt+f/69+fdj7t+PuX8/5v59mPv7be7vt/n3
+H6H9TE/+cmch0pPkfPHZ33u/pPmnAcq/i/O+Yj4q/mg/pPm7g89vb78erdt
XPnM4nMbz4FjX98T8d3PLo/NB+YP/KyNp8D38HD9A15fsN8w5vWh98LvQ/2d
F9z6M+bWnxF3f+gFtz6M51d/59Svmu+/83Fc32Pu+vqUzzMG7vwbc+fXJPsp
cOfXmLs+n/M6+fTkD5aei7jrI82d32g+apz4HLjrK82d/5XmH8P8zq9cXF/5
Xebcf0p/iPxS8qfbuOrdAi99MvFP4WF+8lc3gV+oP8R/5jzWxu+lb2T+nzQ2
5zzH/dGc+Dj7Z/Mz9I1W+Bw4/RH3YX3/eeX11XlUek+cx90/1dz9Uc2dv2Zu
fSpz60uZ/xqvJ6wPfbQh2Du/LK2v4svN38z9dm71VnV+MZf+oPkWfcZgv9CH
FGdc+zhfH/94Wh/8uM8X+pHi1j9ccOkfmltf0vUS1vcyd/2DOfpc5I9G+0d9
7voG81cam7/W2P4S+0diPnrwt9g/Yu78cnPnly+4/Cfv2/2Uz++rNub7b173
35d9/kHjZL/G58DftfEY+J71rfDa/7PfaN8H+nOyvzY/09h8XuFnK/NfaP9m
jn59nQeCfeXPip9r/5XmL/2d8HrmsP6duO+nvj+a+/6Y7sdVbyDu+6O59XXN
ff9K9qzP/WTdP9bc/WMT5/M1Z38/BXv3jzXfrdi7f2xcf1uf+z1/R2Nz92c2
d/9lc/dPNv9tzvdh/lH2jmdx3ybPwHwR33I8zPEp2zs+Ze74U1hftHf8Sbye
I2H+6sub5nf8yq9f8auFPXGcHwZ+5/LYehDWfzC3/oO59R/Mre9g7vqJtL7S
pwvz135C3PoNVU9PXgv1/a/63Plb5uRX7VfsyWNJ9kOwp//rGOydf5Xs0/rO
NDZ3fta2+avYr+7J/3/Z59fxX73oc/xb28CZfx8482/C9alP2AT78WdX288/
u9oe/1haH/OP4f3y6zP3+s29fnOvf2FP/cTJ1fOzfvKJq5+OxubX6O961Ofk
R+O/Na/850d9XvnKD/uc/OYhrA/O+cD8629pP4T1D9TP41+mngR9FvWrMUff
oc5j4p+iH/Goz61vma7Ped7c+pSVV0+/ZuJLP+zzuu7nV/PSOQw8zT+s2PM5
bML1sd8Gzpjn74KTpxjWx/vI9annqnzDNiY+Z/66jfHPm1N/xv3T3PV75q7P
M6febA7Xf9XGFX8Sp36OeIL3896/m1d/mYM+9/7dnPPnFOy9vzf3/n2hJ2n9
Z3Pqfl4Gbv1n8YX+s7n1nwMfA7d+ZbLHf0B+MvEg6sfxP5uTX833x9z9N8yr
31qwJ/97CJz+csn+NesL66d/CP7f6nPJ+Vz51wvO+fgocOVnm6O3WHrP5pyf
w/zOzzZHHzLN7/xsc+dfm289v/rZuH+NufvXmLs/TZw/cflf0/xc3/nAzv81
d36vufN7zZ3fm/KRxzC/83vNnb9r7vxdc+fvnrV8JOoxzxnf7fMd+Uv3+/xW
G5Ofbn6B/WGfH8Dx10ivz/p85tbnM9+jv/ekz62/Z/6ecZi/9PieXW2P/571
EM+7xvN52+el73fc54zZH5h/YBzmH/6mPx9j1j+v2JdeLedd9ELR39v2+aix
+Tnn7zC/9ffMSz8pzF/2z/uc/F2u73r0gf378z5nf176yOLUd/P9MXd9ubnr
x81dH+5+Be5PYH57hd+Ufz/1Q0j29v8m++o3K+7+Bml+9lED9yvyBzQ2p/6z
+vuJU/+a7Mn/rHisOPe/IcxP/ukc+PUVe9bP929kv0V/Nu0Pzb3/M2d/ljj9
gVmfOf1heH+iPf7rpmfI75H8pfo9mrf8ol3i7r8Y5uf+uuC/29ab5m/25Dcs
+P/08S+fz2m7H3HeeIN/8UWfH0n/0/wA+5M+x/84BPvX0k81f9vGxGnNrU+a
1s/Yz4sd9k/7nOvz/TJHP3UK3M8X8w8r1/fzw5z3l+v7ef8Nz+/nfV76NGG/
4Oe7eenPhOsfcP4P9t4fmG/aeArrvw4P16/9UbD3/sP+CD8/zO1/MLd/Ic3P
86O+74caf9bnr/j93evzgxX+nu9X4BPfX69H4zms/1TXd73OG8aBu37H3PU5
qR6o6nOIB3H/If70os+JH+EfNy/94Jd9TnxrWpkffxl6VJwX+P3wfDIv/9uj
Puf7jl/SnN/XGObn9z+F+Q80Nh9WONfHj2p+we8z2Jc+V9v/VT59iJ+bv1L8
2tzxcXPHx81/AX/c546fO9/J+U2LfCjpZ5rv8XMc9rnzn9L8Se/T+U/fUO/a
zvP8PrkfmN+mfitw6sOSPfVdQ+CfMv/9Pq/1PejzccWe+jbun9RL8r78A/mt
L/qc8T5w8m/Hl31OfusU7OFz4P8U1sP4v1K/GezPVtb337h+4P+o1/8GvWvu
n8QPT/p8Zhz42Yp96VcHjn72ENb3FeOXfb5HnzvYs/5d4KdtzP7efLOyPl4/
7+87/Fnt+87+p+KX4u4vYf5hxf4r7B/0+Tn70zB/7V8P+xx/Efc/5xs6v9Dc
+YXmru9I84/B3vmH5s4/TPZzuL7zD1O+5RzW5/zCxNl/3mC/c/Lxr/dH5te1
/zHfs18L3P0bzAfyf4K991fuV+H+FObuT5H6XVT9nrj7S5DvzH6B+g32B+a3
yb9+2ueuDzF3f+Z0/eovJH6wsr7rK+vbKr/c3P2dzck/nwN3/2fHkxw/Mnf8
yNzxowVX/CjNz/Un9EHa/RJ9En7/5q/Z39zvc++PzF+t8NJHCXyrsfmXmr/i
dp9fHpPftuA8B3/U51W38Xmflx8o8P3K/NV/MnHiaIFXHDDwiiOq3zf5Su5P
a+78nWQ/Bu7+tObuT2vu/B9z96e1noDrn83r/BS465/j/C+vnn8b5v9nK/au
n07zJ35b+gBJbyFxzp/7lfUPgbs+e8QfE/xH5vYfmV+T/yhxzmfm9i+ZD/Aw
/23Gd/vc/if3e6C/AvsDc/d/SJzzjbn7P6Trb4K9+z+k+ZO9+z8s1q/+D+S7
835Nf9zGdwNv+fXkmZtXH4/DPq86rcCrPuBe4OhbHfT5EOYr3uzr+er//782
3l6/4yWOj5g7PpLsyY8zd/zE3PETc8dP0vW5P1pPzfpp5tZPS3psxK88n/XV
zM81Nkf/ehvsrc+W9OC4/of2PKTew/3bzGf011/1Oc/LfbD/ZsXe/ds4R7Of
qPzWH/U5v7s52E8r9oPzX8VLVz1x8gsD59zJ/sr11KeMn/S566vNXV9t7vpp
c9dPm7t+2rziC2H9rq+O9eTt93T95209bb6LVn9Q/ajED35+ef7EhzD//PPL
6zc/5fpP+3yzYl/XD+s/0+ur/It2vyQ/l/O1eel3HPf5DY3NKz8lzE/8bg72
n7bxbmX+Kcx/U/b2V9g/Ye7+mebun2lu/4W5v/+p3yfPg7/F/8t80l8wZzxs
+/xX4f8zfsPv93mf/30bb4P9Kb+/wF+v2Ff/ivD6mR//R3x/yP8i3k0+ocbm
9M/hfmJ+7YurefXfCfPTP6j6OUmv8lPGz/ocffHyH4mXfmbg6GPOgd9auf5G
4zR/4tbfTK+P9TlfOOUHw1P+b50PQv6v53f+Lzzl/9b5YmV9zv+tOtb2fbV+
eOLVv1dj+uImTv77uML5/bhfr/d35u7Pa+7+vObuz2u+2N+F+am/pJ8l50nr
RyQ+B259iWS/xufAS/8jXB/9iF3g+I/HwL9p9lPg1T+WseINr9q44nfipxqb
vyM+HPhXxJcDn9p4H/jNNt6d9PmO6zfOebzqp3w+N/f5Wbz6XAT7+vuDPi+7
xr/8ov174+7/YT7Cv9/np23Med3c/UPM3T/E3P1BzN3/w3oH1icwt/7Awv7u
Cpd+QNJb4Py2sJc+gPv13ELf9rjP3Z/HfEf+cuDuv2OOPi/727S+TbB3f53U
jyjxkfzsMP+m5UNTn2C9NOufmVv/zNz6Z+bWNzP/WvkbSc9tCvbO/0ivj/OL
65kPeH591uc836iDjPXQwd710Wn+SfVn9XlLf8w81Zct7I/7PNWflb30xRbX
t35BmL/yE8Vd3+96fdfnm7s+39z1+eauzzd3fX7ilU+6Up8f5w/rd33+vvWz
4nl60cZ8P8zP6X/1os83/76Nj/v81r+/ev7rK/ZzG/P7d76L81vMnd9i7vwW
c+evmDt/xdz5K0kPbA7Xd/5K4vz+S++E5530X8ytz2JufRbzytf/0dX2+zC/
9Vn+Ts8L62+a+/li/ne6n5uTv8j9x9zPp8TnwP9OzxfzL/V8S68f+yPpWXC+
43xufsrz4Wmf1/PreZ9bP8O8+r+G638Jpx5KevELfQ3x6iPy8mp7zkML/vDy
OF4/8IV+R+Bp/dbvuNX8v+ynRvzB2z7Hf8z339z63OaMd8F+i3/6pM+tv53W
X/tH7lf0o+D+9LjPPzB+3uelL/isz98wftrn77EP18ce/2S8Pvq2rpdzfZz5
715e/4K7fi7YT2l+18eZqz5uka8U8ofgKb8InvKLiof8Is+Pf8l8135Xm8Dr
vrBivw288hqSfch/cr4X8T7yD8ofp/pPc+tvmF8n/yLwLWP8wTrPur+L+Vbn
T3Ofb819vk3X34br+3xr7vOtuc+vjhcyLn+/420/v5o7Pmju+KC544NpfUO4
/tkKd3wx2TOe/uLjX74PjMtfJ75p+TXzSZ/PbTwG+10bs58xP4cHe3j553lu
o9vC7/vHfT40vg/c9xdz31+S/TZw318WnNfdxt7vOn6Y9sOJe/+a+By4/Sfm
3r86X4b8WvaH5uT/kn+d7KfAK7+G+nbpSVg/wtz7X3PrS5hbPyLl21U9jLjz
4xb2+v0l+ynM7/y4eP0w/5Yx+zudJ60PmvgQuM+Xiaf5fX4kXsfzwP1Jzav/
53GfM+b5aE7/DZ5P5mdhvuL/9mp+fcV+Q7wycPfvSK9/1hh/pPsXmbt/kbn7
E6V+Sfhf2K+WHvJvt//3o8DbeJd42w8Pnwfe+vtUXFW8+umk+f/Fx7+bYI9e
Rekxmt++vH7fL31/TPdT/E/mvn+aj/BgX/mEwZ56idJfE/f9+Sa/9xZfIl+T
enbzD/gvv9/n5/A/6XPnV5s7v9r8xsr6rq3wDfenNrZekPWBzK3/Y279BnP3
Z0rzV/xA3PpA6fpjuL77L9nfbP+y+evmH94Ebv+yOf7pXbC3f9l67e4vvNBz
l377wl7x0YV9m38O9u4fvJi/jTfp+oqfJj164qeO56G/z37H3PE5c+efmdOf
F/9H6qeU4o2Oz+2Ip5A/TXzmWZ8znp/3+dsVe+Itw9r1A3+3Mv+8sr43cO6v
+Fup/2d8r88dnzTHn0t8ypz87inMX/VVD/oc/zD1NRftecF5kfwQ/I3mPF/w
L5jfID8l2PN8q/uHOPoHU+DY78P85PezP0yvj/Fe9fDWBzB3/YW59QPMrR9g
7vr+NP8ucNf3m/P85P5Ov8LSI27jysMx/72PfyvPxLzt76pftPnvtL9tfKb9
DPWnla8t7v2Z+Sn7p4d97v7T6fpD4N6fmbu/tLn3b2n9Q1i/+0/7/XJ9i7lf
v7n7b5v79Zv79Zt7f2ru17dhv9K+j7u/bvYHfb4lnn2nz6e/vprfWrGv8b0+
P23z038+rQ9uPSHrB5lbP8jc+kHm1gfiPlP+EOJsL/u86qNP+rz8ksEe/2Hi
3Kc2gVdd4Ys+n2X3jZ7fN9Fn2fb5nuf7sz6/YP/w/Go+B36d81O4/g3WF65/
C/vAS38mXN/7G3PyV/j+mH+j98fxZPdnMHf8N9nPK3wxX+jfsIh3q7/CYn3q
r+B4sePD5o4Pp3jzLtg7Pmzu+K959Wdun9cHnY9LH/gHfU5+ybTGD/p8szL/
vDI/+pbcf90vu/r/POvz1/Dnfe7Px9zvn7n7W5u7v7X1Qpz/Z77on2e9EemD
pPnr//9Rux7+vj9s44eBtzHnhQVv9culxydOffN01Of47+bEf7/xz/p8+qRx
9AqVb/+e/cvLPnf+vfnM+SfYOz/f3Pn55s7P5zlV/Ualv2dOPAt9A3Oeq5Uv
H+bn97ng3Dfb2P4y62eb2z9mbv+Y+e0VTn3lFK5fPNjbf+Z4n+N75q7fM3f9
nrnjd+4XkPoD1PkA/bKHfZ76A9T5AR7m/5pxmH8Wd7w/xfcZp/i8/7/j7/X6
VniKz9u+6pvZL7fnzX8n/+9en19jP33Y5+y/+f2Zo6/C882c/ppT4NjPYX2b
FV76LvjPtR9Gn5D8EHPvfxOfA9+yv3x29fV5fpp7/2zu/bG598fmtf9ur7/0
MNv3p/QnH/d5fX4rnHiNOfm1iV8wftjn1FPMwZ71j4F/o+u73tb1teaur028
8g/ErX9u7vpcc9fnmrs+N82fuOtz0/szK3+X34PzI8zfUD8aeMofLn+18iPM
X6/M7/4b5s4vrj4V/L4ONTZv+8o52LNvmIM9fvPSOxYnbj4l+5X1UZeyDxy/
Ou+/633S/r7iX6rvWXDqd4K9638Sx39uvqjfwT/VXvc5/rEHfX7Wxuy/zA/g
wd7+M3P7x7yfv2B/Hfb73r+be/9u7v27ufVHza0/an7OeSBwnw/MrU9KfVb5
2+m3eq/PJ+q5Dvp8ht/tc77faX7s6/ye1nfY5xtx63UkfQ540ueAJ30OeNLn
gCd9DnjS5/D81ueo+w+c+znxds4XxNeP+9z1YeaO35vPbTwFfrZi7/oyPsd9
eD6Yl65bsOe+sAucc/M2zM/3dh8488+Jcy5feX27ZL/y+pl/SK9Pzyfizezn
Sn/zcZ+7fsmc/l2J71e465OsJ7bQB9N4oQ8mvtAHM7c+WLre54GvXN/6YugF
8Ht5xfi4z9G3IX5sjr4A93/z4Zft9QV79A/GcP1dG28CP2pjft+Jb8L6tiv2
19v694G/aWN+3+5XQ/4p5//Uz2bRP6bx0j9sn7P7Jbv/sTn6RvvA5zbGj2bu
/snmH9qY5/vY9AB4P9Ev2AZ+Qb3GSZ/TP24MvPQLwvxb+rUFe/q7TYHTPw7/
l/lpG/P9utHOU+SjHmls7vxnc85n4wpP83N98k9vtM+L57n765i7v6e5++eY
uz+WOf2rOH+n+Tl/p/VP4fq3GYf5t7q+84nI7+H5Zk7+EPs78+qvErjzj8zp
3zQGe+cfmTt/iH5q5OPw/Sg9IXH8D9z/zPF/EL9JPNm7fx33udL3J27zuM9L
N/5Rn2Nf9R/iVY/7rM/xW1X9h+15/qb5df5frI/X1a7veI/Pf+Y+/5n7fGfu
8525z3fm1l8aqPcin7HdH2t/Kb7oDyrOeAr2zD8HPnN/Pu7zA8aB73n+hPXR
35nPM62/+rvLH+Dzv7k/X3Of7839+ZsvPv8v2rr43bRx6QWIn7dxxXvE94wf
9zn6UWOwt75isk+c/dkQ+FvWT/0CeuD4l+iX+qDP99Tf3utz+qtWP2DxC+pz
w/yn2N+/mg/h+ow555nfenN5/dYrcv6vufN/za1fZG79InPnB6f1TWF+92fg
eVf9EvHf37uaE38238KDvfNL3hDfQj+I+MpRn/8t44d9/ufYf9bn1W8vzP9m
hX/J/I/6/FeMH/T5E8Zhfvo/VD0Zn0f7//QvT7ziN0d9Xu9/sIfjp0B/mPsB
Y/aH5tavMKe+ZQ725BdMK/MPYf7KX3jU59avMH8te/frs36OufVxUr+/feCu
Lza3Po65+/eZW/8tXX8M9u7PZ279HetlVP5n6vfDPi3whb6GxuTtT4Ev9DXC
fKWvEa6fOK876YUs9DGCXshOnP04+8rKjxPn3DEmzvqf9Tl+qSnY8/o4/5pX
3CrMX/u8xBmH+fFbrNnz/lS/tHY/K/3X+31e4wd9Xv3VPutz9GZ5/qX50/W3
K9e/sTL/LfHhux//lv+5jXkfzYd/1da3Ddz6PZ7/k49/+R0mznl8wVu+YOk5
KB/Z/mVz5xcv7Km7/bzP7T9ecOUfL7j8y4t8auUnE6/hvrhp/qXKZxQnXlP3
DXHXf6b5pzC/6z/NiT9xnyLflbjIvo1rvyu+/dPLY/MN8fP7fT4Sv3zQ5zP6
32H+HfMHPrL+cP1h5foD+b9p/mbP73v/s8Zb3OoW+XF3+pz86DpvBfsx2JPf
zOtf8DYeE8e+zW89SetHJr3J1G/V/VHNrS+Z7OdwfetLmltf0tz6kolz/ppa
PLzq7RTfN3d83xz91/p+iRN/Jz/f3PkBidd6vD7N73w68i/xj5hTHz0E7vy7
xPEvmjv/zvz/h4frUz89B+78PXPn78X5A3d+n/k/razf+X/U2/O8cX2+uevz
F/ZNV2JM9qq/X9ir/t4cP0Fcn+rvF/M3+z158k0PpfrBWl/Q/J+3dTwO3PqD
5q3+ofzr6forvPo9mY8rXPqFzidwfoC58wPM3V/U3P1DR/yBPE/kHzS3/y/y
u32Ovh/7a3P799J5lPOnuc+f5tZ3XHCdP819PlysT+dD4tk8n4c25vls/p74
YeDur2BOv5/ScxE/J3542Od77MP1iZ/z+bifkeOz5q/goR8S9uMKn8L87n9k
7vjpqfYz3h+Z23+W+BC49Vvj/OH69n+Ze//j30vyz8CTf2Yffh+L32Pwr+zD
72fhT9LvB72Dirc2/auqwzLn/h/49C9X7Nv5mfjvgnN/V7yZ3xP+2srHFbf/
3hz/8Bjs36t/r7n9++b2HxNPq9838bZ7fV79bAInn3YO/EJj82vEB7+/Yn/Q
55W/e6fPiT9W/RH979r74ddvfpPxgz7fMD7sc78/5re/5fzJHj4Ee9Y/hfX5
/XG/Cfd/MH9Ffc9Rn1OfxP3V/NYKd/8Ic+qXEqf+aArc/SUSZ/9Sek2hvs0c
fSj2webEH3i+m8+cP4J9nT/uXs3nwGt+fu/qt2t9IvNX0g8yd//f1E842bs/
sLn7Ayd78h/Ln8G5hufzQZ+j787v2/wrns/BvvwRd/q8/BP3+pzrs782J37H
+T+tr+4fzV/EeWnX/EnVX1bc9f/mi/6y4vNPL4/Nh3b9KdiP+LsCtz6A9zve
/y+49jdpv0R8ydzxp8V5RPsj84W+8kp8arE+7Z+sR/kK/Yd7fX6wwq1fYW79
SfPTbzv/QZ9bf9Lc+hfXib+QF6f4kPmn8Md9fsD40dWc/bc58aAh2N/S/Kc6
b73V+dDc57tkX/2hxI+wv9fnE/xBnzOewvqYn/2Hz1vWBzW3fmfqhzSu2PN+
m/v8ZG79T+s1WJ8h6TmMwd76C5EHe+afV9Y3hvU5P8P5Ps7vMSe/J9k7/8fc
+T8p3yhx8nOGcH3nB5k7P8jc+UHp+pVv1sbE++r1Hff5d5n/pM9r/LLPeX+I
H5vX5+P52vgnXD/wMa2njfl+DIHz/uwC/x6c90d6CdaPNLf+o3npEwRufQRz
6yOYo9+1D+u3fmRc3/M+t36C873q9/+sz1P+V+njhfwveMr/8vys39z9jRKv
egv02vFXo79+1OfbNub+aL7DPvAL9OMf9fnUxmOwt/6775e+P6Z8ySnY+/5m
7vubue9v5r9gTL4ez2ueF3p+J151feLX8M/e7/MP6PMEPq7Yc/3qNyo9S+tX
mlu/0vx1G7M/Mre+5YKvzA8njmZu/UvzC76P6E/htzlpf9FbeNHnVb9y0uc8
t5M9fAy8dMsC53eHfyHxuD7ycFfWz9j9TBjXOUz8rI13L/rc/U8Sn4I98yd7
9z+J10+vj3x68hD5vbTvo88X5rd0Pkic8595/T4P+9znD3OfL6zn7vwGc+c3
mDv/wNz67klPvvRRVA/m+i9z13+Z1/c/2ZPfdtTnrv9acNV9LThx9zb/B87L
1KNzfn3e52fwx30+6fxrfg5/crX9HHiNn/b5Bfbt83U9sPvPmbs+2Nz1v+av
NTZ3/a+563tf49/nfMD4pM9fER8I/IDxyz5/p/quND/vH/51ruf9uTn7Yd4/
c++/zYkf7NZ4uL733+ablfWdE79oY99vHf83d3zf3PF7c99fkz+p4hXSI7Y+
nbn7UyT7OdhbnznaP+5z958wtz6zufWZk141Y+erv+b+dK/P33G/Wct3f3A1
n4N93f/C9b/C/xjsnd9u/lbja/9nez0nH/8etTH7D3PyO7kfmF/HXvEf9oMp
vgR3/wtz158n+zS/+1+YO76U8vlSP55F/xxz988xb/n5Y+DkP+wTd/8dz//d
y+t7ongj+lF8/83fsj8L/BeM7/R56T/d7fOfMP9hn6MP6/pH9vPoE5b/KnCe
X+bWHzBnTB9Pc+sPlB5s+z6hbzEGzvmZ/ELzod3f+X2Zo187r9hTH4LeTcV/
v7j8/83Rz6GexJz65opHBvsxzG/9HfNv4OH61sdxPML6yubuP2bu+IW54wvm
zl/fEQ8jn43x4z4vvZ4nV3Piv+aMh6d9/uXK9T+E+Ww/BHs49XGll9f8HVv0
IQ+u5txfzKkfmYK98//N99j/oM/r+sF+g54k/qh2PydevHg+mKv/o7n7Py7s
/fywvZ8ftlf/yIX9J1evz/0jF1zPH/u7+f2gZ5E43ydz+7fNS+88zG//t7n9
32n+0g/5wzYf5/b/ufGHgbt/gDn9AQJf9BdI9om7v4Dn/+Ty9VO/5Iovhn6h
VQ8u7v6f5u6vZO7+Uebur3RKvhz6U+TnPerzOg+v2E/BnvN7xaO/aP+/Pa+s
f2fu52/iPF/T83wTuPXpzP18tb81+VfhB8G/Wn2JviW3/9XXT/bJ/1r+YvlX
3Q/U9Z/m1g81d/1nst+G67s/6HXW237P6L9U/Ezc+jLJvvJrxHfUh4T5q/4j
2Lv+xLz0ZR71uetPzPk8x7C+M14/+7fmf8PvetrG1LOYbxnf73P8i2n+3Qrf
oP/0qM9r/KDPJ+Z/3Oe1vjA/+oOVL/tF+//Bv2Xu+hZz+7/M7f8yd/0K8V6e
5wfEh5/2OfFn7p/m7q9u7v7pi/mxf97nr9fWx/zJXv3TzelvXnplfN/xD/L7
POhz9JrIT0284p/ijIfArR/l847PN4mXfl04rwzhPGV9VHOffxIf1vjDq3md
f5SvW+MnfV7638He+bnmzs81d36u++24v465++uYu7+OufvrmLu/jvmX8GdX
X5/7o/3h9m+bO3/I3P5vc/dfMbd/29z+7dRvsfKtT9r12J8eXx6bW3/GnDhV
xSvF8cum61deQLKXPs1ifZqffgr1e/vry2Nz+ivMgbt/g/luxX5PPkfgr7F/
1OfuD2FO/4kh2Nd+kTh0O2+Xfg/ny6d97vrnhT3+Bd+f0M9FP+NRn3N/SnxY
sUefYU726f7G9x+9hcd97vufeemHcL9x/Rnnx/t9zvmR/aU558PS4xafsL/T
58Rvx2DPuPJpxc/D/1/Y3+3zVyuv/53s33O/pF5N9ZGJVz2lOPmjtV8VH7Bf
mz/sl+p8+IM+9/7J/Na3tB9X9musz/FKxyfNr8EP+vwV8cHArb9l7vilufW1
zBf6WvihON9Yf1l88Tdw6ifMS+f1QeD8DoO983fS/KVPqvO6z9/mpc/6uM99
Pjf3+TzNX88XcZ+f0/q5Xzrf1PlniZN/Zs7+jfi3ufNTzZ2fau78NnPnX5h/
w/52xd7Xm5RPl9ZP/LD6n/L7afs68gPwz5l/ye8z8NMVTv4X9Z/m5GPtAmdM
foE5948h8K/F7W+0/2/hj5R/Dz141kN/ZfT3zR0fNkdvfg729EtgbO74MXpv
7GfQb6v8NnH00Cq/R5x4FeefNP8Q5kffjfPd4vrE7/j/+DvQg5X/w/z8ry6P
ze0/Mce/MwV71xeYu77A/ercfzr2szsOXP3rzN2/LnHOWQuu/tfm7n/tejfX
r5m7/sx6GUk/ufTJpZ9hbv0Mc+tjRL2OcH3rZ8zkg+LPU/6n+anG5vhX65wr
fkb+aODnK9z5o/O/bWO+j21c/XbEp/b72gTOuPQvg/022L9esT9o9lPg25X1
jbJf6K228y2f34L/4eWxOefjOfF2Pt4k/sm34+TfLHg7X3P/IJ7HeYl+ApxX
zOmPxf7e/H0bk39lfrZiT/+FMdh/zTjY77E/7PO5jTk/1X6KfHTlR5m7/4+5
+/+YVz3S8z7Hfgrz2/9oXv7HNnY8zvt/c+/fzd2/wdz799Rvgs/HejrWxzG3
Po659YPS/Mne+jfm1h+K1z/oc+sPJT0hnj+pXoXvl7n1NxPn/GTu+hZz17ck
vdAxzG99S5/XfD5L57khnPd8fjL3+SnZp/Okz0f+PPz+J17+RPFUX2S90DHY
+/3dtv0g+QT7pq+MH97c+09z7y+TPc8nc+8fzdFvZv8xsV7unzqfmPt8Yj6i
Xx24zyfmuzaeAp9/rPV4fYy3fT6gfx3s4dPK+kvfRnre1uc2tz63Oa8fP1TS
C+f8s7AP57u6vvS7zfm+TOH61vdOr28KvPTN25h81L36FU4/7nP3PzQnPjsG
e+bfBf5luB5j4s9z4JxXuH71peb34f7s4uStVvzNnL5Nwd79f83d/3exPvI6
nvc5z920Pjj5C/RjYr/35kutX7z6MT3v89cr9jfbeB/4LfHhty6vm/zK8l+b
t/zYOfHfa9e9E3jLD65+4eboKyf+O+1v+55c43lEPhb1Hw/63PGtxLm/mDs+
ZV75l8He8alT6uXRv8K/c2+F3+3z0xV71/8nXvGdMD+/E/NF/T/+wZavXfkl
n/c5/sP5h32OPlf1axZnvA3zk3+zCfNzPxsDv44/Jsw/cP9u9tZjtP6i+TX2
W4d9Xvu/O31ufUXzDfoa/H5P2rra36r7Penz+nscOHm1L/u88jOCffkd2t+L
L9r/b/vPa79sdk/6/GCFc34vvX7xm7+8mrs+yHzT7Lnfmrv+x3zk+uhLql76
jPvT8dV8F7jrq825/+2D/Xbl+q6/Ttfn86YfM/736k/39GrO52PO/YP9szn1
c3OYv/YvwR7/6xjsX61w/Mf4681va33uh41/mv2WuftfJ576bbv/tfWWb9O/
9rDPP4XzfKPeAX1D1VeYu37CHH1V6j/MXT9hzngI88+Mw/xw9u/0Q6nvh/Ib
zZ3faO78H/M942Dv+JX9BfYPmPN84Pxj7v4mqR/LGOa3/2D64/b/2e9Rb3W/
z6kPrnwNc+qFD/p8aPZjsKe+LV6/+dfx96LXWfcj4r1P+5z8EX7/5tb/THwK
9gfh/zO+vrK+qr8P9tYfTa9/CNz6KObWH/XzwPd/c9//zV3/ae7ng7mfD+Z+
PqT5E/fzIT0PK3+29VOp/lbqr2JO/5bxqM/dn8Xc/YGd7+789lTvy+sxd367
ufPbEx9WeOWvExekfpC+QI/6nLhh5dOKk6eROH5Pnh/x+sm+cT4/6/m9Qv/z
SZ9b38/c+n7m1vczt36fufVLne+HvhL7CXPn55lbX8ScfBzyV82tL2JO/g7P
n9fNf088tOIDx31O/xj8p+bviE+c9Dn9Y+Ywf/W3CfbENzgf2N9APQ5jc/sf
zNGjZH+Y/Blpfuyrv7T4tMLJj+Hz/XX2I+QLqT7W3P4f81/jfP10Zf5g7/pa
8/cr9gNj9OuJ77XX6/25+Q34vT7/+v+5PDZ/z/45cO//zWv8oM/HFXv0c6o/
GPXw7b6LXnbFe8TRe90GTv09+Rfm5Bftgz16GeTPuB+V+0+ZE7/n/m3u/lTm
3D94vqX5az8X5p/C9W/Dn/a5+1st/Mn2H5u3+n0+/wW3f9nc/mVz+5cD5/u9
4L+9wlt/vSGt/w9k/ydtPfjD3F9ZfGr6S9y/F/z7ms98Zf7Sh0rXb/a7xNv5
ap84OiNc7zvt39lX8f14GXgb439dcOIFP+zzRf8t27v/lrn6b/nzWnw+5n7/
Pfb7b3v0sRL35xPs+Xy+anpnpR+J/tnLPn/dxtz/kv0c7D9gf3K1/RqfA9+1
8RCuv2/jXeDvpAeX7DeBf9PGU5j/jV6fn9d+Ppv7+Rqf9w/63M9Xcz9f3a/F
/VnMJ9U3mbs/i7n7syzyMZR/Ye78CnPnV8R8j+3V8/P7st7kTvWv5m81Nre+
pDn6nWPgp+h7hvW9buM6b6f1BHvrW5q7/tf8DZz8IusRtnHpLbnfsPSnFjz0
F675uX8G+6k9r7bp+uh0tfEr4uucpxif9Lnj/+a325jzm/lO8Xtz5weYM2Z/
au78AXPnD1iP2Pnl5tYfNnf+ubn1ic2dn06/b/bz/9DGnA/Mz+DBHj4H/qGN
ef3mf4f/O1z/6xVOf/ApzP9fV+z/k7j7STo/1tz9Ic1dH5zm5/mS+BDmd/6s
uet3f0P9Zn5d/WXMf/tb8m3gxDvGwP+Z+uek+TfBnvVPwf62+tuY/2Yb71fW
V7/PnzdOXWkb1/lUfLPCL1Qfb362whmXnj31POSjUO9zr8/dH9G89PDu9Ln7
J5q7/6HrxVwfZu76MHPXh5kv9HOoRzn5+PcU/95xn1Pfwv3XHP9c4rfQ8wm8
rh+49YnMqZ/hfpbm57xJng/fhz3nuMM+53fP/cO8zoEHfc649DTNqQOiP4Xi
+c7/NHd8P/GUL+D8z5RPsAnzO7/T+x32L5yfzG9of5Ps1/gu8E+5/os+9/7H
/KiNeb4Tb2F/wbm2vgfi5I0xf+LJnvHmpM+rzu24zyuvLXDOxWl+OM+D9Pr5
nbhe2/XZ5q7PNnd9trnrs1O9eJ3Pw/xDWL/rt81dv13PI84/4flX59EVvm/P
P/KJrad58TeXx+ZHbTyvcPYX5tbPNLd+JvV67Cc8f+K7wH39xMt/I3695c/V
76X5Q6tfDzrKh32+yC8xd36JeO0T7vQ5z41ah7nzU8RrXvSelU/q/t3m7t9t
7v7d5s4/Tfb4132ecH2duc8X5q6/M/f5w9znj8SHlfPQFOZ3fR1xxHruo9v0
InDy4F5ebZ947dMDH8zZr7Z5rU9tbn1qc8ben8OtP5146amJl759ex3oifF9
sX6aufXJFnrWLb5T+tHmv3V5/gUnvvQ48BYPKv3rxI8Cl7713H4P5KW8w5/7
os+/wj8c+HkbbwKf2pj7rfP5nZ+f8v3Jzzd3fn7i7IOs52p9VnP3pza3fqu5
9VvN3b/IevCcT8kPSXrx+G/Nre9uXv2jA7e+u+/Hvr+m+3W9fnHXH5v7/mh/
DP6z5K+Bz4Hb/2Ju/4s5+atz4Pa/mNu/Qn+r0pP4m8vXNz/j+xfsnR9kzvdz
CPbOD6r7yL3L4+len1t/bGF//2pO3VTV0Xn+sJ5Zz9PSY1O87Bb56Hf6/IL8
lbt97vwWc8ffzB1fM1/kr2g/4Of/gj++mvv5b+7+puVnIH+K+tTDPp+pzw0c
e/LDzAfic8F+0PX36KUzv/QJza3PHnmwtz57uv4Y1lf6Fqrnn5V/w/nP3Poe
5tYfNr9g/KjPre+R5me/Vb9D/ArtdXP+Mq9zyw/7nH3z/Hmwv3+1ffWlCfac
Q/bp+uiAUz/ofsR+feboOL3o86oDTdz9iwMfA1/0LxZnn8vvezE/Oo+Jqz+x
z2M+X5lb/zWd54aVeNIU5nd8x3r49m+b239tbv18c/unza1vb27/fFp/+e98
HvH5w5z8tc8C9/nC3P1zzJXfdvM/Xh67fsjc9a3m32F8r8/Zv82BH7D/C/N/
iv2DPq/4V+Cun016n9aPgSf9GHjSj7F90hu1foz1cq2Pa259XHPr35pb/9b7
ybR/rP1m2D/C0/6x5l/Zz3r/6Hx95+ebO//e3P0Nza3PZe79ubnz99P1q16A
eh30RImfvOhzx0/Mid9MgVM/hL/A/H3jQ+CMq06m7Q/rft72h/j3zTeNl36r
+HbFvvafwX7SeMGbfdXHq55xkd/sekf3P7O96hMXXPnF5JuU/q3yW8z/vo2J
v5g7/8Sc/qZ7fV/5HaJvTH2DOfvXen6Io583B75fsa/7c+Pup3lbY/PSFw28
8gcCLz3SR30+rcxv/6e5+3c6n9f5uebOz032iTv/1tz5t+bUn46BO7/WevbW
pze3Pr35QTvPVXxfnPNj0tM/p38X/kD5o92/w9z9N5I/Gz8+9+nS+zlp8z/v
86pfPA78RPOJ89zYBHu+F/vAK34d5q9zSLC3fsji+pyT0vWxD+8Pz93Kn/8D
jf/w8v9b8N9t10n2rZ6gng/i1ldd2Lf99ybMb/1Vx+Mdfzev+vPAHV83d/zc
3PFz12udUV8VuOu3zF2/ZT5rbO76LvPdir37y5u/W1nfW+7vgbu+zPXwqT4d
nurT4ak+verFQn269VhKb0d6kNZ/NLf+ozn7uzFw6zsm+1oP8UDq+1v/yuoX
JL7l/v2kz90fyXzfxvjvzA80Nq/+TcG++icFfray/i2vP1z/oj1/+HzJBycf
4Tr793t9fsr5oj0/3S/b/bHN3R/b3P2xzd0fO14/2Ls/9i30zvDbkZ/5WZ/P
5Ec+6PPS7w/c9dHmw4q966fNqZ8ew/rJT2X91msf8F+d9Ln12c2tv25+3sbc
P82tz25ufXZz67Ojn8jvhe8vvwdzzs/VJ0ec8/cY7Cv/8Umffwlv9yfr+SR9
HjjxSevzwJN+D9z6Pe6nOOt8Zu7+iubnjIO9+yum68PdDzH1P4Sn/oeLeqZg
n/ofMk79D+Huf2g99dT/CO74l3nqj2SOf8Lc+utVb0P+G/0d7vQ5/X1Lr198
R//eH1xtPwX7fRuP4fr0B+b+bc6YOJb5+cr6L2R/hF4N+1fqG0/6vPJdXvS5
81/M6f+2CfaMub+6XuID+9fDPnf9hLnrJ8xdP2G+0zitr/RPxV1/kdZf+jHK
l3J+lPme/ILAnT9l7vwp8x3jk49/raeU9JPgSR8Jbv2rZG/9JHPix5wXeD8Y
c34zd/8p89IjPO5z958yr345gbs/VaonLn128YU+e9KD3/a564evfdHWE/KD
zMnH3gXu/B/zjcaJp/lvtPEU7J2f7X70vv+buz+9ufvTm7s/fbr+FK7PeDzs
cz8fzN3f3tzPB9ej2j+f+By460vNXV9q7vrRdH32y6medh/sXX9qf6j7E5vb
P2ru87e5/afux+j+i+buv2j+FfvfB33u+LC547/mju+ST4a/lHwz/IPm5+Sf
BV76EYEzf/VLFN/w/Ar2Z228Dfwt6zvpc8ZT4Ly+IfBdGxM/rX7mxNfZnx/0
OWP2N+Y3OT8Ejn6D56t8uXA9xpxf5sD3zB+uf9DG5Z8R5/wxhPlvY8/9VnmF
jEu/UJzn7vCoz9kHjcGefesQ8hrr3P6kz+u5z3lU91vfX1O8dAj3a8dHzR0f
Nff98R3vd+Pzf7j8/83PNDYf+X4Gzvd/7fq7wE/buOI/2LX9zyK+JL6I/wT7
6tchzn2h+nN4/hW+iA8F+9J/wT/a/BV+fpn7+WTu+hTz8u8G+zPNT3863m/r
15szJv5jvmvjTeDWtzd3/aD9xdTfll6gOPkldZ6kLgX/3YvL4wX/4dXc9a/m
rn91vMDxAXP7/83t/ze3/9/c/n9z+/8X65f//x/l73P/MHPuf3Pg7+FPVuwD
t3/S/J9W1nfK/bmND8lXbN/H75Lfd9Ln6OcOgY/S7zD/Hvocx1fbEy+9/cuP
f6vfTxuzPzO/9cvL6zO/0ca7YO/+Feb0x5jC+vz7T+vnfspzAn0Bns/oC5jz
3EOPybzyuIJ97Q8CZ38xvepzrr8J9vX8CvYV10A/IfgD+X6Yv17h9h8me16H
uf2HaX28Dvotsd9Hn5bnc+THff4bK/b0TxqCvfV5zdHTTfYLfV1xxny/7S+0
f9Dc/kFz+wfNq74ucPsPiR9R70D+ZumDiFc+5qs+R39sE+zR19i3+ozxi7be
Vo9OvT7xVHPXb5q7v6+56zfdL7ry81/0OfHZqq8Wd/9oc8cfzc/CfJX/tsId
n3S9yqL+xvUsrl8RX9SveH7X59he9Svuh0l+Lb8fc/tXzd3/0tz5v7EfZ+Du
j5n4vGI/pfXJ/+t8vHqfn/e59WUW9vjVjvvc+Xfm1p+J9mF+688s5idvM8zv
/L00P5+f80VSfkjFB0P+R8UfGd/r85QfAnd+yO715dd1vY05P5hv23gMfGjj
beDMX/kN4huNzS90/ZF8v/b+V37gdoUf9zn9Yfj+mlM/sgnzVz5wG/9Kz+M3
PP+f97nz281P9bw3f71i/+dc/1mfT9rfWA/U/T/Nrf9pbv1Pn9d8PjP3+Sza
B+7+3eY+v5n7/Ga+6D990q4b8pPNOV/sA7f/ydz+p2Q/B3v7p8zrfHMS5m9j
nh+udx/YDx70Of79OXD899wfnY/r/Flz58eaOz/W3Pmx5s6PdbwD/z+/n8R5
/pk7/mHu+Ie54x/TX3z8W/Guv2zXP+nzuY1rfyq+a2PeH/NzeLCHlx6Q9LCq
ru6wz62PZW79K3PrWzlfkjH5Y+bOjzR3/qM5+Y34/83JjxwDd36kufMjnU/j
/Bfzb+DB3vkx5s6Pifaf9bnzY5zPR/wx5fu5fsvc+X/mjp+aOz/Q3PmB5s4P
NHd9WXr99fraebPOd5w/Qz6H8zPMnZ+ReJ3nxJ2f4c/L9Xfm/vzMeX+mR33u
z8ec+tQx2PvzS9+3xJP+hdefvs/+fA/a/br8Axqb+/6e7Pl8zG+18Rjm361w
Pz/M/XxIvPwR5B+3c7/jM+YT+9fP+hx/EfdHc/KbS29FvPxT3K/bPHwfqeus
OnNxvnelL2eOXbDndzME+3ofyO9WPux5G5f+r7jzX81vwe/1ufNfzZ3/ulif
8rPMnb+U5q98zpX8HHPHx8wd/zJ3/CvycH3HT6nnwx+80Pczp3/Rs8Bb/Tff
vwVnvMKrvjDw6r9lPq5w1ReSL4l+zi2NzcnfHAK3/p85+aljsL/O/MGeceUv
ig/oa7exn9c8nzl3mVt/LdlXfoi49Xvfkl/Tfu8fGH+/z88Z/0mfO3/JnPwQ
fq/mzj8yf0P+SJh/q7H5O70+91s4kj6fufsvmFvfz9zx2TR/4u6vYG79v7S+
Os+1+2XV73J/f97nQ3s+8/tP9pxPzRnPwX5u402wP2B/Efgp48D3PP/C67se
1uvXjz16x7zf+K+qXkzc+pKJz4Hjn9qE+Z1fa+78WnPn15pbn9Lc+bfsdyrv
Sfp/iQ+BWz8Mf3np/1J/+7DPd+TDPwr26l+/0LuyvpW59K2cz5fy9+D+/MwX
+cvNX85+YtDY3P1NEmf/Y36LMfp/yod2frP1nK3fnPSerS8Lt35z4uxvzK1P
az3cT/H/Hfe512fu+a1nSfyN+ldz61uaW9/SnPrzMcxf8cDP+tz6mOn60d6v
Z+X8ae7zp7nPn9fIN6Kfgcbm+y/avI/7/EPjfH/NyT9K9hcr9sxf/YqkV+f6
WfNDjc2tL2dufTnnczl/y9z5W+bO3zJ3/pa587fMnb9lPQ7rb5hbX8Pc+haO
5zp+G+O9B33u+Kz9Bdan87/zfCzdTHPp15nbv5Dmx39ivUT3XzC3PmLifP/M
rW84oXfE85v64od9fqax+QZ9pGB/Hf6kz9HnrecX5y1+7/Jvpn7b7D/M3R87
2dfzTdz6YvNPL3PvD8w3bTwFvmvjOfB9G5f/RPkkzv8wr7jRsxX7wJ2fsbDn
uaN8GH4vI7/fB33u57M5+8spceyP+tzP7wXX89d8WFm/n+/p9U/B3s//xfze
L+BPIx/ury+PzW/9u6s59XSVHyOOXhn1SeaVH49/Ue+XPz9zfz7mfv8X9np/
6XdK3lj1J/vTPr+msTn1CeT7muMfJ4/N/AP1DYE7P9N8Q37Iij35z653dH2j
uesXzV2/aD5qbO76xtMvGkefv435/pifMw6c/WfV94rPbTzp+0u+i/3X5q7f
MLf/2tz+a3PXb0Qe1mf9Jvub8L+Mgdt/Y058o57/4sQHqr4+2a+sL9nbP5T6
RaV+J9fQH/9+n18of8bc/U/M3f/E+SrOTzF3foq580/MXX9rTv+L+j6KUz9L
/tMiHuL4hrn7H6V4SrJXfMP+Pvv3Ep8Dt3/P3P47c/vvzO2/M7f/zvsdPx+T
v4L7l7mfn+benyy49he+Hzp+Z+77Y4wHBnv7txZc989Ub5nu544PRvvAfX/d
tOdZ+U9afR3nXfPXjW8CZzy97PO52ZMfZ37WOP7MocWR2M9zrq74pXkb1+/f
vOlXl/9WvHT8gv3wvTbPts/JP9sEXvlrYf0V916Jp8yBOz5i7viIuZ+f5n5+
lR7X48tjvp/m6HXxfDTfMX66Yo+/TPdT97dPfH7R576/mtv/bu7+Xua+P5un
+An1Q+6Pae7+mNG+cer8Kh+BOsFHfV59nR/3Ofdf/Avmdf8P9lUHGa7PuWEO
9tWvKdhPK/bVV9r5WSft/5HPdtzn7n+Q7NFPdj8Y9zc3d38Yc/eHMXf/c3P3
Pzd3f5nF+lb4po33gbv/TFof+euuV3F9irnrU8xdn5I4+d7m48+utp/h4fqu
f5na84Z6XforzD/qc/wYjM3r+RTseX5ugz15X0Ozdz268x/Mnd+Q7BN3foP5
doU7v8Hc9e9p/VU/QR4rnM/tZZ/X32C/qD8zd/1GsOd5Yu76DeslOv/b3Pnd
5s7vNrf+obnzu4nHcD9x/1Fz+lfw/pg7fpvmn8L8N2XveoCUvw+v+oDAU35/
5QNzfz3q84U+8kr+m7nz28yd35by7fCrmzu/zfVwrm8zd32buevb0vyc/81d
/+Z4oeOD5v7+mfv7Z+7vl7nri8wdn3zd4lHsN24Rnzru89MVTj/JIXDiYfx+
zImfVX0yev70v2F8/2pe8Upx9Durzjtw4hGf4k9qv7ct/qPHfT7CH/b5EeOj
Pp+wf9Tnp+jBMZ/0NKyvYZ70eW3Pc8B64a7vNLc+uLn1v9ELZ/9b8YuTPr/9
LfkucPcHM0f/gd9HWt8U7M/pDxbsL4ivBE59AvsJ66W6viZxxuZHbbwJ9vBd
4K7PMbd+qvWU/XynnrrqDai/ft7n9O8rvXnxqt9+fDWfgv0B8wf76xqb0/9p
CvauD0cPmHMn/Uc4R5sz3v24z6t/Shs7H9v51+bOrzZ3/rP5De4vwf7aCt+g
74z/QvGEFD+Ap/gBPMUP4Oh3sv9O8Qx+3+aOLyRe53/5m+1fjvUkj/vc/mNz
+4/NrZ8W5w/+cvuXrZdj/Rtzxz/Nv27jIdg7/ul8/D8n/yjk6/9kJZ/f51Pz
v9X50dznU3OfT7kO+3nOa5WfZ97mqX5t4sybOOfDys8Q53eRrl/nzEd9znN3
DNfHflqZ3/0F636s85+582/NnR+cOM+PPfHY9no/EH992Oc1XuGT/z96z7J3
vbvr281d376wpy6e/Lkvmh16+21c8Qxx9gOlZyuOfuYQOPPz/KR/M3pf1Hft
fhR460/H+XPB/5ePf/FfmU+tvmxM87f47ybYk89f51nP/8nV16f+jtfn/ZD3
P+ZJ38Z8Cvbe35h7/0K9FPlJr6ivOurzGj/sc/Shq59TsK/8dHH630zB3vrP
5tSPcX9zvbD7f5lb39Xc9cPmrh/273lq/l38YQs9C+lTLLj67y7mb/FP4kPs
h7gfv2b/c7/Pfb41/5rxYZ+/WuEz+RxhfsZjsOf8Pob1f/ktr5/6AVt/wNz6
A+bO7zW3/kC6/hy49QOSnkJav/OD0ZMsvQ+eT/ev5jwfzd81jj/G3M9Pc/Q1
x3B9Pz/Lj8r+7rHG4pXXHPgg/pp+w9RLqr+w+Rv1J656bH6/v3/59S14e76x
f15w8pFWOPfHBf/tFd6ez0Nan/p7f8XviXwqzm9P+pz7B++zef3+H/d5/X4D
53w5hvmdXza0+yX+pulft/Fx4G1c+Svmn3z8u0n8j5o983s/5P2Pufc/4ov9
j+29/zH3/sdc+5vk72Oc+C5w++fM7Z8zt3/OnHxk9MzMb61w+/cuiF+zX1d/
TfMD4kd3+5z4P88/89NfXB4ne/zf5sSP6jxBvhH+fdVvJ46/09z11+al7xHs
t39+NSf/dgqc/N59uP6mjYlXlL409Ur4r+5dzbn/mU8rfICH+W8zvtvnpxpb
D97+EXP7N8wdHzd3fPzg55fHt35+2d58+/PL85mPbTyG76O/f0lvAH+dufPn
zP39Nff309zfP3N//6z3YX0Pc+t7mFvfw9z+f/dzcf8W8z3nq2Dv/izm7s9i
bv139/N1/pS59bXN3f/X3PlTi/lX7N0fOK1/CvbW1zZ3flWy5/ro1bKf9f7V
fN/Gu8CJj4yBf9PG5Mc43mh9WHPHF30e8fnC3OeHZM/5eEP+Kfm11H8+7/PX
b67mjp8ne+5P6FnxedXz8UWf099vG/iZnq9x/sB9fzP389ec+ye/X/KFqr8w
/ttnfW7/rrn1FcyvS5/5Lf3I8JfQP/lhn9M/Gf9V4uVfEHd/tcTZX5h//S2v
X/4b8erv3MYVv6T+kN/vZ33OONlvNfb92Pmr5r4/m/v+G/NlA/f919z3T3Pf
P9P12a84Hz3lj8Pdn8085ZfDU345/L8wP/5d+mXfvTyuelhx8vOHwKu/990+
r/qAe31e1z/s8+ovrvNM+v7EfOmTPnd+c7Ln83W/Y/c3Nnd/42Q/BHv3N2Y+
8nPhlR8g/jX7px9dbU8evvkZ62/jnfrDc7+pfmDip9yftn3u/vXm71bmd3/7
Rb70v2yv7/PAlR+94J98/Fv+FfHhu5fHrodz/4ZFPbnq38xdP77gqo9L9erc
n623b319c+vrm1tf39z6+ubW1zd3/ibnGf4//Z4Zm3N+4vdjXucj6ufIz+f7
xXjb56fUHzzt830bkz9ifkB9wnGfUx9Q+jrKN3f/QHOeA5vAnT+OXlrlDfzZ
1Zzv5z5wvv+cH865n1LviP/paZ+XnvmTPqcfUeL4u6oeUnpK/n6au7/DKfuh
9r6e0T9k2+fuP2I+E389uXp+nu/mEzzYfy2OP4j9pPWjzN+s8F9JX8r8CTzY
kx9T+sz0J+d5wPnkuM/3GpvfauNNsKd/e/W/EB/RFw72nK+qH8tKfq6583Pt
L7b/N/E6D4i7/4DrIVP9IzztP+Fp/wl3faP5r/P9atz7Ge9PzL0/cbzJ8SVz
x4/MHT8yd/zI+X7O7zN3/l7koV7d9d0z/tI230Zjc/yt7D8d77Z+vrn18c0d
n056/lPgi/h06IdS9Yjizh+1np3168yHNq7zqLj168yvt/G+jR2PXsSfA+c5
b+74dMqn3530ecqPh6f89/IHhfz3en8UPzN3fM3c8bUBfTH204wP+3yLPtm9
Pp//TRvfvZpXnaX4sHL9zbdc35jsf3aZl94Z5xP2XT/q89qXverzHf31Ai8d
hxX7beB8L9P8xAX2Yf3kvxJfPiA/vr0/rh8y31IfdK/PXR80o8eIP53P/0Wf
1/74uM/ZD9fzPcw/BT7+dIX/2WWe/HnV70Kc/SP3W3P798xfsb982OdVfxHm
f217fgfsv/hcnvV5fc7bPl/0v/D8nJuTffj/dX10wgIvnTf808oHutA48Tnw
d208Bk78ZrPCy3+pejTvn8ydv2dez+MHV/NxZX7y86xXaX1Jc+tTu17G9THm
7i9g7voZc9fPmLt+xtz1M/6++Pth7v6W5v7+mPv7k3j5R6VnSd9zPr8Ft36I
+EK/XXyh3y6+xT7Mb/3MxfWtL+L5rX9NvKXdr+h/wf3FnPxm/Jvmt/g+BD5i
/3zFnno21Zu4fsTc9SPmrh8xd32IOd/b6t/kepjGF32iuT724fqVl8D+QPlW
Pl+bO7/K3PlTyZ77xyLfi/58rX4y+mOf9Ln9r+b2b5nb/8p+v65H/vuzPt9r
bM75gN+P+Tfi+MPwl9q/Zv6hjXeBn6s+wpz9zxw48+PfNb/Avr0/6CE4XsP5
3Lz2r9s+r/rPMP83zP+8z9nfjuH61KeyvtfkR7Tv8yvyuw/6fGJ8p8+tb5k4
+yTzm1z/sM+/VP5GWj+/f3Pnf6CnUP3cyCf4rM/Rfxgf9Dn10dxfzd3/knw7
8rnRx6E+0vwl48C/g/29Pkcfh/OtOfWMvP/Jfg7zHzB/sH+ysn44+Y+JDyvr
G8Lroz607ufSg7D+g7nz081dP2NufQjzN4zR02W/2P6/48/mb+EPrrYfgn1x
9uOKh9Efps6/4s7fNHd8zNzxMXPHx9xv+oLzxN0+d/9p8z3v/50+d39q6lXZ
76Afw/4z8od9XnoLgXP/4ftj7vuP9apdn21+G39m4NavNnf9tjn9QUp/HX/S
yeWx451wdI02J31e/qTjPqc/QOLW5zLHv1V6cOLlfyOe9//1x7vAyVfcB/6W
59m2zwflF5mTH0l8zfnUKf8ZnvKf4c4PNE/50b4++YPmzp9mv1f1zuzP7vX5
V4zv9zn7vdKvSPywzxmPwZ747BTWV/Fb9MC/aOOQ35DyIaq+UNz13a5Htv5K
4jyfzK2/Yu76ZHPrr5hTv8z97w3f77afcn6wee0fj/qcMfdPc+8v/XtOv9/d
yu93t/L73YXfr+uZXX/senLnJ5i7Ptz5dsSbiUeZk5+xDdz5eSkflDiHOfl7
mzD/doU7vz5x4mf4i3ge0Mei/r/4VmNz/EtVXxXmH8L8Uxvz/foV3xfyiTn/
3+vzX3D+v9Pnpa93t89/wvyHff4Ofr/Pq/9h4O80Nkeffg7X/5L5iRO0/SLv
367F1/g9mVtf1hx/8xzsvT82r/3vSZ9bf9bc+2PrFVifAD230gOTfpq546/m
9G9hn1T+Atar/YY592d+f+aMef1/3z5P/EHOnza3vqS586N93vP5zdznN3Pr
+zmfyflL5ov+s+LObzJ3/pK585deNX8Q7/dGY3P0Rbn/mKNnxvfVHP/WEPg1
je0PtP/P3P451wOm/sJ1/gz9hUtvW/tj89RfuPTP/PmKe3+b+gGUvp7yPZI+
Ijzlf8CTPiI85YfAuR/x/DdP+SNw/M9DsPf9yf4y+8fM7R8zt3/M3P0Pze3f
SnwM/j77r+yPtf/V3P5Xc/cXMnd/IXP3FzK3f9bc/YfM7Z+1HgPrrnwLc+kz
LPi/anzb5+7/kex3ibf6gn3izW/E/Yf+edQ7Em8sf764+yvUfqJ9HjvGP+jz
io/fuZqPgW80tr/8DH/UUZ9X/V7g9l8l+/Kno7PH8/Wk/T3u80X/SXH23cOa
feD2Ly3ml38pXT/Z2780NL2P6jf7ex//Vv6aufVlzH+n/W3fH58nfH4w9/nB
3OcHc58fzH1+SPbpPOTzg7nPD5vWb5r7SfWjPgmc5/OLPt+2cdVpiO+aPc87
83N4mB/O+bf0exhbX8Zc+i/2B9n/Y27/j7n9P+b2/5hP8v+k6ydOfswQuOPD
5vY/kQ/H8/Km/Hnm9i+a239ofkvz25/j/B9z14+Y2/9jTj4Q9yP3c0/92+Hu
3x77wZ/0uX8/qd4Ce3PiY64/sJ46eSWvqa9G71L14+aujzSn/rv604nX+Emf
uz7S/A31kdQD4A/GPyv/sHn1R33W59fbGH+yuftXp+tPYX234WH+ra5vPT7r
65m/p77hcZ+7vsHc+nxpfu5fPo/4fJD4GOL9v9D5xdzxbefTLvJnxRf5syEf
d5fsV/J5nR9rvV/rP5i7f4v7Sb+mP+O9Pnd/6QX/62/H2R+Zuz+1uftTmzs/
jHht6Qm3Mb8v8w9tzPPNnPjsGPjFt7SfA7c+cFrfFLj1g92vyP2JzN2fyNz9
C1I/JM7Pfp47v97c8UfzGxqb+/luPTLrj5lbX8zc+mLmzl+O1+d8yL6C/MCT
xh/1OfsS8j/M6/zzpM/xE3M/SfOXvr7nl/1Cj9P6mYl/Frj1Nc3beE721t80
l/6mn+d+/qXnfdUnhv/P++V6ANdPJs7539z5/3F+9J3a87T6rbb1sf805/VV
Pqc4+5fK1xT/crqa1/M9zA8v/4Lq3ax/5XiU40vmjg+Zu/+gueuLzB1fMnf+
Ff64kfNk83dNn/f5oj+hOPuY/9HY3cPIeV1nHN8ihQsXLFKo3CKFSgIxEAEO
nAmTQgEMaCV+iBQpcrmkpRVsJCoUQIiDeEwEgQojYJFC5RQuVLJ0OaVKliq3
dMmSZQrd5yDzu/fspCKu/npnZmfe936c85zndNfbn3B6/ei4Uj+ZeTm6otRV
f7bm2Z8kziLPc7htXt/PP73/sc8X353x9+nHV/r/izVP/UHm0c7Pb9fwyZ+P
PHTOYanHlifucdXw6Lc6vj1yfc5lu4ZnnDx7vo86P2f84Zq/m++34fGXr/4k
cOuH5KnXyP5Dbn2R8UzjkxMnvthdv2+uz3WZH+TGH6fXH+PSZyYeN+bLv2Qs
/4vE5z5d8+hhTprrf5r43dM1zzjnW3n8xjOfn0UPmf3Ii/H5Hq556sM77v63
/IVz/yY/drnmPxnj6ETkb49cv03+7Is1/3P0BA0/zXrW8OgDMj94HvN8Jff8
JPf8pN+C/ZPk+i/I7Z/Uvv4na65/g1z/BvMl8UdMfZP8Nfph+RX5Fbn5l44n
vzLlE8wfyPWnl5NfeJ18eX7Pr67nN8Nvr/mb6E/vrHn0pxVvbXj10yDepz+k
3PheGy98tOb6P8rj7xh9udz439vs77PvyPjDNX+Z/TH+f7Ve4G8qvxE/v4br
f5r5KHrN7Jcr/wdX3yTP/FP1PPF7SH48+98P1lx/CPlV/NWOXF/xI/j5bw7H
8i2f703iX58cjqtfCNz5Qf5DnveHa/72CHd+0U8l+v7qjwjXP0X+9sX112+y
vo712noB/c3k6vcrDpT46KjDrnpBeJ6Tk4ZP+gFfP+efhlee6PH1PPo26zWt
z7Rfn/Ufcvvzed7wfCF/O+af7Aflmd+S35R7/pBX/XTDT498vszP2aduo49r
1hd5xtuP1jz6vnr+4S/D76x59Hmb5v1fN58n4zdcb78n+zfJ7d/U9YvaNNz+
THL7M+mnqH+VPPra8n9wP+L+o+EVn5OzP5k48bfEjyvewlie+XnT8O/GOM+H
3P7gUzyD+IQ89238Xrvrq5+MPHX3g8evN9+X/sJy/YXlZ9lfnK15/Ierfg89
w9T/Rr3DPwz+WcPRP3R6iXw/ngfNv8g9H8rNz8jNz3TX7xvu+VNu/sV6V+O/
cvXRcutb5frrGS/VX0yuv1jphcbzE31P1hf5Hxnndyg/gei+H1/P8/vIsy9L
fnO6Pvv8R2te8178AtBTqK+Y9Bjok+TqizoefZF6Q/WFHd80XH2h9VTWT8mt
n5JbPyU3frSL3/n4Xcqf/OM1f5X56eGan6a/RO6DnIvHfDzFj+HO3xMf+9fz
hhs/n64n/mw9hM+33PoH67Gtv5Zbfy3/nrE8flLJVyY+mXhU6Sa/aDjxbXni
z/HXkxv/7l6/44m/nh55/13Du/h3zk/pz5rzidz9t1x/Irn+RHL376mHT1w5
fhnJ4+rH+d2Lw+vlni/l+nOaz9f/Tm7+Xm7+Xj2V+im59b2dHivnU7n52+79
u9dXfyVXf2U+xfyJ3PyJ3PyIPPfvvrn+KvG15v3Pcj68veY5v540r2//4dQR
l59k8tj3Gn73cCwv3fz9NU9csPQe8KpTG1y/Z/2b5a+SH3m+5vo7y6OvzvPs
edPzpTz7v5OGe/6Ue/6Ue/6Uu364n3f/Lnf/Lnf/3l2/b7j7d33SzF9PPHH9
I3zT8Dr/XVx//T6cenHrw+XWf8ut/5Zb/y23/tt6EP1F5NZ/yK3/aK9/vObm
V7vXL79S+jVM/rVy+jfI9ZeNHjP5tIy3D9b86/BHa15+WNHPR+8a/Vb0rQ3/
5giPPjbPp3zDOPG47HfSHyD3t9z6W7n91+T2X5Nbv6ver9P3hXf6vvBO36ee
sPo/5byW+yf6oGdrHn1Snr+OZ/8lV78kz/nwquFvGOvHpP9S59e0b7j+bx3P
/Z3zYL6P9ANMnsLz7C7+Jedr7vlVXv4lT9bc+nz52ZH3V39R9Yg5l9KfaOLR
OSQ/m+ch+/88f8/W3OdHrv9Q6k3r3PXf/P/w14OfNry+n+drXvWxYxx9YOLf
f4o+8N6aV/+DO2v+NvULDa/+CvEvHa9XfrRjnPVJrr5S7vlDfpnPf7Hm+ftK
75j1LH54yeM9WPMaH+GlhzjiTyrXnzT7hbrf01/ofM1fjf6Dpw3PeP9kzdP/
8Nj1m+Z6+yPJy+8mvzf95Kf4uf3mfz4+3+Wab2/x/3s98fOJ/+OP/6YfQOrj
Mx+kPj7zqTzre55f+c+O8PfGeNfwvxrjq4ZX/X72cfTrsL+H3P4e8uxrkt/Z
/e7w/b/83eHfJz/N/PB8zW+Ocfbv8v0Ybxv+6sj1p2O8az5f3j/zQNcPO9+v
3PlNbn9sufOX/aLt/yy3/6h8Ot/APZ90PK+v3nrKb6nHtj+iHH125XWa+Ia8
+g7daa6Pz+rdhkf3+aDhyX/cX3PjH93nr34Y+GnonyHXn1iu/4Vc/wu5/heu
N/Yv7dajfbNeub5012+a628ceX/XF3n6k3V86r+KHiz+NqWvhKv/kpd+LHk1
9D6Tvgc+6XvUC6nvgU/6noZvjrx+8pu7rJu5r5P3ebjmU38GeHTDWXfkU3+E
hu+b98++ofZf7Mfdf8vdX8t3qS+6+PFf443GD+XGD+XGD8s/IfqvvxnXP7qe
5/7peOLrE98c4aN+LPef/ZIyzvwpt3+SPP5gifN1PPOt++GMM390++V9s592
/pJv/5+vv2le3/mt4oDRw5A/nPizw7Hc/KG87vOGZ9+U/ln2S9dfU+76MfF/
u567v5H7/cv9fuX2Z5e7/+n+/oq/8nv5/cvN33a/92nD/f2696/6Jeo1rO/o
6kHy+8ut/5Bb3yG3vkO9e8alC4OrX5cnf9fxGt9dc/XvHU9eQr+azp8mvPOn
qfrixp/G19d/puLhR/yU9ZdJ/9nqdxf96cdrvjvC1a/K1afK1afKE7+rPBFc
fap+UvpHyfVnUu9jfFTe1oeNsfVf1qtZnyb39bt6t+TT5b6/+Ubzh10+suIG
PK/RP5c/QsNz/pGbf5d3z/80X9xdc/Pvcp/v8qHLfK8/ILzqxhqe+6r8+5rr
9x3P99a9f+7bhusPqJ5W/aw8+th6vuEvc/3tNVdf6/c5nX/8vvU/lPP3bd8f
/+bcNa4v/Ts8/o65P5wPnf/kzm9y5y95jT9peOoHsr9GD2N9sFz9i9znT67+
Ra7+Re7zp55d/bpc/bpc/bpc/Zf9GtUPyf1+5dZXy81/pn9s6dub/rLhp4zV
Oxj/k6tvkKtvkE/xw+hNEz/I/HC+5ufhY32z3qfTB4Zbf9P5EZT+wHgi8cOJ
o4+SG1+cOPHF7vqT7vWJH6oHV98tV9896cnRdzufOX/Jnb/a+fCThjN/fR8/
vZw34o834sWp18153/pb+RWvL7f+tuO5Xr+9l5m/ztfc+lu5/nry7EcSn5Bb
f1v9gXI+xP9Cbn9uuf25u+uTTzNf4fldPvXfOJKfmPKF5B/k5h+m68kvTtff
Ovz7puvJL06c/OI++/GxXlR/zI+u5/uG1zj6UeohrH+QW//gedXzqdzzqVz/
VLnnV7n+qd3rd/2APN8az4/f+zGe+VNufN9+C/rvy+2PINef33h7xV0+vZ5X
HhhufL3jtc7Bja9br2X9ldz6q92oRy89zxjnHCO3fl5+wlh+eoTn/Tfd9f9y
yI2nGR+T648iN34mN34m1x+lnsf0i6T+QO7zK09/s73//xjHT7j8FeBnR67/
kuvtp2H/DLn9M1JvmPyF9YfqgRL/rnyfeqGsjx83HP1Qx8sPBT2c8SW5+ju5
+jq5+jp59HuV78n38fRwvH+65uqL5XVueLLmibPbvyTnHevn5dbHy/Vnmfxg
qHfvrs/+MX7V0aPojy3/bow3Db+K//URXt8/+dboH7N/lbs+yO1fL3f9kLs+
yO1vb7zQ+KDc+ITc+EQXj6z+jHDjE/ZzsX9Lx/P55fYvluvf3PFN8/lOj7y/
/V/sB2//d7n93+X2f5enf1b5peqnoH+CXP8Euf6ocv1P5fgvmO/0/CI3fyif
8ofUu1rfKnd/lfNz4nk1Pltz40fyffd6mR+j/09d7y8OP0/OV1WnLle/0PDS
H8jVJ8C3OR82r5/zXT6f9dYV37635hXfbq5PfKvqNeGv4l+V+TQ6ry5/AJ/y
B/B87n3Dp/wBXP/17vqT5vqKw2Q/wX7e/bvc/bvc/bvc/ft0Pft3+53bv7zl
D67nqX+9ET1a5pMxzv5BnnG+R/n2CD8f49JHJm6Q+HZ+h4/WvPr0fLDm9TqD
x98gcUn748rtjyu/yv7zwfW8/N7hP3C965nrk9z+jdE7lz9x/Bufrrn6Zrn6
Zrn6ZvkN3v976m2tv5VP9bNH/EkyTyU+W+eYz9d88veR4+8jr33kZw0/8v51
rsznZT98nvrD+2s+7X/h0/7X1z9yvfVJ+gU6P8r1B+yur34R+hEydj5yfpE7
v8gzrvwjesBO3yfP++snp3+c/L2hVyg/M3j8iDJfylMfvW2uj/9g5s9XqZeK
/2HGD9fc/i/y/RFu/5f4XSYfdJb9yeM1T34/fmdy/TPvjPNCnpevGcutr5XX
+ebI9Vk/5O/n+jGP/GmcB5O3uMr58Nma608uT372tOHmF43XqM+Rq7/Rj0D9
cOdXkPtbrr+Aekz183L183LPL5vxvFb93R8Or5fb31f+NvupJ2tuf1955cub
/bT7Z7n6m4mzf+54xe8yXybeyvwqd37tePnZwr9Mf5/4g7Beuv7KXX/lVUfZ
cNfnibs++/mi4x+vb7zP+J7c+J7c/LZc/eHkB018UK7+sPt8WS/tN53+fYn/
yb+nv57c/tTW61mfJ+/2r+Hd/jW827/W+1Of171/+Xe8+PHf3BfqE+X6m8jt
H9X5qWwbbv7AfvGeH+zXlPxJ4k/y6t94Z82/xQ9Knvuj9nNw/aPUe3f+/uGd
f3941Uc116deKvt1efqHV/1g55fydM31R5Hbv0Ju/sJ+5/Y3l9vfXG7/crn9
y+X2L5fbv1ye3yfX61fR+lPEXxD/Cf3e9GeWlz9zw/V3k+vvJtd/uft85Xdt
Pjn+6U28yvOV3PhVd57ruPGryS+e81v6xW+a87/8p9lPP19z68/l1p+fDL1s
+Yhm/On1vM7fcuO38ls//lv+Vb8//DynLw4/v9z6bPk74/o8v+9lP3t5OM58
JX8n+9Ev1jz739PLNc/+Nvn7m8OvOs/L+Rjn/pbHvzrzl7z6rTfXb+KPPcb6
ibzOefT+mpc/SPp/ZD+U5y37pydrHv1M+XHDS5/3uOHR0zT8xpHrq37l4Zqr
b5Sr75n8+PDXSz4l54U6/zw9wsf3Zz3rdozrfAq3vlVufav9Yuz/ILd/g9z+
L84XPv/2a76Z/MzTNbd/s/08vsn6eHvNre/u+hGXXg6uP6Zcf0y5/pjqUdSf
yLNvqP5B8Mzj8Qee9C4ZP1zzvH75W437Jb/Hae6f8zVPfCLzj/x14hkNf3eM
k1/VT01/J7n+aXL9n+T6p7kfdP9lPVzXvyG8699Q9QicL+Vd/4Zwz6fO58Yn
5cYn5fGLyvMvd334gf6vW/zi5C+Tf7695uan1eOUPu35mtu/Xq4+R/51zlvj
/vsq+60xTv/sjv+B/ZU88dF6LvHj1H9z6jdJ/4bu+s2R18/97Xru+i13/Z44
63f3+t31rt/dfiPrs34sGefvluvPIq/1tfF70b9Frn+L873zt7zm53trnvsu
+xL55H/W8DzP9lOJP2L5ccDPsn99uOb2X7Fe9zfRH91Zc+t3o4ut8290tBdr
nnHpHInHvfqv67nzh9z4nf0E7R8ot3+g3P6B7etHv0K/evsjyu2PKD//j0M+
1WvoD9Xw6rel3xT1FZ73Mt49X/P7Y3z67Hq+a7jnQ/k57+9+9SVjuftX+Y3o
i+JnlOcheoUxPm/4V+gd5FvqxV2Pv816e2/NXZ/tx5lx6Xnh0/0lJ78sf5P8
x3h9463GV+XGV+VTfJV6UetD5daHyq2frfNS8gX/efj/y/+U85d6qayX0UM9
XvOToY/K+UN+NeJR2+b6zbg+9Sm5j6u+8WJcf2fNM0/m+5dn3uyud/3zefD+
l3v/Ox87/8qdX+X2Z62+t6kHip/VkzVP3UjHs36V3yp8m/Wt4Rlvmtcv/cqR
67fd5/s1n8/9qvtPeMUNG65//PT60fl0nP2t87X9SeX2J5VbHz1dz/yuHlV9
qXrBE/LB8k4/mLH5Z7n5ZeP9xvdbfrHmxvfl1n/Ljf+rV1GfItf/Xf4/6E/k
+sPL1b90ny/5/S+jRxl/z/3UR8dHiniC+W+58QO58QO58YP6vcZ8+ib5lYdr
bn8fufmf9vpP17z8Wxpu/qfbDyV+J3d9sB7d/L79qOw/JU/8LPmd+OEnHmx8
X67/vVz/e/lZ/Peb10/9cM3fzDdX0QvdX3P1K3Lnl/vEW6yfkn89xvn7/5z9
avoJJb/yeM2Nr8ujT8z6L08+Z99w9eE+L/b3lnv/y73/5d7/+vF1/oaVb/3t
9Vx/vake/9aP/1Z9vedBznfup/Wvkbu/tl7S+ki59ZHyL3P9ozW3flK9uPpt
+X7sF/P9Tf3kmZ/lzj9TPY71Nw2v+hp5xvfX3Pxsnbfy+ce46grgnq86nr/f
fKz5Vc9Lno+sh/b8Z72P9Tvy0t+mng49qvpTufpTufrT95NvyX4u68e9Nd8w
tt/EZfpVXoy/w3q8pr6uxk19XXHq6zKf5v3Uh8qTX6/4HVx9qPwnjOVXma9z
3sCv3P6XcvtfOp/rDyPXf7Ljmd/l+sMYD+viW+FdfCvc+NZV4nTRqxBflldc
72zNq//UBw2PD1XqgfErib4t5031WK+jn7pYc/VZcvVZcvVZcvODcvVZ6ZfS
1RfIzU/L3yQ/98mam7/r3j/5Ff1U7G8i119Frr/Kbuzn8n0k/5b7T/52jLcN
d39oPqH6Nd9dc/ML9jvepb/xxZrb/7jj1c8p69WYD9+P/93TNY9+L/EF+btc
r17A/JJcfcDEx3jf8Nzn2X/I1Reoh3H+lzv/d/1csr7K1cfJ7d8iVz+nnlb9
rFx/F/uh2f+s457/wrvzX7j9z+SJ75Yelny6+TF59lu134CbP/d+9/6We3/L
p/6/fz/+HeP4eZ12/Nb1/ORvx993hGd/073+ecdHPiz3u3oC+xPJ1RfI1RfU
Pgzd9Hb8+wa9sPow+Q/x93y45m+PcPVlXb+tTcNdn/K8Zj7K/JD9ldz+jrnf
y0+IsVx/Jbn+SvKcn7bN++uPJk+9SOUv4NaPWM9l/ERu/ERufZbfl99P5zfX
cf3jutevfA5c/zj1WMZP5fpjyj2/y42v1vMwvm+fH3nygfn+5T5f0V9WXu7W
j//Wcy4nPz9x5ifrldXPy8+jvz9b89Mx3jdcfbzrkfoMueuT3PVJrr7DfL77
Q7n5ny+jp0n/k8R/7zQcf4v2+ugPqadp+wtnPXIdgFs/071+8o/6jesfrl+e
9UVy90/d9dHXq6dXHy9XHy+3P6zxfut35dbvWo9j/Y38coyj3zIfZ/5N/irx
hKZex/yc3Pxb5wc6+QuOcesvOHjrLxi9E+tj52e4b7j+g5631cfKPV/LPT9/
92LwzA9jfPp0zVO/mO/7Mr9H8ofJjz5Y85tHeK6v/lTw/P6Jf8qjZ0k+x3oY
61sqDpHzZ+O/XfWajb918cZ/u3jjv11c/+3Etc7472drXnH322uecdWTNdfv
G67/Tp2nu/5D8JqXvljzqyPXb49cX3HZjuMv3X3+XXN9xWXHWD9l/ZPl3yV/
e3vN9VeWxz+n+ksTTzQ+KH8369P5mhs/NB7p68uPXW/8UW780X5pXf9g+w3b
Pzhc/4mpXpf9hdz9hdz9hd+X38/UDwB//46Xjgg+9Qdt+g1kHjFf5fx4En1l
9gPRV3605u/QX0Ju/wn5ac5vY77R7zL1oNmvyPW/lOtP2V2fz+d+pd1/DK4+
SO7+JHqD8tOO3mn8bvl9onu/kfFna578UuVb4CfxN4qOnnoM/Tf8vf195f6+
cn9f+xm4/5Pbv0Bu/4Juvtg0vOvfF+78YbxuOr8azyM+1/HSLzSvf97w5Dcr
ji2Pf+WzNff8PPUryPtfrvnU/1yOvqJ8vaLnwR9HPvWngk/+kV6f/U/Hs396
uub6S1qvb3zgEj2O8Su5+h755RGe+FbOF3L1QdZLvY6e4+Gapz9A4pdy66vk
1k/JrZ+aXp/65/KXS74u+vKGX8XfIPFS9JbqL+XqK+XqK9VbqK+Qq6+I35v9
8mr/AX/74nAs34xx9c/mPOb5TO75S65+QO75zH6D6p/k9heU629mvYX6Gnmr
/4HXfn7kp6Ons/5abn21/HyMS/+UeOWzw3HiQ/LNP1/PT8b8lPurqzfJ/Zv+
0FmP4g+X/XvHM5ZbXy2/n3jU+ZrvxrjyadRbW1+d7zPr2eXvr+fv/v7w9dUD
mf+Vm/+Vm394Nf6erC/5+6r+A+73012fz2+9jfU1cutr5NbXRJ9x2nx/8sSf
qn4DnnH2N+pJfL7kPl9yny/1HOo3Jr+mzNvNedHzoX6Y+l/K1e+ZrzC/oB5V
/an9DLr+BeFd/wL7pdq/INz+BXL7m9ov5Tz7g4s1z/4iz5Pc/kXut8wPyt1/
dfu1jrv/krv/st9c6hsrrgCPnnvTcM+Hcs9/6kGm/EXiBTk/Jk75/Hqe95NX
H61frbn+i+ar1C+l3175z7K/lNf+9tM1P/nXw7HxVv1zunhs7n+58Zld6tVS
30F9nNz6uI5Xv+U8H1kv8B+Q+/xsk6+NHj35nk/X3Pxv53e6b857+pvKPd91
12d9Ve9q/ECufrV+t9zPiXtdrrn62+n65I1/1fDUsUe/Sz9D6yPk1j/I7Q9i
PYL1A/Z7sz504vRvk1s/Krf/m9z7Xz2/+/eOl/9F9gt5XtiPy7v9RXjl1/I8
cB71/Gk+T38bufk9ufpZuf43+/jR53kf4+xn5JuMG2597fT64/er+Fb2S/Hv
bPI/5debc0zDa134fM2TZ0h8yv2S8Uuf96m/ANzn135F9n+Qvw3PfBU+3ld9
sNz8ktz8ktz8klz9sXo19Wnez96fcu9P41HGn+Su/3LXf1/P+JN8ij/J8/7o
B7KfVb8jV7+jn80rxnL9bbrrK/7V+bl8sub6C3ge9vwrt/7FfI75mS7fk+fz
fnjqX3P/3Vnzb47w53n9huv/L3/E9e5X1derNzN+PPnBsz+aeHQCzX7L/VP3
+uUvQD+w9FONTqLj5Q/4YvxdjX5Evb/6/q4eIPPFzexn83r44xkvcP2WGx9Q
L6T+p+0nfH/Nu/7Cnf5Hrj7U59Xn0/Ok50d5xol/yD0/TvFCPr/cv8/1Xv2H
vPLyjd7E/cF0PfoPufoPufuL7OfyubPfq/pJeOJn1S8Ebn3EdD3x3e71S2fD
fr3bf+vnsjnCs7/Vz1//fbn++p1eqfwj4eqT1LPcZKwewPWh0wuk/l/e6Qem
6xM/y/l4/B7fpR7kYs2/jb5ycP2u7P+mn4r+KR1PXEKu/4HzvfO79b7W98q9
3v301J8r54f4xY5x7dfg8dcrvb2c/lvd9fl8xjsyrngB3PiHfj3688jtfyTX
v8fvw79/4vYf++vxfpnfyd8nnl/7oYxvr/nb6E3vXH/9tuGbMc59Ia/zwXh/
8z3659rvy/5efl/GL6b7if5rHa/zCn6enX9neOrfEx93vnJ/Knd/2s13Jw13
/6pfvfXZ1junX3T2Y/Z77uJDpY/m++14d739n81nJ/+R+0FufltufjvrXP2e
Y1z5ZfgJY3ntbxu/OuvbjQeqX5IbH1QPtU2/4Edrrv7pNc/nt3m+7675Ve6n
D9c8/RD0x9g0+Tm552v1HPpnydV3JN6V+Sj58zw/E//14d8j36ReqLue/ozq
IYzPytVHZL9a+oKLMX6y5pXffLTmFfdrXr/qbTpO/bV8qs9prs/66nk+v1/W
J7nzp7y7P7r5UZ561sQF1RuYH7ee2vOB3POB3Ppp/bqsL5JbXyTXn0uuP5f3
m/eP/OQI9/fvrs/7u95M60vDa3xr/F3jdSd9JnzSZ8rRV+onpr+7XP+I7vq8
vvWi1ofKrQ+VWx/6KvVs8ReLfn/8fvZjtv+y3P7L8vSzrHg33P7L8vLLoh+F
9SQZy40/yI0fyK0f6eqNyp/Oen7r9+XofyeO/td+n+cZ313zb6I/GuMuHtbF
g4x/yY0P6Segf4Zcfwy5/gJy+0vJf5nrn655xhWfpZ5jqg+TWx8GVz8wXc/9
09UD5ryinsH4i9z39zxp/+rpvMn+abqe/ZHc8/mkR+f8OnH05zeTD0n+gfpk
nwfvf/0mrI/v+hV1XH8J+2Ha/1Ju/E1u/0u58bnp/fEH7OJ1ic+Vf3D6y0X/
dmfNzxLvOFvzjPcNfz3G5RcLv5n4Svzh8YPV/1Wu/6VcfzS5/pfRJdT+/Zfj
/z9f8/J7a3jljZrXNz/kedXzqdzz6av8Hol35Pt/sObqG+XxH9g0PP7T+f7N
J5s/llc8KfMN9VbT+Rf+JvWE6v3PDsfJr8s9H8RvIPNL5+8Yrj+B3OdLPt3/
9EPo+huE29/gLN9Xzhupl3q+5udH+IZxxxM/129Hfx159I25P/RD0P8gdXO1
/yN/JHd/Z7zX+K7rpeeTaT1lLJ/iB4kHjM8dfUedD+F/jL4j9SdNvVHVAzFW
/ypX/2q/UvuTyu1POl2P/4j5BPt/62fv/LX9p8GjN2R+ljs/T3yMd0euT/7K
+cT4htz4Rjcfddz5yXpM9ZNy6y8nv1/9feWbQ24/IPuzyO3/0+rt837G89h/
tn5HD9fc/Zt+zcbvWj/nnA/I16oP7vpxZP/S8cRL9GPzfLRlfxr/uorHw3f8
/XL9YaZ8AfGPjpc+2OeR5697Xncd5/mbeHygms/r5+vmg13zed2/Tdf7+ehX
0vUnKR1N059kw/9f5wX6uXj/df1ecv91fH/k+m1zvfpS8w3b7O/urbn5x9yX
pffPuXh8/53eMuccufpJufrJyW8FfxX1MOpb5O5P5KnbOG34pG9RH4N+1noi
64fk9peSWz8kfy/XJ59EPFv/q5wjs1/1+3U9df3s1tuOu37qB9P5v9Tv3/i/
hHt/tXrXI/XYVR9DPs78m/xlnp/4d1APV3HuizW3Pm6qpxvXVb0K5wXPD/Lp
/EA8stPfdfo0ufo759ucCysv4XxM/6duvs78a72V9VPqMfx95NP8dyR+Lfd8
43llyp/Azc+rlzP/JTf/NV2PPq57/cwP3k/ePz/NfJ18HfXl5lPMjxivMz7n
ftr9s9z6JNfzxA0qPu16z/3X7Qfy+d68GP899+EY5z6X/3mM83yUfmSM3+d6
9QrqE+QvE3/J/895zfiR+RrXT7n3v3od++Omn0G+L/t7dnzX8PPm/89Y/bT1
Suqb5dYn+X24/qunyvqR+3nqV0597qTHor5QP4sbY5w4o35E1pfKy5/v8zW3
vtR4ofHB3ZhnM29lfH655u6v5O6fzLdO/dGbfjvbZr/i/kTu/sR4r/Hd0iFl
/8/8Ip/8d+CZX7YNn/x5fH/8d6bXzzk++oDEb3M+jT72wZob35VHL5v5xvXC
+GT8AUq3kHU8emD2g119VnhXnxU+9YfAr9LzjfuV8qO8WHPXDz+vny/1bfm7
7W/gecH9v/Wc1m/GXy33lfo+ufo+uf4GcvV/Ha98yjiv53k+ef/w9eXxs87f
px7J/ozqgfVvzuvVPpP3n/gvxvUfr3n0K1lfJ35rXJ/4dZdPi/8Nenj173L7
J5iv8fnt/EhKn9PEYzK/6Efh+id3/ev8LEqPAHd91G/P+lS5/nrGA1yfJs7+
vtMrlD6h8bstvc/4PNHpvsrnG2P7hXT6tnD1bXL39+o59efyvOH16k3Ul8jt
v9L1ezlpuPqSTu+S/a/1HtZv6Fe+G+P0C5Nfpn7mszXXH0Suv7nPi8+H3Ocj
+YHMb5P+ST76v+V8Zj9V+6eaT+3yp+HmT3+S88GoH39DP1X5Sc4PH655d77w
POH5IVx9vrw7X8h3xBv0q87z7Xru/a/flP4HE8d/Sq7/lPOF84Pc59t4u/oI
9dA5H6Y+VZ77uPy2vD68ux59tLz2ZTnv0Y/I/kPW40z1M0fqw+XRS9Xf73mM
89fEiV9NnPys3PPbN/l7mvNtx7M/8vf095H7+8jr/DS+B5/X7vncHXk+5Xk+
p3oj4mv2i9Sfxs/j67ufdv8sd3/c8aqP8bzO7y/39686mMwHnB/lng/1M4z+
I8+xXH9Duf6Gcv35zCebP67+pfn+fn6Es3+fOP1Rp/mKsVz9fXd99tP6Zet/
7Xmg1c+lPzb6OeP5xu/lxu/dD7n/cb/t/rq7X3J/yL0/5O+O/cOu4d4/nR9e
1ju554vo4/O72n9Xv/qpP2hTD5HXn/Zr+lPjN6S/kFz/IL/v7vnr/EO7erh8
/3Ljz/rt6q/b6W1LX4tfiv4ocv1DJz8Q/Ds8r6jvkLt/6/pN1r6E9dz5+Z08
f9k/MzbemPNnzdvEG6f4odz8WnN95mP1AlN+DG59svtZ96fGG40feh41viO3
vtd6GvVDcuuL3e+qb7GeUX2hz5vzl9znz3yL8Qfj7cYv3M/orzfx6PrHWD8U
/TPl9lfo/FS2Ddc/JX5SWc/Mz8v1p5LrTyXX/9F+Fa7Pfh/+/XL/Pn+vKf/R
9MvKeUdu/0i5/SP9vPZXl/v5fV71z4h/aJ4v/b8mvSP6xokTv4jet9a/5N2f
rrnrpzx6qtL7+fqur9zPfn/y+/GbzbnoZ+PfzB/sPyf+d4zz3Dw4HEfPrZ7I
/mFy9UPmS/V/6uJdiW+ZrzM/N+3X2Z973jO/az1kxuWnALf+8b2xH6l+f+P1
Ew+Qp19A9EY34v+W/QX1P+bz8/lPmnz/t2Nc9WdNPqLqidAbqi/seOU/Gr5t
rldfqN5YfbHrteuz+TT3J+q1nP/l+hN7v3t/y+2/8H2e3+QLMp9/sObxk942
/HXWu+jsMq/m9VmXJ544/Ph+y+/oIeNxf/t962/S1QtXvp14rfFZ+RSfZb/o
/lA/BONHcv0Puuv3jd7b+9vnPfqdbTMf+PxPfoHEVybO+WPSA5C/9/fSX8vz
kOuP8RL158YDjf+533B/MdXzj/xnzlvGw4x/dTz7bz9vxvn/3c+6f7Wf3nQ+
57zk7zedp/h95MbPvJ+8f6znsX5Hbv2O8dgp/go3/jq9H6/vfOT8ox7A3894
gfEB80nmj6yn6vo3dfVT5kum/hzjc3XxuWm9ZH8pd36Z9Pysn5vcj4kLUH/n
ejedb5p64MzHcut/Jz0R9/f0PHB/u99yf2U/HvWn05j8k+uN64vnBfUXE781
Pt/4vPabsr+U3P279+NUv6ffBP4SzoeTPoZ+ROmnVvlH+7Gp/0KvYfyi82vM
963e0fOp/c6n+UOOf8A37Df8feXGZ+TuX7p+OrVe8Tx7vlPP6/5drr5X7v5e
v7CTfz8cd/GM0g/zvPt8T3qkW4efRz9s85vqraf6fOPRfH9+X/796pGtX5/2
e+zv3M/7/Kj3VN9pPNf4rXor9VX2o7L/lPkavz/PE54fOr+VrJ+d30rVi+B3
NvV/4/08n3geMz5svEd9jc+rz6f7SeNT1ttP9fX4bemv5f38f/Lz/wuOxlQz

         "], 0.5]}, 
       {Hue[1, 0.9, 0.78], DiskBox[{560., 69.}, 0.5], 
        DiskBox[{325., 84.}, 0.5], DiskBox[{661., 106.}, 0.5], 
        DiskBox[{561., 107.}, 0.5], DiskBox[{886., 83.}, 0.5], 
        DiskBox[{862., 73.}, 0.5], DiskBox[{499., 136.}, 0.5], 
        DiskBox[{905., 74.}, 0.5], DiskBox[{645., 101.}, 0.5], 
        DiskBox[{103., 163.}, 0.5], DiskBox[{28., 69.}, 0.5], 
        DiskBox[{39., 121.}, 0.5], DiskBox[{889., 141.}, 0.5], 
        DiskBox[{234., 119.}, 0.5], DiskBox[{490., 160.}, 0.5], 
        DiskBox[{320., 153.}, 0.5], DiskBox[{335., 62.}, 0.5], 
        DiskBox[{889., 92.}, 0.5], DiskBox[{23., 108.}, 0.5], 
        DiskBox[{875., 73.}, 0.5], DiskBox[{707., 166.}, 0.5], 
        DiskBox[{1019., 138.}, 0.5], DiskBox[{218., 79.}, 0.5], 
        DiskBox[{974., 158.}, 0.5], DiskBox[{141., 108.}, 0.5], 
        DiskBox[{1007., 148.}, 0.5], DiskBox[{210., 125.}, 0.5], 
        DiskBox[{442., 96.}, 0.5], DiskBox[{228., 122.}, 0.5], 
        DiskBox[{318., 105.}, 0.5], DiskBox[{577., 109.}, 0.5], 
        DiskBox[{48., 120.}, 0.5], DiskBox[{104., 140.}, 0.5], 
        DiskBox[{262., 105.}, 0.5], DiskBox[{733., 79.}, 0.5], 
        DiskBox[{282., 115.}, 0.5], DiskBox[{153., 103.}, 0.5], 
        DiskBox[{32., 128.}, 0.5], DiskBox[{448., 102.}, 0.5], 
        DiskBox[{109., 116.}, 0.5], DiskBox[{223., 160.}, 0.5], 
        DiskBox[{33., 153.}, 0.5], DiskBox[{231., 71.}, 0.5], 
        DiskBox[{24., 96.}, 0.5], DiskBox[{707., 92.}, 0.5], 
        DiskBox[{785., 98.}, 0.5], DiskBox[{654., 109.}, 0.5], 
        DiskBox[{771., 189.}, 0.5], DiskBox[{228., 70.}, 0.5], 
        DiskBox[{446., 71.}, 0.5], DiskBox[{31., 163.}, 0.5], 
        DiskBox[{1010., 92.}, 0.5], DiskBox[{251., 66.}, 0.5], 
        DiskBox[{509., 154.}, 0.5], DiskBox[{907., 69.}, 0.5], 
        DiskBox[{684., 157.}, 0.5], DiskBox[{951., 102.}, 0.5], 
        DiskBox[{395., 120.}, 0.5], DiskBox[{783., 139.}, 0.5], 
        DiskBox[{479., 90.}, 0.5], DiskBox[{551., 85.}, 0.5], 
        DiskBox[{719., 70.}, 0.5], DiskBox[{373., 115.}, 0.5], 
        DiskBox[{267., 79.}, 0.5], DiskBox[{330., 158.}, 0.5], 
        DiskBox[{1091., 119.}, 0.5], DiskBox[{717., 120.}, 0.5], 
        DiskBox[{143., 155.}, 0.5], DiskBox[{541., 145.}, 0.5], 
        DiskBox[{255., 160.}, 0.5], DiskBox[{664., 121.}, 0.5], 
        DiskBox[{604., 66.}, 0.5], DiskBox[{537., 137.}, 0.5], 
        DiskBox[{142., 202.}, 0.5], DiskBox[{203., 132.}, 0.5], 
        DiskBox[{34., 151.}, 0.5], DiskBox[{980., 73.}, 0.5], 
        DiskBox[{789., 136.}, 0.5], DiskBox[{597., 152.}, 0.5], 
        DiskBox[{1073., 69.}, 0.5], DiskBox[{152., 150.}, 0.5], 
        DiskBox[{341., 142.}, 0.5], DiskBox[{239., 107.}, 0.5], 
        DiskBox[{159., 97.}, 0.5], DiskBox[{721., 104.}, 0.5], 
        DiskBox[{25., 140.}, 0.5], DiskBox[{369., 155.}, 0.5], 
        DiskBox[{385., 139.}, 0.5], DiskBox[{278., 73.}, 0.5], 
        DiskBox[{389., 98.}, 0.5], DiskBox[{259., 113.}, 0.5], 
        DiskBox[{716., 87.}, 0.5], DiskBox[{897., 143.}, 0.5], 
        DiskBox[{71., 71.}, 0.5], DiskBox[{1105., 154.}, 0.5], 
        DiskBox[{709., 97.}, 0.5], DiskBox[{970., 147.}, 0.5], 
        DiskBox[{308., 73.}, 0.5], DiskBox[{373., 108.}, 0.5], 
        DiskBox[{552., 150.}, 0.5], DiskBox[{880., 143.}, 0.5], 
        DiskBox[{941., 120.}, 0.5], DiskBox[{888., 180.}, 0.5], 
        DiskBox[{956., 109.}, 0.5], DiskBox[{561., 65.}, 0.5], 
        DiskBox[{388., 86.}, 0.5], DiskBox[{268., 114.}, 0.5], 
        DiskBox[{824., 118.}, 0.5], DiskBox[{843., 126.}, 0.5], 
        DiskBox[{966., 65.}, 0.5], DiskBox[{539., 106.}, 0.5], 
        DiskBox[{340., 139.}, 0.5], DiskBox[{886., 177.}, 0.5], 
        DiskBox[{898., 69.}, 0.5], DiskBox[{274., 150.}, 0.5], 
        DiskBox[{459., 110.}, 0.5], DiskBox[{321., 114.}, 0.5], 
        DiskBox[{839., 63.}, 0.5], DiskBox[{778., 160.}, 0.5], 
        DiskBox[{935., 132.}, 0.5], DiskBox[{20., 168.}, 0.5], 
        DiskBox[{389., 66.}, 0.5], DiskBox[{974., 154.}, 0.5], 
        DiskBox[{981., 61.}, 0.5], DiskBox[{332., 95.}, 0.5], 
        DiskBox[{768., 186.}, 0.5], DiskBox[{51., 136.}, 0.5], 
        DiskBox[{452., 111.}, 0.5], DiskBox[{479., 69.}, 0.5], 
        DiskBox[{233., 85.}, 0.5], DiskBox[{196., 121.}, 0.5], 
        DiskBox[{494., 138.}, 0.5], DiskBox[{658., 144.}, 0.5], 
        DiskBox[{171., 199.}, 0.5], DiskBox[{677., 148.}, 0.5], 
        DiskBox[{259., 65.}, 0.5], DiskBox[{579., 146.}, 0.5], 
        DiskBox[{772., 92.}, 0.5], DiskBox[{144., 154.}, 0.5], 
        DiskBox[{271., 129.}, 0.5], DiskBox[{556., 133.}, 0.5], 
        DiskBox[{609., 110.}, 0.5], DiskBox[{102., 141.}, 0.5], 
        DiskBox[{650., 162.}, 0.5], DiskBox[{707., 140.}, 0.5], 
        DiskBox[{958., 71.}, 0.5], DiskBox[{956., 73.}, 0.5], 
        DiskBox[{1057., 126.}, 0.5], DiskBox[{20., 106.}, 0.5], 
        DiskBox[{777., 112.}, 0.5], DiskBox[{1001., 105.}, 0.5], 
        DiskBox[{252., 113.}, 0.5], DiskBox[{645., 151.}, 0.5], 
        DiskBox[{65., 127.}, 0.5], DiskBox[{690., 164.}, 0.5], 
        DiskBox[{772., 205.}, 0.5], DiskBox[{772., 109.}, 0.5], 
        DiskBox[{584., 116.}, 0.5], DiskBox[{241., 60.}, 0.5], 
        DiskBox[{1068., 156.}, 0.5], DiskBox[{332., 87.}, 0.5], 
        DiskBox[{233., 81.}, 0.5], DiskBox[{585., 77.}, 0.5], 
        DiskBox[{728., 62.}, 0.5], DiskBox[{216., 144.}, 0.5], 
        DiskBox[{959., 104.}, 0.5], DiskBox[{905., 64.}, 0.5], 
        DiskBox[{597., 104.}, 0.5], DiskBox[{41., 98.}, 0.5], 
        DiskBox[{601., 74.}, 0.5], DiskBox[{62., 75.}, 0.5], 
        DiskBox[{309., 145.}, 0.5], DiskBox[{324., 91.}, 0.5], 
        DiskBox[{836., 88.}, 0.5], DiskBox[{645., 142.}, 0.5], 
        DiskBox[{937., 105.}, 0.5], DiskBox[{783., 69.}, 0.5], 
        DiskBox[{608., 146.}, 0.5], DiskBox[{973., 66.}, 0.5], 
        DiskBox[{772., 64.}, 0.5], DiskBox[{670., 107.}, 0.5], 
        DiskBox[{613., 76.}, 0.5], DiskBox[{383., 89.}, 0.5], 
        DiskBox[{1056., 70.}, 0.5], DiskBox[{558., 123.}, 0.5], 
        DiskBox[{35., 63.}, 0.5], DiskBox[{952., 109.}, 0.5], 
        DiskBox[{894., 189.}, 0.5], DiskBox[{1004., 161.}, 0.5], 
        DiskBox[{554., 110.}, 0.5], DiskBox[{1110., 110.}, 0.5], 
        DiskBox[{272., 145.}, 0.5], DiskBox[{955., 72.}, 0.5], 
        DiskBox[{587., 161.}, 0.5], DiskBox[{845., 86.}, 0.5], 
        DiskBox[{536., 96.}, 0.5], DiskBox[{577., 82.}, 0.5], 
        DiskBox[{612., 114.}, 0.5], DiskBox[{713., 137.}, 0.5], 
        DiskBox[{791., 144.}, 0.5], DiskBox[{94., 179.}, 0.5], 
        DiskBox[{538., 139.}, 0.5], DiskBox[{643., 114.}, 0.5], 
        DiskBox[{1110., 147.}, 0.5], DiskBox[{54., 180.}, 0.5], 
        DiskBox[{331., 107.}, 0.5], DiskBox[{823., 76.}, 0.5], 
        DiskBox[{709., 96.}, 0.5], DiskBox[{75., 128.}, 0.5], 
        DiskBox[{644., 128.}, 0.5], DiskBox[{269., 127.}, 0.5], 
        DiskBox[{353., 151.}, 0.5], DiskBox[{33., 148.}, 0.5], 
        DiskBox[{835., 68.}, 0.5], DiskBox[{710., 138.}, 0.5], 
        DiskBox[{877., 143.}, 0.5], DiskBox[{791., 125.}, 0.5], 
        DiskBox[{44., 76.}, 0.5], DiskBox[{1099., 163.}, 0.5], 
        DiskBox[{77., 195.}, 0.5], DiskBox[{899., 86.}, 0.5], 
        DiskBox[{378., 141.}, 0.5], DiskBox[{385., 119.}, 0.5], 
        DiskBox[{25., 185.}, 0.5], DiskBox[{770., 84.}, 0.5], 
        DiskBox[{989., 154.}, 0.5], DiskBox[{533., 99.}, 0.5], 
        DiskBox[{169., 94.}, 0.5], DiskBox[{1086., 101.}, 0.5], 
        DiskBox[{899., 147.}, 0.5], DiskBox[{511., 144.}, 0.5], 
        DiskBox[{879., 143.}, 0.5], DiskBox[{458., 89.}, 0.5], 
        DiskBox[{234., 115.}, 0.5], DiskBox[{708., 85.}, 0.5], 
        DiskBox[{65., 76.}, 0.5], DiskBox[{614., 104.}, 0.5], 
        DiskBox[{446., 92.}, 0.5], DiskBox[{316., 138.}, 0.5], 
        DiskBox[{574., 82.}, 0.5], DiskBox[{709., 89.}, 0.5], 
        DiskBox[{70., 184.}, 0.5], DiskBox[{375., 111.}, 0.5], 
        DiskBox[{72., 142.}, 0.5], DiskBox[{431., 137.}, 0.5], 
        DiskBox[{453., 63.}, 0.5], DiskBox[{550., 148.}, 0.5], 
        DiskBox[{217., 150.}, 0.5], DiskBox[{273., 149.}, 0.5], 
        DiskBox[{951., 80.}, 0.5], DiskBox[{960., 125.}, 0.5], 
        DiskBox[{675., 141.}, 0.5], DiskBox[{587., 69.}, 0.5], 
        DiskBox[{1021., 95.}, 0.5], DiskBox[{97., 166.}, 0.5], 
        DiskBox[{768., 119.}, 0.5], DiskBox[{956., 150.}, 0.5], 
        DiskBox[{773., 125.}, 0.5], DiskBox[{277., 130.}, 0.5], 
        DiskBox[{251., 75.}, 0.5], DiskBox[{1004., 111.}, 0.5], 
        DiskBox[{279., 124.}, 0.5], DiskBox[{842., 73.}, 0.5], 
        DiskBox[{483., 97.}, 0.5], DiskBox[{949., 76.}, 0.5], 
        DiskBox[{908., 167.}, 0.5], DiskBox[{208., 145.}, 0.5], 
        DiskBox[{37., 64.}, 0.5], DiskBox[{374., 138.}, 0.5], 
        DiskBox[{197., 89.}, 0.5], DiskBox[{1064., 143.}, 0.5], 
        DiskBox[{1074., 113.}, 0.5], DiskBox[{721., 147.}, 0.5], 
        DiskBox[{540., 99.}, 0.5], DiskBox[{457., 97.}, 0.5], 
        DiskBox[{386., 102.}, 0.5], DiskBox[{1099., 116.}, 0.5], 
        DiskBox[{321., 126.}, 0.5], DiskBox[{443., 102.}, 0.5], 
        DiskBox[{487., 113.}, 0.5], DiskBox[{453., 87.}, 0.5], 
        DiskBox[{216., 112.}, 0.5], DiskBox[{899., 79.}, 0.5], 
        DiskBox[{686., 156.}, 0.5], DiskBox[{24., 64.}, 0.5], 
        DiskBox[{258., 112.}, 0.5], DiskBox[{1015., 132.}, 0.5], 
        DiskBox[{828., 114.}, 0.5], DiskBox[{1112., 76.}, 0.5], 
        DiskBox[{26., 138.}, 0.5], DiskBox[{108., 159.}, 0.5], 
        DiskBox[{570., 118.}, 0.5], DiskBox[{832., 143.}, 0.5], 
        DiskBox[{777., 109.}, 0.5], DiskBox[{203., 142.}, 0.5], 
        DiskBox[{893., 171.}, 0.5], DiskBox[{585., 116.}, 0.5], 
        DiskBox[{225., 63.}, 0.5], DiskBox[{963., 67.}, 0.5], 
        DiskBox[{30., 76.}, 0.5], DiskBox[{998., 164.}, 0.5], 
        DiskBox[{162., 128.}, 0.5], DiskBox[{36., 120.}, 0.5], 
        DiskBox[{162., 104.}, 0.5], DiskBox[{442., 109.}, 0.5], 
        DiskBox[{477., 96.}, 0.5], DiskBox[{318., 133.}, 0.5], 
        DiskBox[{486., 83.}, 0.5], DiskBox[{337., 140.}, 0.5], 
        DiskBox[{328., 92.}, 0.5], DiskBox[{222., 87.}, 0.5], 
        DiskBox[{774., 107.}, 0.5], DiskBox[{852., 84.}, 0.5], 
        DiskBox[{1007., 157.}, 0.5], DiskBox[{317., 140.}, 0.5], 
        DiskBox[{666., 74.}, 0.5], DiskBox[{883., 95.}, 0.5], 
        DiskBox[{213., 82.}, 0.5], DiskBox[{264., 82.}, 0.5], 
        DiskBox[{998., 139.}, 0.5], DiskBox[{1061., 73.}, 0.5], 
        DiskBox[{214., 148.}, 0.5], DiskBox[{309., 136.}, 0.5], 
        DiskBox[{163., 201.}, 0.5], DiskBox[{552., 79.}, 0.5], 
        DiskBox[{840., 96.}, 0.5], DiskBox[{884., 198.}, 0.5], 
        DiskBox[{446., 127.}, 0.5], DiskBox[{228., 148.}, 0.5], 
        DiskBox[{103., 172.}, 0.5], DiskBox[{719., 69.}, 0.5], 
        DiskBox[{30., 92.}, 0.5], DiskBox[{346., 141.}, 0.5], 
        DiskBox[{159., 153.}, 0.5], DiskBox[{507., 143.}, 0.5], 
        DiskBox[{1106., 70.}, 0.5], DiskBox[{770., 130.}, 0.5], 
        DiskBox[{1008., 107.}, 0.5], DiskBox[{378., 70.}, 0.5], 
        DiskBox[{549., 118.}, 0.5], DiskBox[{980., 70.}, 0.5], 
        DiskBox[{1059., 152.}, 0.5], DiskBox[{999., 130.}, 0.5], 
        DiskBox[{892., 78.}, 0.5], DiskBox[{551., 91.}, 0.5], 
        DiskBox[{1086., 64.}, 0.5], DiskBox[{157., 62.}, 0.5], 
        DiskBox[{770., 183.}, 0.5], DiskBox[{510., 163.}, 0.5], 
        DiskBox[{553., 85.}, 0.5], DiskBox[{58., 75.}, 0.5], 
        DiskBox[{882., 143.}, 0.5], DiskBox[{242., 109.}, 0.5], 
        DiskBox[{261., 77.}, 0.5], DiskBox[{908., 127.}, 0.5], 
        DiskBox[{938., 126.}, 0.5], DiskBox[{896., 67.}, 0.5], 
        DiskBox[{591., 147.}, 0.5], DiskBox[{1088., 119.}, 0.5], 
        DiskBox[{152., 194.}, 0.5], DiskBox[{460., 70.}, 0.5], 
        DiskBox[{1008., 159.}, 0.5], DiskBox[{661., 86.}, 0.5], 
        DiskBox[{581., 162.}, 0.5], DiskBox[{597., 123.}, 0.5], 
        DiskBox[{780., 88.}, 0.5], DiskBox[{107., 126.}, 0.5], 
        DiskBox[{250., 152.}, 0.5], DiskBox[{28., 90.}, 0.5], 
        DiskBox[{763., 185.}, 0.5], DiskBox[{481., 89.}, 0.5], 
        DiskBox[{159., 111.}, 0.5], DiskBox[{456., 80.}, 0.5], 
        DiskBox[{487., 143.}, 0.5], DiskBox[{237., 165.}, 0.5], 
        DiskBox[{369., 120.}, 0.5], DiskBox[{479., 62.}, 0.5], 
        DiskBox[{152., 86.}, 0.5], DiskBox[{501., 114.}, 0.5], 
        DiskBox[{45., 132.}, 0.5], DiskBox[{699., 157.}, 0.5], 
        DiskBox[{941., 85.}, 0.5], DiskBox[{870., 83.}, 0.5], 
        DiskBox[{896., 98.}, 0.5], DiskBox[{610., 125.}, 0.5], 
        DiskBox[{773., 94.}, 0.5], DiskBox[{1085., 116.}, 0.5], 
        DiskBox[{766., 121.}, 0.5], DiskBox[{776., 69.}, 0.5], 
        DiskBox[{678., 136.}, 0.5], DiskBox[{265., 110.}, 0.5], 
        DiskBox[{842., 103.}, 0.5], DiskBox[{398., 130.}, 0.5], 
        DiskBox[{666., 143.}, 0.5], DiskBox[{256., 70.}, 0.5], 
        DiskBox[{52., 179.}, 0.5], DiskBox[{266., 124.}, 0.5], 
        DiskBox[{617., 129.}, 0.5], DiskBox[{767., 66.}, 0.5], 
        DiskBox[{72., 68.}, 0.5], DiskBox[{1089., 106.}, 0.5], 
        DiskBox[{433., 113.}, 0.5], DiskBox[{707., 72.}, 0.5], 
        DiskBox[{649., 84.}, 0.5], DiskBox[{76., 132.}, 0.5], 
        DiskBox[{940., 101.}, 0.5], DiskBox[{868., 160.}, 0.5], 
        DiskBox[{657., 112.}, 0.5], DiskBox[{772., 94.}, 0.5], 
        DiskBox[{885., 109.}, 0.5], DiskBox[{1011., 84.}, 0.5], 
        DiskBox[{1104., 88.}, 0.5], DiskBox[{668., 136.}, 0.5], 
        DiskBox[{654., 153.}, 0.5], DiskBox[{572., 80.}, 0.5], 
        DiskBox[{91., 186.}, 0.5], DiskBox[{1104., 110.}, 0.5], 
        DiskBox[{144., 157.}, 0.5], DiskBox[{334., 104.}, 0.5], 
        DiskBox[{387., 63.}, 0.5], DiskBox[{142., 112.}, 0.5], 
        DiskBox[{560., 66.}, 0.5], DiskBox[{1085., 162.}, 0.5], 
        DiskBox[{87., 187.}, 0.5], DiskBox[{324., 152.}, 0.5], 
        DiskBox[{653., 146.}, 0.5], DiskBox[{258., 162.}, 0.5], 
        DiskBox[{377., 127.}, 0.5], DiskBox[{895., 150.}, 0.5], 
        DiskBox[{721., 138.}, 0.5], DiskBox[{653., 81.}, 0.5], 
        DiskBox[{277., 70.}, 0.5], DiskBox[{910., 170.}, 0.5], 
        DiskBox[{790., 163.}, 0.5], DiskBox[{1060., 65.}, 0.5], 
        DiskBox[{380., 139.}, 0.5], DiskBox[{959., 94.}, 0.5], 
        DiskBox[{169., 100.}, 0.5], DiskBox[{313., 132.}, 0.5], 
        DiskBox[{601., 70.}, 0.5], DiskBox[{42., 107.}, 0.5], 
        DiskBox[{448., 150.}, 0.5], DiskBox[{44., 190.}, 0.5], 
        DiskBox[{345., 157.}, 0.5], DiskBox[{373., 141.}, 0.5], 
        DiskBox[{896., 164.}, 0.5], DiskBox[{1026., 85.}, 0.5], 
        DiskBox[{887., 119.}, 0.5], DiskBox[{374., 143.}, 0.5], 
        DiskBox[{484., 109.}, 0.5], DiskBox[{1103., 78.}, 0.5], 
        DiskBox[{942., 130.}, 0.5], DiskBox[{229., 107.}, 0.5], 
        DiskBox[{664., 75.}, 0.5], DiskBox[{487., 98.}, 0.5], 
        DiskBox[{21., 100.}, 0.5], DiskBox[{49., 139.}, 0.5], 
        DiskBox[{977., 80.}, 0.5], DiskBox[{154., 133.}, 0.5], 
        DiskBox[{219., 122.}, 0.5], DiskBox[{51., 121.}, 0.5], 
        DiskBox[{774., 122.}, 0.5], DiskBox[{963., 132.}, 0.5], 
        DiskBox[{488., 153.}, 0.5], DiskBox[{541., 127.}, 0.5], 
        DiskBox[{470., 68.}, 0.5], DiskBox[{589., 66.}, 0.5], 
        DiskBox[{115., 104.}, 0.5], DiskBox[{907., 129.}, 0.5], 
        DiskBox[{490., 133.}, 0.5], DiskBox[{1027., 121.}, 0.5], 
        DiskBox[{240., 110.}, 0.5], DiskBox[{254., 163.}, 0.5], 
        DiskBox[{602., 121.}, 0.5], DiskBox[{764., 104.}, 0.5], 
        DiskBox[{1006., 160.}, 0.5], DiskBox[{1086., 120.}, 0.5], 
        DiskBox[{551., 150.}, 0.5], DiskBox[{327., 81.}, 0.5], 
        DiskBox[{374., 66.}, 0.5], DiskBox[{270., 146.}, 0.5], 
        DiskBox[{726., 112.}, 0.5], DiskBox[{724., 77.}, 0.5], 
        DiskBox[{581., 77.}, 0.5], DiskBox[{787., 122.}, 0.5], 
        DiskBox[{727., 125.}, 0.5], DiskBox[{394., 146.}, 0.5], 
        DiskBox[{843., 116.}, 0.5], DiskBox[{1113., 77.}, 0.5], 
        DiskBox[{652., 97.}, 0.5], DiskBox[{906., 104.}, 0.5], 
        DiskBox[{974., 80.}, 0.5], DiskBox[{1066., 136.}, 0.5], 
        DiskBox[{78., 73.}, 0.5], DiskBox[{837., 156.}, 0.5], 
        DiskBox[{69., 176.}, 0.5], DiskBox[{675., 140.}, 0.5], 
        DiskBox[{276., 122.}, 0.5], DiskBox[{765., 114.}, 0.5], 
        DiskBox[{94., 155.}, 0.5], DiskBox[{1087., 124.}, 0.5], 
        DiskBox[{784., 157.}, 0.5], DiskBox[{966., 90.}, 0.5], 
        DiskBox[{442., 132.}, 0.5], DiskBox[{324., 66.}, 0.5], 
        DiskBox[{570., 145.}, 0.5], DiskBox[{969., 67.}, 0.5], 
        DiskBox[{1061., 77.}, 0.5], DiskBox[{218., 73.}, 0.5], 
        DiskBox[{239., 70.}, 0.5], DiskBox[{271., 119.}, 0.5], 
        DiskBox[{327., 87.}, 0.5], DiskBox[{73., 141.}, 0.5], 
        DiskBox[{588., 115.}, 0.5], DiskBox[{907., 75.}, 0.5], 
        DiskBox[{545., 81.}, 0.5], DiskBox[{380., 142.}, 0.5], 
        DiskBox[{1112., 75.}, 0.5], DiskBox[{109., 76.}, 0.5], 
        DiskBox[{863., 159.}, 0.5], DiskBox[{572., 157.}, 0.5], 
        DiskBox[{164., 207.}, 0.5], DiskBox[{654., 104.}, 0.5], 
        DiskBox[{780., 91.}, 0.5], DiskBox[{100., 137.}, 0.5], 
        DiskBox[{714., 130.}, 0.5], DiskBox[{901., 153.}, 0.5], 
        DiskBox[{319., 137.}, 0.5], DiskBox[{720., 157.}, 0.5], 
        DiskBox[{712., 102.}, 0.5], DiskBox[{505., 162.}, 0.5], 
        DiskBox[{720., 149.}, 0.5], DiskBox[{250., 113.}, 0.5], 
        DiskBox[{26., 99.}, 0.5], DiskBox[{268., 155.}, 0.5], 
        DiskBox[{837., 75.}, 0.5], DiskBox[{44., 130.}, 0.5], 
        DiskBox[{202., 113.}, 0.5], DiskBox[{200., 128.}, 0.5], 
        DiskBox[{834., 121.}, 0.5], DiskBox[{99., 87.}, 0.5], 
        DiskBox[{682., 140.}, 0.5], DiskBox[{160., 204.}, 0.5], 
        DiskBox[{724., 83.}, 0.5], DiskBox[{273., 150.}, 0.5], 
        DiskBox[{1108., 86.}, 0.5], DiskBox[{383., 157.}, 0.5], 
        DiskBox[{666., 157.}, 0.5], DiskBox[{210., 147.}, 0.5], 
        DiskBox[{99., 84.}, 0.5], DiskBox[{104., 96.}, 0.5], 
        DiskBox[{89., 125.}, 0.5], DiskBox[{1006., 107.}, 0.5], 
        DiskBox[{426., 157.}, 0.5], DiskBox[{873., 141.}, 0.5], 
        DiskBox[{395., 123.}, 0.5], DiskBox[{694., 157.}, 0.5], 
        DiskBox[{1005., 141.}, 0.5], DiskBox[{543., 92.}, 0.5], 
        DiskBox[{103., 110.}, 0.5], DiskBox[{35., 115.}, 0.5], 
        DiskBox[{609., 104.}, 0.5], DiskBox[{163., 191.}, 0.5], 
        DiskBox[{481., 134.}, 0.5], DiskBox[{581., 119.}, 0.5], 
        DiskBox[{1084., 161.}, 0.5], DiskBox[{768., 139.}, 0.5], 
        DiskBox[{947., 124.}, 0.5], DiskBox[{588., 80.}, 0.5], 
        DiskBox[{1052., 137.}, 0.5], DiskBox[{487., 137.}, 0.5], 
        DiskBox[{18., 95.}, 0.5], DiskBox[{566., 73.}, 0.5], 
        DiskBox[{573., 164.}, 0.5], DiskBox[{890., 65.}, 0.5], 
        DiskBox[{606., 147.}, 0.5], DiskBox[{248., 160.}, 0.5], 
        DiskBox[{535., 116.}, 0.5], DiskBox[{649., 95.}, 0.5], 
        DiskBox[{94., 127.}, 0.5], DiskBox[{1124., 94.}, 0.5], 
        DiskBox[{773., 100.}, 0.5], DiskBox[{381., 63.}, 0.5], 
        DiskBox[{41., 159.}, 0.5], DiskBox[{89., 145.}, 0.5], 
        DiskBox[{890., 185.}, 0.5], DiskBox[{158., 159.}, 0.5], 
        DiskBox[{24., 71.}, 0.5], DiskBox[{728., 152.}, 0.5], 
        DiskBox[{258., 75.}, 0.5], DiskBox[{315., 128.}, 0.5], 
        DiskBox[{150., 80.}, 0.5], DiskBox[{865., 155.}, 0.5], 
        DiskBox[{1059., 135.}, 0.5], DiskBox[{648., 92.}, 0.5], 
        DiskBox[{564., 78.}, 0.5], DiskBox[{96., 73.}, 0.5], 
        DiskBox[{61., 73.}, 0.5], DiskBox[{850., 84.}, 0.5], 
        DiskBox[{779., 65.}, 0.5], DiskBox[{542., 117.}, 0.5], 
        DiskBox[{463., 80.}, 0.5], DiskBox[{988., 80.}, 0.5], 
        DiskBox[{883., 199.}, 0.5], DiskBox[{672., 123.}, 0.5], 
        DiskBox[{947., 102.}, 0.5], DiskBox[{730., 87.}, 0.5], 
        DiskBox[{762., 76.}, 0.5], DiskBox[{791., 157.}, 0.5], 
        DiskBox[{398., 117.}, 0.5], DiskBox[{1098., 116.}, 0.5], 
        DiskBox[{99., 114.}, 0.5], DiskBox[{896., 74.}, 0.5], 
        DiskBox[{257., 160.}, 0.5], DiskBox[{398., 120.}, 0.5], 
        DiskBox[{950., 141.}, 0.5], DiskBox[{965., 137.}, 0.5], 
        DiskBox[{387., 124.}, 0.5], DiskBox[{167., 68.}, 0.5], 
        DiskBox[{764., 203.}, 0.5], DiskBox[{474., 109.}, 0.5], 
        DiskBox[{447., 92.}, 0.5], DiskBox[{780., 134.}, 0.5], 
        DiskBox[{849., 78.}, 0.5], DiskBox[{233., 159.}, 0.5], 
        DiskBox[{535., 139.}, 0.5], DiskBox[{953., 73.}, 0.5], 
        DiskBox[{83., 80.}, 0.5], DiskBox[{501., 153.}, 0.5], 
        DiskBox[{779., 115.}, 0.5], DiskBox[{393., 117.}, 0.5], 
        DiskBox[{35., 146.}, 0.5], DiskBox[{494., 100.}, 0.5], 
        DiskBox[{541., 109.}, 0.5], DiskBox[{706., 76.}, 0.5], 
        DiskBox[{903., 199.}, 0.5], DiskBox[{36., 152.}, 0.5], 
        DiskBox[{898., 134.}, 0.5], DiskBox[{620., 125.}, 0.5], 
        DiskBox[{388., 120.}, 0.5], DiskBox[{957., 87.}, 0.5], 
        DiskBox[{1113., 101.}, 0.5], DiskBox[{765., 70.}, 0.5], 
        DiskBox[{156., 164.}, 0.5], DiskBox[{996., 143.}, 0.5], 
        DiskBox[{901., 195.}, 0.5], DiskBox[{888., 73.}, 0.5], 
        DiskBox[{1010., 128.}, 0.5], DiskBox[{325., 125.}, 0.5], 
        DiskBox[{19., 170.}, 0.5], DiskBox[{901., 126.}, 0.5], 
        DiskBox[{509., 140.}, 0.5], DiskBox[{1101., 84.}, 0.5], 
        DiskBox[{222., 114.}, 0.5], DiskBox[{1007., 83.}, 0.5], 
        DiskBox[{602., 67.}, 0.5], DiskBox[{334., 116.}, 0.5], 
        DiskBox[{206., 82.}, 0.5], DiskBox[{279., 110.}, 0.5], 
        DiskBox[{394., 136.}, 0.5], DiskBox[{658., 97.}, 0.5], 
        DiskBox[{422., 148.}, 0.5], DiskBox[{236., 113.}, 0.5], 
        DiskBox[{890., 91.}, 0.5], DiskBox[{96., 143.}, 0.5], 
        DiskBox[{398., 87.}, 0.5], DiskBox[{687., 158.}, 0.5], 
        DiskBox[{787., 198.}, 0.5], DiskBox[{706., 133.}, 0.5], 
        DiskBox[{351., 157.}, 0.5], DiskBox[{818., 129.}, 0.5], 
        DiskBox[{142., 80.}, 0.5], DiskBox[{618., 128.}, 0.5], 
        DiskBox[{909., 184.}, 0.5], DiskBox[{767., 83.}, 0.5], 
        DiskBox[{378., 150.}, 0.5], DiskBox[{109., 110.}, 0.5], 
        DiskBox[{940., 118.}, 0.5], DiskBox[{212., 126.}, 0.5], 
        DiskBox[{332., 136.}, 0.5], DiskBox[{442., 95.}, 0.5], 
        DiskBox[{249., 148.}, 0.5], DiskBox[{200., 136.}, 0.5], 
        DiskBox[{573., 83.}, 0.5], DiskBox[{571., 104.}, 0.5], 
        DiskBox[{1080., 74.}, 0.5], DiskBox[{257., 71.}, 0.5], 
        DiskBox[{215., 81.}, 0.5], DiskBox[{644., 134.}, 0.5], 
        DiskBox[{784., 151.}, 0.5], DiskBox[{816., 123.}, 0.5], 
        DiskBox[{988., 67.}, 0.5], DiskBox[{151., 86.}, 0.5], 
        DiskBox[{990., 162.}, 0.5], DiskBox[{900., 83.}, 0.5], 
        DiskBox[{784., 67.}, 0.5], DiskBox[{889., 111.}, 0.5], 
        DiskBox[{378., 122.}, 0.5], DiskBox[{784., 109.}, 0.5], 
        DiskBox[{60., 196.}, 0.5], DiskBox[{1070., 163.}, 0.5], 
        DiskBox[{841., 71.}, 0.5], DiskBox[{105., 172.}, 0.5], 
        DiskBox[{553., 90.}, 0.5], DiskBox[{897., 196.}, 0.5], 
        DiskBox[{845., 152.}, 0.5], DiskBox[{1119., 78.}, 0.5], 
        DiskBox[{390., 77.}, 0.5], DiskBox[{153., 117.}, 0.5], 
        DiskBox[{98., 127.}, 0.5], DiskBox[{418., 156.}, 0.5], 
        DiskBox[{950., 105.}, 0.5], DiskBox[{451., 99.}, 0.5], 
        DiskBox[{888., 196.}, 0.5], DiskBox[{32., 151.}, 0.5], 
        DiskBox[{329., 108.}, 0.5], DiskBox[{643., 64.}, 0.5], 
        DiskBox[{882., 92.}, 0.5], DiskBox[{165., 89.}, 0.5], 
        DiskBox[{163., 92.}, 0.5], DiskBox[{456., 96.}, 0.5], 
        DiskBox[{384., 157.}, 0.5], DiskBox[{86., 145.}, 0.5], 
        DiskBox[{483., 94.}, 0.5], DiskBox[{1015., 108.}, 0.5], 
        DiskBox[{1084., 65.}, 0.5], DiskBox[{542., 110.}, 0.5], 
        DiskBox[{1091., 110.}, 0.5], DiskBox[{153., 190.}, 0.5], 
        DiskBox[{645., 62.}, 0.5], DiskBox[{384., 76.}, 0.5], 
        DiskBox[{861., 159.}, 0.5], DiskBox[{990., 165.}, 0.5], 
        DiskBox[{821., 132.}, 0.5], DiskBox[{889., 176.}, 0.5], 
        DiskBox[{584., 144.}, 0.5], DiskBox[{844., 111.}, 0.5], 
        DiskBox[{1000., 157.}, 0.5], DiskBox[{910., 165.}, 0.5], 
        DiskBox[{354., 149.}, 0.5], DiskBox[{670., 131.}, 0.5], 
        DiskBox[{515., 157.}, 0.5], DiskBox[{781., 191.}, 0.5], 
        DiskBox[{763., 192.}, 0.5], DiskBox[{592., 66.}, 0.5], 
        DiskBox[{778., 70.}, 0.5], DiskBox[{42., 78.}, 0.5], 
        DiskBox[{393., 64.}, 0.5], DiskBox[{164., 202.}, 0.5], 
        DiskBox[{165., 110.}, 0.5], DiskBox[{1122., 154.}, 0.5], 
        DiskBox[{662., 110.}, 0.5], DiskBox[{377., 94.}, 0.5], 
        DiskBox[{141., 93.}, 0.5], DiskBox[{770., 96.}, 0.5], 
        DiskBox[{591., 149.}, 0.5], DiskBox[{81., 79.}, 0.5], 
        DiskBox[{648., 130.}, 0.5], DiskBox[{660., 163.}, 0.5], 
        DiskBox[{27., 113.}, 0.5], DiskBox[{212., 146.}, 0.5], 
        DiskBox[{234., 160.}, 0.5], DiskBox[{369., 121.}, 0.5], 
        DiskBox[{425., 140.}, 0.5], DiskBox[{1009., 134.}, 0.5], 
        DiskBox[{37., 175.}, 0.5], DiskBox[{1028., 134.}, 0.5], 
        DiskBox[{733., 128.}, 0.5], DiskBox[{779., 188.}, 0.5], 
        DiskBox[{393., 68.}, 0.5], DiskBox[{96., 154.}, 0.5], 
        DiskBox[{909., 109.}, 0.5], DiskBox[{654., 95.}, 0.5], 
        DiskBox[{769., 102.}, 0.5], DiskBox[{446., 108.}, 0.5], 
        DiskBox[{163., 147.}, 0.5], DiskBox[{158., 124.}, 0.5], 
        DiskBox[{79., 147.}, 0.5], DiskBox[{607., 139.}, 0.5], 
        DiskBox[{453., 116.}, 0.5], DiskBox[{200., 139.}, 0.5], 
        DiskBox[{858., 67.}, 0.5], DiskBox[{601., 137.}, 0.5], 
        DiskBox[{654., 108.}, 0.5], DiskBox[{1004., 92.}, 0.5], 
        DiskBox[{529., 106.}, 0.5], DiskBox[{213., 116.}, 0.5], 
        DiskBox[{896., 150.}, 0.5], DiskBox[{1004., 131.}, 0.5], 
        DiskBox[{790., 199.}, 0.5], DiskBox[{21., 69.}, 0.5], 
        DiskBox[{839., 131.}, 0.5], DiskBox[{728., 91.}, 0.5], 
        DiskBox[{899., 87.}, 0.5], DiskBox[{710., 63.}, 0.5], 
        DiskBox[{446., 109.}, 0.5], DiskBox[{158., 62.}, 0.5], 
        DiskBox[{373., 160.}, 0.5], DiskBox[{433., 136.}, 0.5], 
        DiskBox[{651., 107.}, 0.5], DiskBox[{1020., 96.}, 0.5], 
        DiskBox[{572., 144.}, 0.5], DiskBox[{556., 82.}, 0.5], 
        DiskBox[{248., 72.}, 0.5], DiskBox[{764., 144.}, 0.5], 
        DiskBox[{1064., 78.}, 0.5], DiskBox[{953., 103.}, 0.5], 
        DiskBox[{816., 125.}, 0.5], DiskBox[{317., 146.}, 0.5], 
        DiskBox[{471., 83.}, 0.5], DiskBox[{604., 65.}, 0.5], 
        DiskBox[{901., 192.}, 0.5], DiskBox[{383., 73.}, 0.5], 
        DiskBox[{197., 108.}, 0.5], DiskBox[{657., 161.}, 0.5], 
        DiskBox[{226., 78.}, 0.5], DiskBox[{107., 149.}, 0.5], 
        DiskBox[{444., 153.}, 0.5], DiskBox[{939., 130.}, 0.5], 
        DiskBox[{54., 184.}, 0.5], DiskBox[{907., 102.}, 0.5], 
        DiskBox[{1077., 66.}, 0.5], DiskBox[{964., 65.}, 0.5], 
        DiskBox[{147., 73.}, 0.5], DiskBox[{961., 106.}, 0.5], 
        DiskBox[{312., 160.}, 0.5], DiskBox[{1112., 154.}, 0.5], 
        DiskBox[{107., 153.}, 0.5], DiskBox[{154., 155.}, 0.5], 
        DiskBox[{1110., 145.}, 0.5], DiskBox[{446., 90.}, 0.5], 
        DiskBox[{264., 141.}, 0.5], DiskBox[{33., 154.}, 0.5], 
        DiskBox[{653., 103.}, 0.5], DiskBox[{443., 124.}, 0.5], 
        DiskBox[{706., 132.}, 0.5], DiskBox[{1073., 142.}, 0.5], 
        DiskBox[{1024., 117.}, 0.5], DiskBox[{220., 151.}, 0.5], 
        DiskBox[{729., 100.}, 0.5], DiskBox[{153., 67.}, 0.5], 
        DiskBox[{699., 151.}, 0.5], DiskBox[{668., 98.}, 0.5], 
        DiskBox[{214., 155.}, 0.5], DiskBox[{648., 77.}, 0.5], 
        DiskBox[{1096., 116.}, 0.5], DiskBox[{62., 187.}, 0.5], 
        DiskBox[{1006., 94.}, 0.5], DiskBox[{895., 198.}, 0.5], 
        DiskBox[{251., 159.}, 0.5], DiskBox[{247., 160.}, 0.5], 
        DiskBox[{821., 95.}, 0.5], DiskBox[{784., 105.}, 0.5], 
        DiskBox[{103., 174.}, 0.5], DiskBox[{555., 151.}, 0.5], 
        DiskBox[{646., 64.}, 0.5], DiskBox[{84., 153.}, 0.5], 
        DiskBox[{383., 133.}, 0.5], DiskBox[{203., 98.}, 0.5], 
        DiskBox[{235., 163.}, 0.5], DiskBox[{446., 157.}, 0.5], 
        DiskBox[{331., 81.}, 0.5], DiskBox[{532., 113.}, 0.5], 
        DiskBox[{540., 137.}, 0.5], DiskBox[{900., 133.}, 0.5], 
        DiskBox[{767., 131.}, 0.5], DiskBox[{650., 93.}, 0.5], 
        DiskBox[{320., 124.}, 0.5], DiskBox[{388., 122.}, 0.5], 
        DiskBox[{19., 136.}, 0.5], DiskBox[{882., 155.}, 0.5], 
        DiskBox[{889., 129.}, 0.5], DiskBox[{545., 128.}, 0.5], 
        DiskBox[{644., 77.}, 0.5], DiskBox[{883., 82.}, 0.5], 
        DiskBox[{970., 68.}, 0.5], DiskBox[{1004., 158.}, 0.5], 
        DiskBox[{550., 105.}, 0.5], DiskBox[{1109., 118.}, 0.5], 
        DiskBox[{157., 69.}, 0.5], DiskBox[{959., 86.}, 0.5], 
        DiskBox[{1076., 161.}, 0.5], DiskBox[{847., 153.}, 0.5], 
        DiskBox[{533., 88.}, 0.5], DiskBox[{663., 97.}, 0.5], 
        DiskBox[{995., 146.}, 0.5], DiskBox[{1003., 135.}, 0.5], 
        DiskBox[{718., 119.}, 0.5], DiskBox[{232., 162.}, 0.5], 
        DiskBox[{944., 85.}, 0.5], DiskBox[{163., 182.}, 0.5], 
        DiskBox[{771., 101.}, 0.5], DiskBox[{1103., 154.}, 0.5], 
        DiskBox[{872., 81.}, 0.5], DiskBox[{370., 159.}, 0.5], 
        DiskBox[{55., 77.}, 0.5], DiskBox[{879., 154.}, 0.5], 
        DiskBox[{937., 123.}, 0.5], DiskBox[{947., 125.}, 0.5], 
        DiskBox[{765., 185.}, 0.5], DiskBox[{91., 189.}, 0.5], 
        DiskBox[{1018., 116.}, 0.5], DiskBox[{273., 115.}, 0.5], 
        DiskBox[{650., 138.}, 0.5], DiskBox[{1008., 130.}, 0.5], 
        DiskBox[{1059., 129.}, 0.5], DiskBox[{575., 106.}, 0.5], 
        DiskBox[{910., 117.}, 0.5], DiskBox[{446., 159.}, 0.5], 
        DiskBox[{195., 124.}, 0.5], DiskBox[{792., 197.}, 0.5], 
        DiskBox[{709., 157.}, 0.5], DiskBox[{975., 152.}, 0.5], 
        DiskBox[{61., 64.}, 0.5], DiskBox[{593., 67.}, 0.5], 
        DiskBox[{69., 194.}, 0.5], DiskBox[{316., 140.}, 0.5], 
        DiskBox[{1078., 140.}, 0.5], DiskBox[{790., 96.}, 0.5], 
        DiskBox[{235., 144.}, 0.5], DiskBox[{818., 95.}, 0.5], 
        DiskBox[{494., 146.}, 0.5], DiskBox[{662., 98.}, 0.5], 
        DiskBox[{886., 190.}, 0.5], DiskBox[{1063., 149.}, 0.5], 
        DiskBox[{779., 117.}, 0.5], DiskBox[{107., 162.}, 0.5], 
        DiskBox[{275., 139.}, 0.5], DiskBox[{664., 115.}, 0.5], 
        DiskBox[{28., 131.}, 0.5], DiskBox[{163., 192.}, 0.5], 
        DiskBox[{370., 126.}, 0.5], DiskBox[{307., 141.}, 0.5], 
        DiskBox[{271., 109.}, 0.5], DiskBox[{344., 151.}, 0.5], 
        DiskBox[{167., 202.}, 0.5], DiskBox[{1065., 142.}, 0.5], 
        DiskBox[{937., 120.}, 0.5], DiskBox[{768., 126.}, 0.5], 
        DiskBox[{364., 151.}, 0.5], DiskBox[{888., 197.}, 0.5], 
        DiskBox[{438., 138.}, 0.5], DiskBox[{441., 93.}, 0.5], 
        DiskBox[{18., 188.}, 0.5], DiskBox[{940., 112.}, 0.5], 
        DiskBox[{869., 65.}, 0.5], DiskBox[{652., 96.}, 0.5], 
        DiskBox[{495., 150.}, 0.5], DiskBox[{55., 188.}, 0.5], 
        DiskBox[{1077., 134.}, 0.5], DiskBox[{820., 126.}, 0.5], 
        DiskBox[{773., 84.}, 0.5], DiskBox[{958., 149.}, 0.5], 
        DiskBox[{860., 143.}, 0.5], DiskBox[{32., 63.}, 0.5], 
        DiskBox[{950., 106.}, 0.5], DiskBox[{953., 115.}, 0.5], 
        DiskBox[{482., 64.}, 0.5], DiskBox[{1103., 116.}, 0.5], 
        DiskBox[{158., 161.}, 0.5], DiskBox[{831., 126.}, 0.5], 
        DiskBox[{109., 170.}, 0.5], DiskBox[{276., 134.}, 0.5], 
        DiskBox[{893., 65.}, 0.5], DiskBox[{262., 131.}, 0.5], 
        DiskBox[{230., 165.}, 0.5], DiskBox[{38., 97.}, 0.5], 
        DiskBox[{973., 161.}, 0.5], DiskBox[{158., 72.}, 0.5], 
        DiskBox[{647., 96.}, 0.5], DiskBox[{1056., 140.}, 0.5], 
        DiskBox[{532., 106.}, 0.5], DiskBox[{271., 106.}, 0.5], 
        DiskBox[{1092., 71.}, 0.5], DiskBox[{837., 130.}, 0.5], 
        DiskBox[{1082., 106.}, 0.5], DiskBox[{905., 121.}, 0.5], 
        DiskBox[{779., 127.}, 0.5], DiskBox[{89., 128.}, 0.5], 
        DiskBox[{230., 150.}, 0.5], DiskBox[{489., 84.}, 0.5], 
        DiskBox[{987., 162.}, 0.5], DiskBox[{235., 73.}, 0.5], 
        DiskBox[{1059., 128.}, 0.5], DiskBox[{506., 142.}, 0.5], 
        DiskBox[{80., 135.}, 0.5], DiskBox[{770., 113.}, 0.5], 
        DiskBox[{95., 185.}, 0.5], DiskBox[{594., 148.}, 0.5], 
        DiskBox[{883., 94.}, 0.5], DiskBox[{561., 162.}, 0.5], 
        DiskBox[{324., 150.}, 0.5], DiskBox[{899., 191.}, 0.5], 
        DiskBox[{547., 114.}, 0.5], DiskBox[{965., 139.}, 0.5], 
        DiskBox[{895., 157.}, 0.5], DiskBox[{100., 119.}, 0.5], 
        DiskBox[{978., 152.}, 0.5], DiskBox[{336., 130.}, 0.5], 
        DiskBox[{990., 164.}, 0.5], DiskBox[{594., 107.}, 0.5], 
        DiskBox[{390., 84.}, 0.5], DiskBox[{778., 93.}, 0.5], 
        DiskBox[{907., 67.}, 0.5], DiskBox[{1118., 95.}, 0.5], 
        DiskBox[{902., 98.}, 0.5], DiskBox[{650., 110.}, 0.5], 
        DiskBox[{1069., 157.}, 0.5], DiskBox[{155., 190.}, 0.5], 
        DiskBox[{155., 121.}, 0.5], DiskBox[{711., 86.}, 0.5], 
        DiskBox[{40., 135.}, 0.5], DiskBox[{106., 180.}, 0.5], 
        DiskBox[{508., 160.}, 0.5], DiskBox[{220., 83.}, 0.5], 
        DiskBox[{255., 75.}, 0.5], DiskBox[{664., 98.}, 0.5], 
        DiskBox[{244., 69.}, 0.5], DiskBox[{1083., 111.}, 0.5], 
        DiskBox[{56., 177.}, 0.5], DiskBox[{20., 117.}, 0.5], 
        DiskBox[{767., 109.}, 0.5], DiskBox[{372., 83.}, 0.5], 
        DiskBox[{160., 180.}, 0.5], DiskBox[{577., 75.}, 0.5], 
        DiskBox[{564., 106.}, 0.5], DiskBox[{658., 104.}, 0.5], 
        DiskBox[{155., 183.}, 0.5], DiskBox[{29., 158.}, 0.5], 
        DiskBox[{900., 80.}, 0.5], DiskBox[{986., 75.}, 0.5], 
        DiskBox[{994., 85.}, 0.5], DiskBox[{833., 96.}, 0.5], 
        DiskBox[{1077., 70.}, 0.5], DiskBox[{943., 132.}, 0.5], 
        DiskBox[{670., 64.}, 0.5], DiskBox[{257., 123.}, 0.5], 
        DiskBox[{159., 190.}, 0.5], DiskBox[{879., 68.}, 0.5], 
        DiskBox[{706., 102.}, 0.5], DiskBox[{562., 79.}, 0.5], 
        DiskBox[{657., 100.}, 0.5], DiskBox[{645., 97.}, 0.5], 
        DiskBox[{1116., 96.}, 0.5], DiskBox[{1110., 153.}, 0.5], 
        DiskBox[{843., 137.}, 0.5], DiskBox[{650., 116.}, 0.5], 
        DiskBox[{449., 104.}, 0.5], DiskBox[{1123., 103.}, 0.5], 
        DiskBox[{548., 90.}, 0.5], DiskBox[{474., 66.}, 0.5], 
        DiskBox[{99., 150.}, 0.5], DiskBox[{370., 153.}, 0.5], 
        DiskBox[{552., 68.}, 0.5], DiskBox[{1088., 126.}, 0.5], 
        DiskBox[{105., 108.}, 0.5], DiskBox[{733., 113.}, 0.5], 
        DiskBox[{318., 155.}, 0.5], DiskBox[{1006., 154.}, 0.5], 
        DiskBox[{833., 148.}, 0.5], DiskBox[{563., 71.}, 0.5], 
        DiskBox[{828., 123.}, 0.5], DiskBox[{719., 87.}, 0.5], 
        DiskBox[{673., 146.}, 0.5], DiskBox[{943., 147.}, 0.5], 
        DiskBox[{49., 180.}, 0.5], DiskBox[{1047., 72.}, 0.5], 
        DiskBox[{907., 157.}, 0.5], DiskBox[{536., 140.}, 0.5], 
        DiskBox[{596., 132.}, 0.5], DiskBox[{654., 96.}, 0.5], 
        DiskBox[{884., 119.}, 0.5], DiskBox[{229., 62.}, 0.5], 
        DiskBox[{39., 192.}, 0.5], DiskBox[{647., 123.}, 0.5], 
        DiskBox[{34., 101.}, 0.5], DiskBox[{942., 111.}, 0.5], 
        DiskBox[{1010., 112.}, 0.5], DiskBox[{589., 140.}, 0.5], 
        DiskBox[{370., 166.}, 0.5], DiskBox[{493., 152.}, 0.5], 
        DiskBox[{385., 96.}, 0.5], DiskBox[{311., 97.}, 0.5], 
        DiskBox[{576., 70.}, 0.5], DiskBox[{447., 128.}, 0.5], 
        DiskBox[{394., 70.}, 0.5], DiskBox[{882., 111.}, 0.5], 
        DiskBox[{253., 120.}, 0.5], DiskBox[{531., 108.}, 0.5], 
        DiskBox[{830., 125.}, 0.5], DiskBox[{146., 114.}, 0.5], 
        DiskBox[{485., 100.}, 0.5], DiskBox[{41., 121.}, 0.5], 
        DiskBox[{253., 112.}, 0.5], DiskBox[{1009., 85.}, 0.5], 
        DiskBox[{859., 77.}, 0.5], DiskBox[{393., 67.}, 0.5], 
        DiskBox[{718., 78.}, 0.5], DiskBox[{92., 96.}, 0.5], 
        DiskBox[{389., 102.}, 0.5], DiskBox[{549., 82.}, 0.5], 
        DiskBox[{728., 140.}, 0.5], DiskBox[{379., 157.}, 0.5], 
        DiskBox[{892., 145.}, 0.5], DiskBox[{223., 118.}, 0.5], 
        DiskBox[{458., 115.}, 0.5], DiskBox[{229., 154.}, 0.5], 
        DiskBox[{644., 90.}, 0.5], DiskBox[{902., 84.}, 0.5], 
        DiskBox[{316., 143.}, 0.5], DiskBox[{428., 164.}, 0.5], 
        DiskBox[{41., 144.}, 0.5], DiskBox[{597., 72.}, 0.5], 
        DiskBox[{543., 125.}, 0.5], DiskBox[{397., 90.}, 0.5], 
        DiskBox[{989., 78.}, 0.5], DiskBox[{1087., 117.}, 0.5], 
        DiskBox[{550., 76.}, 0.5], DiskBox[{1088., 116.}, 0.5], 
        DiskBox[{219., 153.}, 0.5], DiskBox[{212., 124.}, 0.5], 
        DiskBox[{223., 93.}, 0.5], DiskBox[{893., 199.}, 0.5], 
        DiskBox[{73., 126.}, 0.5], DiskBox[{776., 129.}, 0.5], 
        DiskBox[{19., 67.}, 0.5], DiskBox[{1026., 88.}, 0.5], 
        DiskBox[{457., 68.}, 0.5], DiskBox[{888., 177.}, 0.5], 
        DiskBox[{1087., 76.}, 0.5], DiskBox[{144., 151.}, 0.5], 
        DiskBox[{606., 119.}, 0.5], DiskBox[{1007., 146.}, 0.5], 
        DiskBox[{903., 118.}, 0.5], DiskBox[{907., 191.}, 0.5], 
        DiskBox[{975., 76.}, 0.5], DiskBox[{946., 101.}, 0.5], 
        DiskBox[{238., 118.}, 0.5], DiskBox[{1089., 110.}, 0.5], 
        DiskBox[{45., 73.}, 0.5], DiskBox[{713., 111.}, 0.5], 
        DiskBox[{901., 116.}, 0.5], DiskBox[{766., 98.}, 0.5], 
        DiskBox[{883., 114.}, 0.5], DiskBox[{165., 102.}, 0.5], 
        DiskBox[{1117., 106.}, 0.5], DiskBox[{725., 85.}, 0.5], 
        DiskBox[{558., 139.}, 0.5], DiskBox[{453., 78.}, 0.5], 
        DiskBox[{1027., 109.}, 0.5], DiskBox[{962., 82.}, 0.5], 
        DiskBox[{648., 152.}, 0.5], DiskBox[{554., 112.}, 0.5], 
        DiskBox[{27., 76.}, 0.5], DiskBox[{58., 142.}, 0.5], 
        DiskBox[{28., 164.}, 0.5], DiskBox[{50., 134.}, 0.5], 
        DiskBox[{695., 155.}, 0.5], DiskBox[{967., 81.}, 0.5], 
        DiskBox[{877., 77.}, 0.5], DiskBox[{217., 123.}, 0.5], 
        DiskBox[{822., 121.}, 0.5], DiskBox[{56., 188.}, 0.5], 
        DiskBox[{781., 137.}, 0.5], DiskBox[{309., 151.}, 0.5], 
        DiskBox[{1071., 149.}, 0.5], DiskBox[{997., 89.}, 0.5], 
        DiskBox[{1093., 156.}, 0.5], DiskBox[{277., 106.}, 0.5], 
        DiskBox[{656., 65.}, 0.5], DiskBox[{453., 119.}, 0.5], 
        DiskBox[{442., 145.}, 0.5], DiskBox[{169., 78.}, 0.5], 
        DiskBox[{904., 199.}, 0.5], DiskBox[{778., 145.}, 0.5], 
        DiskBox[{168., 151.}, 0.5], DiskBox[{727., 141.}, 0.5], 
        DiskBox[{277., 120.}, 0.5], DiskBox[{585., 146.}, 0.5], 
        DiskBox[{599., 159.}, 0.5], DiskBox[{61., 70.}, 0.5], 
        DiskBox[{1080., 66.}, 0.5], DiskBox[{996., 81.}, 0.5], 
        DiskBox[{102., 161.}, 0.5], DiskBox[{656., 110.}, 0.5], 
        DiskBox[{477., 89.}, 0.5], DiskBox[{25., 102.}, 0.5], 
        DiskBox[{984., 163.}, 0.5], DiskBox[{881., 176.}, 0.5], 
        DiskBox[{571., 71.}, 0.5], DiskBox[{653., 130.}, 0.5], 
        DiskBox[{987., 79.}, 0.5], DiskBox[{1091., 158.}, 0.5], 
        DiskBox[{563., 155.}, 0.5], DiskBox[{95., 79.}, 0.5], 
        DiskBox[{963., 77.}, 0.5], DiskBox[{109., 157.}, 0.5], 
        DiskBox[{204., 77.}, 0.5], DiskBox[{382., 79.}, 0.5], 
        DiskBox[{540., 115.}, 0.5], DiskBox[{79., 174.}, 0.5], 
        DiskBox[{91., 152.}, 0.5], DiskBox[{999., 89.}, 0.5], 
        DiskBox[{452., 135.}, 0.5], DiskBox[{20., 95.}, 0.5], 
        DiskBox[{1098., 84.}, 0.5], DiskBox[{550., 73.}, 0.5], 
        DiskBox[{705., 65.}, 0.5], DiskBox[{95., 78.}, 0.5], 
        DiskBox[{555., 136.}, 0.5], DiskBox[{780., 164.}, 0.5], 
        DiskBox[{206., 140.}, 0.5], DiskBox[{38., 84.}, 0.5], 
        DiskBox[{1063., 140.}, 0.5], DiskBox[{549., 95.}, 0.5], 
        DiskBox[{651., 101.}, 0.5], DiskBox[{702., 161.}, 0.5], 
        DiskBox[{386., 62.}, 0.5], DiskBox[{473., 100.}, 0.5], 
        DiskBox[{154., 135.}, 0.5], DiskBox[{31., 133.}, 0.5], 
        DiskBox[{721., 142.}, 0.5], DiskBox[{657., 153.}, 0.5], 
        DiskBox[{901., 111.}, 0.5], DiskBox[{215., 152.}, 0.5], 
        DiskBox[{488., 118.}, 0.5], DiskBox[{774., 63.}, 0.5], 
        DiskBox[{227., 65.}, 0.5], DiskBox[{451., 92.}, 0.5], 
        DiskBox[{426., 162.}, 0.5], DiskBox[{776., 115.}, 0.5], 
        DiskBox[{1089., 112.}, 0.5], DiskBox[{530., 101.}, 0.5], 
        DiskBox[{830., 127.}, 0.5], DiskBox[{389., 93.}, 0.5], 
        DiskBox[{315., 68.}, 0.5], DiskBox[{875., 158.}, 0.5], 
        DiskBox[{658., 78.}, 0.5], DiskBox[{981., 154.}, 0.5], 
        DiskBox[{883., 120.}, 0.5], DiskBox[{909., 152.}, 0.5], 
        DiskBox[{220., 125.}, 0.5], DiskBox[{577., 159.}, 0.5], 
        DiskBox[{313., 83.}, 0.5], DiskBox[{1069., 153.}, 0.5], 
        DiskBox[{482., 103.}, 0.5], DiskBox[{539., 84.}, 0.5], 
        DiskBox[{957., 136.}, 0.5], DiskBox[{838., 74.}, 0.5], 
        DiskBox[{157., 107.}, 0.5], DiskBox[{1068., 145.}, 0.5], 
        DiskBox[{853., 144.}, 0.5], DiskBox[{146., 127.}, 0.5], 
        DiskBox[{491., 98.}, 0.5], DiskBox[{597., 135.}, 0.5], 
        DiskBox[{770., 76.}, 0.5], DiskBox[{166., 164.}, 0.5], 
        DiskBox[{499., 121.}, 0.5], DiskBox[{1071., 112.}, 0.5], 
        DiskBox[{1109., 140.}, 0.5], DiskBox[{615., 131.}, 0.5], 
        DiskBox[{143., 199.}, 0.5], DiskBox[{874., 146.}, 0.5], 
        DiskBox[{1028., 130.}, 0.5], DiskBox[{983., 156.}, 0.5], 
        DiskBox[{776., 187.}, 0.5], DiskBox[{584., 60.}, 0.5], 
        DiskBox[{440., 161.}, 0.5], DiskBox[{83., 165.}, 0.5], 
        DiskBox[{210., 127.}, 0.5], DiskBox[{163., 136.}, 0.5], 
        DiskBox[{227., 68.}, 0.5], DiskBox[{266., 159.}, 0.5], 
        DiskBox[{712., 137.}, 0.5], DiskBox[{1061., 129.}, 0.5], 
        DiskBox[{783., 131.}, 0.5], DiskBox[{1081., 116.}, 0.5], 
        DiskBox[{147., 135.}, 0.5], DiskBox[{966., 68.}, 0.5], 
        DiskBox[{662., 151.}, 0.5], DiskBox[{963., 129.}, 0.5], 
        DiskBox[{344., 152.}, 0.5], DiskBox[{62., 82.}, 0.5], 
        DiskBox[{452., 94.}, 0.5], DiskBox[{669., 81.}, 0.5], 
        DiskBox[{536., 99.}, 0.5], DiskBox[{568., 161.}, 0.5], 
        DiskBox[{540., 101.}, 0.5], DiskBox[{357., 161.}, 0.5], 
        DiskBox[{780., 87.}, 0.5], DiskBox[{90., 106.}, 0.5], 
        DiskBox[{324., 70.}, 0.5], DiskBox[{490., 103.}, 0.5], 
        DiskBox[{23., 121.}, 0.5], DiskBox[{897., 174.}, 0.5], 
        DiskBox[{566., 154.}, 0.5], DiskBox[{851., 63.}, 0.5], 
        DiskBox[{1101., 158.}, 0.5], DiskBox[{330., 133.}, 0.5], 
        DiskBox[{1076., 159.}, 0.5], DiskBox[{105., 144.}, 0.5], 
        DiskBox[{229., 110.}, 0.5], DiskBox[{19., 100.}, 0.5], 
        DiskBox[{1068., 150.}, 0.5], DiskBox[{258., 104.}, 0.5], 
        DiskBox[{478., 102.}, 0.5], DiskBox[{653., 119.}, 0.5], 
        DiskBox[{658., 136.}, 0.5], DiskBox[{211., 83.}, 0.5], 
        DiskBox[{364., 161.}, 0.5], DiskBox[{609., 112.}, 0.5], 
        DiskBox[{1096., 98.}, 0.5], DiskBox[{616., 132.}, 0.5], 
        DiskBox[{650., 155.}, 0.5], DiskBox[{224., 66.}, 0.5], 
        DiskBox[{96., 96.}, 0.5], DiskBox[{1090., 80.}, 0.5], 
        DiskBox[{376., 111.}, 0.5], DiskBox[{557., 104.}, 0.5], 
        DiskBox[{246., 104.}, 0.5], DiskBox[{165., 125.}, 0.5], 
        DiskBox[{217., 86.}, 0.5], DiskBox[{486., 69.}, 0.5], 
        DiskBox[{226., 88.}, 0.5], DiskBox[{773., 209.}, 0.5], 
        DiskBox[{545., 85.}, 0.5], DiskBox[{594., 77.}, 0.5], 
        DiskBox[{486., 115.}, 0.5], DiskBox[{328., 124.}, 0.5], 
        DiskBox[{990., 75.}, 0.5], DiskBox[{954., 125.}, 0.5], 
        DiskBox[{22., 111.}, 0.5], DiskBox[{1078., 162.}, 0.5], 
        DiskBox[{214., 81.}, 0.5], DiskBox[{487., 107.}, 0.5], 
        DiskBox[{516., 161.}, 0.5], DiskBox[{58., 123.}, 0.5], 
        DiskBox[{336., 132.}, 0.5], DiskBox[{393., 109.}, 0.5], 
        DiskBox[{1082., 156.}, 0.5], DiskBox[{1076., 60.}, 0.5], 
        DiskBox[{205., 108.}, 0.5], DiskBox[{540., 146.}, 0.5], 
        DiskBox[{485., 90.}, 0.5], DiskBox[{441., 140.}, 0.5], 
        DiskBox[{257., 158.}, 0.5], DiskBox[{57., 192.}, 0.5], 
        DiskBox[{1105., 150.}, 0.5], DiskBox[{155., 151.}, 0.5], 
        DiskBox[{663., 66.}, 0.5], DiskBox[{643., 138.}, 0.5], 
        DiskBox[{452., 99.}, 0.5], DiskBox[{902., 174.}, 0.5], 
        DiskBox[{1054., 127.}, 0.5], DiskBox[{651., 149.}, 0.5], 
        DiskBox[{375., 139.}, 0.5], DiskBox[{904., 93.}, 0.5], 
        DiskBox[{937., 103.}, 0.5], DiskBox[{875., 141.}, 0.5], 
        DiskBox[{786., 118.}, 0.5], DiskBox[{775., 146.}, 0.5], 
        DiskBox[{585., 165.}, 0.5], DiskBox[{647., 71.}, 0.5], 
        DiskBox[{711., 118.}, 0.5], DiskBox[{899., 204.}, 0.5], 
        DiskBox[{861., 61.}, 0.5], DiskBox[{954., 134.}, 0.5], 
        DiskBox[{494., 109.}, 0.5], DiskBox[{599., 65.}, 0.5], 
        DiskBox[{1110., 161.}, 0.5], DiskBox[{153., 97.}, 0.5], 
        DiskBox[{651., 118.}, 0.5], DiskBox[{1020., 107.}, 0.5], 
        DiskBox[{67., 83.}, 0.5], DiskBox[{592., 117.}, 0.5], 
        DiskBox[{20., 191.}, 0.5], DiskBox[{712., 125.}, 0.5], 
        DiskBox[{844., 88.}, 0.5], DiskBox[{779., 82.}, 0.5], 
        DiskBox[{55., 78.}, 0.5], DiskBox[{947., 90.}, 0.5], 
        DiskBox[{545., 103.}, 0.5], DiskBox[{1028., 90.}, 0.5], 
        DiskBox[{101., 162.}, 0.5], DiskBox[{686., 159.}, 0.5], 
        DiskBox[{24., 79.}, 0.5], DiskBox[{951., 107.}, 0.5], 
        DiskBox[{46., 149.}, 0.5], DiskBox[{18., 189.}, 0.5], 
        DiskBox[{771., 144.}, 0.5], DiskBox[{447., 78.}, 0.5], 
        DiskBox[{324., 142.}, 0.5], DiskBox[{874., 77.}, 0.5], 
        DiskBox[{1118., 144.}, 0.5], DiskBox[{277., 142.}, 0.5], 
        DiskBox[{328., 140.}, 0.5], DiskBox[{573., 147.}, 0.5], 
        DiskBox[{856., 145.}, 0.5], DiskBox[{432., 150.}, 0.5], 
        DiskBox[{702., 166.}, 0.5], DiskBox[{778., 125.}, 0.5], 
        DiskBox[{1021., 87.}, 0.5], DiskBox[{386., 130.}, 0.5], 
        DiskBox[{319., 149.}, 0.5], DiskBox[{669., 127.}, 0.5], 
        DiskBox[{819., 86.}, 0.5], DiskBox[{711., 90.}, 0.5], 
        DiskBox[{437., 147.}, 0.5], DiskBox[{1082., 143.}, 0.5], 
        DiskBox[{390., 74.}, 0.5], DiskBox[{449., 147.}, 0.5], 
        DiskBox[{884., 116.}, 0.5], DiskBox[{893., 192.}, 0.5], 
        DiskBox[{820., 127.}, 0.5], DiskBox[{48., 190.}, 0.5], 
        DiskBox[{221., 82.}, 0.5], DiskBox[{1073., 119.}, 0.5], 
        DiskBox[{574., 116.}, 0.5], DiskBox[{263., 127.}, 0.5], 
        DiskBox[{154., 164.}, 0.5], DiskBox[{220., 160.}, 0.5], 
        DiskBox[{445., 115.}, 0.5], DiskBox[{1084., 102.}, 0.5], 
        DiskBox[{722., 142.}, 0.5], DiskBox[{1117., 92.}, 0.5], 
        DiskBox[{310., 134.}, 0.5], DiskBox[{878., 141.}, 0.5], 
        DiskBox[{444., 88.}, 0.5], DiskBox[{1082., 158.}, 0.5], 
        DiskBox[{881., 202.}, 0.5], DiskBox[{960., 113.}, 0.5], 
        DiskBox[{485., 118.}, 0.5], DiskBox[{284., 113.}, 0.5], 
        DiskBox[{542., 98.}, 0.5], DiskBox[{962., 132.}, 0.5], 
        DiskBox[{614., 144.}, 0.5], DiskBox[{109., 162.}, 0.5], 
        DiskBox[{775., 144.}, 0.5], DiskBox[{240., 76.}, 0.5], 
        DiskBox[{164., 190.}, 0.5], DiskBox[{906., 78.}, 0.5], 
        DiskBox[{230., 142.}, 0.5], DiskBox[{712., 93.}, 0.5], 
        DiskBox[{81., 128.}, 0.5], DiskBox[{701., 151.}, 0.5], 
        DiskBox[{957., 100.}, 0.5], DiskBox[{256., 104.}, 0.5], 
        DiskBox[{858., 59.}, 0.5], DiskBox[{702., 151.}, 0.5], 
        DiskBox[{213., 97.}, 0.5], DiskBox[{844., 123.}, 0.5], 
        DiskBox[{155., 91.}, 0.5], DiskBox[{453., 74.}, 0.5], 
        DiskBox[{1078., 115.}, 0.5], DiskBox[{762., 115.}, 0.5], 
        DiskBox[{728., 126.}, 0.5], DiskBox[{897., 122.}, 0.5], 
        DiskBox[{1006., 83.}, 0.5], DiskBox[{654., 94.}, 0.5], 
        DiskBox[{1107., 75.}, 0.5], DiskBox[{940., 110.}, 0.5], 
        DiskBox[{886., 104.}, 0.5], DiskBox[{268., 134.}, 0.5], 
        DiskBox[{960., 66.}, 0.5], DiskBox[{647., 101.}, 0.5], 
        DiskBox[{603., 75.}, 0.5], DiskBox[{170., 147.}, 0.5], 
        DiskBox[{1014., 140.}, 0.5], DiskBox[{328., 146.}, 0.5], 
        DiskBox[{730., 76.}, 0.5], DiskBox[{577., 116.}, 0.5], 
        DiskBox[{707., 115.}, 0.5], DiskBox[{1007., 94.}, 0.5], 
        DiskBox[{1014., 141.}, 0.5], DiskBox[{786., 65.}, 0.5], 
        DiskBox[{713., 130.}, 0.5], DiskBox[{439., 154.}, 0.5], 
        DiskBox[{210., 145.}, 0.5], DiskBox[{1061., 78.}, 0.5], 
        DiskBox[{262., 145.}, 0.5], DiskBox[{767., 78.}, 0.5], 
        DiskBox[{790., 157.}, 0.5], DiskBox[{1005., 148.}, 0.5], 
        DiskBox[{1067., 131.}, 0.5], DiskBox[{936., 102.}, 0.5], 
        DiskBox[{314., 136.}, 0.5], DiskBox[{909., 151.}, 0.5], 
        DiskBox[{726., 131.}, 0.5], DiskBox[{330., 134.}, 0.5], 
        DiskBox[{775., 149.}, 0.5], DiskBox[{1101., 64.}, 0.5], 
        DiskBox[{1005., 66.}, 0.5], DiskBox[{53., 141.}, 0.5], 
        DiskBox[{217., 120.}, 0.5], DiskBox[{270., 70.}, 0.5], 
        DiskBox[{656., 95.}, 0.5], DiskBox[{157., 137.}, 0.5], 
        DiskBox[{32., 64.}, 0.5], DiskBox[{1062., 77.}, 0.5], 
        DiskBox[{354., 150.}, 0.5], DiskBox[{24., 166.}, 0.5], 
        DiskBox[{713., 109.}, 0.5], DiskBox[{717., 67.}, 0.5], 
        DiskBox[{713., 138.}, 0.5], DiskBox[{364., 156.}, 0.5], 
        DiskBox[{881., 152.}, 0.5], DiskBox[{814., 106.}, 0.5], 
        DiskBox[{548., 113.}, 0.5], DiskBox[{541., 106.}, 0.5], 
        DiskBox[{1113., 67.}, 0.5], DiskBox[{85., 123.}, 0.5], 
        DiskBox[{647., 128.}, 0.5], DiskBox[{472., 69.}, 0.5], 
        DiskBox[{602., 106.}, 0.5], DiskBox[{664., 70.}, 0.5], 
        DiskBox[{709., 76.}, 0.5], DiskBox[{865., 79.}, 0.5], 
        DiskBox[{143., 114.}, 0.5], DiskBox[{30., 85.}, 0.5], 
        DiskBox[{554., 105.}, 0.5], DiskBox[{953., 104.}, 0.5], 
        DiskBox[{541., 129.}, 0.5], DiskBox[{788., 135.}, 0.5], 
        DiskBox[{253., 141.}, 0.5], DiskBox[{61., 178.}, 0.5], 
        DiskBox[{77., 172.}, 0.5], DiskBox[{854., 144.}, 0.5], 
        DiskBox[{158., 210.}, 0.5], DiskBox[{843., 67.}, 0.5], 
        DiskBox[{151., 143.}, 0.5], DiskBox[{1024., 126.}, 0.5], 
        DiskBox[{618., 112.}, 0.5], DiskBox[{771., 208.}, 0.5], 
        DiskBox[{471., 76.}, 0.5], DiskBox[{490., 111.}, 0.5], 
        DiskBox[{662., 97.}, 0.5], DiskBox[{26., 69.}, 0.5], 
        DiskBox[{333., 73.}, 0.5], DiskBox[{816., 101.}, 0.5], 
        DiskBox[{575., 65.}, 0.5], DiskBox[{390., 142.}, 0.5], 
        DiskBox[{784., 93.}, 0.5], DiskBox[{236., 64.}, 0.5], 
        DiskBox[{670., 104.}, 0.5], DiskBox[{611., 133.}, 0.5], 
        DiskBox[{170., 164.}, 0.5], DiskBox[{63., 123.}, 0.5], 
        DiskBox[{763., 122.}, 0.5], DiskBox[{598., 65.}, 0.5], 
        DiskBox[{840., 146.}, 0.5], DiskBox[{312., 72.}, 0.5], 
        DiskBox[{942., 84.}, 0.5], DiskBox[{265., 117.}, 0.5], 
        DiskBox[{29., 73.}, 0.5], DiskBox[{664., 153.}, 0.5], 
        DiskBox[{82., 182.}, 0.5], DiskBox[{387., 62.}, 0.5], 
        DiskBox[{28., 176.}, 0.5], DiskBox[{604., 111.}, 0.5], 
        DiskBox[{947., 109.}, 0.5], DiskBox[{782., 131.}, 0.5], 
        DiskBox[{1063., 152.}, 0.5], DiskBox[{105., 114.}, 0.5], 
        DiskBox[{355., 162.}, 0.5], DiskBox[{266., 63.}, 0.5], 
        DiskBox[{1021., 143.}, 0.5], DiskBox[{378., 102.}, 0.5], 
        DiskBox[{69., 192.}, 0.5], DiskBox[{939., 99.}, 0.5], 
        DiskBox[{958., 72.}, 0.5], DiskBox[{151., 202.}, 0.5], 
        DiskBox[{843., 133.}, 0.5], DiskBox[{643., 159.}, 0.5], 
        DiskBox[{608., 147.}, 0.5], DiskBox[{711., 87.}, 0.5], 
        DiskBox[{552., 121.}, 0.5], DiskBox[{838., 71.}, 0.5], 
        DiskBox[{96., 86.}, 0.5], DiskBox[{1075., 161.}, 0.5], 
        DiskBox[{953., 82.}, 0.5], DiskBox[{605., 104.}, 0.5], 
        DiskBox[{87., 155.}, 0.5], DiskBox[{444., 162.}, 0.5], 
        DiskBox[{164., 134.}, 0.5], DiskBox[{222., 156.}, 0.5], 
        DiskBox[{656., 108.}, 0.5], DiskBox[{1114., 113.}, 0.5], 
        DiskBox[{313., 143.}, 0.5], DiskBox[{865., 80.}, 0.5], 
        DiskBox[{262., 154.}, 0.5], DiskBox[{643., 98.}, 0.5], 
        DiskBox[{379., 161.}, 0.5], DiskBox[{1011., 134.}, 0.5], 
        DiskBox[{211., 74.}, 0.5], DiskBox[{317., 152.}, 0.5], 
        DiskBox[{994., 156.}, 0.5], DiskBox[{541., 84.}, 0.5], 
        DiskBox[{554., 133.}, 0.5], DiskBox[{168., 104.}, 0.5], 
        DiskBox[{764., 115.}, 0.5], DiskBox[{436., 124.}, 0.5], 
        DiskBox[{29., 195.}, 0.5], DiskBox[{1101., 155.}, 0.5], 
        DiskBox[{106., 166.}, 0.5], DiskBox[{506., 155.}, 0.5], 
        DiskBox[{565., 146.}, 0.5], DiskBox[{428., 155.}, 0.5], 
        DiskBox[{52., 180.}, 0.5], DiskBox[{477., 104.}, 0.5], 
        DiskBox[{109., 86.}, 0.5], DiskBox[{1008., 71.}, 0.5], 
        DiskBox[{438., 134.}, 0.5], DiskBox[{788., 100.}, 0.5], 
        DiskBox[{59., 126.}, 0.5], DiskBox[{197., 104.}, 0.5], 
        DiskBox[{988., 152.}, 0.5], DiskBox[{941., 82.}, 0.5], 
        DiskBox[{24., 123.}, 0.5], DiskBox[{901., 85.}, 0.5], 
        DiskBox[{427., 129.}, 0.5], DiskBox[{145., 188.}, 0.5], 
        DiskBox[{435., 144.}, 0.5], DiskBox[{140., 200.}, 0.5], 
        DiskBox[{760., 199.}, 0.5], DiskBox[{824., 92.}, 0.5], 
        DiskBox[{713., 114.}, 0.5], DiskBox[{310., 85.}, 0.5], 
        DiskBox[{1055., 68.}, 0.5], DiskBox[{1024., 140.}, 0.5], 
        DiskBox[{1029., 126.}, 0.5], DiskBox[{613., 111.}, 0.5], 
        DiskBox[{824., 82.}, 0.5], DiskBox[{70., 140.}, 0.5], 
        DiskBox[{390., 69.}, 0.5], DiskBox[{61., 142.}, 0.5], 
        DiskBox[{49., 66.}, 0.5], DiskBox[{309., 94.}, 0.5], 
        DiskBox[{362., 162.}, 0.5], DiskBox[{837., 69.}, 0.5], 
        DiskBox[{660., 153.}, 0.5], DiskBox[{854., 70.}, 0.5], 
        DiskBox[{906., 62.}, 0.5], DiskBox[{440., 163.}, 0.5], 
        DiskBox[{380., 125.}, 0.5], DiskBox[{843., 152.}, 0.5], 
        DiskBox[{107., 91.}, 0.5], DiskBox[{107., 121.}, 0.5], 
        DiskBox[{314., 94.}, 0.5], DiskBox[{889., 185.}, 0.5], 
        DiskBox[{330., 86.}, 0.5], DiskBox[{819., 121.}, 0.5], 
        DiskBox[{170., 203.}, 0.5], DiskBox[{423., 155.}, 0.5], 
        DiskBox[{33., 186.}, 0.5], DiskBox[{1072., 65.}, 0.5], 
        DiskBox[{259., 68.}, 0.5], DiskBox[{714., 111.}, 0.5], 
        DiskBox[{777., 107.}, 0.5], DiskBox[{318., 134.}, 0.5], 
        DiskBox[{194., 109.}, 0.5], DiskBox[{952., 111.}, 0.5], 
        DiskBox[{245., 80.}, 0.5], DiskBox[{769., 209.}, 0.5], 
        DiskBox[{720., 98.}, 0.5], DiskBox[{332., 137.}, 0.5], 
        DiskBox[{595., 123.}, 0.5], DiskBox[{163., 100.}, 0.5], 
        DiskBox[{1012., 130.}, 0.5], DiskBox[{152., 136.}, 0.5], 
        DiskBox[{330., 62.}, 0.5], DiskBox[{702., 150.}, 0.5], 
        DiskBox[{200., 95.}, 0.5], DiskBox[{826., 74.}, 0.5], 
        DiskBox[{1103., 76.}, 0.5], DiskBox[{1073., 115.}, 0.5], 
        DiskBox[{22., 75.}, 0.5], DiskBox[{441., 148.}, 0.5], 
        DiskBox[{944., 106.}, 0.5], DiskBox[{889., 63.}, 0.5], 
        DiskBox[{30., 114.}, 0.5], DiskBox[{387., 95.}, 0.5], 
        DiskBox[{82., 140.}, 0.5], DiskBox[{243., 79.}, 0.5], 
        DiskBox[{881., 111.}, 0.5], DiskBox[{449., 81.}, 0.5], 
        DiskBox[{65., 71.}, 0.5], DiskBox[{1021., 102.}, 0.5], 
        DiskBox[{1080., 123.}, 0.5], DiskBox[{503., 141.}, 0.5], 
        DiskBox[{1074., 152.}, 0.5], DiskBox[{94., 185.}, 0.5], 
        DiskBox[{208., 96.}, 0.5], DiskBox[{241., 63.}, 0.5], 
        DiskBox[{457., 78.}, 0.5], DiskBox[{901., 96.}, 0.5], 
        DiskBox[{602., 73.}, 0.5], DiskBox[{534., 105.}, 0.5], 
        DiskBox[{391., 125.}, 0.5], DiskBox[{1109., 98.}, 0.5], 
        DiskBox[{855., 161.}, 0.5], DiskBox[{1018., 136.}, 0.5], 
        DiskBox[{955., 80.}, 0.5], DiskBox[{443., 138.}, 0.5], 
        DiskBox[{904., 133.}, 0.5], DiskBox[{75., 141.}, 0.5], 
        DiskBox[{458., 91.}, 0.5], DiskBox[{100., 184.}, 0.5], 
        DiskBox[{323., 76.}, 0.5], DiskBox[{733., 133.}, 0.5], 
        DiskBox[{503., 153.}, 0.5], DiskBox[{600., 105.}, 0.5], 
        DiskBox[{1073., 140.}, 0.5], DiskBox[{720., 79.}, 0.5], 
        DiskBox[{771., 191.}, 0.5], DiskBox[{168., 145.}, 0.5], 
        DiskBox[{777., 154.}, 0.5], DiskBox[{643., 102.}, 0.5], 
        DiskBox[{834., 132.}, 0.5], DiskBox[{238., 72.}, 0.5], 
        DiskBox[{1089., 154.}, 0.5], DiskBox[{46., 105.}, 0.5], 
        DiskBox[{573., 152.}, 0.5], DiskBox[{903., 194.}, 0.5], 
        DiskBox[{275., 141.}, 0.5], DiskBox[{535., 91.}, 0.5], 
        DiskBox[{315., 121.}, 0.5], DiskBox[{87., 86.}, 0.5], 
        DiskBox[{890., 136.}, 0.5], DiskBox[{986., 153.}, 0.5], 
        DiskBox[{671., 90.}, 0.5], DiskBox[{47., 117.}, 0.5], 
        DiskBox[{364., 145.}, 0.5], DiskBox[{776., 88.}, 0.5], 
        DiskBox[{546., 116.}, 0.5], DiskBox[{157., 100.}, 0.5], 
        DiskBox[{963., 140.}, 0.5], DiskBox[{309., 147.}, 0.5], 
        DiskBox[{781., 147.}, 0.5], DiskBox[{312., 74.}, 0.5], 
        DiskBox[{538., 97.}, 0.5], DiskBox[{891., 79.}, 0.5], 
        DiskBox[{711., 147.}, 0.5], DiskBox[{1117., 156.}, 0.5], 
        DiskBox[{88., 159.}, 0.5], DiskBox[{316., 124.}, 0.5], 
        DiskBox[{996., 79.}, 0.5], DiskBox[{160., 95.}, 0.5], 
        DiskBox[{274., 113.}, 0.5], DiskBox[{1053., 75.}, 0.5], 
        DiskBox[{209., 154.}, 0.5], DiskBox[{728., 145.}, 0.5], 
        DiskBox[{493., 108.}, 0.5], DiskBox[{976., 159.}, 0.5], 
        DiskBox[{483., 69.}, 0.5], DiskBox[{38., 178.}, 0.5], 
        DiskBox[{580., 159.}, 0.5], DiskBox[{371., 140.}, 0.5], 
        DiskBox[{1060., 130.}, 0.5], DiskBox[{880., 80.}, 0.5], 
        DiskBox[{467., 69.}, 0.5], DiskBox[{727., 84.}, 0.5], 
        DiskBox[{848., 74.}, 0.5], DiskBox[{660., 78.}, 0.5], 
        DiskBox[{964., 130.}, 0.5], DiskBox[{241., 120.}, 0.5], 
        DiskBox[{143., 91.}, 0.5], DiskBox[{1052., 131.}, 0.5], 
        DiskBox[{491., 115.}, 0.5], DiskBox[{208., 129.}, 0.5], 
        DiskBox[{92., 152.}, 0.5], DiskBox[{377., 140.}, 0.5], 
        DiskBox[{383., 90.}, 0.5], DiskBox[{449., 86.}, 0.5], 
        DiskBox[{831., 143.}, 0.5], DiskBox[{1118., 98.}, 0.5], 
        DiskBox[{878., 145.}, 0.5], DiskBox[{318., 69.}, 0.5], 
        DiskBox[{785., 79.}, 0.5], DiskBox[{835., 121.}, 0.5], 
        DiskBox[{1053., 123.}, 0.5], DiskBox[{335., 82.}, 0.5], 
        DiskBox[{962., 67.}, 0.5], DiskBox[{256., 142.}, 0.5], 
        DiskBox[{448., 91.}, 0.5], DiskBox[{683., 145.}, 0.5], 
        DiskBox[{893., 119.}, 0.5], DiskBox[{830., 111.}, 0.5], 
        DiskBox[{427., 138.}, 0.5], DiskBox[{43., 183.}, 0.5], 
        DiskBox[{847., 65.}, 0.5], DiskBox[{1007., 124.}, 0.5], 
        DiskBox[{498., 138.}, 0.5], DiskBox[{325., 67.}, 0.5], 
        DiskBox[{27., 107.}, 0.5], DiskBox[{728., 67.}, 0.5], 
        DiskBox[{903., 191.}, 0.5], DiskBox[{669., 74.}, 0.5], 
        DiskBox[{716., 90.}, 0.5], DiskBox[{393., 104.}, 0.5], 
        DiskBox[{860., 158.}, 0.5], DiskBox[{969., 85.}, 0.5], 
        DiskBox[{1002., 162.}, 0.5], DiskBox[{22., 80.}, 0.5], 
        DiskBox[{900., 151.}, 0.5], DiskBox[{908., 76.}, 0.5], 
        DiskBox[{55., 185.}, 0.5], DiskBox[{826., 109.}, 0.5], 
        DiskBox[{580., 165.}, 0.5], DiskBox[{167., 80.}, 0.5], 
        DiskBox[{706., 118.}, 0.5], DiskBox[{771., 156.}, 0.5], 
        DiskBox[{544., 105.}, 0.5], DiskBox[{775., 106.}, 0.5], 
        DiskBox[{692., 160.}, 0.5], DiskBox[{1051., 81.}, 0.5], 
        DiskBox[{348., 154.}, 0.5], DiskBox[{644., 142.}, 0.5], 
        DiskBox[{151., 104.}, 0.5], DiskBox[{895., 142.}, 0.5], 
        DiskBox[{1099., 161.}, 0.5], DiskBox[{767., 199.}, 0.5], 
        DiskBox[{256., 155.}, 0.5], DiskBox[{717., 160.}, 0.5], 
        DiskBox[{649., 141.}, 0.5], DiskBox[{34., 144.}, 0.5], 
        DiskBox[{1115., 158.}, 0.5], DiskBox[{143., 161.}, 0.5], 
        DiskBox[{341., 138.}, 0.5], DiskBox[{670., 103.}, 0.5], 
        DiskBox[{766., 105.}, 0.5], DiskBox[{1097., 113.}, 0.5], 
        DiskBox[{726., 110.}, 0.5], DiskBox[{901., 130.}, 0.5], 
        DiskBox[{716., 110.}, 0.5], DiskBox[{313., 81.}, 0.5], 
        DiskBox[{671., 121.}, 0.5], DiskBox[{47., 150.}, 0.5], 
        DiskBox[{231., 63.}, 0.5], DiskBox[{726., 152.}, 0.5], 
        DiskBox[{358., 143.}, 0.5], DiskBox[{263., 84.}, 0.5], 
        DiskBox[{164., 142.}, 0.5], DiskBox[{394., 68.}, 0.5], 
        DiskBox[{784., 206.}, 0.5], DiskBox[{278., 144.}, 0.5], 
        DiskBox[{956., 70.}, 0.5], DiskBox[{647., 103.}, 0.5], 
        DiskBox[{825., 141.}, 0.5], DiskBox[{720., 106.}, 0.5], 
        DiskBox[{539., 109.}, 0.5], DiskBox[{597., 138.}, 0.5], 
        DiskBox[{845., 97.}, 0.5], DiskBox[{899., 205.}, 0.5], 
        DiskBox[{107., 104.}, 0.5], DiskBox[{83., 67.}, 0.5], 
        DiskBox[{156., 202.}, 0.5], DiskBox[{1075., 72.}, 0.5], 
        DiskBox[{762., 144.}, 0.5], DiskBox[{767., 163.}, 0.5], 
        DiskBox[{436., 127.}, 0.5], DiskBox[{169., 142.}, 0.5], 
        DiskBox[{766., 151.}, 0.5], DiskBox[{113., 83.}, 0.5], 
        DiskBox[{907., 193.}, 0.5], DiskBox[{864., 76.}, 0.5], 
        DiskBox[{1099., 69.}, 0.5], DiskBox[{825., 149.}, 0.5], 
        DiskBox[{455., 119.}, 0.5], DiskBox[{907., 168.}, 0.5], 
        DiskBox[{85., 172.}, 0.5], DiskBox[{871., 73.}, 0.5], 
        DiskBox[{818., 128.}, 0.5], DiskBox[{435., 129.}, 0.5], 
        DiskBox[{33., 145.}, 0.5], DiskBox[{27., 193.}, 0.5], 
        DiskBox[{78., 131.}, 0.5], DiskBox[{229., 76.}, 0.5], 
        DiskBox[{909., 119.}, 0.5], DiskBox[{321., 117.}, 0.5], 
        DiskBox[{241., 106.}, 0.5], DiskBox[{1112., 104.}, 0.5], 
        DiskBox[{856., 157.}, 0.5], DiskBox[{612., 129.}, 0.5], 
        DiskBox[{844., 100.}, 0.5], DiskBox[{1025., 119.}, 0.5], 
        DiskBox[{728., 83.}, 0.5], DiskBox[{565., 122.}, 0.5], 
        DiskBox[{232., 154.}, 0.5], DiskBox[{1004., 140.}, 0.5], 
        DiskBox[{723., 87.}, 0.5], DiskBox[{1079., 152.}, 0.5], 
        DiskBox[{941., 143.}, 0.5], DiskBox[{311., 155.}, 0.5], 
        DiskBox[{556., 142.}, 0.5], DiskBox[{907., 143.}, 0.5], 
        DiskBox[{950., 131.}, 0.5], DiskBox[{246., 123.}, 0.5], 
        DiskBox[{544., 137.}, 0.5], DiskBox[{548., 111.}, 0.5], 
        DiskBox[{700., 165.}, 0.5], DiskBox[{992., 152.}, 0.5], 
        DiskBox[{160., 145.}, 0.5], DiskBox[{389., 120.}, 0.5], 
        DiskBox[{238., 69.}, 0.5], DiskBox[{844., 63.}, 0.5], 
        DiskBox[{826., 79.}, 0.5], DiskBox[{850., 143.}, 0.5], 
        DiskBox[{329., 141.}, 0.5], DiskBox[{902., 121.}, 0.5], 
        DiskBox[{888., 179.}, 0.5], DiskBox[{765., 204.}, 0.5], 
        DiskBox[{106., 170.}, 0.5], DiskBox[{346., 149.}, 0.5], 
        DiskBox[{334., 125.}, 0.5], DiskBox[{93., 67.}, 0.5], 
        DiskBox[{213., 122.}, 0.5], DiskBox[{321., 133.}, 0.5], 
        DiskBox[{656., 125.}, 0.5], DiskBox[{76., 135.}, 0.5], 
        DiskBox[{814., 114.}, 0.5], DiskBox[{67., 180.}, 0.5], 
        DiskBox[{429., 149.}, 0.5], DiskBox[{895., 127.}, 0.5], 
        DiskBox[{1002., 130.}, 0.5], DiskBox[{199., 119.}, 0.5], 
        DiskBox[{730., 65.}, 0.5], DiskBox[{548., 126.}, 0.5], 
        DiskBox[{245., 107.}, 0.5], DiskBox[{537., 102.}, 0.5], 
        DiskBox[{222., 140.}, 0.5], DiskBox[{156., 188.}, 0.5], 
        DiskBox[{853., 61.}, 0.5], DiskBox[{74., 192.}, 0.5], 
        DiskBox[{1083., 113.}, 0.5], DiskBox[{1066., 85.}, 0.5], 
        DiskBox[{1101., 119.}, 0.5], DiskBox[{536., 102.}, 0.5], 
        DiskBox[{333., 111.}, 0.5], DiskBox[{322., 105.}, 0.5], 
        DiskBox[{720., 144.}, 0.5], DiskBox[{271., 104.}, 0.5], 
        DiskBox[{502., 117.}, 0.5], DiskBox[{899., 145.}, 0.5], 
        DiskBox[{1089., 70.}, 0.5], DiskBox[{653., 63.}, 0.5], 
        DiskBox[{1110., 82.}, 0.5], DiskBox[{349., 157.}, 0.5], 
        DiskBox[{227., 64.}, 0.5], DiskBox[{75., 134.}, 0.5], 
        DiskBox[{946., 100.}, 0.5], DiskBox[{596., 137.}, 0.5], 
        DiskBox[{154., 101.}, 0.5], DiskBox[{307., 137.}, 0.5], 
        DiskBox[{554., 114.}, 0.5], DiskBox[{714., 106.}, 0.5], 
        DiskBox[{493., 104.}, 0.5], DiskBox[{883., 169.}, 0.5], 
        DiskBox[{727., 99.}, 0.5], DiskBox[{155., 196.}, 0.5], 
        DiskBox[{247., 159.}, 0.5], DiskBox[{199., 124.}, 0.5], 
        DiskBox[{516., 164.}, 0.5], DiskBox[{78., 76.}, 0.5], 
        DiskBox[{773., 135.}, 0.5], DiskBox[{644., 89.}, 0.5], 
        DiskBox[{1099., 79.}, 0.5], DiskBox[{666., 154.}, 0.5], 
        DiskBox[{883., 91.}, 0.5], DiskBox[{456., 86.}, 0.5], 
        DiskBox[{952., 97.}, 0.5], DiskBox[{962., 90.}, 0.5], 
        DiskBox[{85., 189.}, 0.5], DiskBox[{220., 102.}, 0.5], 
        DiskBox[{655., 119.}, 0.5], DiskBox[{382., 136.}, 0.5], 
        DiskBox[{221., 105.}, 0.5], DiskBox[{19., 174.}, 0.5], 
        DiskBox[{549., 80.}, 0.5], DiskBox[{315., 144.}, 0.5], 
        DiskBox[{900., 92.}, 0.5], DiskBox[{211., 110.}, 0.5], 
        DiskBox[{996., 88.}, 0.5], DiskBox[{1108., 81.}, 0.5], 
        DiskBox[{574., 146.}, 0.5], DiskBox[{710., 129.}, 0.5], 
        DiskBox[{199., 106.}, 0.5], DiskBox[{838., 100.}, 0.5], 
        DiskBox[{150., 82.}, 0.5], DiskBox[{424., 138.}, 0.5], 
        DiskBox[{436., 125.}, 0.5], DiskBox[{570., 80.}, 0.5], 
        DiskBox[{716., 162.}, 0.5], DiskBox[{1122., 104.}, 0.5], 
        DiskBox[{218., 85.}, 0.5], DiskBox[{1014., 124.}, 0.5], 
        DiskBox[{157., 122.}, 0.5], DiskBox[{1122., 81.}, 0.5], 
        DiskBox[{557., 144.}, 0.5], DiskBox[{257., 161.}, 0.5], 
        DiskBox[{267., 140.}, 0.5], DiskBox[{147., 126.}, 0.5], 
        DiskBox[{780., 94.}, 0.5], DiskBox[{207., 111.}, 0.5], 
        DiskBox[{37., 145.}, 0.5], DiskBox[{693., 146.}, 0.5], 
        DiskBox[{315., 77.}, 0.5], DiskBox[{790., 117.}, 0.5], 
        DiskBox[{1013., 93.}, 0.5], DiskBox[{154., 207.}, 0.5], 
        DiskBox[{97., 98.}, 0.5], DiskBox[{28., 146.}, 0.5], 
        DiskBox[{947., 81.}, 0.5], DiskBox[{717., 100.}, 0.5], 
        DiskBox[{1104., 153.}, 0.5], DiskBox[{882., 77.}, 0.5], 
        DiskBox[{900., 86.}, 0.5], DiskBox[{111., 85.}, 0.5], 
        DiskBox[{542., 107.}, 0.5], DiskBox[{92., 79.}, 0.5], 
        DiskBox[{219., 98.}, 0.5], DiskBox[{37., 195.}, 0.5], 
        DiskBox[{259., 69.}, 0.5], DiskBox[{940., 85.}, 0.5], 
        DiskBox[{666., 102.}, 0.5], DiskBox[{499., 150.}, 0.5], 
        DiskBox[{83., 72.}, 0.5], DiskBox[{383., 74.}, 0.5], 
        DiskBox[{838., 122.}, 0.5], DiskBox[{65., 124.}, 0.5], 
        DiskBox[{145., 87.}, 0.5], DiskBox[{379., 111.}, 0.5], 
        DiskBox[{541., 99.}, 0.5], DiskBox[{452., 114.}, 0.5], 
        DiskBox[{386., 160.}, 0.5], DiskBox[{1111., 67.}, 0.5], 
        DiskBox[{393., 85.}, 0.5], DiskBox[{467., 62.}, 0.5], 
        DiskBox[{437., 156.}, 0.5], DiskBox[{764., 97.}, 0.5], 
        DiskBox[{953., 72.}, 0.5], DiskBox[{168., 207.}, 0.5], 
        DiskBox[{385., 140.}, 0.5], DiskBox[{210., 95.}, 0.5], 
        DiskBox[{1068., 162.}, 0.5], DiskBox[{900., 117.}, 0.5], 
        DiskBox[{240., 80.}, 0.5], DiskBox[{89., 187.}, 0.5], 
        DiskBox[{374., 87.}, 0.5], DiskBox[{51., 134.}, 0.5], 
        DiskBox[{1111., 73.}, 0.5], DiskBox[{644., 106.}, 0.5], 
        DiskBox[{822., 130.}, 0.5], DiskBox[{23., 113.}, 0.5], 
        DiskBox[{601., 64.}, 0.5], DiskBox[{482., 76.}, 0.5], 
        DiskBox[{394., 117.}, 0.5], DiskBox[{224., 88.}, 0.5], 
        DiskBox[{391., 134.}, 0.5], DiskBox[{667., 109.}, 0.5], 
        DiskBox[{1006., 113.}, 0.5], DiskBox[{206., 124.}, 0.5], 
        DiskBox[{1123., 152.}, 0.5], DiskBox[{656., 102.}, 0.5], 
        DiskBox[{655., 114.}, 0.5], DiskBox[{702., 137.}, 0.5], 
        DiskBox[{56., 132.}, 0.5], DiskBox[{700., 145.}, 0.5], 
        DiskBox[{55., 129.}, 0.5], DiskBox[{92., 154.}, 0.5], 
        DiskBox[{491., 107.}, 0.5], DiskBox[{209., 133.}, 0.5], 
        DiskBox[{563., 86.}, 0.5], DiskBox[{102., 125.}, 0.5], 
        DiskBox[{1063., 84.}, 0.5], DiskBox[{78., 75.}, 0.5], 
        DiskBox[{159., 196.}, 0.5], DiskBox[{834., 75.}, 0.5], 
        DiskBox[{270., 148.}, 0.5], DiskBox[{64., 62.}, 0.5], 
        DiskBox[{1075., 116.}, 0.5], DiskBox[{1119., 76.}, 0.5], 
        DiskBox[{1075., 75.}, 0.5], DiskBox[{325., 120.}, 0.5], 
        DiskBox[{572., 69.}, 0.5], DiskBox[{152., 142.}, 0.5], 
        DiskBox[{443., 161.}, 0.5], DiskBox[{714., 99.}, 0.5], 
        DiskBox[{98., 152.}, 0.5], DiskBox[{104., 166.}, 0.5], 
        DiskBox[{555., 76.}, 0.5], DiskBox[{156., 207.}, 0.5], 
        DiskBox[{204., 105.}, 0.5], DiskBox[{245., 153.}, 0.5], 
        DiskBox[{703., 164.}, 0.5], DiskBox[{438., 161.}, 0.5], 
        DiskBox[{1027., 136.}, 0.5], DiskBox[{311., 89.}, 0.5], 
        DiskBox[{508., 148.}, 0.5], DiskBox[{821., 121.}, 0.5], 
        DiskBox[{89., 147.}, 0.5], DiskBox[{606., 104.}, 0.5], 
        DiskBox[{574., 105.}, 0.5], DiskBox[{433., 138.}, 0.5], 
        DiskBox[{370., 101.}, 0.5], DiskBox[{145., 201.}, 0.5], 
        DiskBox[{997., 82.}, 0.5], DiskBox[{587., 150.}, 0.5], 
        DiskBox[{546., 122.}, 0.5], DiskBox[{152., 192.}, 0.5], 
        DiskBox[{317., 144.}, 0.5], DiskBox[{613., 140.}, 0.5], 
        DiskBox[{687., 151.}, 0.5], DiskBox[{95., 177.}, 0.5], 
        DiskBox[{540., 98.}, 0.5], DiskBox[{173., 193.}, 0.5], 
        DiskBox[{317., 72.}, 0.5], DiskBox[{1058., 143.}, 0.5], 
        DiskBox[{1113., 80.}, 0.5], DiskBox[{144., 82.}, 0.5], 
        DiskBox[{90., 134.}, 0.5], DiskBox[{454., 102.}, 0.5], 
        DiskBox[{436., 156.}, 0.5], DiskBox[{160., 156.}, 0.5], 
        DiskBox[{1066., 78.}, 0.5], DiskBox[{103., 112.}, 0.5], 
        DiskBox[{107., 147.}, 0.5], DiskBox[{1072., 73.}, 0.5], 
        DiskBox[{1083., 166.}, 0.5], DiskBox[{719., 158.}, 0.5], 
        DiskBox[{395., 94.}, 0.5], DiskBox[{828., 70.}, 0.5], 
        DiskBox[{729., 78.}, 0.5], DiskBox[{825., 92.}, 0.5], 
        DiskBox[{54., 77.}, 0.5], DiskBox[{1125., 91.}, 0.5], 
        DiskBox[{376., 132.}, 0.5], DiskBox[{47., 98.}, 0.5], 
        DiskBox[{43., 164.}, 0.5], DiskBox[{840., 125.}, 0.5], 
        DiskBox[{661., 149.}, 0.5], DiskBox[{440., 114.}, 0.5], 
        DiskBox[{549., 141.}, 0.5], DiskBox[{51., 133.}, 0.5], 
        DiskBox[{326., 144.}, 0.5], DiskBox[{867., 68.}, 0.5], 
        DiskBox[{161., 198.}, 0.5], DiskBox[{119., 100.}, 0.5], 
        DiskBox[{881., 199.}, 0.5], DiskBox[{257., 151.}, 0.5], 
        DiskBox[{1119., 111.}, 0.5], DiskBox[{250., 161.}, 0.5], 
        DiskBox[{1004., 123.}, 0.5], DiskBox[{1101., 153.}, 0.5], 
        DiskBox[{454., 83.}, 0.5], DiskBox[{660., 127.}, 0.5], 
        DiskBox[{780., 196.}, 0.5], DiskBox[{321., 148.}, 0.5], 
        DiskBox[{767., 105.}, 0.5], DiskBox[{23., 132.}, 0.5], 
        DiskBox[{1060., 114.}, 0.5], DiskBox[{393., 76.}, 0.5], 
        DiskBox[{993., 61.}, 0.5], DiskBox[{587., 153.}, 0.5], 
        DiskBox[{111., 96.}, 0.5], DiskBox[{1091., 164.}, 0.5], 
        DiskBox[{248., 118.}, 0.5], DiskBox[{254., 153.}, 0.5], 
        DiskBox[{67., 123.}, 0.5], DiskBox[{507., 150.}, 0.5], 
        DiskBox[{152., 115.}, 0.5], DiskBox[{647., 132.}, 0.5], 
        DiskBox[{543., 81.}, 0.5], DiskBox[{267., 104.}, 0.5], 
        DiskBox[{104., 179.}, 0.5], DiskBox[{529., 122.}, 0.5], 
        DiskBox[{573., 79.}, 0.5], DiskBox[{155., 108.}, 0.5], 
        DiskBox[{587., 157.}, 0.5], DiskBox[{204., 111.}, 0.5], 
        DiskBox[{59., 195.}, 0.5], DiskBox[{579., 156.}, 0.5], 
        DiskBox[{834., 92.}, 0.5], DiskBox[{103., 184.}, 0.5], 
        DiskBox[{87., 118.}, 0.5], DiskBox[{24., 189.}, 0.5], 
        DiskBox[{947., 150.}, 0.5], DiskBox[{671., 109.}, 0.5], 
        DiskBox[{775., 112.}, 0.5], DiskBox[{22., 92.}, 0.5], 
        DiskBox[{389., 112.}, 0.5], DiskBox[{148., 123.}, 0.5], 
        DiskBox[{654., 106.}, 0.5], DiskBox[{835., 138.}, 0.5], 
        DiskBox[{838., 118.}, 0.5], DiskBox[{711., 104.}, 0.5], 
        DiskBox[{788., 185.}, 0.5], DiskBox[{276., 138.}, 0.5], 
        DiskBox[{865., 68.}, 0.5], DiskBox[{957., 148.}, 0.5], 
        DiskBox[{325., 143.}, 0.5], DiskBox[{102., 78.}, 0.5], 
        DiskBox[{1013., 156.}, 0.5], DiskBox[{763., 160.}, 0.5], 
        DiskBox[{729., 72.}, 0.5], DiskBox[{28., 143.}, 0.5], 
        DiskBox[{220., 145.}, 0.5], DiskBox[{947., 143.}, 0.5], 
        DiskBox[{258., 159.}, 0.5], DiskBox[{434., 143.}, 0.5], 
        DiskBox[{607., 129.}, 0.5], DiskBox[{498., 157.}, 0.5], 
        DiskBox[{902., 144.}, 0.5], DiskBox[{79., 142.}, 0.5], 
        DiskBox[{40., 190.}, 0.5], DiskBox[{21., 62.}, 0.5], 
        DiskBox[{1102., 157.}, 0.5], DiskBox[{111., 172.}, 0.5], 
        DiskBox[{707., 76.}, 0.5], DiskBox[{151., 90.}, 0.5], 
        DiskBox[{94., 141.}, 0.5], DiskBox[{560., 88.}, 0.5], 
        DiskBox[{158., 87.}, 0.5], DiskBox[{247., 109.}, 0.5], 
        DiskBox[{458., 103.}, 0.5], DiskBox[{1111., 99.}, 0.5], 
        DiskBox[{107., 93.}, 0.5], DiskBox[{1009., 96.}, 0.5], 
        DiskBox[{67., 130.}, 0.5], DiskBox[{499., 163.}, 0.5], 
        DiskBox[{216., 80.}, 0.5], DiskBox[{954., 144.}, 0.5], 
        DiskBox[{1104., 113.}, 0.5], DiskBox[{155., 205.}, 0.5], 
        DiskBox[{1071., 83.}, 0.5], DiskBox[{173., 195.}, 0.5], 
        DiskBox[{62., 184.}, 0.5], DiskBox[{893., 170.}, 0.5], 
        DiskBox[{309., 123.}, 0.5], DiskBox[{836., 152.}, 0.5], 
        DiskBox[{898., 176.}, 0.5], DiskBox[{1005., 151.}, 0.5], 
        DiskBox[{447., 107.}, 0.5], DiskBox[{781., 183.}, 0.5], 
        DiskBox[{166., 193.}, 0.5], DiskBox[{730., 114.}, 0.5], 
        DiskBox[{962., 105.}, 0.5], DiskBox[{897., 165.}, 0.5], 
        DiskBox[{456., 101.}, 0.5], DiskBox[{334., 96.}, 0.5], 
        DiskBox[{349., 161.}, 0.5], DiskBox[{23., 116.}, 0.5], 
        DiskBox[{211., 145.}, 0.5], DiskBox[{562., 70.}, 0.5], 
        DiskBox[{883., 164.}, 0.5], DiskBox[{20., 80.}, 0.5], 
        DiskBox[{168., 100.}, 0.5], DiskBox[{842., 76.}, 0.5], 
        DiskBox[{551., 118.}, 0.5], DiskBox[{772., 207.}, 0.5], 
        DiskBox[{319., 77.}, 0.5], DiskBox[{225., 67.}, 0.5], 
        DiskBox[{27., 99.}, 0.5], DiskBox[{588., 150.}, 0.5], 
        DiskBox[{1020., 103.}, 0.5], DiskBox[{615., 72.}, 0.5], 
        DiskBox[{497., 138.}, 0.5], DiskBox[{780., 202.}, 0.5], 
        DiskBox[{585., 107.}, 0.5], DiskBox[{48., 84.}, 0.5], 
        DiskBox[{645., 141.}, 0.5], DiskBox[{212., 128.}, 0.5], 
        DiskBox[{30., 95.}, 0.5], DiskBox[{473., 75.}, 0.5], 
        DiskBox[{226., 90.}, 0.5], DiskBox[{1112., 93.}, 0.5], 
        DiskBox[{107., 144.}, 0.5], DiskBox[{333., 119.}, 0.5], 
        DiskBox[{844., 85.}, 0.5], DiskBox[{889., 66.}, 0.5], 
        DiskBox[{164., 64.}, 0.5], DiskBox[{881., 108.}, 0.5], 
        DiskBox[{774., 135.}, 0.5], DiskBox[{1106., 91.}, 0.5], 
        DiskBox[{18., 84.}, 0.5], DiskBox[{1018., 85.}, 0.5], 
        DiskBox[{990., 67.}, 0.5], DiskBox[{555., 82.}, 0.5], 
        DiskBox[{164., 123.}, 0.5], DiskBox[{208., 125.}, 0.5], 
        DiskBox[{604., 81.}, 0.5], DiskBox[{81., 133.}, 0.5], 
        DiskBox[{1099., 88.}, 0.5], DiskBox[{897., 151.}, 0.5], 
        DiskBox[{668., 99.}, 0.5], DiskBox[{539., 126.}, 0.5], 
        DiskBox[{720., 115.}, 0.5], DiskBox[{37., 139.}, 0.5], 
        DiskBox[{835., 94.}, 0.5], DiskBox[{660., 99.}, 0.5], 
        DiskBox[{66., 175.}, 0.5], DiskBox[{779., 150.}, 0.5], 
        DiskBox[{92., 132.}, 0.5], DiskBox[{600., 74.}, 0.5], 
        DiskBox[{241., 80.}, 0.5], DiskBox[{147., 111.}, 0.5], 
        DiskBox[{109., 120.}, 0.5], DiskBox[{243., 81.}, 0.5], 
        DiskBox[{156., 113.}, 0.5], DiskBox[{169., 62.}, 0.5], 
        DiskBox[{824., 84.}, 0.5], DiskBox[{436., 149.}, 0.5], 
        DiskBox[{968., 85.}, 0.5], DiskBox[{390., 81.}, 0.5], 
        DiskBox[{909., 117.}, 0.5], DiskBox[{552., 85.}, 0.5], 
        DiskBox[{239., 122.}, 0.5], DiskBox[{144., 123.}, 0.5], 
        DiskBox[{208., 134.}, 0.5], DiskBox[{718., 100.}, 0.5], 
        DiskBox[{776., 104.}, 0.5], DiskBox[{271., 154.}, 0.5], 
        DiskBox[{612., 75.}, 0.5], DiskBox[{166., 158.}, 0.5], 
        DiskBox[{321., 120.}, 0.5], DiskBox[{250., 119.}, 0.5], 
        DiskBox[{1112., 157.}, 0.5], DiskBox[{193., 105.}, 0.5], 
        DiskBox[{373., 64.}, 0.5], DiskBox[{826., 144.}, 0.5], 
        DiskBox[{83., 128.}, 0.5], DiskBox[{892., 158.}, 0.5], 
        DiskBox[{1020., 106.}, 0.5], DiskBox[{965., 149.}, 0.5], 
        DiskBox[{232., 148.}, 0.5], DiskBox[{964., 63.}, 0.5], 
        DiskBox[{446., 97.}, 0.5], DiskBox[{70., 187.}, 0.5], 
        DiskBox[{242., 148.}, 0.5], DiskBox[{992., 68.}, 0.5], 
        DiskBox[{32., 116.}, 0.5], DiskBox[{588., 165.}, 0.5], 
        DiskBox[{980., 146.}, 0.5], DiskBox[{865., 153.}, 0.5], 
        DiskBox[{906., 115.}, 0.5], DiskBox[{31., 151.}, 0.5], 
        DiskBox[{886., 198.}, 0.5], DiskBox[{539., 110.}, 0.5], 
        DiskBox[{832., 98.}, 0.5], DiskBox[{224., 159.}, 0.5], 
        DiskBox[{79., 136.}, 0.5], DiskBox[{55., 135.}, 0.5], 
        DiskBox[{906., 136.}, 0.5], DiskBox[{158., 204.}, 0.5], 
        DiskBox[{1096., 79.}, 0.5], DiskBox[{157., 191.}, 0.5], 
        DiskBox[{653., 100.}, 0.5], DiskBox[{549., 96.}, 0.5], 
        DiskBox[{308., 138.}, 0.5], DiskBox[{868., 67.}, 0.5], 
        DiskBox[{854., 159.}, 0.5], DiskBox[{258., 82.}, 0.5], 
        DiskBox[{1009., 72.}, 0.5], DiskBox[{539., 134.}, 0.5], 
        DiskBox[{831., 72.}, 0.5], DiskBox[{1058., 76.}, 0.5], 
        DiskBox[{145., 148.}, 0.5], DiskBox[{540., 78.}, 0.5], 
        DiskBox[{785., 120.}, 0.5], DiskBox[{1077., 132.}, 0.5], 
        DiskBox[{994., 76.}, 0.5], DiskBox[{875., 155.}, 0.5], 
        DiskBox[{369., 134.}, 0.5], DiskBox[{204., 140.}, 0.5], 
        DiskBox[{600., 107.}, 0.5], DiskBox[{439., 130.}, 0.5], 
        DiskBox[{312., 110.}, 0.5], DiskBox[{383., 67.}, 0.5], 
        DiskBox[{39., 113.}, 0.5], DiskBox[{486., 75.}, 0.5], 
        DiskBox[{277., 108.}, 0.5], DiskBox[{710., 106.}, 0.5], 
        DiskBox[{824., 127.}, 0.5], DiskBox[{218., 148.}, 0.5], 
        DiskBox[{943., 114.}, 0.5], DiskBox[{591., 104.}, 0.5], 
        DiskBox[{772., 98.}, 0.5], DiskBox[{270., 126.}, 0.5], 
        DiskBox[{881., 100.}, 0.5], DiskBox[{369., 113.}, 0.5], 
        DiskBox[{159., 140.}, 0.5], DiskBox[{169., 128.}, 0.5], 
        DiskBox[{309., 106.}, 0.5], DiskBox[{47., 72.}, 0.5], 
        DiskBox[{605., 106.}, 0.5], DiskBox[{492., 143.}, 0.5], 
        DiskBox[{325., 78.}, 0.5], DiskBox[{839., 80.}, 0.5], 
        DiskBox[{86., 135.}, 0.5], DiskBox[{168., 97.}, 0.5], 
        DiskBox[{32., 152.}, 0.5], DiskBox[{211., 95.}, 0.5], 
        DiskBox[{479., 119.}, 0.5], DiskBox[{902., 202.}, 0.5], 
        DiskBox[{448., 130.}, 0.5], DiskBox[{1111., 80.}, 0.5], 
        DiskBox[{955., 115.}, 0.5], DiskBox[{63., 137.}, 0.5], 
        DiskBox[{156., 127.}, 0.5], DiskBox[{1097., 159.}, 0.5], 
        DiskBox[{544., 139.}, 0.5], DiskBox[{903., 119.}, 0.5], 
        DiskBox[{1019., 103.}, 0.5], DiskBox[{18., 129.}, 0.5], 
        DiskBox[{250., 154.}, 0.5], DiskBox[{208., 126.}, 0.5], 
        DiskBox[{674., 137.}, 0.5], DiskBox[{1086., 112.}, 0.5], 
        DiskBox[{151., 102.}, 0.5], DiskBox[{660., 94.}, 0.5], 
        DiskBox[{1007., 100.}, 0.5], DiskBox[{161., 73.}, 0.5], 
        DiskBox[{729., 144.}, 0.5], DiskBox[{896., 172.}, 0.5], 
        DiskBox[{659., 148.}, 0.5], DiskBox[{948., 126.}, 0.5], 
        DiskBox[{88., 125.}, 0.5], DiskBox[{228., 117.}, 0.5], 
        DiskBox[{832., 119.}, 0.5], DiskBox[{900., 62.}, 0.5], 
        DiskBox[{1099., 68.}, 0.5], DiskBox[{1099., 152.}, 0.5], 
        DiskBox[{815., 115.}, 0.5], DiskBox[{244., 63.}, 0.5], 
        DiskBox[{663., 79.}, 0.5], DiskBox[{1107., 141.}, 0.5], 
        DiskBox[{610., 151.}, 0.5], DiskBox[{37., 107.}, 0.5], 
        DiskBox[{1024., 121.}, 0.5], DiskBox[{229., 165.}, 0.5], 
        DiskBox[{325., 96.}, 0.5], DiskBox[{888., 63.}, 0.5], 
        DiskBox[{1056., 126.}, 0.5], DiskBox[{315., 129.}, 0.5], 
        DiskBox[{1071., 159.}, 0.5], DiskBox[{616., 127.}, 0.5], 
        DiskBox[{780., 160.}, 0.5], DiskBox[{96., 146.}, 0.5], 
        DiskBox[{1104., 142.}, 0.5], DiskBox[{99., 188.}, 0.5], 
        DiskBox[{144., 133.}, 0.5], DiskBox[{881., 122.}, 0.5], 
        DiskBox[{209., 152.}, 0.5], DiskBox[{945., 82.}, 0.5], 
        DiskBox[{454., 93.}, 0.5], DiskBox[{1115., 74.}, 0.5], 
        DiskBox[{71., 63.}, 0.5], DiskBox[{105., 177.}, 0.5], 
        DiskBox[{329., 153.}, 0.5], DiskBox[{1005., 87.}, 0.5], 
        DiskBox[{710., 76.}, 0.5], DiskBox[{733., 117.}, 0.5], 
        DiskBox[{957., 79.}, 0.5], DiskBox[{217., 133.}, 0.5], 
        DiskBox[{595., 110.}, 0.5], DiskBox[{457., 65.}, 0.5], 
        DiskBox[{249., 81.}, 0.5], DiskBox[{258., 70.}, 0.5], 
        DiskBox[{39., 142.}, 0.5], DiskBox[{261., 139.}, 0.5], 
        DiskBox[{939., 132.}, 0.5], DiskBox[{591., 141.}, 0.5], 
        DiskBox[{381., 69.}, 0.5], DiskBox[{848., 91.}, 0.5], 
        DiskBox[{374., 118.}, 0.5], DiskBox[{92., 150.}, 0.5], 
        DiskBox[{163., 189.}, 0.5], DiskBox[{212., 143.}, 0.5], 
        DiskBox[{1013., 72.}, 0.5], DiskBox[{700., 142.}, 0.5], 
        DiskBox[{208., 83.}, 0.5], DiskBox[{1065., 152.}, 0.5], 
        DiskBox[{322., 139.}, 0.5], DiskBox[{258., 133.}, 0.5], 
        DiskBox[{455., 88.}, 0.5], DiskBox[{1028., 129.}, 0.5], 
        DiskBox[{31., 80.}, 0.5], DiskBox[{952., 95.}, 0.5], 
        DiskBox[{267., 109.}, 0.5], DiskBox[{832., 87.}, 0.5], 
        DiskBox[{441., 142.}, 0.5], DiskBox[{890., 69.}, 0.5], 
        DiskBox[{948., 141.}, 0.5], DiskBox[{463., 62.}, 0.5], 
        DiskBox[{734., 123.}, 0.5], DiskBox[{387., 79.}, 0.5], 
        DiskBox[{654., 147.}, 0.5], DiskBox[{831., 123.}, 0.5], 
        DiskBox[{259., 108.}, 0.5], DiskBox[{556., 116.}, 0.5], 
        DiskBox[{336., 125.}, 0.5]}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->800]], "Output",
 CellChangeTimes->{3.950784013111088*^9},
 CellLabel->"Out[3]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsvYd3XdW19n1eGYwN6nLFxmADBkyzDTa9E1IhuaRAOknITUghjVRs+cim
hRBKCC2hQ+i992awTpFsnb33kdx7792SLNnv/M05l474xnfHeP+AqzFkWUen
7L3WLM98ZlkX/uCqn/74lz+46oof/eCQz/72B7/+6RU/+t0hF/zqt/JQn/+T
Su07MZVKLTsktY/8f6/89//ln9NSqf/9+//+/X///ql/VuqDffd5f0rq68WG
VC4zqubFGYNrfxDVp8r2TrHnXNTrlUP1v/v1WzQlNbwwJXVSS0Pqh9GU1CfZ
Y6tubxwwYEQyxZ94oz5x3ycyI2r5w4+KaXnyZH1Te8IEfUL/QS1TUt8pTkm9
H6VTi+WdduVOqNyZO7Fim/z+fFyfOrZtUiq1097sqkxd3aoZdXWTGw+pHSuf
pG/2X72urk7/WxWu7kR5v8/x/vJzUjwldY+837NyZ+/Kz4J872k8sG53Zmhd
Rp57hfxe23P11+kb7X9g25TUNfJgd+bAus7GIXU75EnL5Y1eksf+LBd4XDSl
tEzH2Yf3lb8dIq8bL2965Owp+kGr5TUr5bmR/Ezke6n8f6d8t8v36/L3nxfS
KT7LP3cf3nPYnGtS+zdNSX0zSacO+Io8MdXn6FlTU+wUa5b6ju3EhsZBdXtl
gbsbD6rNyr3dIt9ny0dUzpXnfNnW5mB76gC5mj+21qcuKdanzpSr4+oHyCeU
c9tH2yezBEdG9hF81E/04T6s6MXyrn+R71T/X/Nvn6tEXr7bkraPONd2iOep
DMjXz5P61O9j+XtZmudX3Sxv+6B8vyxX+Jr8fEa+H5XLeFYW8omkIbWr6Yzy
rvzZ5bPkNW/JK64TqTjXLyP1fbsOFobLrZ7FFZyt1/H5+Q2p0a22cqmJdqu8
ZuTsaamfynv8IJmWmhA36Gt0VUxiDuB9uM1Rch3nJlenRrZcnfpiNDn1I/n8
H8ui/6bV7u1ceZ/UAfZZ41vt3vTrt7bhLNklIt7cD5u7PX96+dr8GRVr5D43
yMay8VnZ5A/kb0/LY7+V34+eNcmk9wxb9oPiabLR9XotXOO3eLSMZ/xVnzCQ
D2G/viDfP5XvG+TN8oX61O7ciZWbsydUIEmrZTHfkQ/IyP/XyAculdcsk5vZ
k5tQuctVqlF+/1XBRf1QWywWhps/VSTwc/L47+RCWJxT49IiXxCbGunXxfY6
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
1E/F\
\>", "ImageResolution" -> \
120.],ExpressionUUID->"becea8dd-ce57-264d-b884-ae646c6761c7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "GraficaRRL"}]], "Input",
 CellChangeTimes->{{3.950784542961485*^9, 3.950784549373913*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"567baece-7916-8340-8d0c-fe25c9e396eb"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Instrucci\[OAcute]n que grafica una \
relaci\[OAcute]n de recurrencia lineal permitiendo al usuario las opciones de \
especificar la cantidad de puntos a representar y un valor m\[AAcute]ximo de \
observaci\[OAcute]n sobre el eje de las ordenadas. Sintaxis: \
GraficaRRL[Coeficientes, Condiciones], siendo \
\[OpenCurlyDoubleQuote]Coeficientes\[CloseCurlyDoubleQuote] un vector de \
coeficientes en orden descendente y/o que contiene la parte no \
homog\[EAcute]nea (en funci\[OAcute]n de \[OpenCurlyDoubleQuote]n\
\[CloseCurlyDoubleQuote]) de la relaci\[OAcute]n de recurrencia como su \
\[UAcute]ltima componente y \[OpenCurlyDoubleQuote]Condiciones\
\[CloseCurlyDoubleQuote] la lista de condiciones iniciales en orden \
ascendente. Adem\[AAcute]s, GraficaRRL[Coeficientes, Condiciones, \
npuntos->Valor, ymax->Valor, inicio->Valor] da las opciones al usuario de \
escoger la cantidad de puntos a graficar, el valor m\[AAcute]ximo de \
visualizaci\[OAcute]n sobre el eje \[OpenCurlyDoubleQuote]y\
\[CloseCurlyDoubleQuote] y el inicio del dominio de la relaci\[OAcute]n de \
recurrencia, respectivamente. \[OpenCurlyDoubleQuote]ymax\
\[CloseCurlyDoubleQuote] acepta el atributo \[OpenCurlyDoubleQuote]All\
\[CloseCurlyDoubleQuote] que muestra todos los puntos involucrados en la \
graficaci\[OAcute]n. Por defecto, \[OpenCurlyDoubleQuote]npuntos->10\
\[CloseCurlyDoubleQuote], \[OpenCurlyDoubleQuote]ymax->All\
\[CloseCurlyDoubleQuote] e \[OpenCurlyDoubleQuote]inicio->1\
\[CloseCurlyDoubleQuote].\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"GraficaRRL", "[", 
                    
                    RowBox[{
                    "VilCretas`Private`RcRecurrenci_List", ",", 
                    "VilCretas`Private`RcCondicione_List", ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"VilCretas`Private`RcGraficaRRL", ",", 
                    "VilCretas`Private`FuncionVariable"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"Clear", "[", "n", "]"}], ";", 
                    RowBox[{
                    
                    RowBox[{"VilCretas`Private`FuncionVariable", "[", 
                    "VilCretas`Private`FuncionVariable_List", "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"VilCretas`Private`FuncionVariableAuxiliar", ",", 
                    "VilCretas`Private`Simbolos", ",", 
                    "VilCretas`Private`VariableAuxiliarSimbolos", ",", 
                    
                    RowBox[{"VilCretas`Private`VariableAuxiliarVariables", 
                    "=", 
                    RowBox[{"{", "}"}]}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"VilCretas`Private`FuncionVariableAuxiliar", "[", 
                    "]"}], ":=", 
                    
                    RowBox[{"VilCretas`Private`FuncionVariable", 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
                    ";", 
                    RowBox[{
                    
                    RowBox[{"VilCretas`Private`Simbolos", "[", 
                    "VilCretas`Private`VariableFuncion_", "]"}], ":=", 
                    RowBox[{"DeleteDuplicates", "[", 
                    RowBox[{"Cases", "[", 
                    RowBox[{
                    
                    RowBox[{"DownValues", "[", 
                    "VilCretas`Private`VariableFuncion", "]"}], ",", 
                    "_Symbol", ",", "\[Infinity]"}], "]"}], "]"}]}], ";", 
                    RowBox[{"VilCretas`Private`VariableAuxiliarSimbolos", "=", 
                    RowBox[{"Sort", "[", 
                    
                    RowBox[{"VilCretas`Private`Simbolos", "[", 
                    "VilCretas`Private`FuncionVariableAuxiliar", "]"}], 
                    "]"}]}], ";", 
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`VariableFuncioni", "=", "1"}], 
                    ",", 
                    
                    RowBox[{"VilCretas`Private`VariableFuncioni", 
                    "\[LessEqual]", 
                    
                    RowBox[{"Length", "[", 
                    "VilCretas`Private`VariableAuxiliarSimbolos", "]"}]}], 
                    ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"NumericQ", "[", 
                    
                    RowBox[{"VilCretas`Private`VariableAuxiliarSimbolos", 
                    "\[LeftDoubleBracket]", 
                    "VilCretas`Private`VariableFuncioni", 
                    "\[RightDoubleBracket]"}], "]"}], "\[Equal]", "False"}], 
                    ",", 
                    
                    RowBox[{"VilCretas`Private`VariableAuxiliarVariables", 
                    "=", 
                    RowBox[{"Append", "[", 
                    
                    RowBox[{"VilCretas`Private`VariableAuxiliarVariables", 
                    ",", 
                    RowBox[{
                    "VilCretas`Private`VariableAuxiliarSimbolos", 
                    "\[LeftDoubleBracket]", 
                    "VilCretas`Private`VariableFuncioni", 
                    "\[RightDoubleBracket]"}]}], "]"}]}]}], "]"}], ";", 
                    RowBox[{"VilCretas`Private`VariableFuncioni", "++"}]}]}], 
                    "]"}], ";", 
                    "VilCretas`Private`VariableAuxiliarVariables"}]}], 
                    "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`RcGraficaRRL", "[", 
                    
                    RowBox[{"VilCretas`Private`RcRecurrencia_List", ",", 
                    "VilCretas`Private`RcCondiciones_List", ",", 
                    "VilCretas`Private`Rcinicio_"}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "}"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"VilCretas`Private`RcRecurrencia", ",", 
                    "VilCretas`Private`RcCondiciones"}], "}"}], ",", "Null"}],
                     "]"}], "\[Equal]", "False"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"VectorQ", "[", "VilCretas`Private`RcRecurrencia",
                     "]"}], "&&", 
                    RowBox[{"VectorQ", "[", 
                    
                    RowBox[{"VilCretas`Private`RcCondiciones", ",", 
                    "NumericQ"}], "]"}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"VilCretas`Private`RcRecurrencia", ",", "Null"}], 
                    "]"}], "\[Equal]", "False"}], "&&", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"VilCretas`Private`RcCondiciones", ",", "Null"}], 
                    "]"}], "\[Equal]", "False"}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"VilCretas`Private`RcRecurrencia", "\[NotEqual]", 
                    RowBox[{"{", "}"}]}], "&&", 
                    RowBox[{"VilCretas`Private`RcCondiciones", "\[NotEqual]", 
                    RowBox[{"{", "}"}]}]}], ",", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "VilCretas`Private`RcLastSuma3", "}"}], ",", 
                    RowBox[{
                    RowBox[{"Clear", "[", "VilCretas`Private`Rca3", "]"}], 
                    ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", 
                    
                    RowBox[{"VilCretas`Private`FuncionVariable", "[", 
                    "VilCretas`Private`RcRecurrencia", "]"}], "]"}], 
                    "\[Equal]", "1"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"ToString", "/@", 
                    
                    RowBox[{"VilCretas`Private`FuncionVariable", "[", 
                    "VilCretas`Private`RcRecurrencia", "]"}]}], ",", 
                    "\"n\""}], "]"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"Length", "[", "VilCretas`Private`RcRecurrencia", 
                    "]"}], "-", "1"}], "\[Equal]", 
                    
                    RowBox[{"Length", "[", "VilCretas`Private`RcCondiciones", 
                    "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"VilCretas`Private`RcVl10", "[", 
                    "VilCretas`Private`n_", "]"}], ":=", 
                    RowBox[{
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"VilCretas`Private`Rci4", "=", "1"}], 
                    RowBox[{
                    
                    RowBox[{"Length", "[", "VilCretas`Private`RcRecurrencia", 
                    "]"}], "-", "1"}]], 
                    RowBox[{
                    
                    RowBox[{"VilCretas`Private`RcRecurrencia", 
                    "\[LeftDoubleBracket]", "VilCretas`Private`Rci4", 
                    "\[RightDoubleBracket]"}], " ", 
                    RowBox[{"VilCretas`Private`Rca3", "[", 
                    
                    RowBox[{"VilCretas`Private`n", "-", 
                    "VilCretas`Private`Rci4"}], "]"}]}]}], "/.", 
                    "\[VeryThinSpace]", 
                    RowBox[{"n", "\[Rule]", "VilCretas`Private`n"}]}]}], ";", 
                    RowBox[{
                    
                    RowBox[{"VilCretas`Private`RcLastSuma3", "[", 
                    "VilCretas`Private`n_", "]"}], ":=", 
                    RowBox[{
                    
                    RowBox[{"Last", "[", "VilCretas`Private`RcRecurrencia", 
                    "]"}], "/.", "\[VeryThinSpace]", 
                    RowBox[{"n", "\[Rule]", "VilCretas`Private`n"}]}]}], ";", 
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`Rci4", "=", "1"}], ",", 
                    RowBox[{"VilCretas`Private`Rci4", "\[LessEqual]", 
                    
                    RowBox[{"Length", "[", "VilCretas`Private`RcCondiciones", 
                    "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"VilCretas`Private`Rca3", "[", 
                    
                    RowBox[{"VilCretas`Private`Rci4", "+", 
                    "VilCretas`Private`Rcinicio", "-", "1"}], "]"}], "=", 
                    
                    RowBox[{"VilCretas`Private`RcCondiciones", 
                    "\[LeftDoubleBracket]", "VilCretas`Private`Rci4", 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"VilCretas`Private`Rci4", "++"}]}]}], "]"}], ";", 
                    RowBox[{
                    
                    RowBox[{"VilCretas`Private`Rca3", "[", 
                    "VilCretas`Private`n_", "]"}], ":=", 
                    RowBox[{
                    
                    RowBox[{"VilCretas`Private`RcLastSuma3", "[", 
                    "VilCretas`Private`n", "]"}], "+", 
                    
                    RowBox[{"VilCretas`Private`RcVl10", "[", 
                    "VilCretas`Private`n", "]"}]}]}], ";", 
                    RowBox[{"DiscretePlot", "[", 
                    RowBox[{
                    
                    RowBox[{"VilCretas`Private`Rca3", "[", 
                    "VilCretas`Private`n", "]"}], ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"VilCretas`Private`n", ",", 
                    "VilCretas`Private`Rcinicio", ",", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "npuntos", "]"}], "+", 
                    "VilCretas`Private`Rcinicio", "-", "1"}]}], "}"}], ",", 
                    RowBox[{"PlotRange", "\[Rule]", 
                    RowBox[{"OptionValue", "[", "ymax", "]"}]}], ",", 
                    RowBox[{"FillingStyle", "\[Rule]", "Green"}], ",", 
                    RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"PointSize", "[", "0.02`", "]"}]}], ",", 
                    RowBox[{"AxesOrigin", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"Length", "[", "VilCretas`Private`RcRecurrencia", 
                    "]"}], "\[Equal]", 
                    RowBox[{"Length", "[", "VilCretas`Private`RcCondiciones", 
                    "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"VilCretas`Private`RcVl10", "[", 
                    "VilCretas`Private`n_", "]"}], ":=", 
                    RowBox[{
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"VilCretas`Private`Rci4", "=", "1"}], 
                    
                    RowBox[{"Length", "[", "VilCretas`Private`RcRecurrencia", 
                    "]"}]], 
                    RowBox[{
                    RowBox[{
                    "VilCretas`Private`RcRecurrencia", 
                    "\[LeftDoubleBracket]", "VilCretas`Private`Rci4", 
                    "\[RightDoubleBracket]"}], " ", 
                    RowBox[{"VilCretas`Private`Rca3", "[", 
                    
                    RowBox[{"VilCretas`Private`n", "-", 
                    "VilCretas`Private`Rci4"}], "]"}]}]}], "/.", 
                    "\[VeryThinSpace]", 
                    RowBox[{"n", "\[Rule]", "VilCretas`Private`n"}]}]}], ";", 
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`Rci4", "=", "1"}], ",", 
                    RowBox[{"VilCretas`Private`Rci4", "\[LessEqual]", 
                    
                    RowBox[{"Length", "[", "VilCretas`Private`RcCondiciones", 
                    "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"VilCretas`Private`Rca3", "[", 
                    
                    RowBox[{"VilCretas`Private`Rci4", "+", 
                    "VilCretas`Private`Rcinicio", "-", "1"}], "]"}], "=", 
                    
                    RowBox[{"VilCretas`Private`RcCondiciones", 
                    "\[LeftDoubleBracket]", "VilCretas`Private`Rci4", 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"VilCretas`Private`Rci4", "++"}]}]}], "]"}], ";", 
                    RowBox[{
                    
                    RowBox[{"VilCretas`Private`Rca3", "[", 
                    "VilCretas`Private`n_", "]"}], ":=", 
                    RowBox[{"VilCretas`Private`RcVl10", "[", 
                    "VilCretas`Private`n", "]"}]}], ";", 
                    RowBox[{"DiscretePlot", "[", 
                    RowBox[{
                    
                    RowBox[{"VilCretas`Private`Rca3", "[", 
                    "VilCretas`Private`n", "]"}], ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"VilCretas`Private`n", ",", 
                    "VilCretas`Private`Rcinicio", ",", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "npuntos", "]"}], "+", 
                    "VilCretas`Private`Rcinicio", "-", "1"}]}], "}"}], ",", 
                    RowBox[{"PlotRange", "\[Rule]", 
                    RowBox[{"OptionValue", "[", "ymax", "]"}]}], ",", 
                    RowBox[{"FillingStyle", "\[Rule]", "Green"}], ",", 
                    RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"PointSize", "[", "0.02`", "]"}]}], ",", 
                    RowBox[{"AxesOrigin", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}]}]}], "]"}]}], 
                    "]"}]}], "]"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", 
                    
                    RowBox[{"VilCretas`Private`FuncionVariable", "[", 
                    "VilCretas`Private`RcRecurrencia", "]"}], "]"}], 
                    "\[Equal]", "0"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"Length", "[", "VilCretas`Private`RcRecurrencia", 
                    "]"}], "-", "1"}], "\[Equal]", 
                    
                    RowBox[{"Length", "[", "VilCretas`Private`RcCondiciones", 
                    "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"VilCretas`Private`RcVl10", "[", 
                    "VilCretas`Private`n_", "]"}], ":=", 
                    RowBox[{
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"VilCretas`Private`Rci4", "=", "1"}], 
                    RowBox[{
                    
                    RowBox[{"Length", "[", "VilCretas`Private`RcRecurrencia", 
                    "]"}], "-", "1"}]], 
                    RowBox[{
                    
                    RowBox[{"VilCretas`Private`RcRecurrencia", 
                    "\[LeftDoubleBracket]", "VilCretas`Private`Rci4", 
                    "\[RightDoubleBracket]"}], " ", 
                    RowBox[{"VilCretas`Private`Rca3", "[", 
                    
                    RowBox[{"VilCretas`Private`n", "-", 
                    "VilCretas`Private`Rci4"}], "]"}]}]}], "+", 
                    
                    RowBox[{"Last", "[", "VilCretas`Private`RcRecurrencia", 
                    "]"}]}]}], ";", 
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`Rci4", "=", "1"}], ",", 
                    RowBox[{"VilCretas`Private`Rci4", "\[LessEqual]", 
                    
                    RowBox[{"Length", "[", "VilCretas`Private`RcCondiciones", 
                    "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"VilCretas`Private`Rca3", "[", 
                    
                    RowBox[{"VilCretas`Private`Rci4", "+", 
                    "VilCretas`Private`Rcinicio", "-", "1"}], "]"}], "=", 
                    
                    RowBox[{"VilCretas`Private`RcCondiciones", 
                    "\[LeftDoubleBracket]", "VilCretas`Private`Rci4", 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"VilCretas`Private`Rci4", "++"}]}]}], "]"}], ";", 
                    RowBox[{
                    
                    RowBox[{"VilCretas`Private`Rca3", "[", 
                    "VilCretas`Private`n_", "]"}], ":=", 
                    
                    RowBox[{"VilCretas`Private`RcVl10", "[", 
                    "VilCretas`Private`n", "]"}]}], ";", 
                    RowBox[{"DiscretePlot", "[", 
                    RowBox[{
                    
                    RowBox[{"VilCretas`Private`Rca3", "[", 
                    "VilCretas`Private`n", "]"}], ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"VilCretas`Private`n", ",", 
                    "VilCretas`Private`Rcinicio", ",", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "npuntos", "]"}], "+", 
                    "VilCretas`Private`Rcinicio", "-", "1"}]}], "}"}], ",", 
                    RowBox[{"PlotRange", "\[Rule]", 
                    RowBox[{"OptionValue", "[", "ymax", "]"}]}], ",", 
                    RowBox[{"FillingStyle", "\[Rule]", "Green"}], ",", 
                    RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"PointSize", "[", "0.02`", "]"}]}], ",", 
                    RowBox[{"AxesOrigin", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"Length", "[", "VilCretas`Private`RcRecurrencia", 
                    "]"}], "\[Equal]", 
                    RowBox[{"Length", "[", "VilCretas`Private`RcCondiciones", 
                    "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"VilCretas`Private`RcVl10", "[", 
                    "VilCretas`Private`n_", "]"}], ":=", 
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"VilCretas`Private`Rci4", "=", "1"}], 
                    
                    RowBox[{"Length", "[", "VilCretas`Private`RcRecurrencia", 
                    "]"}]], 
                    RowBox[{
                    
                    RowBox[{"VilCretas`Private`RcRecurrencia", 
                    "\[LeftDoubleBracket]", "VilCretas`Private`Rci4", 
                    "\[RightDoubleBracket]"}], " ", 
                    RowBox[{"VilCretas`Private`Rca3", "[", 
                    
                    RowBox[{"VilCretas`Private`n", "-", 
                    "VilCretas`Private`Rci4"}], "]"}]}]}]}], ";", 
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`Rci4", "=", "1"}], ",", 
                    RowBox[{"VilCretas`Private`Rci4", "\[LessEqual]", 
                    
                    RowBox[{"Length", "[", "VilCretas`Private`RcCondiciones", 
                    "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"VilCretas`Private`Rca3", "[", 
                    
                    RowBox[{"VilCretas`Private`Rci4", "+", 
                    "VilCretas`Private`Rcinicio", "-", "1"}], "]"}], "=", 
                    
                    RowBox[{"VilCretas`Private`RcCondiciones", 
                    "\[LeftDoubleBracket]", "VilCretas`Private`Rci4", 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"VilCretas`Private`Rci4", "++"}]}]}], "]"}], ";", 
                    RowBox[{
                    
                    RowBox[{"VilCretas`Private`Rca3", "[", 
                    "VilCretas`Private`n_", "]"}], ":=", 
                    
                    RowBox[{"VilCretas`Private`RcVl10", "[", 
                    "VilCretas`Private`n", "]"}]}], ";", 
                    RowBox[{"DiscretePlot", "[", 
                    RowBox[{
                    
                    RowBox[{"VilCretas`Private`Rca3", "[", 
                    "VilCretas`Private`n", "]"}], ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"VilCretas`Private`n", ",", 
                    "VilCretas`Private`Rcinicio", ",", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "npuntos", "]"}], "+", 
                    "VilCretas`Private`Rcinicio", "-", "1"}]}], "}"}], ",", 
                    RowBox[{"PlotRange", "\[Rule]", 
                    RowBox[{"OptionValue", "[", "ymax", "]"}]}], ",", 
                    RowBox[{"FillingStyle", "\[Rule]", "Green"}], ",", 
                    RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"PointSize", "[", "0.02`", "]"}]}], ",", 
                    RowBox[{"AxesOrigin", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}]}]}], "]"}]}], 
                    "]"}]}], "]"}]}], "]"}]}]}], "]"}]}], "]"}]}], "]"}]}], 
                    "]"}]}], "]"}]}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"IntegerQ", "[", 
                    RowBox[{"OptionValue", "[", "inicio", "]"}], "]"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"IntegerQ", "[", 
                    RowBox[{"OptionValue", "[", "npuntos", "]"}], "]"}], "&&", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"NumericQ", "[", 
                    RowBox[{"OptionValue", "[", "ymax", "]"}], "]"}], "||", 
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"OptionValue", "[", "ymax", "]"}], "]"}], 
                    "\[Equal]", 
                    RowBox[{"ToString", "[", "All", "]"}]}]}], ")"}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"OptionValue", "[", "inicio", "]"}], 
                    "\[GreaterEqual]", "0"}], "&&", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "npuntos", "]"}], 
                    "\[GreaterEqual]", "1"}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"OptionValue", "[", "ymax", "]"}], "]"}], 
                    "\[NotEqual]", 
                    RowBox[{"ToString", "[", "All", "]"}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"OptionValue", "[", "ymax", "]"}], ">", "1"}], 
                    ",", 
                    RowBox[{"VilCretas`Private`RcGraficaRRL", "[", 
                    
                    RowBox[{"VilCretas`Private`RcRecurrenci", ",", 
                    "VilCretas`Private`RcCondicione", ",", 
                    RowBox[{"OptionValue", "[", "inicio", "]"}]}], "]"}]}], 
                    "]"}], ",", 
                    RowBox[{"VilCretas`Private`RcGraficaRRL", "[", 
                    
                    RowBox[{"VilCretas`Private`RcRecurrenci", ",", 
                    "VilCretas`Private`RcCondicione", ",", 
                    RowBox[{"OptionValue", "[", "inicio", "]"}]}], "]"}]}], 
                    "]"}]}], "]"}]}], "]"}]}], "]"}]}]}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"npuntos", "\[Rule]", "10"}], ",", 
                    RowBox[{"ymax", "\[Rule]", "All"}], ",", 
                    RowBox[{"inicio", "\[Rule]", "1"}]}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"VilCretas`GraficaRRL\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Instrucci\[OAcute]n que grafica una \
relaci\[OAcute]n de recurrencia lineal permitiendo al usuario las opciones de \
especificar la cantidad de puntos a representar y un valor m\[AAcute]ximo de \
observaci\[OAcute]n sobre el eje de las ordenadas. Sintaxis: \
GraficaRRL[Coeficientes, Condiciones], siendo \
\[OpenCurlyDoubleQuote]Coeficientes\[CloseCurlyDoubleQuote] un vector de \
coeficientes en orden descendente y/o que contiene la parte no \
homog\[EAcute]nea (en funci\[OAcute]n de \[OpenCurlyDoubleQuote]n\
\[CloseCurlyDoubleQuote]) de la relaci\[OAcute]n de recurrencia como su \
\[UAcute]ltima componente y \[OpenCurlyDoubleQuote]Condiciones\
\[CloseCurlyDoubleQuote] la lista de condiciones iniciales en orden \
ascendente. Adem\[AAcute]s, GraficaRRL[Coeficientes, Condiciones, \
npuntos->Valor, ymax->Valor, inicio->Valor] da las opciones al usuario de \
escoger la cantidad de puntos a graficar, el valor m\[AAcute]ximo de \
visualizaci\[OAcute]n sobre el eje \[OpenCurlyDoubleQuote]y\
\[CloseCurlyDoubleQuote] y el inicio del dominio de la relaci\[OAcute]n de \
recurrencia, respectivamente. \[OpenCurlyDoubleQuote]ymax\
\[CloseCurlyDoubleQuote] acepta el atributo \[OpenCurlyDoubleQuote]All\
\[CloseCurlyDoubleQuote] que muestra todos los puntos involucrados en la \
graficaci\[OAcute]n. Por defecto, \[OpenCurlyDoubleQuote]npuntos->10\
\[CloseCurlyDoubleQuote], \[OpenCurlyDoubleQuote]ymax->All\
\[CloseCurlyDoubleQuote] e \[OpenCurlyDoubleQuote]inicio->1\
\[CloseCurlyDoubleQuote].\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "Instrucci\[OAcute]n que grafica una relaci\[OAcute]n de recurrencia \
lineal permitiendo al usuario las opciones de especificar la cantidad de \
puntos a representar y un valor m\[AAcute]ximo de observaci\[OAcute]n sobre \
el eje de las ordenadas. Sintaxis: GraficaRRL[Coeficientes, Condiciones], \
siendo \[OpenCurlyDoubleQuote]Coeficientes\[CloseCurlyDoubleQuote] un vector \
de coeficientes en orden descendente y/o que contiene la parte no homog\
\[EAcute]nea (en funci\[OAcute]n de \[OpenCurlyDoubleQuote]n\
\[CloseCurlyDoubleQuote]) de la relaci\[OAcute]n de recurrencia como su \
\[UAcute]ltima componente y \[OpenCurlyDoubleQuote]Condiciones\
\[CloseCurlyDoubleQuote] la lista de condiciones iniciales en orden \
ascendente. Adem\[AAcute]s, GraficaRRL[Coeficientes, Condiciones, \
npuntos->Valor, ymax->Valor, inicio->Valor] da las opciones al usuario de \
escoger la cantidad de puntos a graficar, el valor m\[AAcute]ximo de \
visualizaci\[OAcute]n sobre el eje \[OpenCurlyDoubleQuote]y\
\[CloseCurlyDoubleQuote] y el inicio del dominio de la relaci\[OAcute]n de \
recurrencia, respectivamente. \[OpenCurlyDoubleQuote]ymax\
\[CloseCurlyDoubleQuote] acepta el atributo \[OpenCurlyDoubleQuote]All\
\[CloseCurlyDoubleQuote] que muestra todos los puntos involucrados en la \
graficaci\[OAcute]n. Por defecto, \[OpenCurlyDoubleQuote]npuntos->10\
\[CloseCurlyDoubleQuote], \[OpenCurlyDoubleQuote]ymax->All\
\[CloseCurlyDoubleQuote] e \[OpenCurlyDoubleQuote]inicio->1\
\[CloseCurlyDoubleQuote].", "Documentation" -> None, "OwnValues" -> None, 
    "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, VilCretas`GraficaRRL, {VilCretas`GraficaRRL[
         Pattern[VilCretas`Private`RcRecurrenci, 
          Blank[List]], 
         Pattern[VilCretas`Private`RcCondicione, 
          Blank[List]], 
         OptionsPattern[]] :> 
       Module[{VilCretas`Private`RcGraficaRRL, 
          VilCretas`Private`FuncionVariable}, Clear[$CellContext`n]; 
         VilCretas`Private`FuncionVariable[
            Pattern[VilCretas`Private`FuncionVariable, 
             Blank[List]]] := 
          Module[{VilCretas`Private`FuncionVariableAuxiliar, 
             VilCretas`Private`Simbolos, 
             VilCretas`Private`VariableAuxiliarSimbolos, 
             VilCretas`Private`VariableAuxiliarVariables = {}}, 
            VilCretas`Private`FuncionVariableAuxiliar[] := 
             Part[VilCretas`Private`FuncionVariable, 1]; 
            VilCretas`Private`Simbolos[
               Pattern[VilCretas`Private`VariableFuncion, 
                Blank[]]] := DeleteDuplicates[
               Cases[
                DownValues[VilCretas`Private`VariableFuncion], 
                Blank[Symbol], Infinity]]; 
            VilCretas`Private`VariableAuxiliarSimbolos = Sort[
               VilCretas`Private`Simbolos[
               VilCretas`Private`FuncionVariableAuxiliar]]; 
            For[VilCretas`Private`VariableFuncioni = 1, 
              VilCretas`Private`VariableFuncioni <= 
              Length[VilCretas`Private`VariableAuxiliarSimbolos], If[NumericQ[
                  Part[
                  VilCretas`Private`VariableAuxiliarSimbolos, 
                   VilCretas`Private`VariableFuncioni]] == False, 
                VilCretas`Private`VariableAuxiliarVariables = 
                Append[VilCretas`Private`VariableAuxiliarVariables, 
                  Part[
                  VilCretas`Private`VariableAuxiliarSimbolos, 
                   VilCretas`Private`VariableFuncioni]]]; 
              Increment[VilCretas`Private`VariableFuncioni]]; 
            VilCretas`Private`VariableAuxiliarVariables]; 
         VilCretas`Private`RcGraficaRRL[
            Pattern[VilCretas`Private`RcRecurrencia, 
             Blank[List]], 
            Pattern[VilCretas`Private`RcCondiciones, 
             Blank[List]], 
            Pattern[VilCretas`Private`Rcinicio, 
             Blank[]]] := Module[{}, 
            If[
            MemberQ[{
               VilCretas`Private`RcRecurrencia, 
                VilCretas`Private`RcCondiciones}, Null] == False, 
             If[
              And[
               VectorQ[VilCretas`Private`RcRecurrencia], 
               VectorQ[VilCretas`Private`RcCondiciones, NumericQ]], 
              If[
               And[
               MemberQ[VilCretas`Private`RcRecurrencia, Null] == False, 
                MemberQ[VilCretas`Private`RcCondiciones, Null] == False], 
               If[
                And[
                VilCretas`Private`RcRecurrencia != {}, 
                 VilCretas`Private`RcCondiciones != {}], 
                
                Module[{VilCretas`Private`RcLastSuma3}, 
                 Clear[VilCretas`Private`Rca3]; If[Length[
                    VilCretas`Private`FuncionVariable[
                    VilCretas`Private`RcRecurrencia]] == 1, 
                   If[
                    MemberQ[
                    Map[ToString, 
                    VilCretas`Private`FuncionVariable[
                    VilCretas`Private`RcRecurrencia]], "n"], 
                    If[
                    Length[VilCretas`Private`RcRecurrencia] - 1 == 
                    Length[VilCretas`Private`RcCondiciones], 
                    VilCretas`Private`RcVl10[
                    Pattern[VilCretas`Private`n, 
                    Blank[]]] := ReplaceAll[
                    Sum[
                    Part[VilCretas`Private`RcRecurrencia, 
                    VilCretas`Private`Rci4] 
                    VilCretas`Private`Rca3[
                    VilCretas`Private`n - VilCretas`Private`Rci4], {
                    VilCretas`Private`Rci4, 1, 
                    Length[VilCretas`Private`RcRecurrencia] - 
                    1}], $CellContext`n -> VilCretas`Private`n]; 
                    VilCretas`Private`RcLastSuma3[
                    Pattern[VilCretas`Private`n, 
                    Blank[]]] := ReplaceAll[
                    Last[VilCretas`Private`RcRecurrencia], $CellContext`n -> 
                    VilCretas`Private`n]; 
                    For[VilCretas`Private`Rci4 = 1, VilCretas`Private`Rci4 <= 
                    Length[VilCretas`Private`RcCondiciones], 
                    VilCretas`Private`Rca3[
                    VilCretas`Private`Rci4 + VilCretas`Private`Rcinicio - 1] = 
                    Part[VilCretas`Private`RcCondiciones, 
                    VilCretas`Private`Rci4]; 
                    Increment[VilCretas`Private`Rci4]]; VilCretas`Private`Rca3[
                    Pattern[VilCretas`Private`n, 
                    Blank[]]] := 
                    VilCretas`Private`RcLastSuma3[VilCretas`Private`n] + 
                    VilCretas`Private`RcVl10[VilCretas`Private`n]; 
                    DiscretePlot[
                    VilCretas`Private`Rca3[VilCretas`Private`n], {
                    VilCretas`Private`n, VilCretas`Private`Rcinicio, 
                    OptionValue[VilCretas`npuntos] + 
                    VilCretas`Private`Rcinicio - 1}, PlotRange -> 
                    OptionValue[VilCretas`ymax], FillingStyle -> Green, 
                    PlotStyle -> PointSize[0.02], AxesOrigin -> {0, 0}], 
                    If[
                    Length[VilCretas`Private`RcRecurrencia] == 
                    Length[VilCretas`Private`RcCondiciones], 
                    VilCretas`Private`RcVl10[
                    Pattern[VilCretas`Private`n, 
                    Blank[]]] := ReplaceAll[
                    Sum[
                    Part[VilCretas`Private`RcRecurrencia, 
                    VilCretas`Private`Rci4] 
                    VilCretas`Private`Rca3[
                    VilCretas`Private`n - VilCretas`Private`Rci4], {
                    VilCretas`Private`Rci4, 1, 
                    Length[VilCretas`Private`RcRecurrencia]}], $CellContext`n -> 
                    VilCretas`Private`n]; 
                    For[VilCretas`Private`Rci4 = 1, VilCretas`Private`Rci4 <= 
                    Length[VilCretas`Private`RcCondiciones], 
                    VilCretas`Private`Rca3[
                    VilCretas`Private`Rci4 + VilCretas`Private`Rcinicio - 1] = 
                    Part[VilCretas`Private`RcCondiciones, 
                    VilCretas`Private`Rci4]; 
                    Increment[VilCretas`Private`Rci4]]; VilCretas`Private`Rca3[
                    Pattern[VilCretas`Private`n, 
                    Blank[]]] := 
                    VilCretas`Private`RcVl10[VilCretas`Private`n]; 
                    DiscretePlot[
                    VilCretas`Private`Rca3[VilCretas`Private`n], {
                    VilCretas`Private`n, VilCretas`Private`Rcinicio, 
                    OptionValue[VilCretas`npuntos] + 
                    VilCretas`Private`Rcinicio - 1}, PlotRange -> 
                    OptionValue[VilCretas`ymax], FillingStyle -> Green, 
                    PlotStyle -> PointSize[0.02], AxesOrigin -> {0, 0}]]]], 
                   If[Length[
                    VilCretas`Private`FuncionVariable[
                    VilCretas`Private`RcRecurrencia]] == 0, 
                    If[
                    Length[VilCretas`Private`RcRecurrencia] - 1 == 
                    Length[VilCretas`Private`RcCondiciones], 
                    VilCretas`Private`RcVl10[
                    Pattern[VilCretas`Private`n, 
                    Blank[]]] := 
                    Sum[Part[
                    VilCretas`Private`RcRecurrencia, VilCretas`Private`Rci4] 
                    VilCretas`Private`Rca3[
                    VilCretas`Private`n - VilCretas`Private`Rci4], {
                    VilCretas`Private`Rci4, 1, 
                    Length[VilCretas`Private`RcRecurrencia] - 1}] + 
                    Last[VilCretas`Private`RcRecurrencia]; 
                    For[VilCretas`Private`Rci4 = 1, VilCretas`Private`Rci4 <= 
                    Length[VilCretas`Private`RcCondiciones], 
                    VilCretas`Private`Rca3[
                    VilCretas`Private`Rci4 + VilCretas`Private`Rcinicio - 1] = 
                    Part[VilCretas`Private`RcCondiciones, 
                    VilCretas`Private`Rci4]; 
                    Increment[VilCretas`Private`Rci4]]; VilCretas`Private`Rca3[
                    Pattern[VilCretas`Private`n, 
                    Blank[]]] := 
                    VilCretas`Private`RcVl10[VilCretas`Private`n]; 
                    DiscretePlot[
                    VilCretas`Private`Rca3[VilCretas`Private`n], {
                    VilCretas`Private`n, VilCretas`Private`Rcinicio, 
                    OptionValue[VilCretas`npuntos] + 
                    VilCretas`Private`Rcinicio - 1}, PlotRange -> 
                    OptionValue[VilCretas`ymax], FillingStyle -> Green, 
                    PlotStyle -> PointSize[0.02], AxesOrigin -> {0, 0}], 
                    If[
                    Length[VilCretas`Private`RcRecurrencia] == 
                    Length[VilCretas`Private`RcCondiciones], 
                    VilCretas`Private`RcVl10[
                    Pattern[VilCretas`Private`n, 
                    Blank[]]] := 
                    Sum[Part[
                    VilCretas`Private`RcRecurrencia, VilCretas`Private`Rci4] 
                    VilCretas`Private`Rca3[
                    VilCretas`Private`n - VilCretas`Private`Rci4], {
                    VilCretas`Private`Rci4, 1, 
                    Length[VilCretas`Private`RcRecurrencia]}]; 
                    For[VilCretas`Private`Rci4 = 1, VilCretas`Private`Rci4 <= 
                    Length[VilCretas`Private`RcCondiciones], 
                    VilCretas`Private`Rca3[
                    VilCretas`Private`Rci4 + VilCretas`Private`Rcinicio - 1] = 
                    Part[VilCretas`Private`RcCondiciones, 
                    VilCretas`Private`Rci4]; 
                    Increment[VilCretas`Private`Rci4]]; VilCretas`Private`Rca3[
                    Pattern[VilCretas`Private`n, 
                    Blank[]]] := 
                    VilCretas`Private`RcVl10[VilCretas`Private`n]; 
                    DiscretePlot[
                    VilCretas`Private`Rca3[VilCretas`Private`n], {
                    VilCretas`Private`n, VilCretas`Private`Rcinicio, 
                    OptionValue[VilCretas`npuntos] + 
                    VilCretas`Private`Rcinicio - 1}, PlotRange -> 
                    OptionValue[VilCretas`ymax], FillingStyle -> Green, 
                    PlotStyle -> PointSize[0.02], 
                    AxesOrigin -> {0, 0}]]]]]]]]]]]; If[
           IntegerQ[
            OptionValue[VilCretas`inicio]], 
           If[
            And[
             IntegerQ[
              OptionValue[VilCretas`npuntos]], 
             Or[
              NumericQ[
               OptionValue[VilCretas`ymax]], ToString[
                OptionValue[VilCretas`ymax]] == ToString[All]]], 
            If[
             And[
             OptionValue[VilCretas`inicio] >= 0, 
              OptionValue[VilCretas`npuntos] >= 1], 
             If[ToString[
                OptionValue[VilCretas`ymax]] != ToString[All], 
              If[OptionValue[VilCretas`ymax] > 1, 
               VilCretas`Private`RcGraficaRRL[
               VilCretas`Private`RcRecurrenci, VilCretas`Private`RcCondicione, 
                OptionValue[VilCretas`inicio]]], 
              VilCretas`Private`RcGraficaRRL[
              VilCretas`Private`RcRecurrenci, VilCretas`Private`RcCondicione, 
               OptionValue[VilCretas`inicio]]]]]]]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {
     VilCretas`npuntos -> 10, VilCretas`ymax -> All, VilCretas`inicio -> 1}, 
    "Attributes" -> {Protected}, "FullName" -> "VilCretas`GraficaRRL"|>, 
   False]]], "Output",
 CellChangeTimes->{3.950784550876343*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"479e8389-bfb9-f247-9a33-623b934cdd29"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraficaRRL", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", "4"}], "}"}], ",", 
   RowBox[{"{", "5", "}"}], ",", " ", 
   RowBox[{"npuntos", "->", "20"}], ",", " ", 
   RowBox[{"inicio", "->", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.950784562056278*^9, 3.950784570212019*^9}, {
  3.950784704444109*^9, 3.9507847106370583`*^9}, {3.950784780985901*^9, 
  3.950784783222595*^9}, {3.9507848829764385`*^9, 3.950784900009897*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"a4fee322-3ddb-4b48-b961-086ac2319963"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.02], 
     AbsoluteThickness[2], 
     TagBox[{
       {RGBColor[0, 1, 0], PointSize[0.02], AbsoluteThickness[2], Opacity[
        0.2], LineBox[CompressedData["
1:eJxTTMoPSmVmYGDgAmImKIaAD/YQ2uQAKh8GOBwgdMkBVD4MiED5Ww6g8mFA
Bsr/cgCVDwNKUL7JQVQ+DKjB7D+IyocBLZj9B1H5MKAHs/8gKh8GDGH2H0Ll
w4AxzP5DqHwGBgDFPhfh
         "],
         VertexColors->None]}, 
       {RGBColor[0, 1, 0], PointSize[0.02], AbsoluteThickness[2], Opacity[
        0.2], LineBox[CompressedData["
1:eJxTTMoPSmVmYGDgAmImKEYFIg4YQhAAFQ9xQOXDgACUP8UBlQ8DElD+FQdU
PgwoQPkijqh8GFCB2e+IyocBDZj9jqh8GNCB2e+IyocBA5j9Tqh8GDCC2e+E
ymdgAADZjw8P
         "],
         VertexColors->None]}},
      Annotation[#, "Charting`Private`Tag$39957#1"]& ]}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.02], 
      AbsoluteThickness[2], {}, PointBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQjQpEHCD0B3sIbXIAKgEVD4HSHFC6BCovAOVPcUA1
ZwtUXgLKvwKlZaD0F6i8AkyfI4RWgvJNDkJoFZj9UHk1mP1QeQ2Y/VB5LZj9
UHkdmP1QeT2Y/VB5A5j9ThDaEGb/IQhtBLMfKm8Ms/8QAIBhHS8=
       "]], {}},
     Annotation[#, "Charting`Private`Tag$39957#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{0, 19.}, {-1.37438953472*^12, 3.4359738368*^11}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.950784900871847*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"acbaa024-18e3-b743-8e25-aacd47800eea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RT", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", "4"}], "}"}], ",", 
   RowBox[{"{", "5", "}"}], ",", "20", ",", " ", 
   RowBox[{"inicio", "->", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9507852257374935`*^9, 3.950785251850912*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"8e3232a9-4b8b-b340-a67b-898b2e57c0ba"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", 
   RowBox[{"-", "20"}], ",", "80", ",", 
   RowBox[{"-", "320"}], ",", "1280", ",", 
   RowBox[{"-", "5120"}], ",", "20480", ",", 
   RowBox[{"-", "81920"}], ",", "327680", ",", 
   RowBox[{"-", "1310720"}], ",", "5242880", ",", 
   RowBox[{"-", "20971520"}], ",", "83886080", ",", 
   RowBox[{"-", "335544320"}], ",", "1342177280", ",", 
   RowBox[{"-", "5368709120"}], ",", "21474836480", ",", 
   RowBox[{"-", "85899345920"}], ",", "343597383680", ",", 
   RowBox[{"-", "1374389534720"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9507852904982147`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"dc7c28ee-2720-744f-8670-b1d55d8a8bf1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"GraficaRRL", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"3", "n"}], ",", 
     RowBox[{"3", "^", "n"}]}], "}"}], ",", 
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"npuntos", "->", "20"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"RT", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"3", "n"}], ",", 
     RowBox[{"3", "^", "n"}]}], "}"}], ",", 
   RowBox[{"{", "1", "}"}], ",", "20"}], "]"}]}], "Input",
 CellChangeTimes->{{3.950785328001072*^9, 3.9507853325575047`*^9}, {
  3.9507853839721355`*^9, 3.9507854009304867`*^9}, {3.9507855570092144`*^9, 
  3.950785592087263*^9}, {3.950786161125761*^9, 3.9507861779706154`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"24898f85-4218-8941-b9a8-96542dd35756"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.02], 
     AbsoluteThickness[2], 
     TagBox[{
       {RGBColor[0, 1, 0], PointSize[0.02], AbsoluteThickness[2], Opacity[
        0.2], LineBox[{},
         VertexColors->None]}, 
       {RGBColor[0, 1, 0], PointSize[0.02], AbsoluteThickness[2], Opacity[
        0.2], LineBox[CompressedData["
1:eJxTTMoPSmVmYGAQAWImKIaAD/bYaThwgFB6Dqh8GOCA8B1SHFD4cCAA4S+Z
74DChwMRML/h2V0HZD4CSID5UdcVHJH5CCAD4jdsl05zROIjAQUQ3/HxlA2O
SHwkoATkP/B2+f3bEcFHBioODA1lVROsvZzgfBSg5sCgIMWZyzvbCc5HARoO
Co8cVkvlv3OC8VHltRy2bk532NLt5Azjo8rrOJy275wSEz7DGcZHlddz6Oor
kMiV/egM46PKGzhIXF+xRHmNpwuMjypv6FDWbZauU7rEBcZHlTdyWMsqVn7X
idEVxkeVN3aQtpKvkdof5wrjo8qbOFS5xV7RuLzHFcaHyQAA0ntF0A==
         "],
         VertexColors->None]}},
      Annotation[#, "Charting`Private`Tag$373457#1"]& ]}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.02], 
      AbsoluteThickness[2], {}, PointBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7FFpBgcIpQelOSC0QwqULwChl8yH8kXAdMOz
u1C+BJiOuq7gCOHLgPgN26XToHwFEN/x8ZQNUL4SkP/A2+X3byhfxYGhoaxq
grWXE4Sv5sCgIMWZyzsbytdwUHjksFoq/x2Ur+WwdXO6w5ZuJ2cIX8fhtH3n
lJjwGc4wf3T1FUjkyn6E8g0cJK6vWKK8xtMFwjd0KOs2S9cpXQLlGzmsZRUr
v+vE6ArhGztIW8nXSO2Pg/JNHKrcYq9oXN7jCgBNvj1M
       "]], {}},
     Annotation[#, "Charting`Private`Tag$373457#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{0, 20.}, {0, 8.920856435026601*^27}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.9507856197599163`*^9, 3.9507861786775208`*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"fe19f13d-fd72-204b-a958-1b418c158a7c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "15", ",", "162", ",", "2025", ",", "30618", ",", "551853", ",", 
   "11591100", ",", "278192961", ",", "7511229630", ",", "225336947949", ",", 
   "7436119459464", ",", "267700301072145", ",", "10440311743407978", ",", 
   "438493093227918045", ",", "19732189195270660932", ",", 
   "947145081373034771457", ",", "48304399150024902484470", ",", 
   "2608437554101345121581869", ",", "148680940583776673092428000", ",", 
   "8920856435026600389032464401"}], "}"}]], "Output",
 CellChangeTimes->{3.9507856197599163`*^9, 3.950786178706169*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"b42f7c13-9930-6742-b6f9-93895f30cd8f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "PruebaADAGrafica"}]], "Input",
 CellChangeTimes->{{3.95078583785635*^9, 3.950785844192814*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"07d62ec7-b2e9-f545-9b64-40760952c4d7"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Analiza gr\[AAcute]ficamente la eficiencia de dos o \
m\[AAcute]s algoritmos que resuelven el mismo problema, en t\[EAcute]rminos \
de los tiempos de salida registrados por el software Mathematica. Sintaxis: \
PruebaADAGrafica[{Metodo1, ..., MetodoN}, k, inicio, incremento], o bien, \
PruebaADAGrafica[{Metodo1, ..., MetodoN}, k, inicio, incremento, \
lista->True]. \[OpenCurlyDoubleQuote]lista->True\[CloseCurlyDoubleQuote] \
indica que los m\[EAcute]todos reciben como par\[AAcute]metros una lista \
(internamente las listas son generadas de forma pseudoaleatoria).\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"PruebaADAGrafica", "[", 
                    
                    RowBox[{
                    "VilCretas`Private`AlFunciones_List", ",", 
                    "VilCretas`Private`AlPruebas_", ",", 
                    "VilCretas`Private`AlInicio_", ",", 
                    RowBox[{"VilCretas`Private`AlIncremento_", ":", "1"}], 
                    ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"VilCretas`Private`PruebaADA", ",", 
                    "VilCretas`Private`PruebaADAL"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"VilCretas`Private`PruebaADA", "[", 
                    
                    RowBox[{"VilCretas`Private`AlFuncion_List", ",", 
                    "VilCretas`Private`AlPrueba_", ",", 
                    "VilCretas`Private`AlIni_", ",", 
                    "VilCretas`Private`AlIncre_"}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`ListaPADA", "=", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"VilCretas`Private`PADABandera", "=", "True"}], 
                    ",", "VilCretas`Private`AliPADA", ",", 
                    "VilCretas`Private`Ali24"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"NumericQ", "[", 
                    RowBox[{
                    
                    RowBox[{"VilCretas`Private`AlFuncion", 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                    "[", "VilCretas`Private`AlIni", "]"}], "]"}], ",", 
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`AliPADA", "=", "1"}], ",", 
                    RowBox[{"VilCretas`Private`AliPADA", "\[LessEqual]", 
                    
                    RowBox[{"Length", "[", "VilCretas`Private`AlFuncion", 
                    "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`ListaPADA", "=", 
                    RowBox[{"Append", "[", 
                    RowBox[{"VilCretas`Private`ListaPADA", ",", 
                    RowBox[{
                    
                    RowBox[{"VilCretas`Private`AlFuncion", 
                    "\[LeftDoubleBracket]", "VilCretas`Private`AliPADA", 
                    "\[RightDoubleBracket]"}], "[", "VilCretas`Private`AlIni",
                     "]"}]}], "]"}]}], ";", 
                    RowBox[{"VilCretas`Private`AliPADA", "++"}]}]}], "]"}], 
                    ",", 
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`AliPADA", "=", "1"}], ",", 
                    RowBox[{"VilCretas`Private`AliPADA", "\[LessEqual]", 
                    
                    RowBox[{"Length", "[", "VilCretas`Private`AlFuncion", 
                    "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"VectorQ", "[", 
                    RowBox[{
                    
                    RowBox[{"VilCretas`Private`AlFuncion", 
                    "\[LeftDoubleBracket]", "VilCretas`Private`AliPADA", 
                    "\[RightDoubleBracket]"}], "[", "VilCretas`Private`AlIni",
                     "]"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`PADABandera", "=", "False"}], 
                    ";", 
                    RowBox[{"Break", "[", "]"}]}]}], "]"}], ";", 
                    RowBox[{"VilCretas`Private`AliPADA", "++"}]}]}], "]"}]}], 
                    "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"VectorQ", "[", 
                    RowBox[{"VilCretas`Private`ListaPADA", ",", "NumericQ"}], 
                    "]"}], "||", 
                    
                    RowBox[{"VilCretas`Private`PADABandera", "\[Equal]", 
                    "True"}]}], ",", 
                    RowBox[{
                    RowBox[{"ClearSystemCache", "[", "]"}], ";", 
                    RowBox[{"VilCretas`Private`ListaPADA", "=", 
                    RowBox[{"{", "}"}]}], ";", 
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`AliPADA", "=", "1"}], ",", 
                    RowBox[{"VilCretas`Private`AliPADA", "\[LessEqual]", 
                    
                    RowBox[{"Length", "[", "VilCretas`Private`AlFuncion", 
                    "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`ListaPADA", "=", 
                    RowBox[{"Append", "[", 
                    RowBox[{"VilCretas`Private`ListaPADA", ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"First", "[", 
                    RowBox[{"RepeatedTiming", "[", 
                    RowBox[{
                    
                    RowBox[{"VilCretas`Private`AlFuncion", 
                    "\[LeftDoubleBracket]", "VilCretas`Private`AliPADA", 
                    "\[RightDoubleBracket]"}], "[", "VilCretas`Private`Ali24",
                     "]"}], "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"VilCretas`Private`Ali24", ",", 
                    "VilCretas`Private`AlIni", ",", 
                    "VilCretas`Private`AlPrueba", ",", 
                    "VilCretas`Private`AlIncre"}], "}"}]}], "]"}]}], "]"}]}], 
                    ";", 
                    RowBox[{"VilCretas`Private`AliPADA", "++"}]}]}], "]"}], 
                    ";", 
                    RowBox[{"ListLinePlot", "[", 
                    RowBox[{"VilCretas`Private`ListaPADA", ",", 
                    RowBox[{"PlotLabels", "\[Rule]", 
                    
                    RowBox[{"ToString", "/@", 
                    "VilCretas`Private`AlFuncion"}]}]}], "]"}]}]}], "]"}]}]}],
                     "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`PruebaADAL", "[", 
                    
                    RowBox[{"VilCretas`Private`AlFuncion_List", ",", 
                    "VilCretas`Private`AlPrueba_", ",", 
                    "VilCretas`Private`AlIni_", ",", 
                    "VilCretas`Private`AlIncre_"}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"VilCretas`Private`AlRandomEnteros", ",", 
                    RowBox[{"VilCretas`Private`ListaPADA", "=", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"VilCretas`Private`PADABandera", "=", "True"}], 
                    ",", "VilCretas`Private`AliPADA", ",", 
                    "VilCretas`Private`Ali24"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"VilCretas`Private`AlRandomEnteros", "[", 
                    "VilCretas`Private`Aln_", "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "VilCretas`Private`AlList14", "}"}], ",", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`AlList14", "=", 
                    RowBox[{"RandomInteger", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "VilCretas`Private`Aln"}], "}"}], ",", 
                    "VilCretas`Private`Aln"}], "]"}]}], ";", 
                    "VilCretas`Private`AlList14"}]}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"NumericQ", "[", 
                    RowBox[{
                    
                    RowBox[{"VilCretas`Private`AlFuncion", 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                    "[", 
                    
                    RowBox[{"VilCretas`Private`AlRandomEnteros", "[", 
                    "VilCretas`Private`AlIni", "]"}], "]"}], "]"}], ",", 
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`AliPADA", "=", "1"}], ",", 
                    RowBox[{"VilCretas`Private`AliPADA", "\[LessEqual]", 
                    
                    RowBox[{"Length", "[", "VilCretas`Private`AlFuncion", 
                    "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`ListaPADA", "=", 
                    RowBox[{"Append", "[", 
                    RowBox[{"VilCretas`Private`ListaPADA", ",", 
                    RowBox[{
                    
                    RowBox[{"VilCretas`Private`AlFuncion", 
                    "\[LeftDoubleBracket]", "VilCretas`Private`AliPADA", 
                    "\[RightDoubleBracket]"}], "[", 
                    
                    RowBox[{"VilCretas`Private`AlRandomEnteros", "[", 
                    "VilCretas`Private`AlIni", "]"}], "]"}]}], "]"}]}], ";", 
                    RowBox[{"VilCretas`Private`AliPADA", "++"}]}]}], "]"}], 
                    ",", 
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`AliPADA", "=", "1"}], ",", 
                    RowBox[{"VilCretas`Private`AliPADA", "\[LessEqual]", 
                    
                    RowBox[{"Length", "[", "VilCretas`Private`AlFuncion", 
                    "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"VectorQ", "[", 
                    RowBox[{
                    
                    RowBox[{"VilCretas`Private`AlFuncion", 
                    "\[LeftDoubleBracket]", "VilCretas`Private`AliPADA", 
                    "\[RightDoubleBracket]"}], "[", 
                    
                    RowBox[{"VilCretas`Private`AlRandomEnteros", "[", 
                    "VilCretas`Private`AlIni", "]"}], "]"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`PADABandera", "=", "False"}], 
                    ";", 
                    RowBox[{"Break", "[", "]"}]}]}], "]"}], ";", 
                    RowBox[{"VilCretas`Private`AliPADA", "++"}]}]}], "]"}]}], 
                    "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"VectorQ", "[", 
                    RowBox[{"VilCretas`Private`ListaPADA", ",", "NumericQ"}], 
                    "]"}], "||", 
                    
                    RowBox[{"VilCretas`Private`PADABandera", "\[Equal]", 
                    "True"}]}], ",", 
                    RowBox[{
                    RowBox[{"ClearSystemCache", "[", "]"}], ";", 
                    RowBox[{"VilCretas`Private`ListaPADA", "=", 
                    RowBox[{"{", "}"}]}], ";", 
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`AliPADA", "=", "1"}], ",", 
                    RowBox[{"VilCretas`Private`AliPADA", "\[LessEqual]", 
                    
                    RowBox[{"Length", "[", "VilCretas`Private`AlFuncion", 
                    "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`ListaPADA", "=", 
                    RowBox[{"Append", "[", 
                    RowBox[{"VilCretas`Private`ListaPADA", ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"First", "[", 
                    RowBox[{"RepeatedTiming", "[", 
                    RowBox[{
                    
                    RowBox[{"VilCretas`Private`AlFuncion", 
                    "\[LeftDoubleBracket]", "VilCretas`Private`AliPADA", 
                    "\[RightDoubleBracket]"}], "[", 
                    
                    RowBox[{"VilCretas`Private`AlRandomEnteros", "[", 
                    "VilCretas`Private`Ali24", "]"}], "]"}], "]"}], "]"}], 
                    ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"VilCretas`Private`Ali24", ",", 
                    "VilCretas`Private`AlIni", ",", 
                    "VilCretas`Private`AlPrueba", ",", 
                    "VilCretas`Private`AlIncre"}], "}"}]}], "]"}]}], "]"}]}], 
                    ";", 
                    RowBox[{"VilCretas`Private`AliPADA", "++"}]}]}], "]"}], 
                    ";", 
                    RowBox[{"ListLinePlot", "[", 
                    RowBox[{"VilCretas`Private`ListaPADA", ",", 
                    RowBox[{"PlotLabels", "\[Rule]", 
                    
                    RowBox[{"ToString", "/@", 
                    "VilCretas`Private`AlFuncion"}]}]}], "]"}]}]}], "]"}]}]}],
                     "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    
                    RowBox[{"VectorQ", "[", "VilCretas`Private`AlFunciones", 
                    "]"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"VilCretas`Private`AlFunciones", ",", "Null"}], 
                    "]"}], "\[Equal]", "False"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"Length", "[", "VilCretas`Private`AlFunciones", 
                    "]"}], "\[GreaterEqual]", "2"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"IntegerQ", "[", "VilCretas`Private`AlPruebas", 
                    "]"}], "&&", 
                    
                    RowBox[{"VilCretas`Private`AlPruebas", "\[GreaterEqual]", 
                    "1"}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"IntegerQ", "[", "VilCretas`Private`AlInicio", 
                    "]"}], "&&", 
                    
                    RowBox[{"VilCretas`Private`AlInicio", "\[GreaterEqual]", 
                    "1"}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"IntegerQ", "[", "VilCretas`Private`AlIncremento",
                     "]"}], "&&", 
                    
                    RowBox[{"VilCretas`Private`AlIncremento", 
                    "\[GreaterEqual]", "1"}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"BooleanQ", "[", 
                    RowBox[{"OptionValue", "[", "lista", "]"}], "]"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "lista", "]"}], ",", 
                    RowBox[{"VilCretas`Private`PruebaADAL", "[", 
                    
                    RowBox[{"VilCretas`Private`AlFunciones", ",", 
                    "VilCretas`Private`AlPruebas", ",", 
                    "VilCretas`Private`AlInicio", ",", 
                    "VilCretas`Private`AlIncremento"}], "]"}], ",", 
                    RowBox[{"VilCretas`Private`PruebaADA", "[", 
                    
                    RowBox[{"VilCretas`Private`AlFunciones", ",", 
                    "VilCretas`Private`AlPruebas", ",", 
                    "VilCretas`Private`AlInicio", ",", 
                    "VilCretas`Private`AlIncremento"}], "]"}]}], "]"}]}], 
                    "]"}]}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], 
                    "]"}]}]}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                   RowBox[{"lista", "\[Rule]", "False"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"VilCretas`PruebaADAGrafica\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Analiza gr\[AAcute]ficamente la eficiencia de dos o \
m\[AAcute]s algoritmos que resuelven el mismo problema, en t\[EAcute]rminos \
de los tiempos de salida registrados por el software Mathematica. Sintaxis: \
PruebaADAGrafica[{Metodo1, ..., MetodoN}, k, inicio, incremento], o bien, \
PruebaADAGrafica[{Metodo1, ..., MetodoN}, k, inicio, incremento, \
lista->True]. \[OpenCurlyDoubleQuote]lista->True\[CloseCurlyDoubleQuote] \
indica que los m\[EAcute]todos reciben como par\[AAcute]metros una lista \
(internamente las listas son generadas de forma pseudoaleatoria).\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "Analiza gr\[AAcute]ficamente la eficiencia de dos o m\[AAcute]s \
algoritmos que resuelven el mismo problema, en t\[EAcute]rminos de los \
tiempos de salida registrados por el software Mathematica. Sintaxis: \
PruebaADAGrafica[{Metodo1, ..., MetodoN}, k, inicio, incremento], o bien, \
PruebaADAGrafica[{Metodo1, ..., MetodoN}, k, inicio, incremento, \
lista->True]. \[OpenCurlyDoubleQuote]lista->True\[CloseCurlyDoubleQuote] \
indica que los m\[EAcute]todos reciben como par\[AAcute]metros una lista \
(internamente las listas son generadas de forma pseudoaleatoria).", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, VilCretas`PruebaADAGrafica, {VilCretas`PruebaADAGrafica[
         Pattern[VilCretas`Private`AlFunciones, 
          Blank[List]], 
         Pattern[VilCretas`Private`AlPruebas, 
          Blank[]], 
         Pattern[VilCretas`Private`AlInicio, 
          Blank[]], 
         Optional[
          Pattern[VilCretas`Private`AlIncremento, 
           Blank[]], 1], 
         OptionsPattern[]] :> 
       Module[{VilCretas`Private`PruebaADA, VilCretas`Private`PruebaADAL}, 
         VilCretas`Private`PruebaADA[
            Pattern[VilCretas`Private`AlFuncion, 
             Blank[List]], 
            Pattern[VilCretas`Private`AlPrueba, 
             Blank[]], 
            Pattern[VilCretas`Private`AlIni, 
             Blank[]], 
            Pattern[VilCretas`Private`AlIncre, 
             Blank[]]] := 
          Module[{VilCretas`Private`ListaPADA = {}, 
             VilCretas`Private`PADABandera = True, VilCretas`Private`AliPADA, 
             VilCretas`Private`Ali24}, If[
              NumericQ[
               Part[VilCretas`Private`AlFuncion, 1][VilCretas`Private`AlIni]], 
              For[
              VilCretas`Private`AliPADA = 1, VilCretas`Private`AliPADA <= 
               Length[VilCretas`Private`AlFuncion], 
               VilCretas`Private`ListaPADA = 
                Append[VilCretas`Private`ListaPADA, 
                  Part[
                  VilCretas`Private`AlFuncion, VilCretas`Private`AliPADA][
                  VilCretas`Private`AlIni]]; 
               Increment[VilCretas`Private`AliPADA]], 
              For[
              VilCretas`Private`AliPADA = 1, VilCretas`Private`AliPADA <= 
               Length[VilCretas`Private`AlFuncion], If[
                 Not[
                  VectorQ[
                   Part[
                   VilCretas`Private`AlFuncion, VilCretas`Private`AliPADA][
                   VilCretas`Private`AlIni]]], 
                 VilCretas`Private`PADABandera = False; Break[]]; 
               Increment[VilCretas`Private`AliPADA]]]; If[
              Or[
               VectorQ[VilCretas`Private`ListaPADA, NumericQ], 
               VilCretas`Private`PADABandera == True], ClearSystemCache[]; 
              VilCretas`Private`ListaPADA = {}; 
              For[VilCretas`Private`AliPADA = 1, VilCretas`Private`AliPADA <= 
                Length[VilCretas`Private`AlFuncion], 
                VilCretas`Private`ListaPADA = 
                 Append[VilCretas`Private`ListaPADA, 
                   Table[
                    First[
                    RepeatedTiming[
                    Part[
                    VilCretas`Private`AlFuncion, VilCretas`Private`AliPADA][
                    VilCretas`Private`Ali24]]], {
                    VilCretas`Private`Ali24, VilCretas`Private`AlIni, 
                    VilCretas`Private`AlPrueba, VilCretas`Private`AlIncre}]]; 
                Increment[VilCretas`Private`AliPADA]]; 
              ListLinePlot[
               VilCretas`Private`ListaPADA, PlotLabels -> 
                Map[ToString, VilCretas`Private`AlFuncion]]]]; 
         VilCretas`Private`PruebaADAL[
            Pattern[VilCretas`Private`AlFuncion, 
             Blank[List]], 
            Pattern[VilCretas`Private`AlPrueba, 
             Blank[]], 
            Pattern[VilCretas`Private`AlIni, 
             Blank[]], 
            Pattern[VilCretas`Private`AlIncre, 
             Blank[]]] := 
          Module[{VilCretas`Private`AlRandomEnteros, 
             VilCretas`Private`ListaPADA = {}, VilCretas`Private`PADABandera = 
             True, VilCretas`Private`AliPADA, VilCretas`Private`Ali24}, 
            VilCretas`Private`AlRandomEnteros[
               Pattern[VilCretas`Private`Aln, 
                Blank[]]] := 
             Module[{VilCretas`Private`AlList14}, 
               VilCretas`Private`AlList14 = 
                RandomInteger[{1, VilCretas`Private`Aln}, 
                  VilCretas`Private`Aln]; VilCretas`Private`AlList14]; If[
              NumericQ[
               Part[VilCretas`Private`AlFuncion, 1][
                VilCretas`Private`AlRandomEnteros[VilCretas`Private`AlIni]]], 
              For[
              VilCretas`Private`AliPADA = 1, VilCretas`Private`AliPADA <= 
               Length[VilCretas`Private`AlFuncion], 
               VilCretas`Private`ListaPADA = 
                Append[VilCretas`Private`ListaPADA, 
                  Part[VilCretas`Private`AlFuncion, VilCretas`Private`AliPADA][
                   VilCretas`Private`AlRandomEnteros[
                   VilCretas`Private`AlIni]]]; 
               Increment[VilCretas`Private`AliPADA]], 
              For[
              VilCretas`Private`AliPADA = 1, VilCretas`Private`AliPADA <= 
               Length[VilCretas`Private`AlFuncion], If[
                 Not[
                  VectorQ[
                   Part[
                   VilCretas`Private`AlFuncion, VilCretas`Private`AliPADA][
                    VilCretas`Private`AlRandomEnteros[
                    VilCretas`Private`AlIni]]]], 
                 VilCretas`Private`PADABandera = False; Break[]]; 
               Increment[VilCretas`Private`AliPADA]]]; If[
              Or[
               VectorQ[VilCretas`Private`ListaPADA, NumericQ], 
               VilCretas`Private`PADABandera == True], ClearSystemCache[]; 
              VilCretas`Private`ListaPADA = {}; 
              For[VilCretas`Private`AliPADA = 1, VilCretas`Private`AliPADA <= 
                Length[VilCretas`Private`AlFuncion], 
                VilCretas`Private`ListaPADA = 
                 Append[VilCretas`Private`ListaPADA, 
                   Table[
                    First[
                    RepeatedTiming[
                    Part[
                    VilCretas`Private`AlFuncion, VilCretas`Private`AliPADA][
                    VilCretas`Private`AlRandomEnteros[
                    VilCretas`Private`Ali24]]]], {
                    VilCretas`Private`Ali24, VilCretas`Private`AlIni, 
                    VilCretas`Private`AlPrueba, VilCretas`Private`AlIncre}]]; 
                Increment[VilCretas`Private`AliPADA]]; 
              ListLinePlot[
               VilCretas`Private`ListaPADA, PlotLabels -> 
                Map[ToString, VilCretas`Private`AlFuncion]]]]; If[
           VectorQ[VilCretas`Private`AlFunciones], 
           If[MemberQ[VilCretas`Private`AlFunciones, Null] == False, 
            If[Length[VilCretas`Private`AlFunciones] >= 2, 
             If[
              And[
               IntegerQ[VilCretas`Private`AlPruebas], 
               VilCretas`Private`AlPruebas >= 1], 
              If[
               And[
                IntegerQ[VilCretas`Private`AlInicio], 
                VilCretas`Private`AlInicio >= 1], 
               If[
                And[
                 IntegerQ[VilCretas`Private`AlIncremento], 
                 VilCretas`Private`AlIncremento >= 1], 
                If[
                 BooleanQ[
                  OptionValue[VilCretas`lista]], 
                 If[
                  OptionValue[VilCretas`lista], 
                  VilCretas`Private`PruebaADAL[
                  VilCretas`Private`AlFunciones, VilCretas`Private`AlPruebas, 
                   VilCretas`Private`AlInicio, 
                   VilCretas`Private`AlIncremento], 
                  VilCretas`Private`PruebaADA[
                  VilCretas`Private`AlFunciones, VilCretas`Private`AlPruebas, 
                   VilCretas`Private`AlInicio, 
                   VilCretas`Private`AlIncremento]]]]]]]]]]}], "SubValues" -> 
    None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {VilCretas`lista -> False}, "Attributes" -> {Protected}, 
    "FullName" -> "VilCretas`PruebaADAGrafica"|>, False]]], "Output",
 CellChangeTimes->{3.9507858447220745`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"f8a5b591-4eda-9443-ad86-d14cee905eec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PruebaADAGrafica", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "Fibonacci", ",", " ", "FibonacciColaED", ",", " ", "FibonacciPilaED"}], 
    "}"}], ",", " ", "50", ",", " ", "5", ",", " ", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.950785848992935*^9, 3.9507858891210766`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"5790f78b-3f08-a448-91ce-a91991af5931"],

Cell[BoxData[
 TemplateBox[{
  "Set", "write", 
   "\"Tag \\!\\(\\*RowBox[{\\\"List\\\"}]\\) in \
\\!\\(\\*RowBox[{RowBox[{\\\"{\\\", \\\"}\\\"}], \\\"[\\\", \\\"0\\\", \
\\\"]\\\"}]\\) is Protected.\"", 2, 10, 1, 26404215393487617162, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9507858917290115`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[10]:=",ExpressionUUID->"b3009c6b-1d62-784b-8f93-4daf48dd5df1"],

Cell[BoxData[
 TemplateBox[{
  "Set", "write", 
   "\"Tag \\!\\(\\*RowBox[{\\\"List\\\"}]\\) in \
\\!\\(\\*RowBox[{RowBox[{\\\"{\\\", \\\"}\\\"}], \\\"[\\\", \\\"1\\\", \
\\\"]\\\"}]\\) is Protected.\"", 2, 10, 2, 26404215393487617162, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9507858917925453`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[10]:=",ExpressionUUID->"57e49151-1034-e14a-98e4-e6e37daa7a05"],

Cell[BoxData[
 TemplateBox[{
  "Set", "write", 
   "\"Tag \\!\\(\\*RowBox[{\\\"List\\\"}]\\) in \
\\!\\(\\*RowBox[{RowBox[{\\\"{\\\", \\\"}\\\"}], \\\"[\\\", \\\"2\\\", \
\\\"]\\\"}]\\) is Protected.\"", 2, 10, 3, 26404215393487617162, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9507858918152466`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[10]:=",ExpressionUUID->"ee407b59-1c11-9d4a-be76-bd5a2b406aa2"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Set\\\", \\\"::\\\", \\\
\"write\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 10, 4, 26404215393487617162, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9507858918246593`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[10]:=",ExpressionUUID->"c5f156f8-7cb5-f54b-81ed-1af1fabb37d6"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.950785973080885*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"22e1c078-7c2f-4a44-b528-8ecc3bb7d965"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NFibonacci", "[", "7", "]"}]], "Input",
 CellChangeTimes->{{3.9507859766785126`*^9, 3.9507860021846886`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"72b5bb70-2441-c94b-9565-28891b3ab221"],

Cell[BoxData["13"], "Output",
 CellChangeTimes->{3.950786002698368*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"4b183a8a-6a11-814f-89b5-d9d7c27a450a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Fibonacci", "[", "i", "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "7"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9507860208434677`*^9, 3.950786036390829*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"f212be17-2196-454e-b1e3-7df9c27e0193"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1", ",", "2", ",", "3", ",", "5", ",", "8", ",", "13"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.9507860383313084`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"0a45b1af-ddd1-6e44-8c6b-7480b1c2b7d9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "+", "1", "+", "2", "+", "3", "+", "5", "+", "8", "+", 
  "13"}]], "Input",
 CellChangeTimes->{{3.950786086594145*^9, 3.9507860994581623`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"7fc1da46-fc6f-1245-a2b0-76d8f39720d6"],

Cell[BoxData["33"], "Output",
 CellChangeTimes->{3.9507861002556763`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"5923ef94-0bb4-fd45-b821-124eddec3b14"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraficaRRL", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3"}], "}"}], ",", " ", 
   RowBox[{"npuntos", "->", "20"}], ",", " ", 
   RowBox[{"inicio", "->", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9507862363246536`*^9, 3.950786256235361*^9}, {
  3.9507863704506073`*^9, 3.9507863714515495`*^9}, {3.9507864518947296`*^9, 
  3.950786503259552*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"aa52bc7a-728e-e44d-8b95-90b34fb1a4d7"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.02], 
     AbsoluteThickness[2], 
     TagBox[{
       {RGBColor[0, 1, 0], PointSize[0.02], AbsoluteThickness[2], Opacity[
        0.2], LineBox[{{{6., -69.}, {6., 0.}}, {{8., -1005.}, {8., 0.}}, {{
         10., -10581.}, {10., 0.}}, {{12., -101373.}, {12., 0.}}, {{
         14., -936933.}, {14., 0.}}, {{16., -8.530701*^6}, {16., 0.}}, {{
         18., -7.7169525*^7}, {18., 0.}}},
         VertexColors->None]}, 
       {RGBColor[0, 1, 0], PointSize[0.02], AbsoluteThickness[2], Opacity[
        0.2], LineBox[CompressedData["
1:eJxTTMoPSmVmYGDgBWImKEYFH+wxhFDEORxwqHNAlYfxYQAmroeuDgoE0MQF
0ORFIPwDoQ4ofDiQgfArmhxQ+HCgBOEf3+iAwocDNTD/Qf0jB2Q+AmiB+Xf4
RRyR+QgA9lfDdUM3RyQ+EjAE8QuETlQ4IvGRgDGIv0/k5GpHJD4YAACbqR1K

         "],
         VertexColors->None]}},
      Annotation[#, "Charting`Private`Tag$373556#1"]& ]}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.02], 
      AbsoluteThickness[2], {}, PointBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQjQo+2KPSHA5QCQdUPozWg9ICaOIiEPpAKJQvAaEd
Ag9A+DIQfkUTVF4BQmf0Q+WVIPzjG6HyKmC6YdURqLwamP+g/hFUXgNMX9j/
AyqvBebf4RdxhPB1wPxT03UOIrm74bqhG1TeAMRfkOiaAJU3BPELhE5UQOWN
QPwrvGmToPLGIP4+kZOrHQF55Ssx
       "]], {}},
     Annotation[#, "Charting`Private`Tag$373556#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{0, 19.}, {-7.7169525*^7, 2.33081439*^8}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.950786479047348*^9, 3.950786504229061*^9}},
 CellLabel->"Out[20]=",ExpressionUUID->"64b6d934-ef0a-7746-9100-0529f1019fd8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Last", "[", 
  RowBox[{"RT", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "6"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}], ",", " ", "20", ",", " ", 
    RowBox[{"inicio", "->", "0"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.95078664384754*^9, 3.9507866716358643`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"ec1aa33d-c86c-e045-8fdd-bc4458663b2b"],

Cell[BoxData["233081439"], "Output",
 CellChangeTimes->{{3.950786662132288*^9, 3.950786672216791*^9}},
 CellLabel->"Out[22]=",ExpressionUUID->"33bb37b3-e761-2a4c-becd-13d3f2ab2d0b"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "[", "n_", "]"}], ":=", 
  RadicalBox[
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox["7", "2"]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"a", "[", 
        RowBox[{"n", "-", "1"}], "]"}], ")"}], "^", "3"}]}], "+", 
    RowBox[{"5", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"a", "[", 
        RowBox[{"n", "-", "2"}], "]"}], ")"}], "^", "3"}]}]}], 
   "3"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"a", "[", "2", "]"}], "=", 
    SqrtBox["2"]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"a", "[", "3", "]"}], "=", 
   RowBox[{"-", 
    FractionBox["2", "3"]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.9507868170631714`*^9, 3.9507868481490517`*^9}, {
  3.9507868920809937`*^9, 3.950787011729162*^9}, {3.9507870828118916`*^9, 
  3.950787085759569*^9}, {3.950787159283251*^9, 3.950787161281252*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"5c00dcca-b9e0-d84b-8bda-ee408d4dc165"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"a", "[", "n", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "2", ",", "20"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9507870966967716`*^9, 3.9507871187688637`*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"00764ee6-268b-1a41-823d-aa6c4a5178d4"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[2], 
     TagBox[{
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[2], Opacity[0.2], 
        LineBox[{{{3., -0.6666666666666666}, {3., 0}}},
         VertexColors->None]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[2], Opacity[0.2], 
        LineBox[{{{2., 1.4142135623730951`}, {2., 0}}, {{4., 
           2.475992740452475}, {4., 0}}, {{6., 6.4394850094165115`}, {
           6., 0}}, {{8., 17.7176595650741}, {8., 0}}, {{10., 
           48.92024422518308}, {10., 0}}, {{12., 135.1006595142388}, {
           12., 0}}, {{14., 373.10511481250524`}, {14., 0}}, {{16., 
           1030.3984848357795`}, {16., 0}}, {{18., 2845.6352735249784`}, {
           18., 0}}, {{20., 7858.7461505292595`}, {20., 0}}},
         VertexColors->None]}},
      Annotation[#, "Charting`Private`Tag$375142#1"]& ]}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[2], {}, 
      PointBox[{{2., 1.4142135623730951`}, {3., -0.6666666666666666}, {4., 
       2.475992740452475}, {6., 6.4394850094165115`}, {8., 
       17.7176595650741}, {10., 48.92024422518308}, {12., 
       135.1006595142388}, {14., 373.10511481250524`}, {16., 
       1030.3984848357795`}, {18., 2845.6352735249784`}, {20., 
       7858.7461505292595`}}], {}},
     Annotation[#, "Charting`Private`Tag$375142#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{2, 0},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{2, 20}, {-0.6666666666666666, 7858.7461505292595`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.950787142945442*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"b240a3db-1129-2040-bb15-3a3aa3911925"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "FindRRHL"}]], "Input",
 CellChangeTimes->{{3.95078751762562*^9, 3.9507875208199844`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"b6e94028-ff21-b54b-a16b-3c26cb888ec8"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Comando que encuentra si existe, una \
relaci\[OAcute]n de recurrencia homog\[EAcute]nea lineal con coeficientes \
constantes y su soluci\[OAcute]n, dada una sucesi\[OAcute]n de \
n\[UAcute]meros reales a trav\[EAcute]s de una lista \[OpenCurlyDoubleQuote]L\
\[CloseCurlyDoubleQuote]. Sintaxis: FindRRHL[L, a, n] siendo \
\[OpenCurlyDoubleQuote]L\[CloseCurlyDoubleQuote] el conjunto de datos, \
\[OpenCurlyDoubleQuote]a\[CloseCurlyDoubleQuote] el nombre de la relaci\
\[OAcute]n de recurrencia y \[OpenCurlyDoubleQuote]n\[CloseCurlyDoubleQuote] \
el par\[AAcute]metro con el que se mostrar\[AAcute] su soluci\[OAcute]n. Por \
defecto, retorna \[OpenCurlyDoubleQuote]NaD\[CloseCurlyDoubleQuote] si no hay \
resultado en el proceso por datos insuficientes o no existencia.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"FindRRHL", "[", 
                    
                    RowBox[{
                    "VilCretas`Private`RcDatos_List", ",", 
                    "VilCretas`Private`Rcsoll_", ",", 
                    "VilCretas`Private`Rcsol_"}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    
                    RowBox[{
                    "{", "VilCretas`Private`VerificandoParametroQ", "}"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"VilCretas`Private`VerificandoParametroQ", "[", 
                    "VilCretas`Private`RcParametro_", "]"}], ":=", 
                    RowBox[{"Quiet", "[", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"ListQ", "[", 
                    RowBox[{"Solve", "[", 
                    RowBox[{
                    
                    RowBox[{"VilCretas`Private`RcParametro", "\[Equal]", 
                    "VilCretas`Private`RcParametro"}], ",", 
                    "VilCretas`Private`RcParametro"}], "]"}], "]"}], ",", 
                    "True", ",", "False"}], "]"}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"VilCretas`Private`VerificandoParametroQ", "[", 
                    "VilCretas`Private`Rcsoll", "]"}], "&&", 
                    
                    RowBox[{"VilCretas`Private`VerificandoParametroQ", "[", 
                    "VilCretas`Private`Rcsol", "]"}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringQ", "[", "VilCretas`Private`Rcsol", "]"}], 
                    "\[Equal]", "False"}], "&&", 
                    RowBox[{
                    RowBox[{"NumericQ", "[", "VilCretas`Private`Rcsol", "]"}],
                     "\[Equal]", "False"}], "&&", 
                    RowBox[{
                    RowBox[{"StringQ", "[", "VilCretas`Private`Rcsoll", "]"}],
                     "\[Equal]", "False"}], "&&", 
                    RowBox[{
                    
                    RowBox[{"NumericQ", "[", "VilCretas`Private`Rcsoll", 
                    "]"}], "\[Equal]", "False"}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"VilCretas`Private`RcDatos", ",", "Null"}], "]"}],
                     "\[Equal]", "False"}], "&&", 
                    
                    RowBox[{"VectorQ", "[", "VilCretas`Private`RcDatos", 
                    "]"}], "&&", 
                    RowBox[{"VilCretas`Private`RcDatos", "\[NotEqual]", 
                    RowBox[{"{", "}"}]}]}], ",", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`RcVl6", "=", 
                    RowBox[{
                    
                    RowBox[{"Variables", "[", "VilCretas`Private`Rcsol", 
                    "]"}], "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"VilCretas`Private`RcList3", "=", 
                    RowBox[{"{", "}"}]}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"Clear", "[", 
                    
                    RowBox[{"VilCretas`Private`Rcsoll", ",", 
                    "VilCretas`Private`Rcsol"}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"VectorQ", "[", 
                    
                    RowBox[{"FindLinearRecurrence", "[", 
                    "VilCretas`Private`RcDatos", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`Vector", "=", 
                    
                    RowBox[{"FindLinearRecurrence", "[", 
                    "VilCretas`Private`RcDatos", "]"}]}], ";", 
                    RowBox[{"VilCretas`Private`RcVl7", "=", 
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"VilCretas`Private`Rci3", "=", "1"}], 
                    RowBox[{"Length", "[", "VilCretas`Private`Vector", "]"}]], 
                    RowBox[{
                    
                    RowBox[{"VilCretas`Private`Vector", 
                    "\[LeftDoubleBracket]", "VilCretas`Private`Rci3", 
                    "\[RightDoubleBracket]"}], " ", 
                    RowBox[{"VilCretas`Private`Rcsoll", "[", 
                    
                    RowBox[{"VilCretas`Private`RcVl6", "-", 
                    "VilCretas`Private`Rci3"}], "]"}]}]}]}], ";", 
                    RowBox[{"VilCretas`Private`RcVl7", "=", 
                    RowBox[{
                    
                    RowBox[{"VilCretas`Private`Rcsoll", "[", 
                    "VilCretas`Private`RcVl6", "]"}], "\[Equal]", 
                    "VilCretas`Private`RcVl7"}]}], ";", 
                    RowBox[{"VilCretas`Private`RcList3", "=", 
                    RowBox[{"Append", "[", 
                    
                    RowBox[{"VilCretas`Private`RcList3", ",", 
                    "VilCretas`Private`RcVl7"}], "]"}]}], ";", 
                    RowBox[{"VilCretas`Private`RcVl8", "=", 
                    
                    RowBox[{"VilCretas`Private`RcDatos", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"1", ";;", 
                    
                    RowBox[{"Length", "[", "VilCretas`Private`Vector", 
                    "]"}]}], "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`Rci3", "=", "1"}], ",", 
                    RowBox[{"VilCretas`Private`Rci3", "\[LessEqual]", 
                    RowBox[{"Length", "[", "VilCretas`Private`RcVl8", "]"}]}],
                     ",", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`RcList3", "=", 
                    RowBox[{"Append", "[", 
                    RowBox[{"VilCretas`Private`RcList3", ",", 
                    RowBox[{
                    RowBox[{"ToExpression", "[", 
                    RowBox[{
                    
                    RowBox[{"ToString", "[", "VilCretas`Private`Rcsoll", 
                    "]"}], "<>", "\"[\"", "<>", 
                    RowBox[{"ToString", "[", "VilCretas`Private`Rci3", "]"}], 
                    "<>", "\"]\""}], "]"}], "\[Equal]", 
                    
                    RowBox[{"VilCretas`Private`RcVl8", "\[LeftDoubleBracket]",
                     "VilCretas`Private`Rci3", "\[RightDoubleBracket]"}]}]}], 
                    "]"}]}], ";", 
                    RowBox[{"VilCretas`Private`Rci3", "++"}]}]}], "]"}], ";", 
                    RowBox[{"VilCretas`Private`RcSolucion2", "=", 
                    RowBox[{"Quiet", "[", 
                    RowBox[{"RSolve", "[", 
                    RowBox[{"VilCretas`Private`RcList3", ",", 
                    
                    RowBox[{"VilCretas`Private`Rcsoll", "[", 
                    "VilCretas`Private`RcVl6", "]"}], ",", 
                    "VilCretas`Private`RcVl6"}], "]"}], "]"}]}], ";", 
                    RowBox[{"VilCretas`Private`RcSolucion2", "=", 
                    RowBox[{
                    
                    RowBox[{"Flatten", "[", "VilCretas`Private`RcSolucion2", 
                    "]"}], "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"VilCretas`Private`RcList3", "=", 
                    RowBox[{"Append", "[", 
                    
                    RowBox[{"VilCretas`Private`RcList3", ",", 
                    "VilCretas`Private`RcSolucion2"}], "]"}]}], ";", 
                    "VilCretas`Private`RcList3"}], ",", "\"NaD\""}], 
                    "]"}]}]}], "]"}]}], "]"}]}], "]"}]}], "]"}]}]}], 
                    "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"VilCretas`FindRRHL\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Comando que encuentra si existe, una \
relaci\[OAcute]n de recurrencia homog\[EAcute]nea lineal con coeficientes \
constantes y su soluci\[OAcute]n, dada una sucesi\[OAcute]n de \
n\[UAcute]meros reales a trav\[EAcute]s de una lista \[OpenCurlyDoubleQuote]L\
\[CloseCurlyDoubleQuote]. Sintaxis: FindRRHL[L, a, n] siendo \
\[OpenCurlyDoubleQuote]L\[CloseCurlyDoubleQuote] el conjunto de datos, \
\[OpenCurlyDoubleQuote]a\[CloseCurlyDoubleQuote] el nombre de la relaci\
\[OAcute]n de recurrencia y \[OpenCurlyDoubleQuote]n\[CloseCurlyDoubleQuote] \
el par\[AAcute]metro con el que se mostrar\[AAcute] su soluci\[OAcute]n. Por \
defecto, retorna \[OpenCurlyDoubleQuote]NaD\[CloseCurlyDoubleQuote] si no hay \
resultado en el proceso por datos insuficientes o no existencia.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "Comando que encuentra si existe, una relaci\[OAcute]n de recurrencia \
homog\[EAcute]nea lineal con coeficientes constantes y su soluci\[OAcute]n, \
dada una sucesi\[OAcute]n de n\[UAcute]meros reales a trav\[EAcute]s de una \
lista \[OpenCurlyDoubleQuote]L\[CloseCurlyDoubleQuote]. Sintaxis: FindRRHL[L, \
a, n] siendo \[OpenCurlyDoubleQuote]L\[CloseCurlyDoubleQuote] el conjunto de \
datos, \[OpenCurlyDoubleQuote]a\[CloseCurlyDoubleQuote] el nombre de la \
relaci\[OAcute]n de recurrencia y \[OpenCurlyDoubleQuote]n\
\[CloseCurlyDoubleQuote] el par\[AAcute]metro con el que se mostrar\[AAcute] \
su soluci\[OAcute]n. Por defecto, retorna \[OpenCurlyDoubleQuote]NaD\
\[CloseCurlyDoubleQuote] si no hay resultado en el proceso por datos \
insuficientes o no existencia.", "Documentation" -> None, "OwnValues" -> None,
     "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, VilCretas`FindRRHL, {VilCretas`FindRRHL[
         Pattern[VilCretas`Private`RcDatos, 
          Blank[List]], 
         Pattern[VilCretas`Private`Rcsoll, 
          Blank[]], 
         Pattern[VilCretas`Private`Rcsol, 
          Blank[]]] :> 
       Module[{VilCretas`Private`VerificandoParametroQ}, 
         VilCretas`Private`VerificandoParametroQ[
            Pattern[VilCretas`Private`RcParametro, 
             Blank[]]] := Quiet[
            If[
             ListQ[
              Solve[
              VilCretas`Private`RcParametro == VilCretas`Private`RcParametro, 
               VilCretas`Private`RcParametro]], True, False]]; If[
           And[
            VilCretas`Private`VerificandoParametroQ[VilCretas`Private`Rcsoll], 
            VilCretas`Private`VerificandoParametroQ[VilCretas`Private`Rcsol]], 
           If[
            And[
            StringQ[VilCretas`Private`Rcsol] == False, 
             NumericQ[VilCretas`Private`Rcsol] == False, 
             StringQ[VilCretas`Private`Rcsoll] == False, 
             NumericQ[VilCretas`Private`Rcsoll] == False], 
            If[
             And[MemberQ[VilCretas`Private`RcDatos, Null] == False, 
              VectorQ[VilCretas`Private`RcDatos], 
              VilCretas`Private`RcDatos != {}], 
             Module[{VilCretas`Private`RcVl6 = Part[
                 Variables[VilCretas`Private`Rcsol], 1], 
               VilCretas`Private`RcList3 = {}}, 
              Clear[VilCretas`Private`Rcsoll, VilCretas`Private`Rcsol]; If[
                VectorQ[
                 FindLinearRecurrence[VilCretas`Private`RcDatos]], 
                VilCretas`Private`Vector = 
                 FindLinearRecurrence[VilCretas`Private`RcDatos]; 
                VilCretas`Private`RcVl7 = 
                 Sum[Part[VilCretas`Private`Vector, VilCretas`Private`Rci3] 
                   VilCretas`Private`Rcsoll[
                    VilCretas`Private`RcVl6 - VilCretas`Private`Rci3], {
                   VilCretas`Private`Rci3, 1, 
                    Length[VilCretas`Private`Vector]}]; 
                VilCretas`Private`RcVl7 = 
                 VilCretas`Private`Rcsoll[VilCretas`Private`RcVl6] == 
                  VilCretas`Private`RcVl7; 
                VilCretas`Private`RcList3 = 
                 Append[VilCretas`Private`RcList3, VilCretas`Private`RcVl7]; 
                VilCretas`Private`RcVl8 = Part[VilCretas`Private`RcDatos, 
                   Span[1, 
                    Length[VilCretas`Private`Vector]]]; 
                For[VilCretas`Private`Rci3 = 1, VilCretas`Private`Rci3 <= 
                  Length[VilCretas`Private`RcVl8], 
                  VilCretas`Private`RcList3 = 
                   Append[VilCretas`Private`RcList3, 
                    ToExpression[
                    ToString[VilCretas`Private`Rcsoll] <> "[" <> 
                    ToString[VilCretas`Private`Rci3] <> "]"] == 
                    Part[VilCretas`Private`RcVl8, VilCretas`Private`Rci3]]; 
                  Increment[VilCretas`Private`Rci3]]; 
                VilCretas`Private`RcSolucion2 = Quiet[
                   RSolve[VilCretas`Private`RcList3, 
                    VilCretas`Private`Rcsoll[VilCretas`Private`RcVl6], 
                    VilCretas`Private`RcVl6]]; 
                VilCretas`Private`RcSolucion2 = Part[
                   Flatten[VilCretas`Private`RcSolucion2], 1, 2]; 
                VilCretas`Private`RcList3 = 
                 Append[VilCretas`Private`RcList3, 
                   VilCretas`Private`RcSolucion2]; VilCretas`Private`RcList3, 
                "NaD"]]]]]]}], "SubValues" -> None, "DefaultValues" -> None, 
    "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {Protected}, "FullName" -> "VilCretas`FindRRHL"|>, 
   False]]], "Output",
 CellChangeTimes->{3.9507875215749397`*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"d42bdcc4-6231-644d-aae2-9529336a311c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "a", "]"}]], "Input",
 CellChangeTimes->{{3.950787528935091*^9, 3.95078753082168*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"449fedc3-4916-574f-8a13-548ac1998817"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindRRHL", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", 
     RowBox[{"-", "8"}], ",", "29", ",", 
     FractionBox[
      RowBox[{"-", "109"}], "2"], ",", 
     FractionBox["689", "4"], ",", 
     FractionBox[
      RowBox[{"-", "2869"}], "8"]}], "}"}], ",", "a", ",", "n"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9507874494097576`*^9, 3.950787527059223*^9}, 
   3.950787765996252*^9, 3.950787800552437*^9},
 CellLabel->"In[34]:=",ExpressionUUID->"2cd0bbf9-b6ff-9d4f-a9f2-065721f8b5c8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"a", "[", "n", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"5", " ", 
      RowBox[{"a", "[", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "n"}], "]"}]}], "-", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"a", "[", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "n"}], "]"}]}]}]}], ",", 
   RowBox[{
    RowBox[{"a", "[", "1", "]"}], "\[Equal]", "5"}], ",", 
   RowBox[{
    RowBox[{"a", "[", "2", "]"}], "\[Equal]", 
    RowBox[{"-", "8"}]}], ",", 
   RowBox[{
    FractionBox["1", "5"], " ", 
    SuperscriptBox["2", 
     RowBox[{
      RowBox[{"-", "1"}], "-", "n"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "16"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "5"}], ")"}], "n"]}], "+", 
      RowBox[{"5", " ", 
       SuperscriptBox["2", 
        RowBox[{"2", " ", "n"}]]}]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.9507876496250362`*^9, 3.950787767147217*^9, 
  3.950787802193329*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"cd327973-2716-a245-86f9-3a57a235e9c8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindRRHL", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"9", ",", 
     RowBox[{"-", "15"}], ",", 
     RowBox[{"-", "2367"}], ",", "90057", ",", 
     RowBox[{"-", "2477511"}], ",", "60101985", ",", 
     RowBox[{"-", "1363435407"}], ",", "29670733497"}], "}"}], ",", "a", ",", 
   "n"}], "]"}]], "Input",
 CellChangeTimes->{{3.9507881367860146`*^9, 3.9507882024504585`*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"3923d5aa-a4e2-d845-9e9b-4e86de7ae14f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"a", "[", "n", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "323"}], " ", 
      RowBox[{"a", "[", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "n"}], "]"}]}], "-", 
     RowBox[{"36", " ", 
      RowBox[{"a", "[", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "n"}], "]"}]}]}]}], ",", 
   RowBox[{
    RowBox[{"a", "[", "1", "]"}], "\[Equal]", "9"}], ",", 
   RowBox[{
    RowBox[{"a", "[", "2", "]"}], "\[Equal]", 
    RowBox[{"-", "15"}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["3", "323"]}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], "n"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"494", " ", 
       SuperscriptBox["17", "n"]}], "-", 
      RowBox[{"391", " ", 
       SuperscriptBox["19", "n"]}]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.9507882043051605`*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"10a6ba43-75ad-7041-92c1-255368cad7db"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"2", "^", 
       RowBox[{"(", 
        RowBox[{"5", "-", 
         RowBox[{"2", "n"}]}], ")"}]}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"16767", "*", 
         RowBox[{"2", "^", "n"}]}], "-", 
        RowBox[{"128", "*", 
         RowBox[{"3", "^", "n"}]}]}], ")"}]}], "2187"]}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "6", ",", "20"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9507889198354435`*^9, 3.9507889873313904`*^9}, {
  3.950789068646759*^9, 3.950789091838812*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"42ce48a3-3397-f646-b3fc-9de2a1e18846"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["7", "2"]}], ",", 
   RowBox[{"-", 
    FractionBox["5", "3"]}], ",", 
   RowBox[{"-", 
    FractionBox["37", "48"]}], ",", 
   RowBox[{"-", 
    FractionBox["65", "192"]}], ",", 
   RowBox[{"-", 
    FractionBox["103", "768"]}], ",", 
   RowBox[{"-", 
    FractionBox["125", "3072"]}], ",", 
   RowBox[{"-", 
    FractionBox["7", "12288"]}], ",", 
   FractionBox["715", "49152"], ",", 
   FractionBox["3617", "196608"], ",", 
   FractionBox["13795", "786432"], ",", 
   FractionBox["47273", "3145728"], ",", 
   FractionBox["153595", "12582912"], ",", 
   FractionBox["484337", "50331648"], ",", 
   FractionBox["1500115", "201326592"], ",", 
   FractionBox["4594553", "805306368"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.950789013963228*^9, {3.9507890890947704`*^9, 3.9507890922824936`*^9}},
 CellLabel->"Out[40]=",ExpressionUUID->"e7ec2a84-dbf1-104e-87d4-fd8491adebd4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindRRHL", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["7", "2"]}], ",", 
     RowBox[{"-", 
      FractionBox["5", "3"]}], ",", 
     RowBox[{"-", 
      FractionBox["37", "48"]}], ",", 
     RowBox[{"-", 
      FractionBox["65", "192"]}], ",", 
     RowBox[{"-", 
      FractionBox["103", "768"]}], ",", 
     RowBox[{"-", 
      FractionBox["125", "3072"]}], ",", 
     RowBox[{"-", 
      FractionBox["7", "12288"]}], ",", 
     FractionBox["715", "49152"], ",", 
     FractionBox["3617", "196608"], ",", 
     FractionBox["13795", "786432"], ",", 
     FractionBox["47273", "3145728"], ",", 
     FractionBox["153595", "12582912"], ",", 
     FractionBox["484337", "50331648"], ",", 
     FractionBox["1500115", "201326592"], ",", 
     FractionBox["4594553", "805306368"]}], "}"}], ",", "a", ",", "n"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.95078902772505*^9, 3.950789045548973*^9}, 
   3.950789077358509*^9},
 CellLabel->"In[37]:=",ExpressionUUID->"433a7c07-f5d4-1c49-aa48-ecdecd0769f5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"a", "[", "n", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["3", "8"]}], " ", 
      RowBox[{"a", "[", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "n"}], "]"}]}], "+", 
     RowBox[{
      FractionBox["5", "4"], " ", 
      RowBox[{"a", "[", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "n"}], "]"}]}]}]}], ",", 
   RowBox[{
    RowBox[{"a", "[", "1", "]"}], "\[Equal]", 
    RowBox[{"-", 
     FractionBox["7", "2"]}]}], ",", 
   RowBox[{
    RowBox[{"a", "[", "2", "]"}], "\[Equal]", 
    RowBox[{"-", 
     FractionBox["5", "3"]}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "9"]}], " ", 
    SuperscriptBox["2", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "n"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"69", " ", 
       SuperscriptBox["2", "n"]}], "-", 
      RowBox[{"4", " ", 
       SuperscriptBox["3", "n"]}]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.950789046631876*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"3782234a-de74-fc44-9690-f5b37670a541"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "MetodoI"}]], "Input",
 CellChangeTimes->{{3.950789942768219*^9, 3.9507899448908195`*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"2c0b97cb-220b-0441-9d93-4f3c53efee27"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Muestra sobre una relaci\[OAcute]n de recurrencia \
lineal de orden uno, sus evaluaciones en \[OpenCurlyDoubleQuote]k\
\[CloseCurlyDoubleQuote] iteraciones de forma ascendente o descendente, seg\
\[UAcute]n lo escoja el usuario. El comando es una aplicaci\[OAcute]n directa \
del m\[EAcute]todo de resoluci\[OAcute]n de relaciones de recurrencia \
denominado: \[OpenCurlyDoubleQuote]iterativo\[CloseCurlyDoubleQuote]. \
Sintaxis: MetodoI[Coeficientes, k], o bien, MetodoI[Coeficientes, k, \
ascendente->True, inicio->Valor] siendo \[OpenCurlyDoubleQuote]Coeficientes\
\[CloseCurlyDoubleQuote] un vector de dimensi\[OAcute]n uno o dos que \
contiene un coeficiente y/o la parte no homog\[EAcute]nea (en funci\[OAcute]n \
de \[OpenCurlyDoubleQuote]n\[CloseCurlyDoubleQuote]) como su \[UAcute]ltima \
componente, \[OpenCurlyDoubleQuote]ascendente->True\[CloseCurlyDoubleQuote] \
opci\[OAcute]n que exhibe los resultados de forma ascendente (por defecto es \
descendente) e \[OpenCurlyDoubleQuote]inicio->Valor\[CloseCurlyDoubleQuote], \
el valor del \[IAcute]ndice con el que empieza la condici\[OAcute]n inicial. \
\[OpenCurlyDoubleQuote]MetodoI\[CloseCurlyDoubleQuote] solo acepta \
n\[UAcute]meros enteros.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"MetodoI", "[", 
                    
                    RowBox[{
                    "VilCretas`Private`RcRecurrenci_List", ",", 
                    "VilCretas`Private`Rckk_", ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"VilCretas`Private`MetodoID", ",", 
                    "VilCretas`Private`MetodoIA"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"Clear", "[", "n", "]"}], ";", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`MetodoID", "[", 
                    
                    RowBox[{"VilCretas`Private`RcRecurrenc_List", ",", 
                    "VilCretas`Private`Rckkk_"}], "]"}], ":=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"IntegerQ", "[", "VilCretas`Private`Rckkk", "]"}],
                     "&&", 
                    
                    RowBox[{"VilCretas`Private`Rckkk", "\[GreaterEqual]", 
                    "1"}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"VilCretas`Private`RcRecurrenc", ",", 
                    "VilCretas`Private`Rckkk"}], "}"}], ",", "Null"}], "]"}], 
                    "\[Equal]", "False"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"VectorQ", "[", 
                    RowBox[{
                    
                    RowBox[{"VilCretas`Private`RcRecurrenc", "/.", 
                    "\[VeryThinSpace]", 
                    RowBox[{"n", "\[Rule]", "1"}]}], ",", "IntegerQ"}], "]"}],
                     ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"VilCretas`Private`RcRecurrenc", ",", "Null"}], 
                    "]"}], "\[Equal]", "False"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`RcRecurrenc", "\[NotEqual]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "VilCretas`Private`MetodoIDO", "}"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"VilCretas`Private`MetodoIDO", "[", 
                    
                    RowBox[{"VilCretas`Private`RcRecurrencia_", ",", 
                    "VilCretas`Private`Rck_"}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"VilCretas`Private`RcVl25", ",", 
                    "VilCretas`Private`RcVl26", ",", 
                    "VilCretas`Private`RcProductoria", ",", 
                    "VilCretas`Private`RcSumtoria", ",", 
                    "VilCretas`Private`RcFactoresPrimos"}], "}"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringContainsQ", "[", 
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    
                    RowBox[{"Last", "[", "VilCretas`Private`RcRecurrencia", 
                    "]"}], "]"}], ",", "\"n\""}], "]"}], "||", 
                    RowBox[{"IntegerQ", "[", 
                    
                    RowBox[{"Last", "[", "VilCretas`Private`RcRecurrencia", 
                    "]"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"Clear", "[", 
                    RowBox[{"a", ",", "n"}], "]"}], ";", 
                    RowBox[{
                    
                    RowBox[{"VilCretas`Private`RcVl25", "[", 
                    "VilCretas`Private`Rci_", "]"}], ":=", 
                    RowBox[{
                    
                    RowBox[{"Last", "[", "VilCretas`Private`RcRecurrencia", 
                    "]"}], "/.", "\[VeryThinSpace]", 
                    RowBox[{"n", "\[Rule]", "VilCretas`Private`Rci"}]}]}], 
                    ";", 
                    RowBox[{
                    
                    RowBox[{"VilCretas`Private`RcVl26", "[", 
                    "VilCretas`Private`Rci_", "]"}], ":=", 
                    RowBox[{
                    
                    RowBox[{"First", "[", "VilCretas`Private`RcRecurrencia", 
                    "]"}], "/.", "\[VeryThinSpace]", 
                    RowBox[{"n", "\[Rule]", "VilCretas`Private`Rci"}]}]}], 
                    ";", 
                    RowBox[{
                    
                    RowBox[{"VilCretas`Private`RcFactoresPrimos", "[", 
                    "VilCretas`Private`Rcm_", "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "}"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", 
                    
                    RowBox[{"FactorInteger", "[", "VilCretas`Private`Rcm", 
                    "]"}], "]"}], "\[Equal]", "1"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Superscript", "@@@", 
                    
                    RowBox[{"FactorInteger", "[", "VilCretas`Private`Rcm", 
                    "]"}]}], ")"}], "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"CenterDot", "@@", 
                    RowBox[{"Superscript", "@@@", 
                    
                    RowBox[{"FactorInteger", "[", "VilCretas`Private`Rcm", 
                    "]"}]}]}]}], "]"}]}], "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`RcProductoria", "[", 
                    
                    RowBox[{"VilCretas`Private`RcProdinicio_", ",", 
                    "VilCretas`Private`RcProdfinal_"}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "VilCretas`Private`RcVl27", "}"}], ",", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`RcVl27", "=", 
                    RowBox[{
                    UnderoverscriptBox["\[Product]", 
                    
                    RowBox[{"VilCretas`Private`Rci16", "=", 
                    "VilCretas`Private`RcProdinicio"}], 
                    "VilCretas`Private`RcProdfinal"], 
                    RowBox[{"VilCretas`Private`RcVl26", "[", 
                    RowBox[{"n", "-", "VilCretas`Private`Rci16"}], "]"}]}]}], 
                    ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"NumericQ", "[", "VilCretas`Private`RcVl27", 
                    "]"}], "\[Equal]", "False"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "VilCretas`Private`RcVl27", "]"}], 
                    "\[NotEqual]", "0"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"NumericQ", "[", 
                    
                    RowBox[{"VilCretas`Private`RcVl27", 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                    "]"}], ",", 
                    RowBox[{"ReplacePart", "[", 
                    RowBox[{"VilCretas`Private`RcVl27", ",", 
                    RowBox[{"1", "\[Rule]", 
                    RowBox[{"VilCretas`Private`RcFactoresPrimos", "[", 
                    
                    RowBox[{"VilCretas`Private`RcVl27", 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                    "]"}]}]}], "]"}], ",", "VilCretas`Private`RcVl27"}], 
                    "]"}], ",", "VilCretas`Private`RcVl27"}], "]"}], ",", 
                    
                    RowBox[{"VilCretas`Private`RcFactoresPrimos", "[", 
                    "VilCretas`Private`RcVl27", "]"}]}], "]"}]}]}], "]"}]}], 
                    ";", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`RcSumtoria", "[", 
                    
                    RowBox[{"VilCretas`Private`RcSuminicio_", ",", 
                    "VilCretas`Private`RcSumfinal_"}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"VilCretas`Private`RcVl28", "=", "0"}], "}"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"For", "[", 
                    RowBox[{
                    
                    RowBox[{"VilCretas`Private`Rci17", "=", 
                    "VilCretas`Private`RcSuminicio"}], ",", 
                    
                    RowBox[{"VilCretas`Private`Rci17", "\[LessEqual]", 
                    "VilCretas`Private`RcSumfinal"}], ",", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`RcVl28", "=", 
                    RowBox[{"VilCretas`Private`RcVl28", "+", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`RcProductoria", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"VilCretas`Private`Rci17", "-", "1"}]}], "]"}], 
                    " ", 
                    RowBox[{"VilCretas`Private`RcVl25", "[", 
                    RowBox[{"n", "-", "VilCretas`Private`Rci17"}], 
                    "]"}]}]}]}], ";", 
                    RowBox[{"VilCretas`Private`Rci17", "++"}]}]}], "]"}], ";",
                     "VilCretas`Private`RcVl28"}]}], "]"}]}], ";", 
                    
                    RowBox[{"Print", "[", 
                    "\"Por el m\[EAcute]todo iterativo:\"", "]"}], ";", 
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`Rci18", "=", "1"}], ",", 
                    
                    RowBox[{"VilCretas`Private`Rci18", "\[LessEqual]", 
                    "VilCretas`Private`Rck"}], ",", 
                    RowBox[{
                    RowBox[{"Print", "[", 
                    RowBox[{"\"n \[Rule] \"", ",", 
                    RowBox[{"n", "-", "VilCretas`Private`Rci18"}], ",", 
                    "\": \"", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"VilCretas`Private`RcProductoria", "[", 
                    RowBox[{"0", ",", "VilCretas`Private`Rci18"}], "]"}], " ", 
                    RowBox[{"a", "[", 
                    RowBox[{"n", "-", "VilCretas`Private`Rci18", "-", "1"}], 
                    "]"}]}], "+", 
                    RowBox[{"VilCretas`Private`RcSumtoria", "[", 
                    RowBox[{"1", ",", "VilCretas`Private`Rci18"}], "]"}], "+", 
                    RowBox[{"VilCretas`Private`RcVl25", "[", "n", "]"}]}]}], 
                    "]"}], ";", 
                    RowBox[{"VilCretas`Private`Rci18", "++"}]}]}], "]"}]}]}], 
                    "]"}]}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"Length", "[", "VilCretas`Private`RcRecurrenc", 
                    "]"}], "\[Equal]", "2"}], ",", 
                    RowBox[{"VilCretas`Private`MetodoIDO", "[", 
                    
                    RowBox[{"VilCretas`Private`RcRecurrenc", ",", 
                    "VilCretas`Private`Rckkk"}], "]"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"Length", "[", "VilCretas`Private`RcRecurrenc", 
                    "]"}], "\[Equal]", "1"}], ",", 
                    RowBox[{"VilCretas`Private`MetodoIDO", "[", 
                    RowBox[{
                    RowBox[{"Append", "[", 
                    RowBox[{"VilCretas`Private`RcRecurrenc", ",", "0"}], 
                    "]"}], ",", "VilCretas`Private`Rckkk"}], "]"}]}], "]"}]}],
                     "]"}]}]}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], 
                    "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`MetodoIA", "[", 
                    
                    RowBox[{"VilCretas`Private`RcRecurrenc_List", ",", 
                    "VilCretas`Private`Rckkk_", ",", 
                    "VilCretas`Private`Rcinicio_"}], "]"}], ":=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"IntegerQ", "[", "VilCretas`Private`Rckkk", "]"}],
                     "&&", 
                    
                    RowBox[{"VilCretas`Private`Rckkk", "\[GreaterEqual]", 
                    "1"}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"VilCretas`Private`RcRecurrenc", ",", 
                    "VilCretas`Private`Rckkk"}], "}"}], ",", "Null"}], "]"}], 
                    "\[Equal]", "False"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"VectorQ", "[", 
                    RowBox[{
                    
                    RowBox[{"VilCretas`Private`RcRecurrenc", "/.", 
                    "\[VeryThinSpace]", 
                    RowBox[{"n", "\[Rule]", "1"}]}], ",", "IntegerQ"}], "]"}],
                     ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"VilCretas`Private`RcRecurrenc", ",", "Null"}], 
                    "]"}], "\[Equal]", "False"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`RcRecurrenc", "\[NotEqual]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "VilCretas`Private`MetodoIDOA", "}"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"VilCretas`Private`MetodoIDOA", "[", 
                    
                    RowBox[{"VilCretas`Private`RcRecurrencia_", ",", 
                    "VilCretas`Private`Rck_"}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"VilCretas`Private`RcVl29", ",", 
                    "VilCretas`Private`RcVl30", ",", 
                    "VilCretas`Private`RcFactoresPrimos"}], "}"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringContainsQ", "[", 
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    
                    RowBox[{"Last", "[", "VilCretas`Private`RcRecurrencia", 
                    "]"}], "]"}], ",", "\"n\""}], "]"}], "||", 
                    RowBox[{"IntegerQ", "[", 
                    
                    RowBox[{"Last", "[", "VilCretas`Private`RcRecurrencia", 
                    "]"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"Clear", "[", 
                    RowBox[{"a", ",", "n"}], "]"}], ";", 
                    RowBox[{
                    
                    RowBox[{"VilCretas`Private`RcVl29", "[", 
                    "VilCretas`Private`Rci_", "]"}], ":=", 
                    RowBox[{
                    
                    RowBox[{"Last", "[", "VilCretas`Private`RcRecurrencia", 
                    "]"}], "/.", "\[VeryThinSpace]", 
                    RowBox[{"n", "\[Rule]", "VilCretas`Private`Rci"}]}]}], 
                    ";", 
                    RowBox[{
                    
                    RowBox[{"VilCretas`Private`RcVl30", "[", 
                    "VilCretas`Private`Rci_", "]"}], ":=", 
                    RowBox[{
                    
                    RowBox[{"First", "[", "VilCretas`Private`RcRecurrencia", 
                    "]"}], "/.", "\[VeryThinSpace]", 
                    RowBox[{"n", "\[Rule]", "VilCretas`Private`Rci"}]}]}], 
                    ";", 
                    RowBox[{
                    
                    RowBox[{"VilCretas`Private`RcFactoresPrimos", "[", 
                    "VilCretas`Private`Rcm_", "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "}"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", 
                    
                    RowBox[{"FactorInteger", "[", "VilCretas`Private`Rcm", 
                    "]"}], "]"}], "\[Equal]", "1"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Superscript", "@@@", 
                    
                    RowBox[{"FactorInteger", "[", "VilCretas`Private`Rcm", 
                    "]"}]}], ")"}], "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"CenterDot", "@@", 
                    RowBox[{"Superscript", "@@@", 
                    
                    RowBox[{"FactorInteger", "[", "VilCretas`Private`Rcm", 
                    "]"}]}]}]}], "]"}]}], "]"}]}], ";", 
                    
                    RowBox[{"Print", "[", 
                    "\"Por el m\[EAcute]todo iterativo:\"", "]"}], ";", 
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`Rci22", "=", "1"}], ",", 
                    
                    RowBox[{"VilCretas`Private`Rci22", "\[LessEqual]", 
                    "VilCretas`Private`Rck"}], ",", 
                    RowBox[{
                    RowBox[{"Print", "[", 
                    RowBox[{"\"n \[Rule] \"", ",", 
                    
                    RowBox[{"VilCretas`Private`Rci22", "+", 
                    "VilCretas`Private`Rcinicio"}], ",", "\": \"", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"VilCretas`Private`RcFactoresPrimos", "[", 
                    RowBox[{
                    UnderoverscriptBox["\[Product]", 
                    RowBox[{"VilCretas`Private`Rci19", "=", "1"}], 
                    "VilCretas`Private`Rci22"], 
                    RowBox[{"VilCretas`Private`RcVl30", "[", 
                    
                    RowBox[{"VilCretas`Private`Rcinicio", "+", 
                    "VilCretas`Private`Rci19"}], "]"}]}], "]"}], " ", 
                    RowBox[{"a", "[", "VilCretas`Private`Rcinicio", "]"}]}], 
                    "+", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"VilCretas`Private`Rci20", "=", "1"}], 
                    RowBox[{"VilCretas`Private`Rci22", "-", "1"}]], 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    UnderoverscriptBox["\[Product]", 
                    RowBox[{"VilCretas`Private`Rci21", "=", 
                    RowBox[{"VilCretas`Private`Rci20", "+", "1"}]}], 
                    "VilCretas`Private`Rci22"], 
                    RowBox[{"VilCretas`Private`RcVl30", "[", 
                    
                    RowBox[{"VilCretas`Private`Rcinicio", "+", 
                    "VilCretas`Private`Rci21"}], "]"}]}], ")"}], " ", 
                    RowBox[{"VilCretas`Private`RcVl29", "[", 
                    
                    RowBox[{"VilCretas`Private`Rcinicio", "+", 
                    "VilCretas`Private`Rci20"}], "]"}]}]}], "\[NotEqual]", 
                    "0"}], ",", 
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"VilCretas`Private`Rci20", "=", "1"}], 
                    RowBox[{"VilCretas`Private`Rci22", "-", "1"}]], 
                    RowBox[{"VilCretas`Private`RcFactoresPrimos", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    UnderoverscriptBox["\[Product]", 
                    RowBox[{"VilCretas`Private`Rci21", "=", 
                    RowBox[{"VilCretas`Private`Rci20", "+", "1"}]}], 
                    "VilCretas`Private`Rci22"], 
                    RowBox[{"VilCretas`Private`RcVl30", "[", 
                    
                    RowBox[{"VilCretas`Private`Rcinicio", "+", 
                    "VilCretas`Private`Rci21"}], "]"}]}], ")"}], " ", 
                    RowBox[{"VilCretas`Private`RcVl29", "[", 
                    
                    RowBox[{"VilCretas`Private`Rcinicio", "+", 
                    "VilCretas`Private`Rci20"}], "]"}]}], "]"}]}], ",", 
                    "0"}], "]"}], "+", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"VilCretas`Private`RcVl29", "[", 
                    
                    RowBox[{"VilCretas`Private`Rcinicio", "+", 
                    "VilCretas`Private`Rci22"}], "]"}], "\[NotEqual]", "0"}], 
                    ",", 
                    RowBox[{"VilCretas`Private`RcFactoresPrimos", "[", 
                    RowBox[{"VilCretas`Private`RcVl29", "[", 
                    
                    RowBox[{"VilCretas`Private`Rcinicio", "+", 
                    "VilCretas`Private`Rci22"}], "]"}], "]"}], ",", "0"}], 
                    "]"}]}]}], "]"}], ";", 
                    RowBox[{"VilCretas`Private`Rci22", "++"}]}]}], "]"}]}]}], 
                    "]"}]}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"Length", "[", "VilCretas`Private`RcRecurrenc", 
                    "]"}], "\[Equal]", "2"}], ",", 
                    RowBox[{"VilCretas`Private`MetodoIDOA", "[", 
                    
                    RowBox[{"VilCretas`Private`RcRecurrenc", ",", 
                    "VilCretas`Private`Rckkk"}], "]"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"Length", "[", "VilCretas`Private`RcRecurrenc", 
                    "]"}], "\[Equal]", "1"}], ",", 
                    RowBox[{"VilCretas`Private`MetodoIDOA", "[", 
                    RowBox[{
                    RowBox[{"Append", "[", 
                    RowBox[{"VilCretas`Private`RcRecurrenc", ",", "0"}], 
                    "]"}], ",", "VilCretas`Private`Rckkk"}], "]"}]}], "]"}]}],
                     "]"}]}]}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], 
                    "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"IntegerQ", "[", 
                    RowBox[{"OptionValue", "[", "inicio", "]"}], "]"}], "&&", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "inicio", "]"}], 
                    "\[GreaterEqual]", "0"}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"BooleanQ", "[", 
                    RowBox[{"OptionValue", "[", "ascendente", "]"}], "]"}], 
                    ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "ascendente", "]"}], ",", 
                    RowBox[{"VilCretas`Private`MetodoIA", "[", 
                    
                    RowBox[{"VilCretas`Private`RcRecurrenci", ",", 
                    "VilCretas`Private`Rckk", ",", 
                    RowBox[{"OptionValue", "[", "inicio", "]"}]}], "]"}], ",", 
                    RowBox[{"VilCretas`Private`MetodoID", "[", 
                    
                    RowBox[{"VilCretas`Private`RcRecurrenci", ",", 
                    "VilCretas`Private`Rckk"}], "]"}]}], "]"}]}], "]"}]}], 
                    "]"}]}]}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ascendente", "\[Rule]", "False"}], ",", 
                    RowBox[{"inicio", "\[Rule]", "1"}]}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"VilCretas`MetodoI\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Muestra sobre una relaci\[OAcute]n de recurrencia \
lineal de orden uno, sus evaluaciones en \[OpenCurlyDoubleQuote]k\
\[CloseCurlyDoubleQuote] iteraciones de forma ascendente o descendente, seg\
\[UAcute]n lo escoja el usuario. El comando es una aplicaci\[OAcute]n directa \
del m\[EAcute]todo de resoluci\[OAcute]n de relaciones de recurrencia \
denominado: \[OpenCurlyDoubleQuote]iterativo\[CloseCurlyDoubleQuote]. \
Sintaxis: MetodoI[Coeficientes, k], o bien, MetodoI[Coeficientes, k, \
ascendente->True, inicio->Valor] siendo \[OpenCurlyDoubleQuote]Coeficientes\
\[CloseCurlyDoubleQuote] un vector de dimensi\[OAcute]n uno o dos que \
contiene un coeficiente y/o la parte no homog\[EAcute]nea (en funci\[OAcute]n \
de \[OpenCurlyDoubleQuote]n\[CloseCurlyDoubleQuote]) como su \[UAcute]ltima \
componente, \[OpenCurlyDoubleQuote]ascendente->True\[CloseCurlyDoubleQuote] \
opci\[OAcute]n que exhibe los resultados de forma ascendente (por defecto es \
descendente) e \[OpenCurlyDoubleQuote]inicio->Valor\[CloseCurlyDoubleQuote], \
el valor del \[IAcute]ndice con el que empieza la condici\[OAcute]n inicial. \
\[OpenCurlyDoubleQuote]MetodoI\[CloseCurlyDoubleQuote] solo acepta \
n\[UAcute]meros enteros.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "Muestra sobre una relaci\[OAcute]n de recurrencia lineal de orden uno, \
sus evaluaciones en \[OpenCurlyDoubleQuote]k\[CloseCurlyDoubleQuote] \
iteraciones de forma ascendente o descendente, seg\[UAcute]n lo escoja el \
usuario. El comando es una aplicaci\[OAcute]n directa del m\[EAcute]todo de \
resoluci\[OAcute]n de relaciones de recurrencia denominado: \
\[OpenCurlyDoubleQuote]iterativo\[CloseCurlyDoubleQuote]. Sintaxis: \
MetodoI[Coeficientes, k], o bien, MetodoI[Coeficientes, k, ascendente->True, \
inicio->Valor] siendo \[OpenCurlyDoubleQuote]Coeficientes\
\[CloseCurlyDoubleQuote] un vector de dimensi\[OAcute]n uno o dos que \
contiene un coeficiente y/o la parte no homog\[EAcute]nea (en funci\[OAcute]n \
de \[OpenCurlyDoubleQuote]n\[CloseCurlyDoubleQuote]) como su \[UAcute]ltima \
componente, \[OpenCurlyDoubleQuote]ascendente->True\[CloseCurlyDoubleQuote] \
opci\[OAcute]n que exhibe los resultados de forma ascendente (por defecto es \
descendente) e \[OpenCurlyDoubleQuote]inicio->Valor\[CloseCurlyDoubleQuote], \
el valor del \[IAcute]ndice con el que empieza la condici\[OAcute]n inicial. \
\[OpenCurlyDoubleQuote]MetodoI\[CloseCurlyDoubleQuote] solo acepta \
n\[UAcute]meros enteros.", "Documentation" -> None, "OwnValues" -> None, 
    "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, VilCretas`MetodoI, {VilCretas`MetodoI[
         Pattern[VilCretas`Private`RcRecurrenci, 
          Blank[List]], 
         Pattern[VilCretas`Private`Rckk, 
          Blank[]], 
         OptionsPattern[]] :> 
       Module[{VilCretas`Private`MetodoID, VilCretas`Private`MetodoIA}, 
         Clear[$CellContext`n]; VilCretas`Private`MetodoID[
            Pattern[VilCretas`Private`RcRecurrenc, 
             Blank[List]], 
            Pattern[VilCretas`Private`Rckkk, 
             Blank[]]] := If[
            And[
             IntegerQ[VilCretas`Private`Rckkk], VilCretas`Private`Rckkk >= 1], 
            If[
            MemberQ[{VilCretas`Private`RcRecurrenc, VilCretas`Private`Rckkk}, 
               Null] == False, 
             If[
              VectorQ[
               ReplaceAll[VilCretas`Private`RcRecurrenc, $CellContext`n -> 1],
                IntegerQ], 
              If[MemberQ[VilCretas`Private`RcRecurrenc, Null] == False, 
               If[VilCretas`Private`RcRecurrenc != {}, 
                
                Module[{VilCretas`Private`MetodoIDO}, 
                 VilCretas`Private`MetodoIDO[
                    Pattern[VilCretas`Private`RcRecurrencia, 
                    Blank[]], 
                    Pattern[VilCretas`Private`Rck, 
                    Blank[]]] := 
                  Module[{
                    VilCretas`Private`RcVl25, VilCretas`Private`RcVl26, 
                    VilCretas`Private`RcProductoria, 
                    VilCretas`Private`RcSumtoria, 
                    VilCretas`Private`RcFactoresPrimos}, 
                    If[
                    Or[
                    StringContainsQ[
                    ToString[
                    Last[VilCretas`Private`RcRecurrencia]], "n"], 
                    IntegerQ[
                    Last[VilCretas`Private`RcRecurrencia]]], 
                    Clear[$CellContext`a, $CellContext`n]; 
                    VilCretas`Private`RcVl25[
                    Pattern[VilCretas`Private`Rci, 
                    Blank[]]] := ReplaceAll[
                    Last[VilCretas`Private`RcRecurrencia], $CellContext`n -> 
                    VilCretas`Private`Rci]; VilCretas`Private`RcVl26[
                    Pattern[VilCretas`Private`Rci, 
                    Blank[]]] := ReplaceAll[
                    First[VilCretas`Private`RcRecurrencia], $CellContext`n -> 
                    VilCretas`Private`Rci]; VilCretas`Private`RcFactoresPrimos[
                    Pattern[VilCretas`Private`Rcm, 
                    Blank[]]] := Module[{}, 
                    If[Length[
                    FactorInteger[VilCretas`Private`Rcm]] == 1, 
                    Part[
                    MapApply[Superscript, 
                    FactorInteger[VilCretas`Private`Rcm]], 1], 
                    Apply[CenterDot, 
                    MapApply[Superscript, 
                    FactorInteger[VilCretas`Private`Rcm]]]]]; 
                    VilCretas`Private`RcProductoria[
                    Pattern[VilCretas`Private`RcProdinicio, 
                    Blank[]], 
                    Pattern[VilCretas`Private`RcProdfinal, 
                    Blank[]]] := 
                    Module[{VilCretas`Private`RcVl27}, 
                    VilCretas`Private`RcVl27 = Product[
                    
                    VilCretas`Private`RcVl26[$CellContext`n - 
                    VilCretas`Private`Rci16], {
                    VilCretas`Private`Rci16, VilCretas`Private`RcProdinicio, 
                    VilCretas`Private`RcProdfinal}]; 
                    If[NumericQ[VilCretas`Private`RcVl27] == False, 
                    If[Length[VilCretas`Private`RcVl27] != 0, 
                    If[
                    NumericQ[
                    Part[VilCretas`Private`RcVl27, 1]], 
                    ReplacePart[
                    VilCretas`Private`RcVl27, 1 -> 
                    VilCretas`Private`RcFactoresPrimos[
                    Part[VilCretas`Private`RcVl27, 1]]], 
                    VilCretas`Private`RcVl27], VilCretas`Private`RcVl27], 
                    VilCretas`Private`RcFactoresPrimos[
                    VilCretas`Private`RcVl27]]]; VilCretas`Private`RcSumtoria[
                    Pattern[VilCretas`Private`RcSuminicio, 
                    Blank[]], 
                    Pattern[VilCretas`Private`RcSumfinal, 
                    Blank[]]] := 
                    Module[{VilCretas`Private`RcVl28 = 0}, 
                    For[VilCretas`Private`Rci17 = 
                    VilCretas`Private`RcSuminicio, VilCretas`Private`Rci17 <= 
                    VilCretas`Private`RcSumfinal, 
                    VilCretas`Private`RcVl28 = 
                    VilCretas`Private`RcVl28 + 
                    VilCretas`Private`RcProductoria[
                    0, VilCretas`Private`Rci17 - 1] 
                    VilCretas`Private`RcVl25[$CellContext`n - 
                    VilCretas`Private`Rci17]; 
                    Increment[VilCretas`Private`Rci17]]; 
                    VilCretas`Private`RcVl28]; 
                    Print["Por el m\[EAcute]todo iterativo:"]; 
                    For[VilCretas`Private`Rci18 = 1, VilCretas`Private`Rci18 <= 
                    VilCretas`Private`Rck, 
                    Print["n \[Rule] ", $CellContext`n - 
                    VilCretas`Private`Rci18, ": ", 
                    VilCretas`Private`RcProductoria[
                    0, VilCretas`Private`Rci18] $CellContext`a[$CellContext`n - 
                    VilCretas`Private`Rci18 - 1] + 
                    VilCretas`Private`RcSumtoria[1, VilCretas`Private`Rci18] + 
                    VilCretas`Private`RcVl25[$CellContext`n]]; 
                    Increment[VilCretas`Private`Rci18]]]]; 
                 If[Length[VilCretas`Private`RcRecurrenc] == 2, 
                   VilCretas`Private`MetodoIDO[
                   VilCretas`Private`RcRecurrenc, VilCretas`Private`Rckkk], 
                   If[Length[VilCretas`Private`RcRecurrenc] == 1, 
                    VilCretas`Private`MetodoIDO[
                    Append[VilCretas`Private`RcRecurrenc, 0], 
                    VilCretas`Private`Rckkk]]]]]]]]]; 
         VilCretas`Private`MetodoIA[
            Pattern[VilCretas`Private`RcRecurrenc, 
             Blank[List]], 
            Pattern[VilCretas`Private`Rckkk, 
             Blank[]], 
            Pattern[VilCretas`Private`Rcinicio, 
             Blank[]]] := If[
            And[
             IntegerQ[VilCretas`Private`Rckkk], VilCretas`Private`Rckkk >= 1], 
            If[
            MemberQ[{VilCretas`Private`RcRecurrenc, VilCretas`Private`Rckkk}, 
               Null] == False, 
             If[
              VectorQ[
               ReplaceAll[VilCretas`Private`RcRecurrenc, $CellContext`n -> 1],
                IntegerQ], 
              If[MemberQ[VilCretas`Private`RcRecurrenc, Null] == False, 
               If[VilCretas`Private`RcRecurrenc != {}, 
                
                Module[{VilCretas`Private`MetodoIDOA}, 
                 VilCretas`Private`MetodoIDOA[
                    Pattern[VilCretas`Private`RcRecurrencia, 
                    Blank[]], 
                    Pattern[VilCretas`Private`Rck, 
                    Blank[]]] := 
                  Module[{
                    VilCretas`Private`RcVl29, VilCretas`Private`RcVl30, 
                    VilCretas`Private`RcFactoresPrimos}, 
                    If[
                    Or[
                    StringContainsQ[
                    ToString[
                    Last[VilCretas`Private`RcRecurrencia]], "n"], 
                    IntegerQ[
                    Last[VilCretas`Private`RcRecurrencia]]], 
                    Clear[$CellContext`a, $CellContext`n]; 
                    VilCretas`Private`RcVl29[
                    Pattern[VilCretas`Private`Rci, 
                    Blank[]]] := ReplaceAll[
                    Last[VilCretas`Private`RcRecurrencia], $CellContext`n -> 
                    VilCretas`Private`Rci]; VilCretas`Private`RcVl30[
                    Pattern[VilCretas`Private`Rci, 
                    Blank[]]] := ReplaceAll[
                    First[VilCretas`Private`RcRecurrencia], $CellContext`n -> 
                    VilCretas`Private`Rci]; VilCretas`Private`RcFactoresPrimos[
                    Pattern[VilCretas`Private`Rcm, 
                    Blank[]]] := Module[{}, 
                    If[Length[
                    FactorInteger[VilCretas`Private`Rcm]] == 1, 
                    Part[
                    MapApply[Superscript, 
                    FactorInteger[VilCretas`Private`Rcm]], 1], 
                    Apply[CenterDot, 
                    MapApply[Superscript, 
                    FactorInteger[VilCretas`Private`Rcm]]]]]; 
                    Print["Por el m\[EAcute]todo iterativo:"]; 
                    For[VilCretas`Private`Rci22 = 1, VilCretas`Private`Rci22 <= 
                    VilCretas`Private`Rck, 
                    Print[
                    "n \[Rule] ", VilCretas`Private`Rci22 + 
                    VilCretas`Private`Rcinicio, ": ", 
                    VilCretas`Private`RcFactoresPrimos[
                    Product[
                    VilCretas`Private`RcVl30[
                    VilCretas`Private`Rcinicio + VilCretas`Private`Rci19], {
                    VilCretas`Private`Rci19, 1, 
                    VilCretas`Private`Rci22}]] $CellContext`a[
                    VilCretas`Private`Rcinicio] + If[Sum[Product[
                    VilCretas`Private`RcVl30[
                    VilCretas`Private`Rcinicio + VilCretas`Private`Rci21], {
                    VilCretas`Private`Rci21, VilCretas`Private`Rci20 + 1, 
                    VilCretas`Private`Rci22}] 
                    VilCretas`Private`RcVl29[
                    VilCretas`Private`Rcinicio + VilCretas`Private`Rci20], {
                    VilCretas`Private`Rci20, 1, VilCretas`Private`Rci22 - 1}] != 
                    0, 
                    Sum[
                    VilCretas`Private`RcFactoresPrimos[Product[
                    VilCretas`Private`RcVl30[
                    VilCretas`Private`Rcinicio + VilCretas`Private`Rci21], {
                    VilCretas`Private`Rci21, VilCretas`Private`Rci20 + 1, 
                    VilCretas`Private`Rci22}] 
                    VilCretas`Private`RcVl29[
                    VilCretas`Private`Rcinicio + VilCretas`Private`Rci20]], {
                    VilCretas`Private`Rci20, 1, VilCretas`Private`Rci22 - 1}],
                     0] + If[
                    VilCretas`Private`RcVl29[
                    VilCretas`Private`Rcinicio + VilCretas`Private`Rci22] != 
                    0, 
                    VilCretas`Private`RcFactoresPrimos[
                    VilCretas`Private`RcVl29[
                    VilCretas`Private`Rcinicio + VilCretas`Private`Rci22]], 
                    0]]; Increment[VilCretas`Private`Rci22]]]]; 
                 If[Length[VilCretas`Private`RcRecurrenc] == 2, 
                   VilCretas`Private`MetodoIDOA[
                   VilCretas`Private`RcRecurrenc, VilCretas`Private`Rckkk], 
                   If[Length[VilCretas`Private`RcRecurrenc] == 1, 
                    VilCretas`Private`MetodoIDOA[
                    Append[VilCretas`Private`RcRecurrenc, 0], 
                    VilCretas`Private`Rckkk]]]]]]]]]; If[
           And[
            IntegerQ[
             OptionValue[VilCretas`inicio]], OptionValue[VilCretas`inicio] >= 
            0], 
           If[
            BooleanQ[
             OptionValue[VilCretas`ascendente]], 
            If[
             OptionValue[VilCretas`ascendente], 
             VilCretas`Private`MetodoIA[
             VilCretas`Private`RcRecurrenci, VilCretas`Private`Rckk, 
              OptionValue[VilCretas`inicio]], 
             VilCretas`Private`MetodoID[
             VilCretas`Private`RcRecurrenci, VilCretas`Private`Rckk]]]]]}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, 
    "Options" -> {VilCretas`ascendente -> False, VilCretas`inicio -> 1}, 
    "Attributes" -> {Protected}, "FullName" -> "VilCretas`MetodoI"|>, 
   False]]], "Output",
 CellChangeTimes->{3.9507899460059032`*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"f5788438-2b9c-9d4c-ad0c-bf0c3aa89929"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MetodoI", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", "^", "n"}], "}"}], ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.9507898655118465`*^9, 3.950789905513281*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"47e6c84e-9ce5-1f43-8da6-f060349f0dc1"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Por el m\[EAcute]todo iterativo:\"\>"], "Print",
 CellChangeTimes->{3.950789906098154*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[41]:=",ExpressionUUID->"cb55a86a-69cd-8f4e-bb0b-651e577cf0d4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"n \[Rule] \"\>", "\[InvisibleSpace]", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "n"}], "\[InvisibleSpace]", "\<\": \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"a", "[", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "n"}], "]"}], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     TemplateBox[{"3", "1"},
      "Superscript"], ")"}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"2", " ", "n"}]}]]}],
  SequenceForm[
  "n \[Rule] ", -1 + $CellContext`n, 
   ": ", $CellContext`a[-2 + $CellContext`n] 
   Superscript[3, 1]^(-1 + 2 $CellContext`n)],
  Editable->False]], "Print",
 CellChangeTimes->{3.9507899061191463`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[41]:=",ExpressionUUID->"78ae110d-f18f-4b4a-a53d-ceb0174e6acc"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"n \[Rule] \"\>", "\[InvisibleSpace]", 
   RowBox[{
    RowBox[{"-", "2"}], "+", "n"}], "\[InvisibleSpace]", "\<\": \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"a", "[", 
    RowBox[{
     RowBox[{"-", "3"}], "+", "n"}], "]"}], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     TemplateBox[{"3", "1"},
      "Superscript"], ")"}], 
    RowBox[{
     RowBox[{"-", "3"}], "+", 
     RowBox[{"3", " ", "n"}]}]]}],
  SequenceForm[
  "n \[Rule] ", -2 + $CellContext`n, 
   ": ", $CellContext`a[-3 + $CellContext`n] 
   Superscript[3, 1]^(-3 + 3 $CellContext`n)],
  Editable->False]], "Print",
 CellChangeTimes->{3.9507899061431465`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[41]:=",ExpressionUUID->"836328cf-4031-ec43-89ee-c5d2393181eb"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"n \[Rule] \"\>", "\[InvisibleSpace]", 
   RowBox[{
    RowBox[{"-", "3"}], "+", "n"}], "\[InvisibleSpace]", "\<\": \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"a", "[", 
    RowBox[{
     RowBox[{"-", "4"}], "+", "n"}], "]"}], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     TemplateBox[{"3", "1"},
      "Superscript"], ")"}], 
    RowBox[{
     RowBox[{"-", "6"}], "+", 
     RowBox[{"4", " ", "n"}]}]]}],
  SequenceForm[
  "n \[Rule] ", -3 + $CellContext`n, 
   ": ", $CellContext`a[-4 + $CellContext`n] 
   Superscript[3, 1]^(-6 + 4 $CellContext`n)],
  Editable->False]], "Print",
 CellChangeTimes->{3.9507899061521664`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[41]:=",ExpressionUUID->"8c8b8a6d-ef28-b648-a2da-5d449ac71ebe"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "RR"}]], "Input",
 CellChangeTimes->{{3.950790134570116*^9, 3.950790135333206*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"9834949a-d298-5645-8781-74ced286a271"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Resuelve una relaci\[OAcute]n de recurrencia lineal \
recibiendo como par\[AAcute]metros los coeficientes, la parte no homog\
\[EAcute]nea si existiera y las condiciones iniciales. Sintaxis: \
RR[Coeficientes, Condiciones, n] con \[OpenCurlyDoubleQuote]Coeficientes\
\[CloseCurlyDoubleQuote] un vector de coeficientes en orden descendente y/o \
que contiene la parte no homog\[EAcute]nea (en funci\[OAcute]n de \
\[OpenCurlyDoubleQuote]n\[CloseCurlyDoubleQuote]) de la relaci\[OAcute]n de \
recurrencia como su \[UAcute]ltima componente y \
\[OpenCurlyDoubleQuote]Condiciones\[CloseCurlyDoubleQuote] la lista de \
condiciones iniciales en orden ascendente. El tercer argumento indica la \
variable mediante la cual se visualizar\[AAcute] la soluci\[OAcute]n. La opci\
\[OAcute]n \[OpenCurlyDoubleQuote]inicio->Valor\[CloseCurlyDoubleQuote] \
comienza las condiciones iniciales en \[OpenCurlyDoubleQuote]Valor\
\[CloseCurlyDoubleQuote]. En principio \[OpenCurlyDoubleQuote]Valor=1\
\[CloseCurlyDoubleQuote] pues se asume el dominio como el conjunto de los n\
\[UAcute]meros naturales (no incluye el cero).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"RR", "[", 
                    
                    RowBox[{
                    "VilCretas`Private`RcRecurrenci_List", ",", 
                    "VilCretas`Private`RcCondicione_List", ",", 
                    "VilCretas`Private`Rcsoll_", ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"VilCretas`Private`RRO", ",", 
                    "VilCretas`Private`VerificandoParametroQ"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"Clear", "[", "n", "]"}], ";", 
                    RowBox[{
                    
                    RowBox[{"VilCretas`Private`VerificandoParametroQ", "[", 
                    "VilCretas`Private`RcParametro_", "]"}], ":=", 
                    RowBox[{"Quiet", "[", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"ListQ", "[", 
                    RowBox[{"Solve", "[", 
                    RowBox[{
                    
                    RowBox[{"VilCretas`Private`RcParametro", "\[Equal]", 
                    "VilCretas`Private`RcParametro"}], ",", 
                    "VilCretas`Private`RcParametro"}], "]"}], "]"}], ",", 
                    "True", ",", "False"}], "]"}], "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`RRO", "[", 
                    
                    RowBox[{"VilCretas`Private`RcRecurrencia_List", ",", 
                    "VilCretas`Private`RcCondiciones_List", ",", 
                    "VilCretas`Private`Rcsol_", ",", 
                    "VilCretas`Private`Rcinicio_"}], "]"}], ":=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringQ", "[", "VilCretas`Private`Rcsol", "]"}], 
                    "\[Equal]", "False"}], "&&", 
                    RowBox[{
                    RowBox[{"NumericQ", "[", "VilCretas`Private`Rcsol", "]"}],
                     "\[Equal]", "False"}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"VilCretas`Private`RcRecurrencia", ",", 
                    "VilCretas`Private`RcCondiciones", ",", 
                    "VilCretas`Private`Rcsol"}], "}"}], ",", "Null"}], "]"}], 
                    "\[Equal]", "False"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"VectorQ", "[", "VilCretas`Private`RcRecurrencia",
                     "]"}], "&&", 
                    
                    RowBox[{"VectorQ", "[", "VilCretas`Private`RcCondiciones",
                     "]"}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"VilCretas`Private`RcRecurrencia", "\[NotEqual]", 
                    RowBox[{"{", "}"}]}], "&&", 
                    RowBox[{"VilCretas`Private`RcCondiciones", "\[NotEqual]", 
                    RowBox[{"{", "}"}]}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"VilCretas`Private`RcRecurrencia", ",", "Null"}], 
                    "]"}], "\[Equal]", "False"}], "&&", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"VilCretas`Private`RcCondiciones", ",", "Null"}], 
                    "]"}], "\[Equal]", "False"}]}], ",", 
                    RowBox[{
                    RowBox[{"Clear", "[", "VilCretas`Private`Rcsol", "]"}], 
                    ";", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`RcList2", "=", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"VilCretas`Private`RcVl5", "=", 
                    RowBox[{
                    
                    RowBox[{"Variables", "[", "VilCretas`Private`Rcsol", 
                    "]"}], "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    "VilCretas`Private`RcLastSuma2"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"Clear", "[", "VilCretas`Private`Rca2", "]"}], 
                    ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"Length", "[", "VilCretas`Private`RcRecurrencia", 
                    "]"}], "-", "1"}], "\[Equal]", 
                    
                    RowBox[{"Length", "[", "VilCretas`Private`RcCondiciones", 
                    "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`RcVl4", "=", 
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"VilCretas`Private`Rci2", "=", "1"}], 
                    RowBox[{
                    
                    RowBox[{"Length", "[", "VilCretas`Private`RcRecurrencia", 
                    "]"}], "-", "1"}]], 
                    RowBox[{
                    
                    RowBox[{"VilCretas`Private`RcRecurrencia", 
                    "\[LeftDoubleBracket]", "VilCretas`Private`Rci2", 
                    "\[RightDoubleBracket]"}], " ", 
                    RowBox[{"VilCretas`Private`Rca2", "[", 
                    
                    RowBox[{"VilCretas`Private`RcVl5", "-", 
                    "VilCretas`Private`Rci2"}], "]"}]}]}]}], ";", 
                    RowBox[{
                    
                    RowBox[{"VilCretas`Private`RcLastSuma2", "[", 
                    "VilCretas`Private`Rci_", "]"}], ":=", 
                    RowBox[{
                    RowBox[{"Together", "[", 
                    RowBox[{"Expand", "[", 
                    
                    RowBox[{"Last", "[", "VilCretas`Private`RcRecurrencia", 
                    "]"}], "]"}], "]"}], "/.", "\[VeryThinSpace]", 
                    RowBox[{"n", "\[Rule]", "VilCretas`Private`Rci"}]}]}], 
                    ";", 
                    RowBox[{"VilCretas`Private`RcVl4", "=", 
                    RowBox[{"VilCretas`Private`RcVl4", "+", 
                    
                    RowBox[{"VilCretas`Private`RcLastSuma2", "[", 
                    "VilCretas`Private`RcVl5", "]"}]}]}], ";", 
                    RowBox[{"VilCretas`Private`RcVl4", "=", 
                    RowBox[{
                    
                    RowBox[{"VilCretas`Private`Rca2", "[", 
                    "VilCretas`Private`RcVl5", "]"}], "\[Equal]", 
                    "VilCretas`Private`RcVl4"}]}], ";", 
                    RowBox[{"VilCretas`Private`RcList2", "=", 
                    RowBox[{"Append", "[", 
                    
                    RowBox[{"VilCretas`Private`RcList2", ",", 
                    "VilCretas`Private`RcVl4"}], "]"}]}], ";", 
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`Rci2", "=", "1"}], ",", 
                    RowBox[{"VilCretas`Private`Rci2", "\[LessEqual]", 
                    
                    RowBox[{"Length", "[", "VilCretas`Private`RcCondiciones", 
                    "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`RcList2", "=", 
                    RowBox[{"Append", "[", 
                    RowBox[{"VilCretas`Private`RcList2", ",", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`Rca2", "[", 
                    
                    RowBox[{"VilCretas`Private`Rci2", "+", 
                    "VilCretas`Private`Rcinicio", "-", "1"}], "]"}], 
                    "\[Equal]", 
                    RowBox[{"VilCretas`Private`RcCondiciones", 
                    "\[LeftDoubleBracket]", "VilCretas`Private`Rci2", 
                    "\[RightDoubleBracket]"}]}]}], "]"}]}], ";", 
                    RowBox[{"VilCretas`Private`Rci2", "++"}]}]}], "]"}], ";", 
                    RowBox[{"VilCretas`Private`RcSolucion1", "=", 
                    RowBox[{"Quiet", "[", 
                    RowBox[{"RSolve", "[", 
                    RowBox[{"VilCretas`Private`RcList2", ",", 
                    
                    RowBox[{"VilCretas`Private`Rca2", "[", 
                    "VilCretas`Private`RcVl5", "]"}], ",", 
                    "VilCretas`Private`RcVl5"}], "]"}], "]"}]}], ";", 
                    RowBox[{
                    
                    RowBox[{"Flatten", "[", "VilCretas`Private`RcSolucion1", 
                    "]"}], "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"Length", "[", "VilCretas`Private`RcRecurrencia", 
                    "]"}], "\[Equal]", 
                    RowBox[{
                    "Length", "[", "VilCretas`Private`RcCondiciones", "]"}]}],
                     ",", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`RcVl4", "=", 
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"VilCretas`Private`Rci2", "=", "1"}], 
                    RowBox[{"Length", "[", "VilCretas`Private`RcRecurrencia", 
                    "]"}]], 
                    RowBox[{
                    
                    RowBox[{"VilCretas`Private`RcRecurrencia", 
                    "\[LeftDoubleBracket]", "VilCretas`Private`Rci2", 
                    "\[RightDoubleBracket]"}], " ", 
                    RowBox[{"VilCretas`Private`Rca2", "[", 
                    
                    RowBox[{"VilCretas`Private`RcVl5", "-", 
                    "VilCretas`Private`Rci2"}], "]"}]}]}]}], ";", 
                    RowBox[{"VilCretas`Private`RcVl4", "=", 
                    RowBox[{
                    
                    RowBox[{"VilCretas`Private`Rca2", "[", 
                    "VilCretas`Private`RcVl5", "]"}], "\[Equal]", 
                    "VilCretas`Private`RcVl4"}]}], ";", 
                    RowBox[{"VilCretas`Private`RcList2", "=", 
                    RowBox[{"Append", "[", 
                    
                    RowBox[{"VilCretas`Private`RcList2", ",", 
                    "VilCretas`Private`RcVl4"}], "]"}]}], ";", 
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`Rci2", "=", "1"}], ",", 
                    RowBox[{"VilCretas`Private`Rci2", "\[LessEqual]", 
                    
                    RowBox[{"Length", "[", "VilCretas`Private`RcCondiciones", 
                    "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`RcList2", "=", 
                    RowBox[{"Append", "[", 
                    RowBox[{"VilCretas`Private`RcList2", ",", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`Rca2", "[", 
                    
                    RowBox[{"VilCretas`Private`Rci2", "+", 
                    "VilCretas`Private`Rcinicio", "-", "1"}], "]"}], 
                    "\[Equal]", 
                    RowBox[{"VilCretas`Private`RcCondiciones", 
                    "\[LeftDoubleBracket]", "VilCretas`Private`Rci2", 
                    "\[RightDoubleBracket]"}]}]}], "]"}]}], ";", 
                    RowBox[{"VilCretas`Private`Rci2", "++"}]}]}], "]"}], ";", 
                    RowBox[{"VilCretas`Private`RcSolucion1", "=", 
                    RowBox[{"Quiet", "[", 
                    RowBox[{"RSolve", "[", 
                    RowBox[{"VilCretas`Private`RcList2", ",", 
                    
                    RowBox[{"VilCretas`Private`Rca2", "[", 
                    "VilCretas`Private`RcVl5", "]"}], ",", 
                    "VilCretas`Private`RcVl5"}], "]"}], "]"}]}], ";", 
                    RowBox[{
                    
                    RowBox[{"Flatten", "[", "VilCretas`Private`RcSolucion1", 
                    "]"}], "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"Length", "[", "VilCretas`Private`RcRecurrencia", 
                    "]"}], "-", "1"}], "\[Equal]", 
                    
                    RowBox[{"Length", "[", "VilCretas`Private`RcCondiciones", 
                    "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`RcVl4", "=", 
                    RowBox[{
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"VilCretas`Private`Rci2", "=", "1"}], 
                    RowBox[{
                    
                    RowBox[{"Length", "[", "VilCretas`Private`RcRecurrencia", 
                    "]"}], "-", "1"}]], 
                    RowBox[{
                    
                    RowBox[{"VilCretas`Private`RcRecurrencia", 
                    "\[LeftDoubleBracket]", "VilCretas`Private`Rci2", 
                    "\[RightDoubleBracket]"}], " ", 
                    RowBox[{"VilCretas`Private`Rca2", "[", 
                    
                    RowBox[{"VilCretas`Private`RcVl5", "-", 
                    "VilCretas`Private`Rci2"}], "]"}]}]}], "+", 
                    
                    RowBox[{"Last", "[", "VilCretas`Private`RcRecurrencia", 
                    "]"}]}]}], ";", 
                    RowBox[{"VilCretas`Private`RcVl4", "=", 
                    RowBox[{
                    
                    RowBox[{"VilCretas`Private`Rca2", "[", 
                    "VilCretas`Private`RcVl5", "]"}], "\[Equal]", 
                    "VilCretas`Private`RcVl4"}]}], ";", 
                    RowBox[{"VilCretas`Private`RcList2", "=", 
                    RowBox[{"Append", "[", 
                    
                    RowBox[{"VilCretas`Private`RcList2", ",", 
                    "VilCretas`Private`RcVl4"}], "]"}]}], ";", 
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`Rci2", "=", "1"}], ",", 
                    RowBox[{"VilCretas`Private`Rci2", "\[LessEqual]", 
                    
                    RowBox[{"Length", "[", "VilCretas`Private`RcCondiciones", 
                    "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`RcList2", "=", 
                    RowBox[{"Append", "[", 
                    RowBox[{"VilCretas`Private`RcList2", ",", 
                    RowBox[{
                    RowBox[{"VilCretas`Private`Rca2", "[", 
                    
                    RowBox[{"VilCretas`Private`Rci2", "+", 
                    "VilCretas`Private`Rcinicio", "-", "1"}], "]"}], 
                    "\[Equal]", 
                    RowBox[{"VilCretas`Private`RcCondiciones", 
                    "\[LeftDoubleBracket]", "VilCretas`Private`Rci2", 
                    "\[RightDoubleBracket]"}]}]}], "]"}]}], ";", 
                    RowBox[{"VilCretas`Private`Rci2", "++"}]}]}], "]"}], ";", 
                    RowBox[{"VilCretas`Private`RcSolucion1", "=", 
                    RowBox[{"Quiet", "[", 
                    RowBox[{"RSolve", "[", 
                    RowBox[{"VilCretas`Private`RcList2", ",", 
                    
                    RowBox[{"VilCretas`Private`Rca2", "[", 
                    "VilCretas`Private`RcVl5", "]"}], ",", 
                    "VilCretas`Private`RcVl5"}], "]"}], "]"}]}], ";", 
                    RowBox[{
                    
                    RowBox[{"Flatten", "[", "VilCretas`Private`RcSolucion1", 
                    "]"}], "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}]}], 
                    "]"}]}], "]"}]}], "]"}]}]}], "]"}]}]}], "]"}]}], "]"}]}], 
                    "]"}]}], "]"}]}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    
                    RowBox[{"VilCretas`Private`VerificandoParametroQ", "[", 
                    "VilCretas`Private`Rcsoll", "]"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"IntegerQ", "[", 
                    RowBox[{"OptionValue", "[", "inicio", "]"}], "]"}], "&&", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "inicio", "]"}], 
                    "\[GreaterEqual]", "0"}]}], ",", 
                    RowBox[{"VilCretas`Private`RRO", "[", 
                    
                    RowBox[{"VilCretas`Private`RcRecurrenci", ",", 
                    "VilCretas`Private`RcCondicione", ",", 
                    "VilCretas`Private`Rcsoll", ",", 
                    RowBox[{"OptionValue", "[", "inicio", "]"}]}], "]"}]}], 
                    "]"}]}], "]"}]}]}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                   RowBox[{"inicio", "\[Rule]", "1"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"VilCretas`RR\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Resuelve una relaci\[OAcute]n de recurrencia lineal \
recibiendo como par\[AAcute]metros los coeficientes, la parte no homog\
\[EAcute]nea si existiera y las condiciones iniciales. Sintaxis: \
RR[Coeficientes, Condiciones, n] con \[OpenCurlyDoubleQuote]Coeficientes\
\[CloseCurlyDoubleQuote] un vector de coeficientes en orden descendente y/o \
que contiene la parte no homog\[EAcute]nea (en funci\[OAcute]n de \
\[OpenCurlyDoubleQuote]n\[CloseCurlyDoubleQuote]) de la relaci\[OAcute]n de \
recurrencia como su \[UAcute]ltima componente y \
\[OpenCurlyDoubleQuote]Condiciones\[CloseCurlyDoubleQuote] la lista de \
condiciones iniciales en orden ascendente. El tercer argumento indica la \
variable mediante la cual se visualizar\[AAcute] la soluci\[OAcute]n. La opci\
\[OAcute]n \[OpenCurlyDoubleQuote]inicio->Valor\[CloseCurlyDoubleQuote] \
comienza las condiciones iniciales en \[OpenCurlyDoubleQuote]Valor\
\[CloseCurlyDoubleQuote]. En principio \[OpenCurlyDoubleQuote]Valor=1\
\[CloseCurlyDoubleQuote] pues se asume el dominio como el conjunto de los n\
\[UAcute]meros naturales (no incluye el cero).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "Resuelve una relaci\[OAcute]n de recurrencia lineal recibiendo como par\
\[AAcute]metros los coeficientes, la parte no homog\[EAcute]nea si existiera \
y las condiciones iniciales. Sintaxis: RR[Coeficientes, Condiciones, n] con \
\[OpenCurlyDoubleQuote]Coeficientes\[CloseCurlyDoubleQuote] un vector de \
coeficientes en orden descendente y/o que contiene la parte no \
homog\[EAcute]nea (en funci\[OAcute]n de \[OpenCurlyDoubleQuote]n\
\[CloseCurlyDoubleQuote]) de la relaci\[OAcute]n de recurrencia como su \
\[UAcute]ltima componente y \[OpenCurlyDoubleQuote]Condiciones\
\[CloseCurlyDoubleQuote] la lista de condiciones iniciales en orden \
ascendente. El tercer argumento indica la variable mediante la cual se \
visualizar\[AAcute] la soluci\[OAcute]n. La opci\[OAcute]n \
\[OpenCurlyDoubleQuote]inicio->Valor\[CloseCurlyDoubleQuote] comienza las \
condiciones iniciales en \
\[OpenCurlyDoubleQuote]Valor\[CloseCurlyDoubleQuote]. En principio \
\[OpenCurlyDoubleQuote]Valor=1\[CloseCurlyDoubleQuote] pues se asume el \
dominio como el conjunto de los n\[UAcute]meros naturales (no incluye el \
cero).", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[DownValues, VilCretas`RR, {VilCretas`RR[
         Pattern[VilCretas`Private`RcRecurrenci, 
          Blank[List]], 
         Pattern[VilCretas`Private`RcCondicione, 
          Blank[List]], 
         Pattern[VilCretas`Private`Rcsoll, 
          Blank[]], 
         OptionsPattern[]] :> 
       Module[{VilCretas`Private`RRO, 
          VilCretas`Private`VerificandoParametroQ}, Clear[$CellContext`n]; 
         VilCretas`Private`VerificandoParametroQ[
            Pattern[VilCretas`Private`RcParametro, 
             Blank[]]] := Quiet[
            If[
             ListQ[
              Solve[
              VilCretas`Private`RcParametro == VilCretas`Private`RcParametro, 
               VilCretas`Private`RcParametro]], True, False]]; 
         VilCretas`Private`RRO[
            Pattern[VilCretas`Private`RcRecurrencia, 
             Blank[List]], 
            Pattern[VilCretas`Private`RcCondiciones, 
             Blank[List]], 
            Pattern[VilCretas`Private`Rcsol, 
             Blank[]], 
            Pattern[VilCretas`Private`Rcinicio, 
             Blank[]]] := If[
            And[
            StringQ[VilCretas`Private`Rcsol] == False, 
             NumericQ[VilCretas`Private`Rcsol] == False], 
            If[
            MemberQ[{
               VilCretas`Private`RcRecurrencia, 
                VilCretas`Private`RcCondiciones, VilCretas`Private`Rcsol}, 
               Null] == False, 
             If[
              And[
               VectorQ[VilCretas`Private`RcRecurrencia], 
               VectorQ[VilCretas`Private`RcCondiciones]], 
              If[
               And[
               VilCretas`Private`RcRecurrencia != {}, 
                VilCretas`Private`RcCondiciones != {}], 
               If[
                And[
                MemberQ[VilCretas`Private`RcRecurrencia, Null] == False, 
                 MemberQ[VilCretas`Private`RcCondiciones, Null] == False], 
                Clear[VilCretas`Private`Rcsol]; 
                Module[{
                  VilCretas`Private`RcList2 = {}, VilCretas`Private`RcVl5 = 
                   Part[
                    Variables[VilCretas`Private`Rcsol], 1], 
                   VilCretas`Private`RcLastSuma2}, 
                  Clear[VilCretas`Private`Rca2]; 
                  If[Length[VilCretas`Private`RcRecurrencia] - 1 == 
                    Length[VilCretas`Private`RcCondiciones], 
                    VilCretas`Private`RcVl4 = 
                    Sum[Part[
                    VilCretas`Private`RcRecurrencia, VilCretas`Private`Rci2] 
                    VilCretas`Private`Rca2[
                    VilCretas`Private`RcVl5 - VilCretas`Private`Rci2], {
                    VilCretas`Private`Rci2, 1, 
                    Length[VilCretas`Private`RcRecurrencia] - 1}]; 
                    VilCretas`Private`RcLastSuma2[
                    Pattern[VilCretas`Private`Rci, 
                    Blank[]]] := ReplaceAll[
                    Together[
                    Expand[
                    Last[VilCretas`Private`RcRecurrencia]]], $CellContext`n -> 
                    VilCretas`Private`Rci]; 
                    VilCretas`Private`RcVl4 = 
                    VilCretas`Private`RcVl4 + 
                    VilCretas`Private`RcLastSuma2[VilCretas`Private`RcVl5]; 
                    VilCretas`Private`RcVl4 = 
                    VilCretas`Private`Rca2[VilCretas`Private`RcVl5] == 
                    VilCretas`Private`RcVl4; 
                    VilCretas`Private`RcList2 = 
                    Append[VilCretas`Private`RcList2, 
                    VilCretas`Private`RcVl4]; 
                    For[VilCretas`Private`Rci2 = 1, VilCretas`Private`Rci2 <= 
                    Length[VilCretas`Private`RcCondiciones], 
                    VilCretas`Private`RcList2 = 
                    Append[VilCretas`Private`RcList2, 
                    VilCretas`Private`Rca2[
                    VilCretas`Private`Rci2 + VilCretas`Private`Rcinicio - 1] == 
                    Part[VilCretas`Private`RcCondiciones, 
                    VilCretas`Private`Rci2]]; 
                    Increment[VilCretas`Private`Rci2]]; 
                    VilCretas`Private`RcSolucion1 = Quiet[
                    RSolve[VilCretas`Private`RcList2, 
                    VilCretas`Private`Rca2[VilCretas`Private`RcVl5], 
                    VilCretas`Private`RcVl5]]; Part[
                    Flatten[VilCretas`Private`RcSolucion1], 1, 2], 
                    If[
                    Length[VilCretas`Private`RcRecurrencia] == 
                    Length[VilCretas`Private`RcCondiciones], 
                    VilCretas`Private`RcVl4 = 
                    Sum[Part[
                    VilCretas`Private`RcRecurrencia, VilCretas`Private`Rci2] 
                    VilCretas`Private`Rca2[
                    VilCretas`Private`RcVl5 - VilCretas`Private`Rci2], {
                    VilCretas`Private`Rci2, 1, 
                    Length[VilCretas`Private`RcRecurrencia]}]; 
                    VilCretas`Private`RcVl4 = 
                    VilCretas`Private`Rca2[VilCretas`Private`RcVl5] == 
                    VilCretas`Private`RcVl4; 
                    VilCretas`Private`RcList2 = 
                    Append[VilCretas`Private`RcList2, 
                    VilCretas`Private`RcVl4]; 
                    For[VilCretas`Private`Rci2 = 1, VilCretas`Private`Rci2 <= 
                    Length[VilCretas`Private`RcCondiciones], 
                    VilCretas`Private`RcList2 = 
                    Append[VilCretas`Private`RcList2, 
                    VilCretas`Private`Rca2[
                    VilCretas`Private`Rci2 + VilCretas`Private`Rcinicio - 1] == 
                    Part[VilCretas`Private`RcCondiciones, 
                    VilCretas`Private`Rci2]]; 
                    Increment[VilCretas`Private`Rci2]]; 
                    VilCretas`Private`RcSolucion1 = Quiet[
                    RSolve[VilCretas`Private`RcList2, 
                    VilCretas`Private`Rca2[VilCretas`Private`RcVl5], 
                    VilCretas`Private`RcVl5]]; Part[
                    Flatten[VilCretas`Private`RcSolucion1], 1, 2], 
                    If[
                    Length[VilCretas`Private`RcRecurrencia] - 1 == 
                    Length[VilCretas`Private`RcCondiciones], 
                    VilCretas`Private`RcVl4 = 
                    Sum[Part[
                    VilCretas`Private`RcRecurrencia, VilCretas`Private`Rci2] 
                    VilCretas`Private`Rca2[
                    VilCretas`Private`RcVl5 - VilCretas`Private`Rci2], {
                    VilCretas`Private`Rci2, 1, 
                    Length[VilCretas`Private`RcRecurrencia] - 1}] + 
                    Last[VilCretas`Private`RcRecurrencia]; 
                    VilCretas`Private`RcVl4 = 
                    VilCretas`Private`Rca2[VilCretas`Private`RcVl5] == 
                    VilCretas`Private`RcVl4; 
                    VilCretas`Private`RcList2 = 
                    Append[VilCretas`Private`RcList2, 
                    VilCretas`Private`RcVl4]; 
                    For[VilCretas`Private`Rci2 = 1, VilCretas`Private`Rci2 <= 
                    Length[VilCretas`Private`RcCondiciones], 
                    VilCretas`Private`RcList2 = 
                    Append[VilCretas`Private`RcList2, 
                    VilCretas`Private`Rca2[
                    VilCretas`Private`Rci2 + VilCretas`Private`Rcinicio - 1] == 
                    Part[VilCretas`Private`RcCondiciones, 
                    VilCretas`Private`Rci2]]; 
                    Increment[VilCretas`Private`Rci2]]; 
                    VilCretas`Private`RcSolucion1 = Quiet[
                    RSolve[VilCretas`Private`RcList2, 
                    VilCretas`Private`Rca2[VilCretas`Private`RcVl5], 
                    VilCretas`Private`RcVl5]]; Part[
                    Flatten[VilCretas`Private`RcSolucion1], 1, 2]]]]]]]]]]; If[
           VilCretas`Private`VerificandoParametroQ[VilCretas`Private`Rcsoll], 
           If[
            And[
             IntegerQ[
              OptionValue[VilCretas`inicio]], OptionValue[VilCretas`inicio] >= 
             0], 
            VilCretas`Private`RRO[
            VilCretas`Private`RcRecurrenci, VilCretas`Private`RcCondicione, 
             VilCretas`Private`Rcsoll, 
             OptionValue[VilCretas`inicio]]]]]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {VilCretas`inicio -> 1}, "Attributes" -> {Protected}, 
    "FullName" -> "VilCretas`RR"|>, False]]], "Output",
 CellChangeTimes->{3.950790136449583*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"a15cb796-22e8-c04d-b083-965bd4557663"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RR", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", "^", "n"}], "}"}], ",", 
   RowBox[{"{", "2", "}"}], ",", "n", ",", 
   RowBox[{"inicio", "->", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9507901867451344`*^9, 3.950790227913872*^9}, {
  3.950790302237999*^9, 3.950790332183735*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"8d65d5a3-8332-f14f-81ef-ac411c8af974"],

Cell[BoxData[
 RowBox[{"2", " ", 
  SuperscriptBox["3", 
   RowBox[{
    FractionBox["n", "2"], "+", 
    FractionBox[
     SuperscriptBox["n", "2"], "2"]}]]}]], "Output",
 CellChangeTimes->{
  3.9507902432935867`*^9, {3.950790303520214*^9, 3.9507903328617287`*^9}},
 CellLabel->"Out[47]=",ExpressionUUID->"42b2e9e1-d448-2a42-a7cc-38a2a3702681"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PlotFactorialRecursionTree", "[", "5", "]"}]], "Input",
 CellChangeTimes->{{3.9507904448143177`*^9, 3.950790449243784*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"10f28bf6-41a3-db45-b46d-7f096f3fbd35"],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox["\<\"C:\\\\Program Files\\\\Wolfram Research\\\\Mathematica\\\\14.0\
\\\\SystemFiles\\\\Components\\\\WolframClientForPython\\\\wolframclient\\\\\
serializers\\\\utils.py:12: SyntaxWarning: invalid escape sequence \
'\\\\.'\"\>", "Message",
  StripOnInput->False,
  FontFamily->"Source Code Pro"]], "Print",
 CellChangeTimes->{3.9507904623369827`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[48]:=",ExpressionUUID->"eac91723-148e-4244-89d0-fa01ea35a68d"],

Cell[BoxData[
 StyleBox["\<\"  chr(0): \\\"\\\\.00\\\",\"\>", "Message",
  StripOnInput->False,
  FontFamily->"Source Code Pro"]], "Print",
 CellChangeTimes->{3.950790462392824*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[48]:=",ExpressionUUID->"66a4c07a-4ed1-d544-84f8-68fda92d0477"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.9507906764287586`*^9, 
  3.9507906785310745`*^9}},ExpressionUUID->"21ee59eb-495c-2c46-af3b-\
f6ee3c09f67e"],

Cell[BoxData[
 RowBox[{"MetodoI", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", "+", 
     RowBox[{"2", "n"}], "-", 
     SqrtBox["2"]}], "}"}], ",", " ", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.950790569745573*^9, 3.950790597023937*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"787a5c4d-9459-6144-af2f-17467e71ad6f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SqrtBox["2"], "//", "N"}]], "Input",
 CellChangeTimes->{{3.9507906295996437`*^9, 3.950790636051262*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"9b076395-0ab3-d24b-ba22-261258b4017a"],

Cell[BoxData["1.4142135623730951`"], "Output",
 CellChangeTimes->{{3.9507906310574894`*^9, 3.950790636870096*^9}},
 CellLabel->"Out[51]=",ExpressionUUID->"b82253ae-3bee-a742-a6c1-1986369c5fe4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RR", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", 
     RowBox[{
      RowBox[{"2", "n"}], "-", 
      SqrtBox["2"]}]}], " ", "}"}], ",", 
   RowBox[{"{", "2", "}"}], ",", "n", ",", 
   RowBox[{"inicio", "->", "5"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.950790645544737*^9, 3.950790729309347*^9}, {
  3.9507907768199368`*^9, 3.950790777236105*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"3d2b573c-0c43-5a45-b8a9-ba8e4e6fe08c"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", "15625"}], "+", 
   RowBox[{"6250", " ", 
    SqrtBox["2"]}], "+", 
   RowBox[{"41", " ", 
    SuperscriptBox["5", "n"]}], "-", 
   RowBox[{"2", " ", 
    SqrtBox["2"], " ", 
    SuperscriptBox["5", "n"]}], "-", 
   RowBox[{"12500", " ", "n"}]}], "25000"]], "Output",
 CellChangeTimes->{3.9507907796134224`*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"5d7d4029-4e7d-874f-8f02-b32b9eb5408a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RR", "[", 
  RowBox[{
   RowBox[{"{", "1.13", "}"}], ",", 
   RowBox[{"{", "300", "}"}], ",", "n"}], "]"}]], "Input",
 CellChangeTimes->{{3.9507909244109154`*^9, 3.9507909405752296`*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"ac00ee85-fbd2-3b4f-8252-b5b1ff0b74ea"],

Cell[BoxData[
 RowBox[{"265.4867256637168`", " ", 
  SuperscriptBox["0.8849557522123894`", 
   RowBox[{
    RowBox[{"-", "1.`"}], " ", "n"}]]}]], "Output",
 CellChangeTimes->{3.9507909416751385`*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"b49b8028-7839-484a-9bba-aeace459d957"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RR", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0.13"}], "}"}], ",", 
   RowBox[{"{", "300", "}"}], ",", "n"}], "]"}]], "Input",
 CellChangeTimes->{{3.9507909439418087`*^9, 3.950790955270117*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"1d04e6c0-11fb-014e-a32b-a53ba4f6b55d"],

Cell[BoxData[
 RowBox[{"299.87`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.13`", " ", "n"}]}]], "Output",
 CellChangeTimes->{3.9507909562606735`*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"9f452a68-0156-924f-8eab-a61c9f74eb0f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RR", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"-", "7"}], "4"], ",", 
     FractionBox[
      RowBox[{"-", "49"}], "64"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SqrtBox["1"], ",", 
     SqrtBox[
      FractionBox["4", "5"]]}], "}"}], ",", "n"}], "]"}]], "Input",
 CellChangeTimes->{{3.9507912240566254`*^9, 3.950791295852556*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"40995151-3b70-994a-af28-7eb379a95340"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "5"], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"-", "1"}], ")"}], "n"], " ", 
  SuperscriptBox["2", 
   RowBox[{"3", "-", 
    RowBox[{"3", " ", "n"}]}]], " ", 
  SuperscriptBox["7", 
   RowBox[{
    RowBox[{"-", "2"}], "+", "n"}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "70"}], "-", 
    RowBox[{"16", " ", 
     SqrtBox["5"]}], "+", 
    RowBox[{"35", " ", "n"}], "+", 
    RowBox[{"16", " ", 
     SqrtBox["5"], " ", "n"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.9507913175718365`*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"00b64fa3-37a8-d54c-81a7-8c2228783f93"]
}, Open  ]]
},
WindowSize->{1152, 579.6},
WindowMargins->{{
  Automatic, -5.399999999999864}, {-5.399999999999977, Automatic}},
Magnification:>0.8 Inherited,
FrontEndVersion->"14.0 para Microsoft Windows (64-bit) (December 12, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"4f61d2a3-38d5-524e-a5dc-4e881a98bbf9"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 198, 3, 28, "Input",ExpressionUUID->"b415b3e8-4a29-a84a-88fa-fd3fb7cc623e"],
Cell[781, 27, 456, 12, 22, "Print",ExpressionUUID->"2b9495bf-20a9-5548-8e24-9a8af6115616"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1274, 44, 228, 3, 28, "Input",ExpressionUUID->"ef1b5f92-054d-794d-8cf2-88bf2635c03d"],
Cell[1505, 49, 474841, 7729, 153, 254482, 4115, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"becea8dd-ce57-264d-b884-ae646c6761c7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[476383, 7783, 197, 3, 28, "Input",ExpressionUUID->"567baece-7916-8340-8d0c-fe25c9e396eb"],
Cell[476583, 7788, 53034, 1111, 219, "Output",ExpressionUUID->"479e8389-bfb9-f247-9a33-623b934cdd29"]
}, Open  ]],
Cell[CellGroupData[{
Cell[529654, 8904, 538, 11, 28, "Input",ExpressionUUID->"a4fee322-3ddb-4b48-b961-086ac2319963"],
Cell[530195, 8917, 3940, 102, 217, "Output",ExpressionUUID->"acbaa024-18e3-b743-8e25-aacd47800eea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[534172, 9024, 348, 8, 28, "Input",ExpressionUUID->"8e3232a9-4b8b-b340-a67b-898b2e57c0ba"],
Cell[534523, 9034, 683, 14, 52, "Output",ExpressionUUID->"dc7c28ee-2720-744f-8670-b1d55d8a8bf1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[535243, 9053, 759, 19, 48, "Input",ExpressionUUID->"24898f85-4218-8941-b9a8-96542dd35756"],
Cell[536005, 9074, 4127, 103, 224, "Output",ExpressionUUID->"fe19f13d-fd72-204b-a958-1b418c158a7c"],
Cell[540135, 9179, 672, 11, 71, "Output",ExpressionUUID->"b42f7c13-9930-6742-b6f9-93895f30cd8f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[540844, 9195, 202, 3, 28, "Input",ExpressionUUID->"07d62ec7-b2e9-f545-9b64-40760952c4d7"],
Cell[541049, 9200, 36263, 792, 143, "Output",ExpressionUUID->"f8a5b591-4eda-9443-ad86-d14cee905eec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[577349, 9997, 390, 8, 43, "Input",ExpressionUUID->"5790f78b-3f08-a448-91ce-a91991af5931"],
Cell[577742, 10007, 447, 10, 28, "Message",ExpressionUUID->"b3009c6b-1d62-784b-8f93-4daf48dd5df1"],
Cell[578192, 10019, 447, 10, 28, "Message",ExpressionUUID->"57e49151-1034-e14a-98e4-e6e37daa7a05"],
Cell[578642, 10031, 447, 10, 28, "Message",ExpressionUUID->"ee407b59-1c11-9d4a-be76-bd5a2b406aa2"],
Cell[579092, 10043, 462, 10, 28, "Message",ExpressionUUID->"c5f156f8-7cb5-f54b-81ed-1af1fabb37d6"],
Cell[579557, 10055, 156, 2, 32, "Output",ExpressionUUID->"22e1c078-7c2f-4a44-b528-8ecc3bb7d965"]
}, Open  ]],
Cell[CellGroupData[{
Cell[579750, 10062, 212, 3, 28, "Input",ExpressionUUID->"72b5bb70-2441-c94b-9565-28891b3ab221"],
Cell[579965, 10067, 150, 2, 32, "Output",ExpressionUUID->"4b183a8a-6a11-814f-89b5-d9d7c27a450a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[580152, 10074, 329, 7, 43, "Input",ExpressionUUID->"f212be17-2196-454e-b1e3-7df9c27e0193"],
Cell[580484, 10083, 250, 5, 32, "Output",ExpressionUUID->"0a45b1af-ddd1-6e44-8c6b-7480b1c2b7d9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[580771, 10093, 250, 4, 28, "Input",ExpressionUUID->"7fc1da46-fc6f-1245-a2b0-76d8f39720d6"],
Cell[581024, 10099, 152, 2, 32, "Output",ExpressionUUID->"5923ef94-0bb4-fd45-b821-124eddec3b14"]
}, Open  ]],
Cell[CellGroupData[{
Cell[581213, 10106, 548, 13, 28, "Input",ExpressionUUID->"aa52bc7a-728e-e44d-8b95-90b34fb1a4d7"],
Cell[581764, 10121, 4110, 103, 221, "Output",ExpressionUUID->"64b6d934-ef0a-7746-9100-0529f1019fd8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[585911, 10229, 442, 11, 43, "Input",ExpressionUUID->"ec1aa33d-c86c-e045-8fdd-bc4458663b2b"],
Cell[586356, 10242, 181, 2, 32, "Output",ExpressionUUID->"33bb37b3-e761-2a4c-becd-13d3f2ab2d0b"]
}, Open  ]],
Cell[586552, 10247, 1030, 31, 130, "Input",ExpressionUUID->"5c00dcca-b9e0-d84b-8bda-ee408d4dc165"],
Cell[CellGroupData[{
Cell[587607, 10282, 326, 7, 43, "Input",ExpressionUUID->"00764ee6-268b-1a41-823d-aa6c4a5178d4"],
Cell[587936, 10291, 4365, 104, 231, "Output",ExpressionUUID->"b240a3db-1129-2040-bb15-3a3aa3911925"]
}, Open  ]],
Cell[CellGroupData[{
Cell[592338, 10400, 197, 3, 28, "Input",ExpressionUUID->"b6e94028-ff21-b54b-a16b-3c26cb888ec8"],
Cell[592538, 10405, 24408, 533, 143, "Output",ExpressionUUID->"d42bdcc4-6231-644d-aae2-9529336a311c"]
}, Open  ]],
Cell[616961, 10941, 202, 3, 43, "Input",ExpressionUUID->"449fedc3-4916-574f-8a13-548ac1998817"],
Cell[CellGroupData[{
Cell[617188, 10948, 526, 14, 45, "Input",ExpressionUUID->"2cd0bbf9-b6ff-9d4f-a9f2-065721f8b5c8"],
Cell[617717, 10964, 1137, 37, 48, "Output",ExpressionUUID->"cd327973-2716-a245-86f9-3a57a235e9c8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[618891, 11006, 480, 11, 28, "Input",ExpressionUUID->"3923d5aa-a4e2-d845-9e9b-4e86de7ae14f"],
Cell[619374, 11019, 1013, 33, 48, "Output",ExpressionUUID->"10a6ba43-75ad-7041-92c1-255368cad7db"]
}, Open  ]],
Cell[CellGroupData[{
Cell[620424, 11057, 693, 20, 59, "Input",ExpressionUUID->"42ce48a3-3397-f646-b3fc-9de2a1e18846"],
Cell[621120, 11079, 950, 27, 48, "Output",ExpressionUUID->"e7ec2a84-dbf1-104e-87d4-fd8491adebd4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[622107, 11111, 1063, 30, 45, "Input",ExpressionUUID->"433a7c07-f5d4-1c49-aa48-ecdecd0769f5"],
Cell[623173, 11143, 1119, 38, 48, "Output",ExpressionUUID->"3782234a-de74-fc44-9690-f5b37670a541"]
}, Open  ]],
Cell[CellGroupData[{
Cell[624329, 11186, 197, 3, 28, "Input",ExpressionUUID->"2c0b97cb-220b-0441-9d93-4f3c53efee27"],
Cell[624529, 11191, 51199, 1083, 193, "Output",ExpressionUUID->"f5788438-2b9c-9d4c-ad0c-bf0c3aa89929"]
}, Open  ]],
Cell[CellGroupData[{
Cell[675765, 12279, 279, 6, 28, "Input",ExpressionUUID->"47e6c84e-9ce5-1f43-8da6-f060349f0dc1"],
Cell[CellGroupData[{
Cell[676069, 12289, 225, 4, 22, "Print",ExpressionUUID->"cb55a86a-69cd-8f4e-bb0b-651e577cf0d4"],
Cell[676297, 12295, 794, 24, 26, "Print",ExpressionUUID->"78ae110d-f18f-4b4a-a53d-ceb0174e6acc"],
Cell[677094, 12321, 794, 24, 26, "Print",ExpressionUUID->"836328cf-4031-ec43-89ee-c5d2393181eb"],
Cell[677891, 12347, 794, 24, 26, "Print",ExpressionUUID->"8c8b8a6d-ef28-b648-a2da-5d449ac71ebe"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[678734, 12377, 190, 3, 28, "Input",ExpressionUUID->"9834949a-d298-5645-8781-74ced286a271"],
Cell[678927, 12382, 39877, 841, 169, "Output",ExpressionUUID->"a15cb796-22e8-c04d-b083-965bd4557663"]
}, Open  ]],
Cell[CellGroupData[{
Cell[718841, 13228, 397, 9, 28, "Input",ExpressionUUID->"8d65d5a3-8332-f14f-81ef-ac411c8af974"],
Cell[719241, 13239, 345, 9, 42, "Output",ExpressionUUID->"42b2e9e1-d448-2a42-a7cc-38a2a3702681"]
}, Open  ]],
Cell[CellGroupData[{
Cell[719623, 13253, 226, 3, 28, "Input",ExpressionUUID->"10f28bf6-41a3-db45-b46d-7f096f3fbd35"],
Cell[CellGroupData[{
Cell[719874, 13260, 492, 10, 36, "Print",ExpressionUUID->"eac91723-148e-4244-89d0-fa01ea35a68d"],
Cell[720369, 13272, 298, 7, 21, "Print",ExpressionUUID->"66a4c07a-4ed1-d544-84f8-68fda92d0477"]
}, Open  ]]
}, Open  ]],
Cell[720694, 13283, 156, 3, 28, "Input",ExpressionUUID->"21ee59eb-495c-2c46-af3b-f6ee3c09f67e"],
Cell[720853, 13288, 328, 8, 37, "Input",ExpressionUUID->"787a5c4d-9459-6144-af2f-17467e71ad6f"],
Cell[CellGroupData[{
Cell[721206, 13300, 209, 4, 46, "Input",ExpressionUUID->"9b076395-0ab3-d24b-ba22-261258b4017a"],
Cell[721418, 13306, 193, 2, 32, "Output",ExpressionUUID->"b82253ae-3bee-a742-a6c1-1986369c5fe4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[721648, 13313, 466, 12, 37, "Input",ExpressionUUID->"3d2b573c-0c43-5a45-b8a9-ba8e4e6fe08c"],
Cell[722117, 13327, 445, 13, 51, "Output",ExpressionUUID->"5d7d4029-4e7d-874f-8f02-b32b9eb5408a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[722599, 13345, 290, 6, 28, "Input",ExpressionUUID->"ac00ee85-fbd2-3b4f-8252-b5b1ff0b74ea"],
Cell[722892, 13353, 278, 6, 32, "Output",ExpressionUUID->"b49b8028-7839-484a-9bba-aeace459d957"]
}, Open  ]],
Cell[CellGroupData[{
Cell[723207, 13364, 313, 7, 28, "Input",ExpressionUUID->"1d04e6c0-11fb-014e-a32b-a53ba4f6b55d"],
Cell[723523, 13373, 226, 4, 32, "Output",ExpressionUUID->"9f452a68-0156-924f-8eab-a61c9f74eb0f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[723786, 13382, 482, 15, 54, "Input",ExpressionUUID->"40995151-3b70-994a-af28-7eb379a95340"],
Cell[724271, 13399, 639, 21, 48, "Output",ExpressionUUID->"00b64fa3-37a8-d54c-81a7-8c2228783f93"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

