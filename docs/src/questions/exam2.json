[
  {
    "type": "short-answer",
    "topic": "Análisis de Algoritmos",
    "question": "Considere los siguientes 3 programas que hacen lo mismo:<br><br><code>programa1[n_,producto_:9207059489619389792649217/13456471561751415850795008]:=If[n==3,producto,programa1[n-1,producto*((18^(-19 (-2+n)) (1-7 18^(19 (-2+n)) (-2+n)^3+5 2^(2+19 (-2+n)) 9^(19 (-2+n)) (-2+n)^4))/(1+15 (-2+n)+3 (-2+n)^3))]]</code><br><br><code>programa2[n_]:=If[n==3,9207059489619389792649217/13456471561751415850795008,programa2[n-1]*((18^(-19 (-2+n)) (1-7 18^(19 (-2+n)) (-2+n)^3+5 2^(2+19 (-2+n)) 9^(19 (-2+n)) (-2+n)^4))/(1+15 (-2+n)+3 (-2+n)^3))]</code><br><br><code>programa3[n_]:=Product[(18^(-19 i)-7 i^3+20 i^4)/(1+15 i+3 i^3),{i,1,n-2}]</code><br><br>a) El valor del denominador cuando n = 3: <input type='text' class='code-input' data-answer='13456471561751415850795008' placeholder='___________________________'><br><br>b) El método que usa recursividad de cola: <input type='text' class='code-input' data-answer='programa1' placeholder='______________________________'><br><br>c) Ordene por rapidez (1=más rápido, 3=más lento):<br>1: <input type='text' class='code-input' data-answer='programa3' placeholder='programa'><br>2: <input type='text' class='code-input' data-answer='programa1' placeholder='programa'><br>3: <input type='text' class='code-input' data-answer='programa2' placeholder='programa'>",
    "correctAnswer": "13456471561751415850795008, programa1, programa3, programa1, programa2",
    "feedback": "a) 13456471561751415850795008, b) programa1 usa recursividad de cola, c) programa3 es más eficiente (Product), programa1 (cola), programa2 (pila)"
  },
  {
    "type": "multiple-choice",
    "topic": "Análisis de Complejidad",
    "question": "Considere el siguiente método:<br><br><code>sumatoria[iMax_] := Module[{i, j, k, total}, total = 0; For[i = 1, i <= iMax + 5, i++, For[j = 1, j <= i - 6, j++, For[k = 1, k <= j + 3, k++, total += 1;]]]; total]</code><br><br>La sumatoria que representa el tiempo de ejecución es:",
    "options": [
      "$$S = \\sum_{i=1}^{n+5} \\sum_{j=1}^{i-6} \\sum_{k=1}^{j+3}1$$",
      "$$S = \\sum_{i=1}^{n-5} \\sum_{j=1}^{i-6} \\sum_{k=1}^{j+3}1$$",
      "$$S = \\sum_{i=1}^{n+5} \\sum_{j=1}^{i-6} \\sum_{k=1}^{j-3}1$$",
      "$$S = \\sum_{i=1}^{n+5} \\sum_{j=1}^{i-6} \\sum_{k=-1}^{j+3}1$$"
    ],
    "correctAnswers": [0],
    "feedback": "La opción A es correcta: i va de 1 a iMax+5 (n+5), j de 1 a i-6, k de 1 a j+3"
  },
  {
    "type": "single-choice",
    "topic": "Análisis de Complejidad",
    "question": "Para el método anterior, el análisis O grande es:",
    "options": [
      "O(n⁵)",
      "O(n⁴)",
      "O(n⁸)",
      "O(n⁶)"
    ],
    "correctAnswer": 1,
    "feedback": "La complejidad es O(n⁴) debido a los tres ciclos anidados"
  },
  {
    "type": "single-choice",
    "topic": "Notación Asintótica",
    "question": "Halle la notación asintótica que mejor se ajuste para:<br><br>$$\\sum_{i=2}^{n+1} \\frac{3 i^3+16-3}{1-19^{8}}$$<br><br>Donde g = {n, n Log[n], n², 1, -n, -n³, -1, -n⁴}",
    "options": [
      "Θ(n⁴)",
      "Ω(n⁴)",
      "O(n⁴)"
    ],
    "correctAnswer": 0,
    "feedback": "Es Θ(n⁴) porque la sumatoria de i³ desde 2 hasta n+1 es del orden n⁴"
  },
  {
    "type": "single-choice",
    "topic": "Notación Asintótica",
    "question": "Elija la notación asintótica que mejor se ajuste a:<br><br>$$\\frac{-765 n^2+n+5}{45 n}$$",
    "options": [
      "Θ(n²)",
      "Ω(n²)",
      "Ninguna de las opciones",
      "O(n²)"
    ],
    "correctAnswer": 2,
    "feedback": "Al simplificar: (-765n² + n + 5)/(45n) = -17n + 1/45 + 5/(45n) ≈ -17n, que es Θ(n)"
  },
  {
    "type": "single-choice",
    "topic": "Notación Asintótica",
    "question": "Elija la notación asintótica que mejor se ajuste a:<br><br>$$n^3+\\frac{n^3+n-9160}{6 n}+9$$",
    "options": [
      "Θ(n²)",
      "Ω(n²)",
      "Ninguna de las opciones",
      "O(n²)"
    ],
    "correctAnswer": 2,
    "feedback": "Al simplificar: n³ + (n³+n-9160)/(6n) + 9 ≈ n³ + n²/6 ≈ n³, que es Θ(n³)"
  },
  {
    "type": "short-answer",
    "topic": "Notación Big O",
    "question": "Sea:<br><br>$$f(n)=n^3+\\frac{n^5+n^4-1240}{6 n}+\\frac{9 (n-5)}{69-8 n}$$<br><br>Y $$g(n)=n^j$$<br><br>El valor máximo de j para el cual f(n) = O(g(n)) es j = <input type='text' class='code-input' data-answer='4' placeholder='________'>",
    "correctAnswer": "4",
    "feedback": "Al simplificar f(n) ≈ n³ + n⁴/6 - 9/8 ≈ n⁴/6, por lo que f(n) = O(n⁴), entonces j = 4"
  },
  {
    "type": "single-choice",
    "topic": "Análisis de Complejidad",
    "question": "Considere el método:<br><br><code>sumatoria[iMax_] := Module[{i, j, k, total}, total = 0; For[i = 4, i <= iMax + 3, i++, For[j = 2, j <= i + 3, j++, For[k = 0, k <= i + 3, k++, total += 1;]]]; total]</code><br><br>La sumatoria que representa el tiempo es:",
    "options": [
      "$$S = \\sum_{i=4}^{n+3} \\sum_{j=2}^{i+3} \\sum_{k=0}^{i+3}1$$",
      "$$S = \\sum_{i=4}^{n-3} \\sum_{j=2}^{i+3} \\sum_{k=0}^{i+3}1$$",
      "$$S = \\sum_{i=4}^{n+3} \\sum_{j=2}^{i-3} \\sum_{k=0}^{i+3}1$$",
      "$$S = \\sum_{i=1}^{n+5} \\sum_{j=1}^{i-6} \\sum_{k=-1}^{j-3}1$$"
    ],
    "correctAnswer": 0,
    "feedback": "La opción A es correcta: i va de 4 a iMax+3 (n+3), j de 2 a i+3, k de 0 a i+3"
  },
  {
    "type": "short-answer",
    "topic": "Análisis de Algoritmos",
    "question": "Considere los siguientes 3 programas:<br><br><code>programa1[n_]:=Sum[(1-6 i)/(-3-19^(-5 i)),{i,2,n+2}]</code><br><br><code>programa2[n_]:=If[n==0,67441728835811/18393198773404,programa2[n-1]+((19^(5 (2+n)) (-1+6 (2+n)))/(1+3 19^(5 (2+n))))]</code><br><br><code>programa3[n_,suma_:67441728835811/18393198773404]:=If[n==0,suma,programa3[n-1,suma+((19^(5 (2+n)) (-1+6 (2+n)))/(1+3 19^(5 (2+n))))]]</code><br><br>a) El numerador cuando n = 3: <input type='text' class='code-input' data-answer='67441728835811' placeholder='___________________________'><br><br>b) El método que usa recursividad de pila: <input type='text' class='code-input' data-answer='programa2' placeholder='______________________________'><br><br>c) Ordene por rapidez (1=más rápido, 3=más lento):<br>1: <input type='text' class='code-input' data-answer='programa1' placeholder='programa'><br>2: <input type='text' class='code-input' data-answer='programa3' placeholder='programa'><br>3: <input type='text' class='code-input' data-answer='programa2' placeholder='programa'>",
    "correctAnswer": "67441728835811, programa2, programa1, programa3, programa2",
    "feedback": "a) 67441728835811, b) programa2 usa recursividad de pila, c) programa1 (Sum) es más eficiente, programa3 (cola), programa2 (pila)"
  },
  {
    "type": "short-answer",
    "topic": "Análisis de Eficiencia",
    "question": "La gráfica muestra la comparación de eficiencia de métodos:<br><br><img src='../assets/images/efficiency_graph.png' alt='Gráfica de eficiencia' style='max-width: 100%; height: auto;'><br><br>El método más eficiente es: <input type='text' class='code-input' data-answer='método1' placeholder='__________________________________'>",
    "correctAnswer": "método1",
    "feedback": "Según la gráfica, el método1 muestra el mejor rendimiento en términos de tiempo de ejecución"
  }
]